{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/common/product-form/product-form.component.ts","./src/app/common/product-form/product-form.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/services/login.service.ts","./src/app/services/products.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\n\n\nconst routes: Routes = [\n  {path:\"login\",component:LoginComponent},\n  {path:\"user\",\n  loadChildren:() => import('./user/user.module').then(m => m.UserModule)},\n  {path:\"admin\",loadChildren: \n  () => import('./admin/admin.module').then(m => m.AdminModule)}\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, AfterViewInit } from '@angular/core';\n\nimport {  Router } from '@angular/router';\nimport { LogService } from './services/login.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements AfterViewInit{\n  \n       constructor(private log:LogService,private router:Router){\n             \n       }\n//it will execute after constructor, first ui rendering, only once\n      ngAfterViewInit(){\n      \n           \n              if(!this.log.getStatus()){\n                \n                 this.router.navigate(['login'])\n              }\n              else{\n                if(this.log.usertype==\"admin\")\n                  this.router.navigate(['admin/home']);\n                else\n                  this.router.navigate(['user/home']);\n              }\n      }\n       \n\n\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http'\nimport {FormsModule,ReactiveFormsModule} from '@angular/forms'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LoginComponent } from './login/login.component';\nimport { ScrollDirective } from './directives/scroll.directive';\nimport { ScrollBackDirective } from './directives/scroll-back.directive';\nimport { ComplaintsComponent } from './common/complaints/complaints.component';\nimport { InboxComponent } from './common/inbox/inbox.component';\nimport { ProductFormComponent } from './common/product-form/product-form.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ProductFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ProductsService } from 'src/app/services/products.service';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-product-form',\n  templateUrl: './product-form.component.html',\n  styleUrls: ['./product-form.component.css']\n})\nexport class ProductFormComponent implements OnInit {\n  myForm;\n  buttonString:string;\n  constructor(public fb:FormBuilder,private ps:ProductsService,  public dialogRef: MatDialogRef<ProductFormComponent>,@Inject(MAT_DIALOG_DATA) public data) {\n   console.log(data)\n   if(data==null){\n    this.myForm=  this.fb.group({\n        name:['',[Validators.required,Validators.minLength(4)]],\n        description:['',[Validators.required,Validators.minLength(20)]],\n        type:['Fruits'],\n        qty:['',[Validators.required]],\n        price:['',[Validators.required]],\n        imagename: [null,[Validators.required]]\n      });\n      this.buttonString = \"Add Product\"\n    }\n    else{\n      this.myForm=  this.fb.group({\n        name:[data.name,[Validators.required,Validators.minLength(4)]],\n        description:[data.description,[Validators.required,Validators.minLength(20)]],\n        type:[data.type],\n        qty:[data.qty,[Validators.required]],\n        price:[data.price,[Validators.required]],\n        imagename: [null]\n      });\n      this.buttonString = \"Update Product\"\n    }\n  }\n\n  \n  uploadFile1(event) {\n    const file = (event.target as HTMLInputElement).files[0];\n    this.myForm.patchValue({\n      imagename: file\n    });\n    this.myForm.get('imagename').updateValueAndValidity()\n  }\n\n\n  ngOnInit(): void {\n  }\n  \n  addProduct(){\n    var formData: any = new FormData();\n    formData.append(\"name\",this.myForm.get('name').value);\n    formData.append(\"description\",this.myForm.get('description').value);\n    formData.append(\"price\",this.myForm.get('price').value);\n    formData.append(\"qty\",this.myForm.get('qty').value);\n    formData.append(\"type\",this.myForm.get('type').value);\n    formData.append(\"imagename\",this.myForm.get('imagename').value);\n  if(this.data == null)\n    this.ps.addProduct(formData).subscribe(\n      ()=>{alert(\"Data Submitted\");this.dialogRef.close()},\n      ()=>{alert(\"Error Storing information\")}\n    )\n   else{\n     console.log(\"ENTERED\")\n     console.log(this.data.id)\n     formData.append(\"id\",this.data.id)\n   this.ps.updateProduct(formData).subscribe(\n    ()=>{alert(\"Data Submitted\");this.dialogRef.close()},\n    ()=>{alert(\"Error Storing information\")}\n   )\n   }\n  }\n}\n","<form [formGroup]=\"myForm\" (submit)=\"addProduct()\">\n    <div class=\"container\">\n        <h1>Adding a New  Product</h1>\n        <div class=\"left\">\n            <div class=\"form-item\">\n                    <label class=\"label\">Name</label>\n                    <input type=\"text\" formControlName=\"name\" >\n             </div>\n             <div class=\"form-item\">\n               <label class=\"label\">Description</label>\n               <textarea formControlName=\"description\"></textarea>\n             </div>\n            \n            \n           \n            </div>\n            <div class=\"right\">\n            <div class=\"form-item\">\n                <label class=\"label\"> Type</label>\n                <select formControlName=\"type\" > \n                     <option>Fruits</option>\n                     <option>Vegetables</option>\n                     <option>Salads</option>\n                </select>\n            </div>\n        \n            <div class=\"form-item\">\n                <label class=\"label\"> Qty</label>\n                <input type=\"text\" formControlName=\"qty\" >\n            </div>\n            \n            <div class=\"form-item\">\n                <label class=\"label\"> Price</label>\n                <input type=\"number\" formControlName=\"price\" >\n            </div>\n      \n    \n        <div class=\"form-item\">\n            <label class=\"label\">Image file</label>\n            <input type=\"file\" formControlName=\"imagename\" (change)=\"uploadFile1($event)\">\n        </div>\n        \n     \n      </div>\n    </div>  \n        \n      \n    \n    \n    <div class=\"submit-item\" >\n        <h6 *ngIf=\"!myForm.valid\" [style.color]=\"'red'\" [style.textAlign]=\"'center'\">\n            Please  enter all the fields correctly {{myForm.valid}}</h6>\n        <input type=\"submit\" *ngIf=\"myForm.valid\" value={{buttonString}}>\n       \n    </div>\n \n    </form>","import { Component, OnInit } from '@angular/core';\nimport PubSub from 'pubsub-js';\nimport { LogService } from '../services/login.service';\nimport { Router } from '@angular/router';\n\ninterface User {\n  username:string;\n  usertype:string;\n  token:string;\n  email:string;\n\n}\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n// Login variables\n username:string=\"\";\n password:string=\"\";\n error:string;\n status:boolean=false;\n\n // Register Variables\n\n rusername:string=\"\";\n rpassword:string=\"\";\n vpassword:string=\"\";\n remail:string=\"\";\n rerror:string;\n rstatus:boolean=false\n\n// Common variables\n\n  logform:boolean=true;\n\n  constructor(private log:LogService,private route:Router) { }\n\n  ngOnInit(): void {\n    PubSub.subscribe('log-error',(e,data)=>\n       this.error=\"Invalid login credentials\"\n    )\n  }\n  \n  toggle(){\n     this.logform=this.logform?false:true;\n  }\n\n  login():void{\n    this.error=\"\";\n    if(this.username.length==0 || this.password.length==0)\n    this.error=\"Fill all the fields\";\n    else{\n      this.status=true;\n      this.log.login(this.username,this.password).subscribe(\n           (user:User)=>{\n             sessionStorage.setItem(\"username\",user.username);\n             sessionStorage.setItem(\"usertype\",user.usertype);\n             sessionStorage.setItem(\"token\",user.token);\n             sessionStorage.setItem(\"email\",user.email);\n             this.log.username=user.username;\n             this.log.usertype=user.usertype;\n             this.log.token=user.token;\n             this.status=false;\n             if(user.usertype==\"admin\")\n                 this.route.navigate(['admin/home']);\n             else\n                 this.route.navigate(['user/home']);\n           },\n           ()=>{\n             this.error=\"Invalid Credentials\";\n             this.status=false;\n           }\n      )\n          }\n  }\n\n  //new User Registration \n\n  register():void{\n     alert(\"Called\");\n      this.rerror=\"\";\n      let emailregex:RegExp=/^[a-z][a-z0-9_\\.]+@[a-z]{2,5}\\.[a-z]{3,5}$/\n\n\n      if(this.rusername.length==0 || this.rpassword.length==0 || this.vpassword.length==0 )\n      this.rerror=\"Fill all the fields\";\n\n      else if(this.rusername.length<4)\n      this.rerror=\"Username should be atleast 4 charectars long\"\n\n      else if(this.rpassword.length<6)\n      this.rerror=\"password should be atleast 6 charectars long\"\n\n      else if(this.rpassword!=this.vpassword)\n      this.rerror=\"Username and password should match\"\n      \n      else if(!emailregex.test(this.remail))\n      this.rerror=\"not in email format\"\n\n     \n      else{\n          this.rstatus=true;\n        \n                   this.rstatus=true;\n                   let obj={username:this.rusername,password:this.rpassword,usertype:\"user\",email: this.remail}\n                   this.log.register(obj).subscribe(\n                      (result:any)=>{\n                          if(result.success == false)\n                            alert(\"User already exists\")\n                          else{\n                          alert(\"User successfully registered\");\n                          this.logform=true;\n                          this.rstatus=false;\n                          }\n                      },\n                      ()=>{\n                          alert(\"There is problem , Please try again or later\")\n                          this.rstatus=false;\n                      }\n                   )\n               }\n           \n      }\n  \n\n}\n","\n<div id=\"login-card\" *ngIf=\"logform\">\n    <div id=\"image-left\"><img src=\"https://storageblobcommerce.blob.core.windows.net/imagesecommerceclient/vegfull.png\" alt=\"\"></div>\n    <div id=\"image-center\"><img src=\"https://storageblobcommerce.blob.core.windows.net/imagesecommerceclient/freshologo.png\" alt=\"\"></div>\n    <div id=\"image-bottom-right\"><img src=\"https://storageblobcommerce.blob.core.windows.net/imagesecommerceclient/spices.png\" alt=\"\"></div>\n        <table id=\"log-table\">\n             <tr>\n                 <th>Username</th>\n                 <td><input type=\"text\" [(ngModel)]=\"username\"></td>\n             </tr>\n             <tr>\n                 <th>Password</th>\n                 <td><input type=\"password\" [(ngModel)]=\"password\"></td>\n             </tr>\n             <tr>\n                 \n                 <td colspan=2 \n                     style=\"text-align:center\"><button  (click)=\"login()\">Login</button></td>\n             </tr>\n             <tr>\n                 \n                 <td colspan=2 \n                     style=\"text-align:center; color: lightgreen\" (click)=\"toggle()\">Not Registered yet? Click here</td>\n             </tr>\n        </table>\n        <div class=\"loading\" *ngIf=\"status\"><img src=\"https://storageblobcommerce.blob.core.windows.net/imagesecommerceclient/loading.gif\"></div>\n        <div class=\"errors\">{{error}}</div>\n        \n    </div>\n\n\n    <div id=\"login-card\" *ngIf=\"!logform\">\n        <div id=\"image-left\"><img src=\"https://storageblobcommerce.blob.core.windows.net/imagesecommerceclient/vegfull.png\" alt=\"\"></div>\n        <div id=\"image-center\"><img src=\"https://storageblobcommerce.blob.core.windows.net/imagesecommerceclient/freshologo.png\" alt=\"\"></div>\n        <div id=\"image-bottom-right\"><img src=\"https://storageblobcommerce.blob.core.windows.net/imagesecommerceclient/spices.png\" alt=\"\"></div>\n            <table id=\"log-table\">\n                 <tr>\n                     <th>Username</th>\n                     <td><input type=\"text\" [(ngModel)]=\"rusername\"></td>\n                 </tr>\n                 <tr>\n                     <th>Password</th>\n                     <td><input type=\"password\" [(ngModel)]=\"rpassword\"></td>\n                 </tr>\n\n                 <tr>\n                    <th>Verify Password</th>\n                    <td><input type=\"password\" [(ngModel)]=\"vpassword\"></td>\n                </tr>\n\n                <tr>\n                    <th>Email</th>\n                    <td> <input type=\"text\" [(ngModel)]=\"remail\"></td>\n                </tr>\n                 <tr>\n                     \n                     <td colspan=2 \n                         style=\"text-align:center\"><button (click)=\"register()\">Register</button></td>\n                 </tr>\n                 <tr>\n                     \n                     <td colspan=2 \n                         style=\"text-align:center; color: lightgreen\" (click)=\"toggle()\">Not Registered yet? Click here</td>\n                 </tr>\n            </table>\n            <div class=\"loading\" *ngIf=\"status\"><img src=\"https://storageblobcommerce.blob.core.windows.net/imagesecommerceclient/loading.gif\"></div>\n            <div class=\"errors\">{{rerror}}</div>\n    </div>","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogService {\n httpOptions;\n username:String='';\n usertype:String='';\n token:string='';\n email:string='';\n status:boolean=false;\n  constructor(private http:HttpClient) {\n      let username=sessionStorage.getItem(\"username\");\n      let usertype=sessionStorage.getItem(\"usertype\");\n      let token=sessionStorage.getItem(\"token\");\n      let email=sessionStorage.getItem(\"email\");\n      if(username&&usertype){\n        this.status=true;\n        this.username=username;\n        this.usertype=usertype;\n        this.token=token;\n        this.email=email;\n      }\n   }\n\n  getStatus():boolean{\n    return this.status;\n  }\n\n  // To Register a User\n  register(obj):Observable<object>{\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n        })\n    }\n    return this.http.post(\"https://ecommercenodeapi.azure-api.net/users/signup\",obj,this.httpOptions);\n  }\n\n  //To check avalailability of mail id and username\n\n  check(str):Observable<object>{\n    return this.http.get(\"http://localhost:5000/userlog/\"+str,this.httpOptions);\n  }\n\n// to Login\n  login(username,password):Observable<object>{\n    let authstring='Basic '+btoa(username+\":\"+password);\n    console.log(authstring)\n    console.log(username,password)\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization': authstring,\n        'Ocp-Apim-Subscription-Key':'ae666daa93ba4f13b0aafcdda20a8c3d'\n       \n      })\n    }\n    return this.http.post(\"https://ecommercenodeapi.azure-api.net/users/signin\",\n    {username:username,password:password,usertype:\"user\"},\n    this.httpOptions);\n  }\n\n  logout():void{\n     this.token=\"\";\n     this.username=\"\";\n     this.usertype=\"\";\n     sessionStorage.removeItem(\"token\");\n     sessionStorage.removeItem(\"username\");\n     sessionStorage.removeItem(\"usertype\");\n     sessionStorage.removeItem(\"email\");\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsService {\n  httpOptions;\n  constructor(private http:HttpClient) { \n    \n    }\n  \n\n  addProduct(obj):Observable<object>{\n   \n     return this.http.post(\"https://ecommercenodeapi.azure-api.net/products/add\",obj);\n  }\n\n\n  \n  updateProduct(obj):Observable<object>{\n   \n    return this.http.post(\"https://ecommercenodeapi.azure-api.net/products/update\",obj);\n }\n\n\n  removeProduct(obj):Observable<object>{\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Ocp-Apim-Subscription-Key':'ae666daa93ba4f13b0aafcdda20a8c3d'\n        })\n      }\n    return this.http.delete(\"https://ecommercenodeapi.azure-api.net/products/remove/\"+obj,this.httpOptions);\n }\n\n  public getProducts():Observable<object>{\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Ocp-Apim-Subscription-Key':'ae666daa93ba4f13b0aafcdda20a8c3d'\n        })\n      }\n    return this.http.get(\"https://ecommercenodeapi.azure-api.net/products/all\",this.httpOptions);\n  }\n\n  public getProducts2(pattern:string):Observable<object>{\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Ocp-Apim-Subscription-Key':'ae666daa93ba4f13b0aafcdda20a8c3d'\n        })\n      }\n    return this.http.get(\"https://ecommercenodeapi.azure-api.net/products/all/\"+pattern,this.httpOptions);\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}