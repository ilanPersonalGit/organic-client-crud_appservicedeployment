{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/common/product-form/product-form.component.ts","webpack:///src/app/common/product-form/product-form.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/services/login.service.ts","webpack:///src/app/services/products.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","loadChildren","m","UserModule","AdminModule","AppRoutingModule","forRoot","imports","AppComponent","log","router","getStatus","navigate","usertype","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","ProductFormComponent","fb","ps","dialogRef","data","console","myForm","group","name","required","minLength","description","type","qty","price","imagename","buttonString","event","file","target","files","patchValue","get","updateValueAndValidity","formData","FormData","append","value","addProduct","subscribe","alert","close","updateProduct","uploadFile1","LoginComponent","route","username","password","status","rusername","rpassword","vpassword","remail","rstatus","logform","error","length","login","user","sessionStorage","setItem","token","email","rerror","emailregex","test","obj","register","result","success","LogService","http","getItem","httpOptions","headers","post","str","authstring","btoa","removeItem","providedIn","ProductsService","pattern","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\n\n\nconst routes: Routes = [\n  {path:\"login\",component:LoginComponent},\n  {path:\"user\",\n  loadChildren:() => import('./user/user.module').then(m => m.UserModule)},\n  {path:\"admin\",loadChildren: \n  () => import('./admin/admin.module').then(m => m.AdminModule)}\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, AfterViewInit } from '@angular/core';\n\nimport {  Router } from '@angular/router';\nimport { LogService } from './services/login.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements AfterViewInit{\n  \n       constructor(private log:LogService,private router:Router){\n             \n       }\n//it will execute after constructor, first ui rendering, only once\n      ngAfterViewInit(){\n      \n           \n              if(!this.log.getStatus()){\n                \n                 this.router.navigate(['login'])\n              }\n              else{\n                if(this.log.usertype==\"admin\")\n                  this.router.navigate(['admin/home']);\n                else\n                  this.router.navigate(['user/home']);\n              }\n      }\n       \n\n\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http'\nimport {FormsModule,ReactiveFormsModule} from '@angular/forms'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LoginComponent } from './login/login.component';\nimport { ScrollDirective } from './directives/scroll.directive';\nimport { ScrollBackDirective } from './directives/scroll-back.directive';\nimport { ComplaintsComponent } from './common/complaints/complaints.component';\nimport { InboxComponent } from './common/inbox/inbox.component';\nimport { ProductFormComponent } from './common/product-form/product-form.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ProductFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ProductsService } from 'src/app/services/products.service';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-product-form',\n  templateUrl: './product-form.component.html',\n  styleUrls: ['./product-form.component.css']\n})\nexport class ProductFormComponent implements OnInit {\n  myForm;\n  buttonString:string;\n  constructor(public fb:FormBuilder,private ps:ProductsService,  public dialogRef: MatDialogRef<ProductFormComponent>,@Inject(MAT_DIALOG_DATA) public data) {\n   console.log(data)\n   if(data==null){\n    this.myForm=  this.fb.group({\n        name:['',[Validators.required,Validators.minLength(4)]],\n        description:['',[Validators.required,Validators.minLength(20)]],\n        type:['Fruits'],\n        qty:['',[Validators.required]],\n        price:['',[Validators.required]],\n        imagename: [null,[Validators.required]]\n      });\n      this.buttonString = \"Add Product\"\n    }\n    else{\n      this.myForm=  this.fb.group({\n        name:[data.name,[Validators.required,Validators.minLength(4)]],\n        description:[data.description,[Validators.required,Validators.minLength(20)]],\n        type:[data.type],\n        qty:[data.qty,[Validators.required]],\n        price:[data.price,[Validators.required]],\n        imagename: [null]\n      });\n      this.buttonString = \"Update Product\"\n    }\n  }\n\n  \n  uploadFile1(event) {\n    const file = (event.target as HTMLInputElement).files[0];\n    this.myForm.patchValue({\n      imagename: file\n    });\n    this.myForm.get('imagename').updateValueAndValidity()\n  }\n\n\n  ngOnInit(): void {\n  }\n  \n  addProduct(){\n    var formData: any = new FormData();\n    formData.append(\"name\",this.myForm.get('name').value);\n    formData.append(\"description\",this.myForm.get('description').value);\n    formData.append(\"price\",this.myForm.get('price').value);\n    formData.append(\"qty\",this.myForm.get('qty').value);\n    formData.append(\"type\",this.myForm.get('type').value);\n    formData.append(\"imagename\",this.myForm.get('imagename').value);\n  if(this.data == null)\n    this.ps.addProduct(formData).subscribe(\n      ()=>{alert(\"Data Submitted\");this.dialogRef.close()},\n      ()=>{alert(\"Error Storing information\")}\n    )\n   else{\n     console.log(\"ENTERED\")\n     console.log(this.data.id)\n     formData.append(\"id\",this.data.id)\n   this.ps.updateProduct(formData).subscribe(\n    ()=>{alert(\"Data Submitted\");this.dialogRef.close()},\n    ()=>{alert(\"Error Storing information\")}\n   )\n   }\n  }\n}\n","<form [formGroup]=\"myForm\" (submit)=\"addProduct()\">\n    <div class=\"container\">\n        <h1>Adding a New  Product</h1>\n        <div class=\"left\">\n            <div class=\"form-item\">\n                    <label class=\"label\">Name</label>\n                    <input type=\"text\" formControlName=\"name\" >\n             </div>\n             <div class=\"form-item\">\n               <label class=\"label\">Description</label>\n               <textarea formControlName=\"description\"></textarea>\n             </div>\n            \n            \n           \n            </div>\n            <div class=\"right\">\n            <div class=\"form-item\">\n                <label class=\"label\"> Type</label>\n                <select formControlName=\"type\" > \n                     <option>Fruits</option>\n                     <option>Vegetables</option>\n                     <option>Salads</option>\n                </select>\n            </div>\n        \n            <div class=\"form-item\">\n                <label class=\"label\"> Qty</label>\n                <input type=\"text\" formControlName=\"qty\" >\n            </div>\n            \n            <div class=\"form-item\">\n                <label class=\"label\"> Price</label>\n                <input type=\"number\" formControlName=\"price\" >\n            </div>\n      \n    \n        <div class=\"form-item\">\n            <label class=\"label\">Image file</label>\n            <input type=\"file\" formControlName=\"imagename\" (change)=\"uploadFile1($event)\">\n        </div>\n        \n     \n      </div>\n    </div>  \n        \n      \n    \n    \n    <div class=\"submit-item\" >\n        <h6 *ngIf=\"!myForm.valid\" [style.color]=\"'red'\" [style.textAlign]=\"'center'\">\n            Please  enter all the fields correctly {{myForm.valid}}</h6>\n        <input type=\"submit\" *ngIf=\"myForm.valid\" value={{buttonString}}>\n       \n    </div>\n \n    </form>","import { Component, OnInit } from '@angular/core';\nimport PubSub from 'pubsub-js';\nimport { LogService } from '../services/login.service';\nimport { Router } from '@angular/router';\n\ninterface User {\n  username:string;\n  usertype:string;\n  token:string;\n  email:string;\n\n}\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n// Login variables\n username:string=\"\";\n password:string=\"\";\n error:string;\n status:boolean=false;\n\n // Register Variables\n\n rusername:string=\"\";\n rpassword:string=\"\";\n vpassword:string=\"\";\n remail:string=\"\";\n rerror:string;\n rstatus:boolean=false\n\n// Common variables\n\n  logform:boolean=true;\n\n  constructor(private log:LogService,private route:Router) { }\n\n  ngOnInit(): void {\n    PubSub.subscribe('log-error',(e,data)=>\n       this.error=\"Invalid login credentials\"\n    )\n  }\n  \n  toggle(){\n     this.logform=this.logform?false:true;\n  }\n\n  login():void{\n    this.error=\"\";\n    if(this.username.length==0 || this.password.length==0)\n    this.error=\"Fill all the fields\";\n    else{\n      this.status=true;\n      this.log.login(this.username,this.password).subscribe(\n           (user:User)=>{\n             sessionStorage.setItem(\"username\",user.username);\n             sessionStorage.setItem(\"usertype\",user.usertype);\n             sessionStorage.setItem(\"token\",user.token);\n             sessionStorage.setItem(\"email\",user.email);\n             this.log.username=user.username;\n             this.log.usertype=user.usertype;\n             this.log.token=user.token;\n             this.status=false;\n             if(user.usertype==\"admin\")\n                 this.route.navigate(['admin/home']);\n             else\n                 this.route.navigate(['user/home']);\n           },\n           ()=>{\n             this.error=\"Invalid Credentials\";\n             this.status=false;\n           }\n      )\n          }\n  }\n\n  //new User Registration \n\n  register():void{\n     alert(\"Called\");\n      this.rerror=\"\";\n      let emailregex:RegExp=/^[a-z][a-z0-9_\\.]+@[a-z]{2,5}\\.[a-z]{3,5}$/\n\n\n      if(this.rusername.length==0 || this.rpassword.length==0 || this.vpassword.length==0 )\n      this.rerror=\"Fill all the fields\";\n\n      else if(this.rusername.length<4)\n      this.rerror=\"Username should be atleast 4 charectars long\"\n\n      else if(this.rpassword.length<6)\n      this.rerror=\"password should be atleast 6 charectars long\"\n\n      else if(this.rpassword!=this.vpassword)\n      this.rerror=\"Username and password should match\"\n      \n      else if(!emailregex.test(this.remail))\n      this.rerror=\"not in email format\"\n\n     \n      else{\n          this.rstatus=true;\n        \n                   this.rstatus=true;\n                   let obj={username:this.rusername,password:this.rpassword,usertype:\"user\",email: this.remail}\n                   this.log.register(obj).subscribe(\n                      (result:any)=>{\n                          if(result.success == false)\n                            alert(\"User already exists\")\n                          else{\n                          alert(\"User successfully registered\");\n                          this.logform=true;\n                          this.rstatus=false;\n                          }\n                      },\n                      ()=>{\n                          alert(\"There is problem , Please try again or later\")\n                          this.rstatus=false;\n                      }\n                   )\n               }\n           \n      }\n  \n\n}\n","\n<div id=\"login-card\" *ngIf=\"logform\">\n    <div id=\"image-left\"><img src=\"https://storageblobcommerce.blob.core.windows.net/imagesecommerceclient/vegfull.png\" alt=\"\"></div>\n    <div id=\"image-center\"><img src=\"https://storageblobcommerce.blob.core.windows.net/imagesecommerceclient/freshologo.png\" alt=\"\"></div>\n    <div id=\"image-bottom-right\"><img src=\"https://storageblobcommerce.blob.core.windows.net/imagesecommerceclient/spices.png\" alt=\"\"></div>\n        <table id=\"log-table\">\n             <tr>\n                 <th>Username</th>\n                 <td><input type=\"text\" [(ngModel)]=\"username\"></td>\n             </tr>\n             <tr>\n                 <th>Password</th>\n                 <td><input type=\"password\" [(ngModel)]=\"password\"></td>\n             </tr>\n             <tr>\n                 \n                 <td colspan=2 \n                     style=\"text-align:center\"><button  (click)=\"login()\">Login</button></td>\n             </tr>\n             <tr>\n                 \n                 <td colspan=2 \n                     style=\"text-align:center; color: lightgreen\" (click)=\"toggle()\">Not Registered yet? Click here</td>\n             </tr>\n        </table>\n        <div class=\"loading\" *ngIf=\"status\"><img src=\"https://storageblobcommerce.blob.core.windows.net/imagesecommerceclient/loading.gif\"></div>\n        <div class=\"errors\">{{error}}</div>\n        \n    </div>\n\n\n    <div id=\"login-card\" *ngIf=\"!logform\">\n        <div id=\"image-left\"><img src=\"https://storageblobcommerce.blob.core.windows.net/imagesecommerceclient/vegfull.png\" alt=\"\"></div>\n        <div id=\"image-center\"><img src=\"https://storageblobcommerce.blob.core.windows.net/imagesecommerceclient/freshologo.png\" alt=\"\"></div>\n        <div id=\"image-bottom-right\"><img src=\"https://storageblobcommerce.blob.core.windows.net/imagesecommerceclient/spices.png\" alt=\"\"></div>\n            <table id=\"log-table\">\n                 <tr>\n                     <th>Username</th>\n                     <td><input type=\"text\" [(ngModel)]=\"rusername\"></td>\n                 </tr>\n                 <tr>\n                     <th>Password</th>\n                     <td><input type=\"password\" [(ngModel)]=\"rpassword\"></td>\n                 </tr>\n\n                 <tr>\n                    <th>Verify Password</th>\n                    <td><input type=\"password\" [(ngModel)]=\"vpassword\"></td>\n                </tr>\n\n                <tr>\n                    <th>Email</th>\n                    <td> <input type=\"text\" [(ngModel)]=\"remail\"></td>\n                </tr>\n                 <tr>\n                     \n                     <td colspan=2 \n                         style=\"text-align:center\"><button (click)=\"register()\">Register</button></td>\n                 </tr>\n                 <tr>\n                     \n                     <td colspan=2 \n                         style=\"text-align:center; color: lightgreen\" (click)=\"toggle()\">Not Registered yet? Click here</td>\n                 </tr>\n            </table>\n            <div class=\"loading\" *ngIf=\"status\"><img src=\"https://storageblobcommerce.blob.core.windows.net/imagesecommerceclient/loading.gif\"></div>\n            <div class=\"errors\">{{rerror}}</div>\n    </div>","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogService {\n httpOptions;\n username:String='';\n usertype:String='';\n token:string='';\n email:string='';\n status:boolean=false;\n  constructor(private http:HttpClient) {\n      let username=sessionStorage.getItem(\"username\");\n      let usertype=sessionStorage.getItem(\"usertype\");\n      let token=sessionStorage.getItem(\"token\");\n      let email=sessionStorage.getItem(\"email\");\n      if(username&&usertype){\n        this.status=true;\n        this.username=username;\n        this.usertype=usertype;\n        this.token=token;\n        this.email=email;\n      }\n   }\n\n  getStatus():boolean{\n    return this.status;\n  }\n\n  // To Register a User\n  register(obj):Observable<object>{\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n        })\n    }\n    return this.http.post(\"https://ecommercenodeapi.azure-api.net/users/signup\",obj,this.httpOptions);\n  }\n\n  //To check avalailability of mail id and username\n\n  check(str):Observable<object>{\n    return this.http.get(\"http://localhost:5000/userlog/\"+str,this.httpOptions);\n  }\n\n// to Login\n  login(username,password):Observable<object>{\n    let authstring='Basic '+btoa(username+\":\"+password);\n    console.log(authstring)\n    console.log(username,password)\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization': authstring,\n        'Ocp-Apim-Subscription-Key':'ae666daa93ba4f13b0aafcdda20a8c3d'\n       \n      })\n    }\n    return this.http.post(\"https://ecommercenodeapi.azure-api.net/users/signin\",\n    {username:username,password:password,usertype:\"user\"},\n    this.httpOptions);\n  }\n\n  logout():void{\n     this.token=\"\";\n     this.username=\"\";\n     this.usertype=\"\";\n     sessionStorage.removeItem(\"token\");\n     sessionStorage.removeItem(\"username\");\n     sessionStorage.removeItem(\"usertype\");\n     sessionStorage.removeItem(\"email\");\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsService {\n  httpOptions;\n  constructor(private http:HttpClient) { \n    \n    }\n  \n\n  addProduct(obj):Observable<object>{\n   \n     return this.http.post(\"https://ecommercenodeapi.azure-api.net/products/add\",obj);\n  }\n\n\n  \n  updateProduct(obj):Observable<object>{\n   \n    return this.http.post(\"https://ecommercenodeapi.azure-api.net/products/update\",obj);\n }\n\n\n  removeProduct(obj):Observable<object>{\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Ocp-Apim-Subscription-Key':'ae666daa93ba4f13b0aafcdda20a8c3d'\n        })\n      }\n    return this.http.delete(\"https://ecommercenodeapi.azure-api.net/products/remove/\"+obj,this.httpOptions);\n }\n\n  public getProducts():Observable<object>{\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Ocp-Apim-Subscription-Key':'ae666daa93ba4f13b0aafcdda20a8c3d'\n        })\n      }\n    return this.http.get(\"https://ecommercenodeapi.azure-api.net/products/all\",this.httpOptions);\n  }\n\n  public getProducts2(pattern:string):Observable<object>{\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Ocp-Apim-Subscription-Key':'ae666daa93ba4f13b0aafcdda20a8c3d'\n        })\n      }\n    return this.http.get(\"https://ecommercenodeapi.azure-api.net/products/all/\"+pattern,this.httpOptions);\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}