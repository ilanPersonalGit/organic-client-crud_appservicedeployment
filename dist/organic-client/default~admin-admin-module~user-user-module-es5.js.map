{"version":3,"sources":["webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/accordion.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/clipboard.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/drag-drop.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/layout.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/stepper.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/table.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/text-field.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/tree.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/autocomplete.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/badge.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/bottom-sheet.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/button-toggle.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/button.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/card.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/checkbox.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/chips.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/datepicker.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/divider.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/expansion.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/form-field.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/grid-list.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/icon.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/input.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/list.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/menu.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/paginator.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/progress-bar.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/progress-spinner.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/radio.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/select.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/sidenav.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/slide-toggle.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/slider.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/snack-bar.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/sort.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/stepper.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/table.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/tabs.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/toolbar.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/tooltip.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/tree.js","webpack:///src/app/angmaterial/angmaterial.module.ts","webpack:///src/app/common/aboutus/aboutus.component.ts","webpack:///src/app/common/aboutus/aboutus.component.html","webpack:///src/app/common/complaints/complaints.component.ts","webpack:///src/app/common/complaints/complaints.component.html","webpack:///src/app/common/complaints/dialog.component.html","webpack:///src/app/common/contactus/contactus.component.ts","webpack:///src/app/common/contactus/contactus.component.html","webpack:///src/app/common/inbox/inbox.component.ts","webpack:///src/app/common/inbox/inbox.component.html","webpack:///src/app/common/menu-outline/menu-outline.component.ts","webpack:///src/app/common/menu-outline/menu-outline.component.html","webpack:///src/app/directives/scroll-back.directive.ts","webpack:///src/app/directives/scroll.directive.ts","webpack:///src/app/services/contact.service.ts","webpack:///src/app/services/order.service.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/user/plist/plist.component.ts","webpack:///src/app/user/plist/plist.component.html","webpack:///src/app/user/product/product.component.ts","webpack:///src/app/user/product/product.component.html"],"names":["nextId","CdkAccordion","_stateChanges","_openCloseAllActions","id","_multi","_openCloseAll","changes","next","complete","expanded","multi","ɵfac","CdkAccordion_Factory","t","ɵdir","type","selectors","inputs","exportAs","features","propDecorators","args","selector","nextId$1","ɵ0","undefined","CdkAccordionItem","accordion","_changeDetectorRef","_expansionDispatcher","_openCloseAllSubscription","EMPTY","closed","opened","destroyed","expandedChange","_expanded","_disabled","_removeUniqueSelectionListener","listen","accordionId","_subscribeToOpenCloseAllActions","emit","unsubscribe","disabled","subscribe","notify","markForCheck","CdkAccordionItem_Factory","outputs","provide","useValue","ctorParameters","decorators","providers","CdkAccordionModule","ɵmod","ɵinj","factory","CdkAccordionModule_Factory","ngJitMode","declarations","exports","PendingCopy","text","_document","textarea","_textarea","createElement","styles","style","opacity","position","left","top","setAttribute","value","body","appendChild","successful","currentFocus","activeElement","select","setSelectionRange","length","execCommand","focus","_a","parentNode","removeChild","Clipboard","document","pendingCopy","beginCopy","copy","destroy","Clipboard_Factory","ɵprov","token","providedIn","CdkCopyToClipboardConfig","CKD_COPY_TO_CLIPBOARD_CONFIG","CdkCopyToClipboard","_clipboard","_ngZone","config","attempts","copied","_deprecatedCopied","_pending","Set","remainingAttempts","pending","add","attempt","_destroyed","_currentTimeout","runOutsideAngular","setTimeout","clearTimeout","forEach","clear","CdkCopyToClipboard_Factory","hostBindings","CdkCopyToClipboard_HostBindings","rf","ctx","CdkCopyToClipboard_click_HostBindingHandler","host","ClipboardModule","ClipboardModule_Factory","DragCSSStyleDeclaration","extendStyles","dest","source","key","hasOwnProperty","toggleNativeDragInteractions","element","enable","userSelect","touchAction","webkitUserDrag","webkitTapHighlightColor","msUserSelect","webkitUserSelect","MozUserSelect","parseCssTimeUnitsToMs","multiplier","toLowerCase","indexOf","parseFloat","getTransformTransitionDurationInMs","computedStyle","getComputedStyle","transitionedProperties","parseCssPropertyValue","property","find","prop","propertyIndex","rawDurations","rawDelays","name","getPropertyValue","split","map","part","trim","getMutableClientRect","clientRect","getBoundingClientRect","right","bottom","width","height","isInsideClientRect","x","y","adjustClientRect","isPointerNearClientRect","rect","threshold","pointerX","pointerY","xThreshold","yThreshold","ScrollPosition","ParentPositionTracker","_viewportRuler","positions","Map","elements","set","scrollPosition","getViewportScrollPosition","scrollTop","scrollLeft","event","target","cachedPosition","get","scrolledParentNode","documentElement","newTop","newLeft","viewportScrollPosition","topDifference","leftDifference","node","contains","DragRefConfig","passiveEventListenerOptions","passive","activeEventListenerOptions","MOUSE_EVENT_IGNORE_TIME","DragRefInternal","DragHelperTemplate","DragPreviewTemplate","Point","DragRef","_config","_dragDropRegistry","_passiveTransform","_activeTransform","_moveEvents","_pointerMoveSubscription","_pointerUpSubscription","_scrollSubscription","_resizeSubscription","_boundaryElement","_nativeInteractionsEnabled","_handles","_disabledHandles","_direction","dragStartDelay","beforeStarted","started","released","ended","entered","exited","dropped","moved","asObservable","_pointerDown","targetHandle","handle","has","_initializeDragSequence","_rootElement","_pointerMove","preventDefault","pointerPosition","_getPointerPositionOnPage","_hasStartedDragging","distanceX","Math","abs","_pickupPositionOnPage","distanceY","isOverThreshold","dragStartThreshold","isDelayElapsed","Date","now","_dragStartTime","_getDragStartDelay","_endDragSequence","_dropContainer","isDragging","run","_startDragSequence","_previewRect","_preview","constrainedPointerPosition","_getConstrainedPointerPosition","_hasMoved","_updatePointerDirectionDelta","_updateActiveDropContainer","activeTransform","_applyRootElementTransform","SVGElement","appliedTransform","observers","distance","_getDragDistance","delta","_pointerDirectionDelta","_pointerUp","withRootElement","_parentPositions","registerDragItem","_placeholder","getPlaceholderElement","getRootElement","handles","_toggleNativeDragInteractions","template","_previewTemplate","_placeholderTemplate","rootElement","_removeRootElementListeners","addEventListener","_initialTransform","boundaryElement","change","_containInsideBoundaryOnResize","removeNode","_anchor","_destroyPreview","_destroyPlaceholder","removeDragItem","_removeSubscriptions","transform","direction","container","_pointerPositionAtLastDirectionChange","_previewRef","_placeholderRef","stopDragging","_rootElementTapHighlight","_stopScrolling","_animatePreviewToPlaceholder","then","_cleanupDragArtifacts","_cleanupCachedDimensions","isTouchEvent","_lastTouchEventTime","dropContainer","parent","preview","_createPreviewElement","placeholder","_createPlaceholderElement","anchor","createComment","insertBefore","display","replaceChild","getPreviewInsertionPoint","start","_initialContainer","_initialIndex","getItemIndex","cache","getScrollableParents","referenceElement","stopPropagation","isTouchSequence","isAuxiliaryMouseButton","button","isSyntheticEvent","draggable","pointerMove","pointerUp","scroll","scrollEvent","_updateOnScroll","_boundaryRect","previewTemplate","_pickupPositionInElement","matchSize","_getPointerPositionInElement","startDragging","currentIndex","isPointerOverContainer","_isOverContainer","item","previousIndex","previousContainer","drop","newContainer","_getSiblingContainerFromPosition","exit","enter","sortingDisabled","_startScrollingIfNecessary","_sortItem","getTransform","previewConfig","previewClass","rootRect","viewRef","viewContainer","createEmbeddedView","context","detectChanges","getRootNode","matchElementSize","deepCloneNode","pointerEvents","margin","zIndex","classList","Array","isArray","className","Promise","resolve","placeholderRect","duration","handler","propertyName","removeEventListener","timeout","placeholderConfig","placeholderTemplate","elementRect","handleElement","referenceRect","point","targetTouches","_getViewportScrollPosition","pageX","pageY","touches","changedTouches","constrainedPoint","constrainPosition","dropContainerLock","lockAxis","pickupX","pickupY","boundaryRect","previewRect","minY","maxY","minX","maxX","clamp","pointerPositionOnPage","positionSinceLastChange","changeX","changeY","pointerDirectionChangeThreshold","shouldEnable","currentPosition","pickupPosition","leftOverflow","rightOverflow","topOverflow","bottomOverflow","setFreeDragPosition","touch","mouse","scrollDifference","handleScroll","newValue","round","clone","cloneNode","descendantsWithId","querySelectorAll","descendantCanvases","removeAttribute","i","cloneCanvases","correspondingCloneContext","getContext","drawImage","min","max","documentRef","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","rootNodes","nodeType","ELEMENT_NODE","wrapper","sourceRect","moveItemInArray","array","fromIndex","toIndex","from","clamp$1","to","transferArrayItem","currentArray","targetArray","targetIndex","splice","copyArrayItem","DROP_PROXIMITY_THRESHOLD","SCROLL_PROXIMITY_THRESHOLD","AUTO_SCROLL_STEP","CachedItemPosition","AutoScrollVerticalDirection","NONE","UP","DOWN","AutoScrollHorizontalDirection","LEFT","RIGHT","DropListRefInternal","DropListRef","autoScrollDisabled","enterPredicate","sorted","_isDragging","_itemPositions","_previousSwap","drag","_siblings","_orientation","_activeSiblings","_viewportScrollSubscription","_verticalScrollDirection","_horizontalScrollDirection","_stopScrollTimers","_cachedShadowRoot","_startScrollInterval","pipe","_scrollNode","incrementVerticalScroll","incrementHorizontalScroll","withScrollableParents","registerDropContainer","removeDropContainer","_initialScrollSnap","msScrollSnapType","scrollSnapType","_cacheItems","sibling","_startReceiving","_listenToScrollEvents","index","newIndex","_draggables","_getItemIndexFromPointerPosition","activeDraggables","_activeDraggables","newPositionReference","parentElement","_shouldEnterAsFirstChild","unshift","push","_cacheItemPositions","_cacheParentPositions","_reset","items","previousItems","_withDropContainer","draggedItems","filter","every","connectedTo","slice","orientation","_scrollableElements","reverse","findIndex","currentItem","size","pointerDelta","_clientRect","siblings","isHorizontal","siblingAtNewPosition","newPosition","itemOffset","_getItemOffsetPx","siblingOffset","_getSiblingOffsetPx","oldOrder","isDraggedItem","offset","elementToOffset","scrollNode","verticalScrollDirection","horizontalScrollDirection","getElementScrollDirections","getViewportSize","getVerticalScrollDirection","getHorizontalScrollDirection","window","elementToMeasure","getVisibleElement","sort","a","b","_stopReceiving","immediateSibling","end","itemPositions","reversed","lastItemRect","firstItemRect","_","floor","_canReceive","elementFromPoint","_getShadowRoot","nativeElement","activeSiblings","_sortFromLastPointerPosition","isReceiving","shadowRoot","predicate","amount","scrollBy","computedVertical","computedHorizontal","scrollHeight","clientHeight","scrollWidth","clientWidth","activeCapturingEventOptions","capture","DragDropRegistry","_dropInstances","_dragInstances","_activeDragInstances","_globalListeners","_preventDefaultWhileDragging","startsWith","moveEvent","upEvent","e","options","_clearGlobalListeners","instance","DragDropRegistry_Factory","DEFAULT_CONFIG","DragDrop","DragDrop_Factory","CdkDragStart","CdkDragRelease","CdkDragEnd","CdkDragEnter","CdkDragExit","CdkDragDrop","CdkDragMove","CdkDragSortEvent","CDK_DRAG_PARENT","CdkDragHandle","parentDrag","_parentDrag","CdkDragHandle_Factory","hostAttrs","CdkDragPlaceholder","templateRef","CdkDragPlaceholder_Factory","data","CdkDragPreview","_matchSize","CdkDragPreview_Factory","CDK_DRAG_CONFIG","DragDropConfig","CDK_DRAG_CONFIG_FACTORY","CDK_DROP_LIST","CdkDrag","_viewContainerRef","_dir","dragDrop","observer","subscription","_dragRef","movedEvent","createDrag","_assignDefaults","_dropListRef","addItem","_syncInputs","_handleEvents","reset","getFreeDragPosition","onStable","_updateRootElement","childHandleElements","withHandles","handleInstance","dragRef","disableHandle","enableHandle","freeDragPosition","rootSelectorChange","positionChange","firstChange","removeItem","dispose","rootElementSelector","getClosestMatchingAncestor","Error","nodeName","boundary","ref","dir","withBoundaryElement","_getBoundaryElement","withPlaceholderTemplate","withPreviewTemplate","withDirection","draggingDisabled","CdkDrag_Factory","contentQueries","CdkDrag_ContentQueries","dirIndex","_t","first","hostVars","CdkDrag_HostBindings","useExisting","descendants","currentElement","matches","msMatchesSelector","CdkDropListGroup","_items","CdkDropListGroup_Factory","_uniqueIdCounter","CdkDropListInternal","CdkDropList","_group","_scrollDispatcher","_unsortedItems","createDropList","_setupInputSyncSubscription","_dropLists","_syncItemsWithRef","documentPosition","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","list","_scrollableParentsResolved","scrollableParents","getAncestorScrollContainers","scrollable","getElementRef","withOrientation","listAutoScrollDisabled","listOrientation","withItems","getSortedItems","CdkDropList_Factory","CdkDropList_HostBindings","DragDropModule","DragDropModule_Factory","imports","LayoutModule","LayoutModule_Factory","mediaQueriesForWebkitCompatibility","mediaQueryStyleNode","MediaMatcher","_platform","_matchMedia","isBrowser","matchMedia","bind","noopMatchMedia","query","WEBKIT","createEmptyStyleRule","MediaMatcher_Factory","head","sheet","insertRule","console","error","media","addListener","removeListener","BreakpointState","InternalBreakpointState","Query","BreakpointObserver","_mediaMatcher","_zone","_queries","_destroySubject","queries","splitQueries","some","mediaQuery","_registerQuery","mql","observables","observable","stateObservable","breakpointStates","response","breakpoints","state","queryObservable","nextMql","output","BreakpointObserver_Factory","reduce","a1","a2","concat","Breakpoints","XSmall","Small","Medium","Large","XLarge","Handset","Tablet","Web","HandsetPortrait","TabletPortrait","WebPortrait","HandsetLandscape","TabletLandscape","WebLandscape","CdkStep_ng_template_0_Template","_c0","CdkStepHeader","_elementRef","CdkStepHeader_Factory","CdkStepLabel","CdkStepLabel_Factory","StepperSelectionEvent","STEP_STATE","NUMBER","EDIT","DONE","ERROR","STEPPER_GLOBAL_OPTIONS","MAT_STEPPER_GLOBAL_OPTIONS","StepperOptions","CdkStep","_stepper","stepperOptions","interacted","_editable","_optional","_completedOverride","_customError","_stepperOptions","_displayDefaultIndicatorType","displayDefaultIndicatorType","_showError","showError","stepControl","valid","invalid","selected","_stateChanged","_getDefaultCompleted","_getDefaultError","CdkStep_Factory","CdkStepper","ɵcmp","CdkStep_ContentQueries","stepLabel","viewQuery","CdkStep_Query","content","editable","optional","completed","hasError","label","errorMessage","ariaLabel","ariaLabelledby","ngContentSelectors","decls","vars","CdkStep_Template","encapsulation","changeDetection","None","OnPush","_linear","_selectedIndex","selectionChange","_groupId","_keyManager","_stepHeader","withWrap","withVerticalOrientation","_layoutDirection","withHorizontalOrientation","updateActiveItem","steps","selectedIndex","_updateSelectedItemIndex","step","toArray","isCurrentStep","_isCurrentStep","_getDefaultIndicatorLogic","_getGuidelineLogic","activeItemIndex","stepsArray","previouslySelectedIndex","selectedStep","previouslySelectedStep","_containsFocus","setActiveItem","hasModifier","keyCode","manager","setFirstItemActive","setLastItemActive","onKeydown","control","isIncomplete","stepperElement","focusedElement","_steps","_anyControlsInvalidOrPending","CdkStepper_Factory","CdkStepper_ContentQueries","linear","AbstractControlLike","CdkStepperNext","CdkStepperNext_Factory","CdkStepperNext_HostBindings","CdkStepperNext_click_HostBindingHandler","_handleClick","CdkStepperPrevious","previous","CdkStepperPrevious_Factory","CdkStepperPrevious_HostBindings","CdkStepperPrevious_click_HostBindingHandler","CdkStepperModule","CdkStepperModule_Factory","_c1","CdkTextColumn_th_1_Template","ctx_r0","justify","headerText","CdkTextColumn_td_2_Template","data_r2","$implicit","ctx_r1","dataAccessor","CanStick","mixinHasStickyInput","base","_sticky","_hasStickyChanged","hasStickyChanged","v","prevValue","CDK_TABLE","TextColumnOptions","TEXT_COLUMN_OPTIONS","CellDef","CdkCellDef","CdkCellDef_Factory","CdkHeaderCellDef","CdkHeaderCellDef_Factory","CdkFooterCellDef","CdkFooterCellDef_Factory","CdkColumnDefBase","_CdkColumnDefBase","CdkColumnDef","_table","_stickyEnd","_name","cssClassFriendlyName","replace","CdkColumnDef_Factory","CdkColumnDef_ContentQueries","cell","headerCell","footerCell","sticky","stickyEnd","BaseCdkCell","columnDef","elementRef","columnClassName","CdkHeaderCell","CdkHeaderCell_Factory","CdkFooterCell","CdkFooterCell_Factory","CdkCell","CdkCell_Factory","CDK_ROW_TEMPLATE","BaseRowDef","_differs","_columnsDiffer","columns","currentValue","create","diff","column","CdkHeaderRowDef","CdkFooterRowDef","BaseRowDef_Factory","CdkHeaderRowDefBase","_CdkHeaderRowDefBase","CdkHeaderRowDef_Factory","CdkFooterRowDefBase","_CdkFooterRowDefBase","CdkFooterRowDef_Factory","CdkRowDef","CdkRowDef_Factory","when","CdkCellOutletRowContext","CdkCellOutletMultiRowContext","CdkCellOutlet","_viewContainer","mostRecentCellOutlet","CdkCellOutlet_Factory","CdkHeaderRow","CdkHeaderRow_Factory","consts","CdkHeaderRow_Template","directives","Default","CdkFooterRow","CdkFooterRow_Factory","CdkFooterRow_Template","CdkRow","CdkRow_Factory","CdkRow_Template","STICKY_DIRECTIONS","StickyStyler","_isNativeHtmlTable","_stickCellCss","_isBrowser","rows","stickyDirections","row","_removeStickyStyle","children","stickyStartStates","stickyEndStates","hasStickyColumns","firstRow","numCells","cellWidths","_getCellWidths","startPositions","_getStickyStartColumnPositions","endPositions","_getStickyEndColumnPositions","isRtl","_addStickyStyle","rowsToStick","stickyStates","stickyHeight","rowIndex","j","tableElement","tfoot","querySelector","_getCalculatedZIndex","hasDirection","remove","dirValue","cssText","zIndexIncrements","firstRowCells","widths","nextPosition","getTableUnknownColumnError","getTableDuplicateColumnNameError","getTableMultipleDefaultRowDefsError","getTableMissingMatchingRowDefError","JSON","stringify","getTableMissingRowDefsError","getTableUnknownDataSourceError","getTableTextColumnMissingParentTableError","getTableTextColumnMissingNameError","RowOutlet","DataRowOutlet","DataRowOutlet_Factory","HeaderRowOutlet","HeaderRowOutlet_Factory","FooterRowOutlet","FooterRowOutlet_Factory","CDK_TABLE_TEMPLATE","RowContext","RowViewRef","RenderRow","CdkTable","role","_onDestroy","_columnDefsByName","_customColumnDefs","_customRowDefs","_customHeaderRowDefs","_customFooterRowDefs","_headerRowDefChanged","_footerRowDefChanged","_cachedRenderRowsMap","stickyCssClass","_multiTemplateDataRows","viewChange","Number","MAX_VALUE","_setupStickyStyler","_applyNativeTableSections","_dataDiffer","_i","dataRow","trackBy","dataIndex","_cacheRowDefs","_cacheColumnDefs","_headerRowDefs","_footerRowDefs","_rowDefs","_renderUpdatedColumns","_forceRenderHeaderRows","_forceRenderFooterRows","dataSource","_renderChangeSubscription","_observeRenderChanges","_checkStickyStates","_rowOutlet","_headerRowOutlet","_footerRowOutlet","disconnect","_renderRows","_getAllRenderRows","forEachOperation","record","prevIndex","_insertRow","view","move","_updateRowIndexContext","forEachIdentityChange","rowView","updateStickyColumnStyles","headerRowDef","footerRowDef","rowDef","headerRows","_getRenderedRows","thead","def","_stickyStyler","clearStickyPositioning","stickRows","resetStickyChanged","footerRows","updateStickyFooterContainer","dataRows","headerRow","_addStickyColumnStyles","footerRow","values","renderRows","prevCachedRenderRows","_data","renderRowsForData","_getRenderRowsForData","WeakMap","renderRow","rowDefs","_getRowDefs","cachedRenderRows","shift","columnDefs","mergeArrayAndSet","_getOwnDefs","_contentColumnDefs","_contentHeaderRowDefs","_contentFooterRowDefs","_contentRowDefs","defaultRowDefs","multiTemplateDataRows","_defaultRowDef","columnsDiffReducer","acc","getColumnsDiff","_forceRenderDataRows","_dataSource","dataStream","connect","_renderRow","updateStickyHeaderRowStyles","updateStickyFooterRowStyles","columnName","updateStickyColumns","rowOutlet","renderedRows","renderIndex","outlet","_getCellTemplates","cellTemplate","count","last","even","odd","columnId","extractCellTemplate","documentFragment","createDocumentFragment","sections","tag","section","stickyCheckReducer","d","_trackByFn","fn","warn","_switchDataSource","CdkTable_Factory","CdkTable_ContentQueries","CdkTable_Query","CdkTable_Template","String","CdkTextColumn","_options","_syncColumnDefName","_createDefaultHeaderText","defaultDataAccessor","addColumnDef","removeColumnDef","defaultHeaderTextTransform","toUpperCase","CdkTextColumn_Factory","CdkTextColumn_Query","CdkTextColumn_Template","EXPORTED_DECLARATIONS","CdkTableModule","CdkTableModule_Factory","listenerOptions","AutofillMonitor","_monitoredElements","elementOrRef","info","subject","result","cssClass","listener","animationName","isAutofilled","unlisten","_info","stopMonitoring","AutofillMonitor_Factory","CdkAutofill","_autofillMonitor","cdkAutofill","monitor","CdkAutofill_Factory","CdkTextareaAutosize","_enabled","_previousMinRows","_textareaElement","_measuringClass","FIREFOX","minHeight","minRows","_cachedLineHeight","maxHeight","maxRows","_initialHeight","resizeToFitContent","_getWindow","textareaClone","visibility","border","padding","overflow","_setMinHeight","_setMaxHeight","force","_cacheTextareaLineHeight","_minRows","_previousValue","placeholderText","requestAnimationFrame","_scrollToCaretPosition","doc","_getDocument","defaultView","selectionStart","selectionEnd","isStopped","_maxRows","CdkTextareaAutosize_Factory","CdkTextareaAutosize_HostBindings","CdkTextareaAutosize_input_HostBindingHandler","_noopInputHandler","enabled","TextFieldModule","TextFieldModule_Factory","BaseTreeControl","expansionModel","dataNode","toggle","deselect","isSelected","collapseDescendants","expandDescendants","toBeProcessed","getDescendants","FlatTreeControl","getLevel","isExpandable","startIndex","dataNodes","results","NestedTreeControl","getChildren","allNodes","accumulator","_getDescendants","childrenNodes","child","Boolean","TreeControl","CDK_TREE_NODE_OUTLET_NODE","CdkTreeNodeOutlet","_node","CdkTreeNodeOutlet_Factory","CdkTreeNodeOutletContext","CdkTreeNodeDef","CdkTreeNodeDef_Factory","getTreeNoValidDataSourceError","getTreeMultipleDefaultNodeDefsError","getTreeMissingMatchingNodeDefError","getTreeControlMissingError","getTreeControlFunctionsMissingError","CdkTree","_levels","treeControl","_nodeOutlet","_dataSubscription","defaultNodeDefs","_nodeDefs","_defaultNodeDef","renderNodeChanges","dataDiffer","parentData","adjustedPreviousIndex","insertNode","nodeDef","nodeData","_getNodeDef","level","CdkTreeNode","mostRecentTreeNode","CdkTree_Factory","CdkTree_ContentQueries","CdkTree_Query","CdkTree_Template","_tree","_dataChanges","_setRoleFromChildren","_setRoleFromData","isExpanded","CdkTreeNode_Factory","CdkTreeNode_HostBindings","CdkNestedTreeNode","updateChildrenNodes","nodeOutlet","_clear","_getNodeOutlet","_children","outlets","CdkNestedTreeNode_Factory","CdkNestedTreeNode_ContentQueries","CdkNestedTreeNode_HostBindings","cssUnitPattern","CdkTreeNodePadding","_treeNode","_renderer","_element","indentUnits","_indent","_setPadding","nodeLevel","_level","forceChange","_paddingIndent","_currentPadding","paddingProp","resetProp","indent","units","parts","CdkTreeNodePadding_Factory","CdkTreeNodeToggle","_recursive","recursive","toggleDescendants","CdkTreeNodeToggle_Factory","CdkTreeNodeToggle_HostBindings","CdkTreeNodeToggle_click_HostBindingHandler","$event","_toggle","CdkTreeModule","CdkTreeModule_Factory","MatAutocomplete_ng_template_0_Template","_classList","_uniqueAutocompleteIdCounter","MatAutocompleteSelectedEvent","option","MatAutocompleteActivatedEvent","MatAutocompleteBase","_MatAutocompleteMixinBase","MatAutocompleteDefaultOptions","MAT_AUTOCOMPLETE_DEFAULT_OPTIONS","MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY","autoActiveFirstOption","MatAutocomplete","defaults","_activeOptionChanges","showPanel","_isOpen","displayWith","optionSelected","optionActivated","_autoActiveFirstOption","_setVisibility","panel","_setVisibilityClasses","MatAutocomplete_Factory","MatAutocomplete_ContentQueries","optionGroups","MatAutocomplete_Query","disableRipple","panelWidth","MatAutocomplete_Template","MatAutocompleteOrigin","MatAutocompleteOrigin_Factory","AUTOCOMPLETE_OPTION_HEIGHT","AUTOCOMPLETE_PANEL_HEIGHT","MAT_AUTOCOMPLETE_SCROLL_STRATEGY","MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER","deps","useFactory","MAT_AUTOCOMPLETE_VALUE_ACCESSOR","MatAutocompleteTrigger","getMatAutocompleteMissingPanelError","_overlay","scrollStrategy","_formField","_componentDestroyed","_autocompleteDisabled","_manuallyFloatingLabel","_viewportSubscription","_canOpenOnNextFocus","_closeKeyEventStream","_windowBlurHandler","panelOpen","_onChange","_onTouched","autocompleteAttribute","_overlayAttached","optionSelections","autocomplete","onSelectionChange","_scrollStrategy","_positionStrategy","_setStrategyPositions","_overlayRef","updatePosition","_destroyPanel","_attachOverlay","_floatLabel","_resetLabel","hasAttached","detach","_closingActionsSubscription","clickTarget","_isInsideShadowRoot","composedPath","formField","overlayElement","_setTriggerValue","isDisabled","activeOption","_selectViaInteraction","_resetActiveItem","prevActiveItem","activeItem","isArrowKey","_canOpen","openPanel","_scrollToOption","shouldAnimate","floatLabel","_animateAndLockLabel","labelCount","_setScrollTop","newScrollPosition","_getScrollTop","firstStable","optionChanges","reapplyLastPosition","wasOpen","panelClosingActions","_setValueAndClose","closePanel","toDisplay","inputValue","_control","_clearPreviousSelectedOption","_emitSelectEvent","skip","overlayRef","_portal","_getOverlayConfig","keydownEvents","altKey","updateSize","_getPanelWidth","setOrigin","_getConnectedElement","attach","_subscribeToClosingActions","positionStrategy","_getOverlayPosition","strategy","flexibleConnectedTo","withFlexibleDimensions","withPush","belowPositions","originX","originY","overlayX","overlayY","panelClass","abovePositions","withPositions","getConnectedOverlayOrigin","_getHostWidth","readOnly","tabOut","_getOutsideClickStream","detachments","MatAutocompleteTrigger_Factory","MatAutocompleteTrigger_HostBindings","MatAutocompleteTrigger_focusin_HostBindingHandler","_handleFocus","MatAutocompleteTrigger_blur_HostBindingHandler","MatAutocompleteTrigger_input_HostBindingHandler","_handleInput","MatAutocompleteTrigger_keydown_HostBindingHandler","_handleKeydown","autocompleteDisabled","toString","MatAutocompleteModule","MatAutocompleteModule_Factory","MatBadgeBase","_MatBadgeMixinBase","MatBadge","_ariaDescriber","_animationMode","_hasContent","_color","_overlap","_id","contentChange","_updateTextContent","badgeElement","_badgeElement","description","removeDescription","destroyNode","_createBadgeElement","textContent","activeClass","contentClass","_clearExistingBadges","newDescription","oldDescription","describe","colorPalette","childCount","currentChild","_setColor","val","_description","_updateHostAriaDescription","_hidden","MatBadge_Factory","MatBadge_HostBindings","overlap","isAbove","isAfter","hidden","color","MatBadgeModule","MatBadgeModule_Factory","MatBottomSheetContainer_ng_template_0_Template","MAT_BOTTOM_SHEET_DATA","MatBottomSheetConfig","hasBackdrop","disableClose","closeOnNavigation","autoFocus","restoreFocus","matBottomSheetAnimations","bottomSheetState","COMPLEX","ACCELERATION_CURVE","EXITING","DECELERATION_CURVE","MatBottomSheetContainer","_focusTrapFactory","breakpointObserver","bottomSheetConfig","_animationState","_animationStateChanged","_elementFocusedBeforeOpened","attachDomPortal","portal","_validatePortalAttached","_setPanelClass","_savePreviouslyFocusedElement","_portalOutlet","_breakpointSubscription","observe","_toggleClass","isMatched","attachComponentPortal","attachTemplatePortal","toState","_restoreFocus","_trapFocus","_focusTrap","focusInitialElementWhenReady","toFocus","MatBottomSheetContainer_Factory","MatBottomSheetContainer_Query","MatBottomSheetContainer_HostBindings","MatBottomSheetContainer_animation_state_start_HostBindingHandler","_onAnimationStart","MatBottomSheetContainer_animation_state_done_HostBindingHandler","_onAnimationDone","MatBottomSheetContainer_Template","animation","animations","MatBottomSheetModule","MatBottomSheetModule_Factory","entryComponents","MatBottomSheetRef","containerInstance","_location","_afterDismissed","_afterOpened","phaseName","_closeFallbackTimeout","_result","backdropClick","dismiss","totalTime","detachBackdrop","MAT_BOTTOM_SHEET_DEFAULT_OPTIONS","MatBottomSheet","_injector","_parentBottomSheet","_defaultOptions","_bottomSheetRefAtThisLevel","componentOrTemplateRef","_applyConfigDefaults","_createOverlay","_attachContainer","bottomSheetRef","_createInjector","contentRef","afterDismissed","_openedBottomSheetRef","userInjector","viewContainerRef","injector","containerPortal","containerRef","overlayConfig","disposeOnNavigation","maxWidth","block","global","centerHorizontally","backdropClass","injectionTokens","MatBottomSheet_Factory","Object","assign","MatButtonToggleDefaultOptions","MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS","MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR","MatButtonToggleGroup","MatButtonToggleGroupMultiple","MatButtonToggleChange","_changeDetector","defaultOptions","_vertical","_multiple","_controlValueAccessorChangeFn","valueChange","appearance","_selectionModel","multiple","_buttonToggles","checked","isUserInput","deferEvents","_updateModelValue","_rawValue","_clearSelection","_selectValue","correspondingOption","_emitChangeEvent","_markForCheck","_setSelectionByValue","MatButtonToggleGroup_Factory","MatButtonToggleGroup_ContentQueries","MatButtonToggle","MatButtonToggleGroup_HostBindings","vertical","MatButtonToggleBase","_MatButtonToggleMixinBase","toggleGroup","_focusMonitor","defaultTabIndex","_isSingleSelector","_checked","parsedTabIndex","tabIndex","buttonToggleGroup","group","_type","_isPrechecked","_isSelected","_syncButtonToggle","_buttonElement","newChecked","_appearance","MatButtonToggle_Factory","MatButtonToggle_Query","MatButtonToggle_HostBindings","MatButtonToggle_focus_HostBindingHandler","MatButtonToggle_Template","MatButtonToggle_Template_button_click_0_listener","_onButtonClick","_r0","buttonId","MatButtonToggleModule","MatButtonToggleModule_Factory","DEFAULT_ROUND_BUTTON_COLOR","BUTTON_HOST_ATTRIBUTES","MatButtonBase","_MatButtonMixinBase","MatButton","isRoundButton","_hasHostAttributes","isIconButton","attr","_getHostElement","origin","focusVia","attributes","attribute","hasAttribute","MatButton_Factory","MatButton_Query","ripple","MatButton_HostBindings","attrs","MatButton_Template","_isRippleDisabled","MatAnchor","focusMonitor","animationMode","stopImmediatePropagation","MatAnchor_Factory","MatAnchor_HostBindings","MatAnchor_click_HostBindingHandler","_haltDisabledEvents","MatAnchor_Template","MatButtonModule","MatButtonModule_Factory","_c2","_c3","_c4","_c5","MatCardContent","MatCardContent_Factory","MatCardTitle","MatCardTitle_Factory","MatCardSubtitle","MatCardSubtitle_Factory","MatCardActions","align","MatCardActions_Factory","MatCardActions_HostBindings","MatCardFooter","MatCardFooter_Factory","MatCardImage","MatCardImage_Factory","MatCardSmImage","MatCardSmImage_Factory","MatCardMdImage","MatCardMdImage_Factory","MatCardLgImage","MatCardLgImage_Factory","MatCardXlImage","MatCardXlImage_Factory","MatCardAvatar","MatCardAvatar_Factory","MatCard","MatCard_Factory","MatCard_HostBindings","MatCard_Template","MatCardHeader","MatCardHeader_Factory","MatCardHeader_Template","MatCardTitleGroup","MatCardTitleGroup_Factory","MatCardTitleGroup_Template","MatCardModule","MatCardModule_Factory","enterDuration","MatCheckboxDefaultOptions","MAT_CHECKBOX_DEFAULT_OPTIONS","MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY","clickAction","MAT_CHECKBOX_CLICK_ACTION","nextUniqueId","MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR","MatCheckbox","TransitionCheckState","Init","Checked","Unchecked","Indeterminate","MatCheckboxChange","MatCheckboxBase","_MatCheckboxMixinBase","_clickAction","_uniqueId","labelPosition","indeterminateChange","_currentAnimationClass","_currentCheckState","_indeterminate","parseInt","focusOrigin","_syncIndeterminate","indeterminate","newState","oldState","_getAnimationClassForCheckStateTransition","animationClass","_transitionCheckState","_inputElement","animSuffix","nativeCheckbox","_required","changed","MatCheckbox_Factory","MatCheckbox_Query","MatCheckbox_HostBindings","required","MatCheckbox_Template","MatCheckbox_Template_input_change_3_listener","_onInteractionEvent","MatCheckbox_Template_input_click_3_listener","_onInputClick","MatCheckbox_Template_span_cdkObserveContent_12_listener","_onLabelTextChange","_r2","inputId","_getAriaChecked","MAT_CHECKBOX_REQUIRED_VALIDATOR","MatCheckboxRequiredValidator","MatCheckboxRequiredValidator_Factory","ɵMatCheckboxRequiredValidator_BaseFactory","_MatCheckboxRequiredValidatorModule","_MatCheckboxRequiredValidatorModule_Factory","MatCheckboxModule","MatCheckboxModule_Factory","MatChipEvent","MatChipSelectionChange","MatChipBase","_MatChipMixinBase","MatChipAvatar","MatChipAvatar_Factory","MatChipTrailingIcon","MatChipTrailingIcon_Factory","MatChip","platform","globalRippleOptions","_hasFocus","chipListSelectable","_chipListMultiple","_chipListDisabled","_selected","_selectable","_removable","_onFocus","_onBlur","removed","_addHostClassName","_chipRippleTarget","_chipRipple","setupTriggerEvents","rippleConfig","_animationsDisabled","basicChipAttrName","tagName","chip","_removeTriggerEvents","_dispatchSelectionChange","removable","selectable","toggleSelected","coercedValue","_value","MatChip_Factory","MatChip_ContentQueries","MatChipRemove","avatar","trailingIcon","removeIcon","MatChip_HostBindings","MatChip_click_HostBindingHandler","MatChip_keydown_HostBindingHandler","MatChip_focus_HostBindingHandler","MatChip_blur_HostBindingHandler","_blur","ariaSelected","_parentChip","parentChip","MatChipRemove_Factory","MatChipRemove_HostBindings","MatChipRemove_click_HostBindingHandler","MatChipsDefaultOptions","MAT_CHIPS_DEFAULT_OPTIONS","MatChipListBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","_MatChipListMixinBase","MatChipListChange","MatChipList","controlType","_lastDestroyedChipIndex","_uid","_tabIndex","_userTabIndex","_compareWith","o1","o2","ariaOrientation","valueAccessor","chips","_allowFocusEscape","_syncChipsState","_resetChips","_initializeSelection","_updateTabIndex","_updateFocusForDestroyedChips","stateChanges","updateErrorState","_dropSubscriptions","inputElement","_chipInput","ids","_ariaDescribedby","join","_originatesFromChip","focused","_focusInput","_isInputEmpty","newChipIndex","input","_sortValues","correspondingChip","selectViaInteraction","fallbackValue","valueToEmit","_hasFocusedChip","_markAsTouched","_listenToChipsFocus","_listenToChipsSelection","_listenToChipsRemoved","_chipFocusSubscription","_chipBlurSubscription","_chipSelectionSubscription","_chipRemoveSubscription","chipSelectionChanges","_propagateChanges","chipFocusChanges","chipIndex","_isValidIndex","chipBlurChanges","chipRemoveChanges","empty","writeValue","MatChipList_Factory","MatChipList_ContentQueries","MatChipList_HostBindings","MatChipList_focus_HostBindingHandler","MatChipList_blur_HostBindingHandler","MatChipList_keydown_HostBindingHandler","_keydown","errorState","compareWith","errorStateMatcher","MatChipList_Template","MatChipInputEvent","nextUniqueId$1","MatChipInput","_addOnBlur","separatorKeyCodes","chipEnd","_chipList","_emitChipEnd","addOnBlur","_isSeparatorKey","separators","registerInput","MatChipInput_Factory","MatChipInput_HostBindings","MatChipInput_keydown_HostBindingHandler","MatChipInput_blur_HostBindingHandler","MatChipInput_focus_HostBindingHandler","_focus","MatChipInput_input_HostBindingHandler","_onInput","chipList","CHIP_DECLARATIONS","MatChipsModule","MatChipsModule_Factory","MatCalendarBody_tr_0_Template","_cellPadding","numCols","MatCalendarBody_tr_1_td_1_Template","ctx_r4","_firstRowOffset","labelMinRequiredCells","MatCalendarBody_tr_1_td_2_Template","_r9","MatCalendarBody_tr_1_td_2_Template_td_click_0_listener","item_r6","ctx_r8","_cellClicked","colIndex_r7","rowIndex_r3","ctx_r5","_cellWidth","_isActiveCell","cssClasses","selectedValue","todayValue","displayValue","MatCalendarBody_tr_1_Template","row_r2","MatMonthView_th_3_Template","day_r1","narrow","MatCalendar_ng_template_0_Template","MatCalendar_mat_month_view_2_Template","_r5","MatCalendar_mat_month_view_2_Template_mat_month_view_activeDateChange_0_listener","activeDate","MatCalendar_mat_month_view_2_Template_mat_month_view_selectedChange_0_listener","ctx_r6","_dateSelected","MatCalendar_mat_month_view_2_Template_mat_month_view__userSelection_0_listener","ctx_r7","_userSelected","dateFilter","maxDate","minDate","dateClass","MatCalendar_mat_year_view_3_Template","MatCalendar_mat_year_view_3_Template_mat_year_view_activeDateChange_0_listener","MatCalendar_mat_year_view_3_Template_mat_year_view_monthSelected_0_listener","ctx_r10","_monthSelectedInYearView","MatCalendar_mat_year_view_3_Template_mat_year_view_selectedChange_0_listener","ctx_r11","_goToDateInView","ctx_r2","MatCalendar_mat_multi_year_view_4_Template","_r13","MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_activeDateChange_0_listener","ctx_r12","MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_yearSelected_0_listener","ctx_r14","_yearSelectedInMultiYearView","MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_selectedChange_0_listener","ctx_r15","ctx_r3","MatDatepickerToggle__svg_svg_2_Template","createMissingDateImplError","provider","MatDatepickerIntl","calendarLabel","openCalendarLabel","prevMonthLabel","nextMonthLabel","prevYearLabel","nextYearLabel","prevMultiYearLabel","nextMultiYearLabel","switchToMonthViewLabel","switchToMultiYearViewLabel","MatDatepickerIntl_Factory","MatCalendarCell","MatCalendarBody","activeCell","cellAspectRatio","selectedValueChange","columnChanges","colIndex","cellNumber","MatCalendarBody_Factory","MatCalendarBody_Template","DAYS_PER_WEEK","MatMonthView","_dateFormats","_dateAdapter","_rerenderSubscription","selectedChange","_userSelection","activeDateChange","_activeDate","today","localeChanges","_init","date","_selectedDate","selectedYear","getYear","selectedMonth","getMonth","selectedDate","createDate","oldActiveDate","_isRtl","addCalendarDays","getDate","getNumDaysInMonth","addCalendarYears","addCalendarMonths","compareDate","_focusActiveCell","_getDateInCurrentMonth","_todayDate","_monthLabel","getMonthNames","toLocaleUpperCase","firstOfMonth","_firstWeekOffset","getDayOfWeek","getFirstDayOfWeek","_initWeekdays","_createWeekCells","_matCalendarBody","firstDayOfWeek","narrowWeekdays","getDayOfWeekNames","longWeekdays","weekdays","long","_weekdays","daysInMonth","dateNames","getDateNames","_weeks","_shouldEnableDate","format","dateA11yLabel","cellClasses","_hasSameMonthAndYear","d1","d2","obj","isDateInstance","isValid","validDate","_getValidDateOrNull","deserialize","clampDate","_minDate","_maxDate","MatMonthView_Factory","MatMonthView_Query","MatMonthView_Template","MatMonthView_Template_tbody_selectedValueChange_6_listener","MatMonthView_Template_tbody_keydown_6_listener","_handleCalendarBodyKeydown","yearsPerPage","yearsPerRow","MatMultiYearView","yearSelected","_todayYear","activeYear","minYearOfPage","getActiveOffset","_years","year","_createCellForYear","month","_yearSelected","yearName","getYearName","_shouldEnableYear","firstOfYear","isSameMultiYearView","_selectedYear","MatMultiYearView_Factory","MatMultiYearView_Query","MatMultiYearView_Template","MatMultiYearView_Template_tbody_selectedValueChange_4_listener","MatMultiYearView_Template_tbody_keydown_4_listener","_getActiveCell","dateAdapter","date1","date2","year1","year2","startingYear","getStartingYear","euclideanModulo","maxYear","MatYearView","monthSelected","normalizedDate","_monthSelected","_selectedMonth","_getMonthInCurrentYear","_todayMonth","_yearLabel","monthNames","_months","_createCellForMonth","monthName","monthYearA11yLabel","_shouldEnableMonth","_isYearAndMonthAfterMaxDate","_isYearAndMonthBeforeMinDate","maxMonth","minYear","minMonth","MatYearView_Factory","MatYearView_Query","MatYearView_Template","MatYearView_Template_tbody_selectedValueChange_4_listener","MatYearView_Template_tbody_keydown_4_listener","MatCalendarHeader","_intl","calendar","changeDetectorRef","currentView","_isSameView","monthYearLabel","maxYearOfPage","minYearName","maxYearName","formatYearRange","MatCalendarHeader_Factory","MatCalendar","MatCalendarHeader_Template","MatCalendarHeader_Template_button_click_2_listener","currentPeriodClicked","MatCalendarHeader_Template_button_click_7_listener","previousClicked","MatCalendarHeader_Template_button_click_8_listener","nextClicked","periodButtonLabel","periodButtonText","previousEnabled","prevButtonLabel","nextEnabled","nextButtonLabel","_moveFocusOnNextTick","startView","_intlChanges","_calendarHeaderPortal","headerComponent","startAt","_currentView","focusActiveCell","_getCurrentViewComponent","monthView","yearView","multiYearView","sameDate","normalizedYear","normalizedMonth","_startAt","_clampedActiveDate","MatCalendar_Factory","MatCalendar_Query","MatCalendar_Template","matDatepickerAnimations","transformPanel","fadeInCalendar","datepickerUid","MAT_DATEPICKER_SCROLL_STRATEGY","MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY","MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER","MatDatepickerContentBase","_MatDatepickerContentMixinBase","MatDatepickerContent","_animationDone","_calendar","MatDatepickerContent_Factory","MatDatepickerContent_Query","MatDatepickerContent_HostBindings","MatDatepickerContent_animation_transformPanel_done_HostBindingHandler","datepicker","touchUi","MatDatepickerContent_Template","MatDatepickerContent_Template_mat_calendar_selectedChange_0_listener","MatDatepickerContent_Template_mat_calendar_yearSelected_0_listener","_selectYear","MatDatepickerContent_Template_mat_calendar_monthSelected_0_listener","_selectMonth","MatDatepickerContent_Template_mat_calendar__userSelection_0_listener","close","_dateFilter","calendarHeaderComponent","MatDatepicker","_dialog","_touchUi","openedStream","closedStream","_opened","_validSelected","_focusedElementBeforeOpen","_inputSubscription","_disabledChange","_selectedChanged","_destroyPopup","oldValue","_datepickerInput","_valueChange","_openAsDialog","_openAsPopup","_popupComponentRef","_popupRef","_startExitAnimation","_dialogRef","completeClose","open","minWidth","afterClosed","componentInstance","_createPopup","_createPopupPositionStrategy","withTransformOriginOn","withViewportMargin","withLockedPosition","_getThemePalette","MatDatepicker_Factory","MatDatepicker_Template","MAT_DATEPICKER_VALUE_ACCESSOR","MatDatepickerInput","MAT_DATEPICKER_VALIDATORS","MatDatepickerInputEvent","targetElement","dateChange","dateInput","_cvaOnChange","_validatorOnChange","_datepickerSubscription","_localeSubscription","_parseValidator","_lastValueValid","_minValidator","controlValue","_maxValidator","_filterValidator","_validator","compose","_isInitialized","c","isAltDownArrow","_datepicker","lastValueWasValid","parse","_formatValue","_registerInput","oldDate","_min","_max","blur","MatDatepickerInput_Factory","MatDatepickerInput_HostBindings","MatDatepickerInput_input_HostBindingHandler","MatDatepickerInput_change_HostBindingHandler","MatDatepickerInput_blur_HostBindingHandler","MatDatepickerInput_keydown_HostBindingHandler","_onKeydown","toIso8601","matDatepicker","matDatepickerFilter","MatDatepickerToggleIcon","MatDatepickerToggleIcon_Factory","MatDatepickerToggle","_watchStateChanges","datepickerDisabled","inputDisabled","datepickerToggled","MatDatepickerToggle_Factory","MatDatepickerToggle_ContentQueries","_customIcon","MatDatepickerToggle_Query","_button","MatDatepickerToggle_HostBindings","MatDatepickerToggle_focus_HostBindingHandler","MatDatepickerToggle_Template","MatDatepickerToggle_Template_button_click_0_listener","_open","MatDatepickerModule","MatDatepickerModule_Factory","MatDivider","_inset","MatDivider_Factory","MatDivider_HostBindings","inset","MatDivider_Template","MatDividerModule","MatDividerModule_Factory","MatExpansionPanel_ng_template_5_Template","a0","collapsedHeight","expandedHeight","params","MatExpansionPanelHeader_span_4_Template","_getExpandedState","_c6","MatAccordionBase","MAT_ACCORDION","EXPANSION_PANEL_ANIMATION_TIMING","matExpansionAnimations","indicatorRotate","expansionHeaderHeight","bodyExpansion","MatExpansionPanelContent","_template","MatExpansionPanelContent_Factory","uniqueId","MatExpansionPanelDefaultOptions","MAT_EXPANSION_PANEL_DEFAULT_OPTIONS","MatExpansionPanel","_uniqueSelectionDispatcher","_hideToggle","afterExpand","afterCollapse","_inputChanges","_headerId","_bodyAnimationDone","fromState","hideToggle","displayMode","_lazyContent","_body","bodyElement","_togglePosition","togglePosition","MatExpansionPanel_Factory","MatExpansionPanel_ContentQueries","MatExpansionPanel_Query","MatExpansionPanel_HostBindings","_hasSpacing","MatExpansionPanel_Template","MatExpansionPanel_Template_div_animation_bodyExpansion_done_1_listener","MatExpansionPanelActionRow","MatExpansionPanelActionRow_Factory","MatExpansionPanelHeader","_parentChangeSubscription","accordionHideToggleChange","_handleHeaderFocus","_handleHeaderKeydown","MatExpansionPanelHeader_Factory","MatExpansionPanelHeader_HostBindings","MatExpansionPanelHeader_animation_expansionHeight_start_HostBindingHandler","_animationStarted","MatExpansionPanelHeader_click_HostBindingHandler","MatExpansionPanelHeader_keydown_HostBindingHandler","_getPanelId","_isExpanded","_getTogglePosition","MatExpansionPanelHeader_Template","_showToggle","MatExpansionPanelDescription","MatExpansionPanelDescription_Factory","MatExpansionPanelTitle","MatExpansionPanelTitle_Factory","MatAccordion","arguments","_ownHeaders","_headers","headers","header","notifyOnChanges","show","MatAccordion_Factory","ɵMatAccordion_BaseFactory","MatAccordion_ContentQueries","MatAccordion_HostBindings","MatExpansionModule","MatExpansionModule_Factory","MatFormField_ng_container_3_Template","MatFormField_div_4_Template","MatFormField_label_9_ng_container_2_Template","MatFormField_label_9_3_Template","MatFormField_label_9_span_4_Template","MatFormField_label_9_Template","_r14","MatFormField_label_9_Template_label_cdkObserveContent_0_listener","ctx_r13","updateOutlineGap","_shouldAlwaysFloat","_labelId","_hasLabel","hideRequiredMarker","MatFormField_div_10_Template","MatFormField_div_11_Template","MatFormField_div_13_Template","_subscriptAnimationState","MatFormField_div_14_div_1_Template","ctx_r16","_hintLabelId","hintLabel","MatFormField_div_14_Template","MatError","MatError_Factory","MatError_HostBindings","matFormFieldAnimations","transitionMessages","MatFormFieldControl","MatFormFieldControl_Factory","getMatFormFieldPlaceholderConflictError","getMatFormFieldDuplicatedHintError","getMatFormFieldMissingControlError","MatHint","MatHint_Factory","MatHint_HostBindings","MatLabel","MatLabel_Factory","MatPlaceholder","MatPlaceholder_Factory","MatPrefix","MatPrefix_Factory","MatSuffix","MatSuffix_Factory","nextUniqueId$2","floatingLabelScale","outlineGapPadding","MatFormFieldBase","_MatFormFieldMixinBase","MatFormFieldDefaultOptions","MAT_FORM_FIELD_DEFAULT_OPTIONS","MAT_FORM_FIELD","MatFormField","labelOptions","_defaults","_outlineGapCalculationNeededImmediately","_outlineGapCalculationNeededOnStable","_showAlwaysAnimate","_hintLabel","_labelOptions","_getDefaultFloatLabelState","_animationsEnabled","_hideRequiredMarker","_connectionContainerRef","_validateControlChild","_validatePlaceholders","_syncDescribedByIds","valueChanges","_prefixChildren","_suffixChildren","_hintChildren","_processHints","_errorChildren","_placeholderChild","_labelChild","_canLabelFloat","shouldLabelFloat","_shouldLabelFloat","_hasPlaceholder","_hasFloatingLabel","_label","_validateHints","startHint","endHint","hint","_getDisplayedMessages","setDescribedByIds","labelEl","_isAttachedToDOM","startWidth","gapWidth","startEls","gapEls","containerRect","containerStart","_getStartEnd","labelStart","labelWidth","offsetWidth","rootNode","_explicitFormFieldControl","_controlNonStatic","_controlStatic","_labelChildNonStatic","_labelChildStatic","MatFormField_Factory","MatFormField_ContentQueries","MatFormField_Query","underlineRef","_inputContainerRef","MatFormField_HostBindings","_hideControlPlaceholder","autofilled","_shouldForward","MatFormField_Template","MatFormField_Template_div_click_1_listener","onContainerClick","MatFormFieldModule","MatFormFieldModule_Factory","MAT_GRID_LIST","MatGridListBase","MatGridTile","_gridList","_rowspan","_colspan","MatGridTile_Factory","MatGridTile_HostBindings","rowspan","colspan","MatGridTile_Template","MatGridTileText","_lines","MatGridTileText_Factory","MatGridTileText_ContentQueries","MatGridTileText_Template","MatGridAvatarCssMatStyler","MatGridAvatarCssMatStyler_Factory","MatGridTileHeaderCssMatStyler","MatGridTileHeaderCssMatStyler_Factory","MatGridTileFooterCssMatStyler","MatGridTileFooterCssMatStyler_Factory","Tile","TileCoordinator","columnIndex","numColumns","tiles","tracker","fill","tile","_trackTile","gapStartIndex","_findMatchingGap","_markTilePosition","TilePosition","tileCols","gapEndIndex","_nextRow","_findGapEndIndex","lastRowMax","rowCount","col","cssCalcAllowedValue","TileStyler","_rows","gutterSize","cols","_gutterSize","normalizeUnits","_cols","sizePercent","gutterFraction","baseSize","calc","span","percentWidthPerTile","gutterWidthFractionPerTile","setColStyles","setRowStyles","percentWidth","gutterWidth","baseTileWidth","getBaseTileSize","side","_setStyle","getTilePosition","getTileSize","tileHeight","FixedTileStyler","fixedRowHeight","test","getTileSpan","getGutterSpan","_setListStyle","_tiles","RatioTileStyler","_parseRatio","percentHeightPerTile","rowHeightRatio","baseTileHeight","ratioParts","FitTileStyler","gutterHeightPerTile","exp","match","MAT_FIT_MODE","MatGridList","_gutter","_checkCols","_checkRowHeight","_layoutTiles","_rowHeight","_setTileStyler","rowHeight","_tileStyler","_tileCoordinator","update","init","pos","setStyle","getComputedHeight","MatGridList_Factory","MatGridList_ContentQueries","MatGridList_HostBindings","MatGridList_Template","MatGridListModule","MatGridListModule_Factory","getMatIconNameNotFoundError","iconName","getMatIconNoHttpProviderError","getMatIconFailedToSanitizeUrlError","url","getMatIconFailedToSanitizeLiteralError","literal","IconOptions","SvgIconConfig","svgElement","MatIconRegistry","_httpClient","_sanitizer","_errorHandler","_svgIconConfigs","_iconSetConfigs","_cachedIconsByUrl","_inProgressUrlFetches","_fontCssClassesByAlias","_defaultFontSetClass","addSvgIconInNamespace","addSvgIconLiteralInNamespace","namespace","_addSvgIconConfig","sanitizedLiteral","sanitize","HTML","_createSvgElementForSingleIcon","addSvgIconSetInNamespace","addSvgIconSetLiteralInNamespace","_addSvgIconSetConfig","_svgElementFromString","alias","safeUrl","RESOURCE_URL","cachedIcon","cloneSvg","_loadSvgIconFromConfig","svg","iconKey","_getSvgFromConfig","iconSetConfigs","_getSvgFromIconSetConfigs","namedIcon","_extractIconWithNameFromAnySet","iconSetFetchRequests","iconSetConfig","_loadSvgIconSetFromConfig","err","message","handleError","foundIcon","_extractSvgIconFromSet","_fetchUrl","svgText","responseText","_setSvgAttributes","iconSet","iconSource","iconElement","_toSvgElement","str","div","innerHTML","childNodes","viewBox","inProgressFetch","req","responseType","configNamespace","MatIconRegistry_Factory","ICON_REGISTRY_PROVIDER_FACTORY","parentRegistry","httpClient","sanitizer","errorHandler","ICON_REGISTRY_PROVIDER","MatIconBase","_MatIconMixinBase","MAT_ICON_LOCATION","MAT_ICON_LOCATION_FACTORY","MatIconLocation","location","getPathname","pathname","search","funcIriAttributes","funcIriAttributeSelector","funcIriPattern","MatIcon","_iconRegistry","ariaHidden","_inline","_currentIconFetch","svgIconChanges","svgIcon","_splitIconName","getNamedSvgIcon","_setSvgElement","previousValue","_clearSvgElement","_usingFontIcon","_updateFontIconClasses","cachedElements","_elementsWithExternalReferences","newPath","_previousPath","_prependPathToReferences","styleTags","path","_cacheChildrenWithExternalReferences","layoutElement","elem","fontSetClass","fontSet","classNameForFontAlias","getDefaultFontSetClass","_previousFontSetClass","fontIcon","_previousFontIconClass","elementsWithFuncIri","elementWithReference","getAttribute","inline","_fontSet","_cleanupFontValue","_fontIcon","MatIcon_Factory","MatIcon_HostBindings","MatIcon_Template","MatIconModule","MatIconModule_Factory","MatTextareaAutosize","MatTextareaAutosize_Factory","ɵMatTextareaAutosize_BaseFactory","cdkAutosizeMinRows","cdkAutosizeMaxRows","matAutosizeMinRows","matAutosizeMaxRows","matAutosize","matTextareaAutosize","getMatInputUnsupportedTypeError","MAT_INPUT_VALUE_ACCESSOR","MAT_INPUT_INVALID_TYPES","MatInputBase","_MatInputMixinBase","MatInput","inputValueAccessor","ngZone","_readonly","_neverEmptyInputTypes","_inputValueAccessor","_previousNativeValue","IOS","el","_isServer","_isNativeSelect","_isTextarea","_dirtyCheckNativeValue","isFocused","readonly","validity","badInput","_validateType","_isNeverEmpty","_isBadInput","selectElement","firstOption","MatInput_Factory","MatInput_HostBindings","MatInput_focus_HostBindingHandler","_focusChanged","MatInput_blur_HostBindingHandler","MatInput_input_HostBindingHandler","MatInputModule","MatInputModule_Factory","MatListOption_mat_pseudo_checkbox_2_Template","MatListBase","_MatListMixinBase","MatListItemBase","_MatListItemMixinBase","MatNavList","MatNavList_Factory","ɵMatNavList_BaseFactory","MatNavList_Template","MatList","_getListType","MatList_Factory","MatList_Template","MatListAvatarCssMatStyler","MatListAvatarCssMatStyler_Factory","MatListIconCssMatStyler","MatListIconCssMatStyler_Factory","MatListSubheaderCssMatStyler","MatListSubheaderCssMatStyler_Factory","MatListItem","navList","_isInteractiveList","_list","MatListItem_Factory","MatListItem_ContentQueries","_avatar","_icon","MatListItem_HostBindings","MatListItem_Template","MatSelectionListBase","_MatSelectionListMixinBase","MatListOptionBase","_MatListOptionMixinBase","MAT_SELECTION_LIST_VALUE_ACCESSOR","MatSelectionList","MatSelectionListChange","MatListOption","selectionList","checkboxPosition","_inputsInitialized","_setSelected","wasSelected","hadFocus","newActiveItem","_removeOptionFromList","_text","_setFocusedOption","selectedOptions","_reportValueChange","MatListOption_Factory","MatListOption_ContentQueries","MatListOption_Query","MatListOption_HostBindings","MatListOption_focus_HostBindingHandler","MatListOption_blur_HostBindingHandler","_handleBlur","MatListOption_click_HostBindingHandler","MatListOption_Template","_contentInitialized","withTypeAhead","skipPredicate","withAllowedModifierKeys","_setOptionsFromValues","added","disableRippleChanges","colorChanges","_markOptionsForCheck","_isDestroyed","_setAllOptionsSelected","optionIndex","_getOptionIndex","previousFocusIndex","isTyping","_toggleFocusedOption","shouldSelect","shiftKey","_getSelectedOptionValues","activeIndex","focusedIndex","focusedOption","skipDisabled","hasChanged","MatSelectionList_Factory","MatSelectionList_ContentQueries","MatSelectionList_HostBindings","MatSelectionList_focus_HostBindingHandler","MatSelectionList_keydown_HostBindingHandler","MatSelectionList_Template","MatListModule","MatListModule_Factory","_MatMenu_ng_template_0_Template","_MatMenu_ng_template_0_Template_div_keydown_0_listener","_MatMenu_ng_template_0_Template_div_click_0_listener","_MatMenu_ng_template_0_Template_div_animation_transformMenu_start_0_listener","_MatMenu_ng_template_0_Template_div_animation_transformMenu_done_0_listener","panelId","_panelAnimationState","ariaDescribedby","matMenuAnimations","transformMenu","fadeInItems","MatMenuContent","_componentFactoryResolver","_appRef","_attached","_outlet","outletElement","isAttached","MatMenuContent_Factory","throwMatMenuMissingError","throwMatMenuInvalidPositionX","throwMatMenuInvalidPositionY","MAT_MENU_PANEL","MatMenuPanel","MatMenuItemBase","_MatMenuItemMixinBase","MatMenuItem","_parentMenu","_hovered","_focused","_highlighted","_triggersSubmenu","textNodeType","TEXT_NODE","MatMenuItem_Factory","MatMenuItem_HostBindings","MatMenuItem_click_HostBindingHandler","_checkDisabled","MatMenuItem_mouseenter_HostBindingHandler","_handleMouseEnter","_getTabIndex","MatMenuItem_Template","MatMenuDefaultOptions","MAT_MENU_DEFAULT_OPTIONS","MAT_MENU_DEFAULT_OPTIONS_FACTORY","overlapTrigger","xPosition","yPosition","MAT_MENU_BASE_ELEVATION","menuPanelUid","_MatMenuBase","_xPosition","_yPosition","_directDescendantItems","_tabSubscription","_overlapTrigger","_hasBackdrop","setPositionClasses","_updateDirectDescendants","focusedItem","itemChanges","_item","parentMenu","setFocusOrigin","lazyContent","_focusFirstItem","depth","elevation","newElevation","customElevation","keys","_previousElevation","posX","posY","classes","_isAnimating","_allItems","previousPanelClass","_previousPanelClass","_MatMenuBase_Factory","_MatMenuBase_ContentQueries","_MatMenuBase_Query","MatMenu","MatMenu_Factory","ɵMatMenu_BaseFactory","_MatMenu","_MatMenu_Factory","_MatMenu_Template","MAT_MENU_SCROLL_STRATEGY","MAT_MENU_SCROLL_STRATEGY_FACTORY","MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER","MENU_PANEL_TOP_PADDING","MatMenuTrigger","_menuItemInstance","_menuOpen","_hoverSubscription","_menuCloseSubscription","_handleTouchStart","_openedBy","menuOpened","onMenuOpen","menuClosed","onMenuClose","triggersSubmenu","_checkMenu","_handleHover","closeMenu","openMenu","getConfig","_setPosition","menu","_getPortal","menuData","_menuClosingActions","_initMenu","_startAnimation","menuOpen","_resetAnimation","_setIsMenuOpen","_setMenuElevation","focusFirstItem","setElevation","isOpen","_subscribeToPositions","positionChanges","connectionPair","originFallbackX","overlayFallbackY","originFallbackY","overlayFallbackX","offsetY","backdrop","parentClose","hover","active","toggleMenu","_menu","reason","_destroyMenu","MatMenuTrigger_Factory","MatMenuTrigger_HostBindings","MatMenuTrigger_mousedown_HostBindingHandler","_handleMousedown","MatMenuTrigger_keydown_HostBindingHandler","MatMenuTrigger_click_HostBindingHandler","_deprecatedMatMenuTriggerFor","_MatMenuDirectivesModule","_MatMenuDirectivesModule_Factory","MatMenuModule","MatMenuModule_Factory","MatPaginator_div_2_mat_form_field_3_mat_option_2_Template","pageSizeOption_r6","MatPaginator_div_2_mat_form_field_3_Template","_r8","MatPaginator_div_2_mat_form_field_3_Template_mat_select_selectionChange_1_listener","_changePageSize","pageSize","itemsPerPageLabel","_displayedPageSizeOptions","MatPaginator_div_2_div_4_Template","MatPaginator_div_2_Template","MatPaginator_button_6_Template","_r10","MatPaginator_button_6_Template_button_click_0_listener","ctx_r9","firstPage","firstPageLabel","_previousButtonsDisabled","MatPaginator_button_13_Template","_r12","MatPaginator_button_13_Template_button_click_0_listener","lastPage","lastPageLabel","_nextButtonsDisabled","MatPaginatorIntl","nextPageLabel","previousPageLabel","getRangeLabel","page","endIndex","MatPaginatorIntl_Factory","MAT_PAGINATOR_INTL_PROVIDER_FACTORY","parentIntl","MAT_PAGINATOR_INTL_PROVIDER","DEFAULT_PAGE_SIZE","PageEvent","MatPaginatorDefaultOptions","MAT_PAGINATOR_DEFAULT_OPTIONS","MatPaginatorBase","_MatPaginatorBase","MatPaginator","_pageIndex","_length","_pageSizeOptions","_hidePageSize","_showFirstLastButtons","pageSizeOptions","hidePageSize","showFirstLastButtons","_pageSize","_initialized","_updateDisplayedPageSizeOptions","_markInitialized","hasNextPage","previousPageIndex","pageIndex","_emitPageEvent","hasPreviousPage","getNumberOfPages","maxPageIndex","ceil","p","MatPaginator_Factory","MatPaginator_Template","MatPaginator_Template_button_click_7_listener","previousPage","MatPaginator_Template_button_click_10_listener","nextPage","MatPaginatorModule","MatPaginatorModule_Factory","ProgressAnimationEnd","MatProgressBarBase","_MatProgressBarMixinBase","MAT_PROGRESS_BAR_LOCATION","MAT_PROGRESS_BAR_LOCATION_FACTORY","MatProgressBarLocation","progressbarId","MatProgressBar","_isNoopAnimation","_bufferValue","animationEnd","_animationEndSubscription","mode","_rectangleFillValue","scale","bufferValue","_primaryValueBar","MatProgressBar_Factory","MatProgressBar_Query","MatProgressBar_HostBindings","MatProgressBar_Template","_bufferTransform","_primaryTransform","MatProgressBarModule","MatProgressBarModule_Factory","MatProgressSpinner__svg_circle_1_Template","diameter","_strokeDashOffset","_strokeCircumference","_circleStrokeWidth","_circleRadius","MatProgressSpinner__svg_circle_2_Template","MatSpinner__svg_circle_1_Template","MatSpinner__svg_circle_2_Template","BASE_SIZE","BASE_STROKE_WIDTH","MatProgressSpinnerBase","_MatProgressSpinnerMixinBase","MatProgressSpinnerDefaultOptions","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY","INDETERMINATE_ANIMATION_TEMPLATE","MatProgressSpinner","_diameter","_fallbackAnimation","trackedDiameters","_diameters","EDGE","TRIDENT","_noopAnimations","_forceAnimations","strokeWidth","_styleRoot","_attachStyleNode","styleRoot","currentDiameter","diameters","diametersForElement","styleTag","_getAnimationText","_strokeWidth","PI","MatProgressSpinner_Factory","MatProgressSpinner_HostBindings","MatProgressSpinner_Template","_viewBox","MatSpinner","MatSpinner_Factory","MatSpinner_HostBindings","MatSpinner_Template","MatProgressSpinnerModule","MatProgressSpinnerModule_Factory","MatRadioDefaultOptions","MAT_RADIO_DEFAULT_OPTIONS","MAT_RADIO_DEFAULT_OPTIONS_FACTORY","MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","MatRadioGroup","MatRadioChange","_labelPosition","onTouched","_radios","radio","isAlreadySelected","_updateRadioButtonNames","_markRadiosForCheck","_updateSelectedRadioFromValue","_checkSelectedRadioButton","MatRadioGroup_Factory","MatRadioGroup_ContentQueries","MatRadioButton","MatRadioButtonBase","_MatRadioButtonMixinBase","_MatRadioButtonBase","radioGroup","_radioDispatcher","_providerOverride","_touch","groupValueChanged","newCheckedState","_setDisabled","_MatRadioButtonBase_Factory","_MatRadioButtonBase_Query","MatRadioButton_Factory","ɵMatRadioButton_BaseFactory","MatRadioButton_HostBindings","MatRadioButton_focus_HostBindingHandler","MatRadioButton_Template","MatRadioButton_Template_input_change_5_listener","_onInputChange","MatRadioButton_Template_input_click_5_listener","MatRadioModule","MatRadioModule_Factory","MatSelect_span_4_Template","MatSelect_span_5_span_1_Template","triggerValue","MatSelect_span_5_2_Template","MatSelect_span_5_Template","customTrigger","MatSelect_ng_template_8_Template","MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener","_panelDoneAnimatingStream","MatSelect_ng_template_8_Template_div_keydown_1_listener","_getPanelTheme","_transformOrigin","_triggerFontSize","matSelectAnimations","transformPanelWrap","getMatSelectDynamicMultipleError","getMatSelectNonArrayValueError","getMatSelectNonFunctionValueError","SELECT_PANEL_MAX_HEIGHT","SELECT_PANEL_PADDING_X","SELECT_PANEL_INDENT_PADDING_X","SELECT_ITEM_HEIGHT_EM","SELECT_MULTIPLE_PANEL_PADDING_X","SELECT_PANEL_VIEWPORT_PADDING","MAT_SELECT_SCROLL_STRATEGY","MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","MatSelectConfig","MAT_SELECT_CONFIG","MAT_SELECT_SCROLL_STRATEGY_PROVIDER","MatSelectChange","MatSelectBase","_MatSelectMixinBase","MatSelectTrigger","MatSelectTrigger_Factory","MatSelect","_parentFormField","scrollStrategyFactory","_liveAnnouncer","_panelOpen","_scrollTop","_destroy","_optionIds","_offsetY","_positions","_disableOptionCentering","optionSelectionChanges","openedChange","_openedStream","o","_closedStream","_scrollStrategyFactory","disableOptionCentering","typeaheadDebounceInterval","overlayDir","offsetX","_triggerRect","trigger","_initKeyManager","_resetOptions","_typeaheadDebounceInterval","fontSize","_calculateOverlayPosition","_highlightCorrectOption","_handleOpenKeydown","_handleClosedKeydown","isOpenKey","previouslySelectedOption","selectedOption","announce","viewValue","ctrlKey","hasDeselectedOptions","opt","previouslyFocusedIndex","_calculateOverlayOffsetX","_scrollActiveOptionIntoView","changedOrDestroyed","_onSelect","_setOptionIds","sortComparator","activeOptionIndex","_getItemHeight","current","itemHeight","_getItemCount","panelHeight","scrollContainerHeight","maxScroll","selectedOptionOffset","scrollBuffer","_calculateOverlayScroll","_calculateOverlayOffsetY","_checkOverlayWithinViewport","optionOffsetFromScrollTop","halfOptionHeight","optimalScrollPosition","_getAriaLabel","overlayRect","viewportSize","paddingWidth","optionHeightAdjustment","maxOptionsDisplayed","optionOffsetFromPanelTop","firstDisplayedIndex","selectedDisplayIndex","partialItemHeight","topSpaceAvailable","bottomSpaceAvailable","panelHeightTop","totalPanelHeight","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","isEmpty","MatSelect_Factory","MatSelect_ContentQueries","MatSelect_Query","MatSelect_HostBindings","MatSelect_keydown_HostBindingHandler","MatSelect_focus_HostBindingHandler","MatSelect_blur_HostBindingHandler","_getAriaLabelledby","_getAriaActiveDescendant","MatSelect_Template","MatSelect_Template_div_click_0_listener","MatSelect_Template_ng_template_backdropClick_8_listener","MatSelect_Template_ng_template_attach_8_listener","_onAttached","MatSelect_Template_ng_template_detach_8_listener","MatSelectModule","MatSelectModule_Factory","MatDrawerContainer_div_0_Template","_r3","MatDrawerContainer_div_0_Template_div_click_0_listener","_onBackdropClicked","_isShowingBackdrop","MatDrawerContainer_mat_drawer_content_3_Template","MatSidenavContainer_div_0_Template","MatSidenavContainer_div_0_Template_div_click_0_listener","MatSidenavContainer_mat_sidenav_content_3_Template","matDrawerAnimations","transformDrawer","throwMatDuplicatedDrawerError","MAT_DRAWER_DEFAULT_AUTOSIZE","MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY","MAT_DRAWER_CONTAINER","MatDrawerContent","_container","scrollDispatcher","_contentMarginChanges","MatDrawerContent_Factory","MatDrawerContainer","MatDrawerContent_HostBindings","_contentMargins","MatDrawerContent_Template","MatDrawer","_doc","_elementFocusedBeforeDrawerWasOpened","_enableAnimations","_position","_mode","_disableClose","_animationEnd","onPositionChanged","_modeChanged","_takeFocus","hasMovedFocus","activeEl","_openedVia","_updateFocusTrapState","openedVia","_autoFocus","MatDrawer_Factory","MatDrawer_HostBindings","MatDrawer_animation_transform_start_HostBindingHandler","_animationStartListener","MatDrawer_animation_transform_done_HostBindingHandler","_animationDoneListener","openedStart","closedStart","MatDrawer_Template","viewportRuler","defaultAutosize","_drawers","_doCheckSubject","_validateDrawers","updateContentMargins","_autosize","_allDrawers","drawer","_watchDrawerToggle","_watchDrawerPosition","_watchDrawerMode","_isDrawerOpen","_start","_end","_left","_width","_right","_isPushed","_setContainerClass","onMicrotaskEmpty","isAdd","_closeModalDrawer","_canHaveBackdrop","_backdropOverride","_userContent","_content","MatDrawerContainer_Factory","MatDrawerContainer_ContentQueries","MatDrawerContainer_Query","MatDrawerContainer_HostBindings","autosize","MatDrawerContainer_Template","MatSidenavContent","MatSidenavContent_Factory","MatSidenavContainer","MatSidenavContent_HostBindings","MatSidenavContent_Template","MatSidenav","_fixedInViewport","_fixedTopGap","_fixedBottomGap","MatSidenav_Factory","ɵMatSidenav_BaseFactory","MatSidenav_HostBindings","fixedInViewport","fixedTopGap","fixedBottomGap","MatSidenav_Template","MatSidenavContainer_Factory","ɵMatSidenavContainer_BaseFactory","MatSidenavContainer_ContentQueries","MatSidenavContainer_HostBindings","MatSidenavContainer_Template","MatSidenavModule","MatSidenavModule_Factory","MatSlideToggleDefaultOptions","MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS","disableToggleValue","MAT_SLIDE_TOGGLE_VALUE_ACCESSOR","MatSlideToggle","MatSlideToggleChange","MatSlideToggleBase","_MatSlideToggleMixinBase","toggleChange","dragChange","MatSlideToggle_Factory","MatSlideToggle_Query","_thumbEl","_thumbBarEl","MatSlideToggle_HostBindings","MatSlideToggle_Template","MatSlideToggle_Template_input_change_4_listener","_onChangeEvent","MatSlideToggle_Template_input_click_4_listener","MatSlideToggle_Template_span_cdkObserveContent_11_listener","_r4","MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR","MatSlideToggleRequiredValidator","MatSlideToggleRequiredValidator_Factory","ɵMatSlideToggleRequiredValidator_BaseFactory","_MatSlideToggleRequiredValidatorModule","_MatSlideToggleRequiredValidatorModule_Factory","MatSlideToggleModule","MatSlideToggleModule_Factory","activeEventOptions","MIN_AUTO_TICK_SEPARATION","DISABLED_THUMB_GAP","MIN_VALUE_NONACTIVE_THUMB_GAP","MIN_VALUE_ACTIVE_THUMB_GAP","MAT_SLIDER_VALUE_ACCESSOR","MatSlider","MatSliderChange","MatSliderBase","_MatSliderMixinBase","_invert","_step","_thumbLabel","_tickInterval","_percent","_isSliding","_isActive","_tickIntervalPercent","_sliderDimensions","_dirChangeSubscription","_runInsideZone","getPointerPositionOnPage","_lastPointerEvent","_focusHostElement","_onMouseenter","_bindGlobalEvents","_updateValueFromPosition","_valueOnSlideStart","_pointerPositionOnStart","_emitInputEvent","pointerPositionOnStart","currentPointerPosition","_removeGlobalEvents","_windowBlur","_runOutsizeZone","_blurHostElement","_getDirection","_invertAxis","_getSliderDimensions","_updateTickIntervalPercent","_increment","triggerEvent","isTouch","moveEventName","endEventName","numSteps","_clamp","posComponent","percent","_shouldInvertMouseCoords","exactValue","_calculateValue","closestValue","_createChangeEvent","tickInterval","trackSize","pixelsPerStep","stepsPerTick","pixelsPerTick","percentage","_sliderWrapper","_calculatePercentage","_roundToDecimal","pop","toFixed","invert","_isMinValue","thumbLabel","axis","sign","_thumbGap","tickSize","backgroundSize","rotate","invertOffset","MatSlider_Factory","MatSlider_Query","MatSlider_HostBindings","MatSlider_focus_HostBindingHandler","MatSlider_blur_HostBindingHandler","MatSlider_keydown_HostBindingHandler","MatSlider_keyup_HostBindingHandler","_onKeyup","MatSlider_mouseenter_HostBindingHandler","MatSlider_selectstart_HostBindingHandler","MatSlider_Template","_trackBackgroundStyles","_trackFillStyles","_ticksContainerStyles","_ticksStyles","_thumbContainerStyles","clientX","clientY","MatSliderModule","MatSliderModule_Factory","SimpleSnackBar_div_2_Template","SimpleSnackBar_div_2_Template_button_click_1_listener","action","MatSnackBarContainer_ng_template_0_Template","MatSnackBarDismiss","MAX_TIMEOUT","pow","MatSnackBarRef","_onAction","_dismissedByAction","onAction","_onExit","_finishDismiss","_durationTimeoutId","dismissWithAction","dismissedByAction","_onEnter","MAT_SNACK_BAR_DATA","MatSnackBarConfig","politeness","announcementMessage","horizontalPosition","verticalPosition","SimpleSnackBar","snackBarRef","SimpleSnackBar_Factory","SimpleSnackBar_Template","hasAction","matSnackBarAnimations","snackBarState","MatSnackBarContainer","snackBarConfig","_assertNotAttached","_applySnackBarClasses","_role","_completeExit","onEnter","panelClasses","MatSnackBarContainer_Factory","MatSnackBarContainer_Query","MatSnackBarContainer_HostBindings","MatSnackBarContainer_animation_state_done_HostBindingHandler","onAnimationEnd","MatSnackBarContainer_Template","MatSnackBarModule","MatSnackBarModule_Factory","MAT_SNACK_BAR_DEFAULT_OPTIONS","MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY","MatSnackBar","_live","_breakpointObserver","_parentSnackBar","_defaultConfig","_snackBarRefAtThisLevel","component","_attach","openFromComponent","_openedSnackBarRef","userConfig","_attachSnackBarContainer","_animateSnackBar","afterOpened","_dismissAfter","isLeft","isRight","MatSnackBar_Factory","MatSortHeader_div_3_Template","MatSortHeader_div_3_Template_div_animation_arrowPosition_start_0_listener","_disableViewStateAnimation","MatSortHeader_div_3_Template_div_animation_arrowPosition_done_0_listener","_getArrowViewState","_getArrowDirectionState","getSortDuplicateSortableIdError","getSortHeaderNotContainedWithinSortError","getSortHeaderMissingIdError","getSortInvalidDirectionError","MatSortable","Sort","MatSortBase","_MatSortMixinBase","MatSort","sortables","sortChange","sortable","getNextSortDirection","disableClear","sortDirectionCycle","getSortDirectionCycle","nextDirectionIndex","_disableClear","MatSort_Factory","ɵMatSort_BaseFactory","sortOrder","SORT_ANIMATION_TRANSITION","ENTERING","STANDARD_CURVE","matSortAnimations","indicator","leftPointer","rightPointer","arrowOpacity","arrowPosition","allowChildren","MatSortHeaderIntl","sortButtonLabel","MatSortHeaderIntl_Factory","MAT_SORT_HEADER_INTL_PROVIDER_FACTORY","MAT_SORT_HEADER_INTL_PROVIDER","MatSortHeaderBase","_MatSortHeaderMixinBase","ArrowViewStateTransition","MatSortHeaderColumnDef","MatSortHeader","_sort","_columnDef","_showIndicatorHint","_arrowDirection","_isSorted","_updateArrowDirection","_viewState","_setAnimationTransitionState","_setIndicatorHintVisible","register","deregister","visible","_isDisabled","viewState","MatSortHeader_Factory","MatSortHeader_HostBindings","MatSortHeader_click_HostBindingHandler","MatSortHeader_mouseenter_HostBindingHandler","MatSortHeader_mouseleave_HostBindingHandler","_getAriaSortAttribute","MatSortHeader_Template","_renderArrow","MatSortModule","MatSortModule_Factory","MatStepHeader_ng_container_3_Template","iconOverrides","_getIconContext","MatStepHeader_ng_container_4_span_1_Template","_getDefaultTextForState","MatStepHeader_ng_container_4_mat_icon_2_Template","MatStepHeader_ng_container_4_Template","MatStepHeader_ng_container_6_Template","_templateLabel","MatStepHeader_div_7_Template","MatStepHeader_div_8_Template","optionalLabel","MatStepHeader_div_9_Template","MatStep_ng_template_0_Template","MatHorizontalStepper_ng_container_1_div_2_Template","MatHorizontalStepper_ng_container_1_Template","MatHorizontalStepper_ng_container_1_Template_mat_step_header_click_1_listener","step_r2","MatHorizontalStepper_ng_container_1_Template_mat_step_header_keydown_1_listener","i_r3","isLast_r4","_getFocusIndex","_getStepLabelId","_getIndicatorType","_iconOverrides","_getStepContentId","MatHorizontalStepper_div_3_Template","MatHorizontalStepper_div_3_Template_div_animation_stepTransition_done_0_listener","step_r9","i_r10","_getAnimationDirection","MatVerticalStepper_div_0_Template","_r6","MatVerticalStepper_div_0_Template_mat_step_header_click_1_listener","step_r1","MatVerticalStepper_div_0_Template_mat_step_header_keydown_1_listener","MatVerticalStepper_div_0_Template_div_animation_stepTransition_done_3_listener","i_r2","isLast_r3","MatStepLabel","MatStepLabel_Factory","ɵMatStepLabel_BaseFactory","MatStepperIntl","MatStepperIntl_Factory","MAT_STEPPER_INTL_PROVIDER_FACTORY","MAT_STEPPER_INTL_PROVIDER","MatStepHeader","_intlSubscription","MatStepHeader_Factory","MatStepHeader_Template","_stringLabel","matStepperAnimations","horizontalStepTransition","verticalStepTransition","MatStepperIconContext","MatStepperIcon","MatStepperIcon_Factory","MatStep","stepper","_errorStateMatcher","form","originalErrorState","isErrorState","customErrorState","MatStep_Factory","MatStepper","MatStep_ContentQueries","MatStep_Template","animationDone","_icons","MatStepper_Factory","ɵMatStepper_BaseFactory","MatStepper_ContentQueries","MatStepper_Query","MatHorizontalStepper","MatHorizontalStepper_Factory","ɵMatHorizontalStepper_BaseFactory","MatHorizontalStepper_HostBindings","MatHorizontalStepper_Template","MatVerticalStepper","MatVerticalStepper_Factory","MatVerticalStepper_Template","MatStepperNext","MatStepperNext_Factory","ɵMatStepperNext_BaseFactory","MatStepperNext_HostBindings","MatStepperPrevious","MatStepperPrevious_Factory","ɵMatStepperPrevious_BaseFactory","MatStepperPrevious_HostBindings","MatStepperModule","MatStepperModule_Factory","MatTextColumn_th_1_Template","MatTextColumn_td_2_Template","MatTable","MatTable_Factory","ɵMatTable_BaseFactory","MatTable_Template","MatCellDef","MatCellDef_Factory","ɵMatCellDef_BaseFactory","MatHeaderCellDef","MatHeaderCellDef_Factory","ɵMatHeaderCellDef_BaseFactory","MatFooterCellDef","MatFooterCellDef_Factory","ɵMatFooterCellDef_BaseFactory","MatColumnDef","MatColumnDef_Factory","ɵMatColumnDef_BaseFactory","MatHeaderCell","MatHeaderCell_Factory","MatFooterCell","MatFooterCell_Factory","MatCell","MatCell_Factory","MatHeaderRowDef","MatHeaderRowDef_Factory","ɵMatHeaderRowDef_BaseFactory","MatFooterRowDef","MatFooterRowDef_Factory","ɵMatFooterRowDef_BaseFactory","MatRowDef","MatRowDef_Factory","ɵMatRowDef_BaseFactory","MatHeaderRow","MatHeaderRow_Factory","ɵMatHeaderRow_BaseFactory","MatHeaderRow_Template","MatFooterRow","MatFooterRow_Factory","ɵMatFooterRow_BaseFactory","MatFooterRow_Template","MatRow","MatRow_Factory","ɵMatRow_BaseFactory","MatRow_Template","MatTextColumn","MatTextColumn_Factory","ɵMatTextColumn_BaseFactory","MatTextColumn_Template","MatTableModule","MatTableModule_Factory","MAX_SAFE_INTEGER","MatTableDataSource","initialData","_renderData","_filter","_internalPageChanges","_renderChangesSubscription","sortingDataAccessor","sortHeaderId","numberValue","sortData","valueA","valueB","comparatorResult","filterPredicate","dataStr","currentTerm","transformedFilter","_updateChangeSubscription","initialized","pageChange","_paginator","filteredData","_filterData","orderedData","_orderData","paginatedData","_pageData","paginator","_updatePaginator","filteredDataLength","lastPageIndex","newPageIndex","MatTab_ng_template_0_Template","MatTabBody_ng_template_2_Template","animationDuration","MatTabGroup_div_2_ng_template_2_ng_template_0_Template","MatTabGroup_div_2_ng_template_2_Template","tab_r4","templateLabel","MatTabGroup_div_2_ng_template_3_Template","textLabel","MatTabGroup_div_2_Template","MatTabGroup_div_2_Template_div_click_0_listener","i_r5","_getTabLabelId","_tabs","_getTabContentId","MatTabGroup_mat_tab_body_5_Template","_r16","MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentered_0_listener","_removeTabBodyWrapperHeight","MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentering_0_listener","ctx_r17","_setTabBodyWrapperHeight","tab_r13","i_r14","_c7","_c8","_c9","_MatInkBarPositioner","_MAT_INK_BAR_POSITIONER","_MAT_INK_BAR_POSITIONER_FACTORY","method","offsetLeft","MatInkBar","_inkBarPositioner","_setStyles","inkBar","MatInkBar_Factory","MatInkBar_HostBindings","MatTabContent","MatTabContent_Factory","MatTabLabel","MatTabLabel_Factory","ɵMatTabLabel_BaseFactory","MatTabBase","_MatTabMixinBase","MAT_TAB_GROUP","MatTab","_closestTabGroup","_contentPortal","isActive","_explicitContent","_implicitContent","MatTab_Factory","MatTab_ContentQueries","MatTab_Query","MatTab_Template","read","matTabsAnimations","translateTab","MatTabBodyPortal","componentFactoryResolver","_host","_centeringSub","_leavingSub","_beforeCentering","_isCenterPosition","isCentering","_afterLeavingCenter","MatTabBodyPortal_Factory","MatTabBody","_MatTabBodyBase","_translateTabComplete","_onCentering","_onCentered","_computePositionAnimationState","_computePositionFromOrigin","_getLayoutDirection","_positionIndex","_MatTabBodyBase_Factory","MatTabBody_Factory","MatTabBody_Query","_portalHost","MatTabBody_Template","MatTabBody_Template_div_animation_translateTab_start_0_listener","_onTranslateTabStarted","MatTabBody_Template_div_animation_translateTab_done_0_listener","MatTabsConfig","MAT_TABS_CONFIG","MatTabChangeEvent","MatTabGroupMixinBase","_MatTabGroupMixinBase","MatTabGroupBaseHeader","_MatTabGroupBase","defaultConfig","_indexToSelect","_tabBodyWrapperHeight","_tabsSubscription","_tabLabelSubscription","_dynamicHeight","headerPosition","selectedIndexChange","focusChange","selectedTabChange","disablePagination","indexToSelect","_clampTabIndex","isFirstRun","tab","_subscribeToAllTabChanges","_subscribeToTabLabels","tabs","_allTabs","_tabHeader","_alignInkBarToSelectedTab","tabHeight","_tabBodyWrapper","offsetHeight","tabHeader","focusIndex","idx","_animationDuration","_backgroundColor","backgroundColor","_MatTabGroupBase_Factory","dynamicHeight","MatTabGroup","MatTabGroup_Factory","MatTabGroup_ContentQueries","MatTabGroup_Query","MatTabGroup_HostBindings","MatTabGroup_Template","MatTabGroup_Template_mat_tab_header_indexFocused_0_listener","MatTabGroup_Template_mat_tab_header_selectFocusedIndex_0_listener","MatTabHeader","MatTabLabelWrapper","MatTabLabelWrapperBase","_MatTabLabelWrapperMixinBase","MatTabLabelWrapper_Factory","MatTabLabelWrapper_HostBindings","EXAGGERATED_OVERSCROLL","HEADER_SCROLL_DELAY","HEADER_SCROLL_INTERVAL","MatPaginatedTabHeader","_scrollDistance","_selectedIndexChanged","_showPaginationControls","_disableScrollAfter","_disableScrollBefore","selectFocusedIndex","indexFocused","_stopInterval","_previousPaginator","_handlePaginatorPress","_nextPaginator","dirChange","resize","realign","updatePagination","newFocusIndex","_setTabFocus","_tabLabelCount","_scrollToLabel","_checkScrollingControls","_scrollDistanceChanged","_updateTabScrollPosition","_itemSelected","_currentTextContent","_checkPaginationEnabled","containerEl","_tabListContainer","scrollDistance","translateX","_tabList","viewLength","scrollAmount","_scrollTo","_scrollHeader","labelIndex","selectedLabel","labelBeforePos","labelAfterPos","beforeVisiblePos","afterVisiblePos","isEnabled","_getMaxScrollDistance","lengthOfTabList","selectedItem","selectedLabelWrapper","_inkBar","alignToElement","hide","mouseEvent","maxScrollDistance","MatPaginatedTabHeader_Factory","_MatTabHeaderBase","_disableRipple","_MatTabHeaderBase_Factory","MatTabHeader_Factory","MatTabHeader_ContentQueries","MatTabHeader_Query","MatTabHeader_HostBindings","MatTabHeader_Template","MatTabHeader_Template_div_click_0_listener","_handlePaginatorClick","MatTabHeader_Template_div_mousedown_0_listener","MatTabHeader_Template_div_touchend_0_listener","MatTabHeader_Template_div_keydown_3_listener","MatTabHeader_Template_div_cdkObserveContent_5_listener","_onContentChanges","MatTabHeader_Template_div_mousedown_10_listener","MatTabHeader_Template_div_click_10_listener","MatTabHeader_Template_div_touchend_10_listener","_MatTabNavBase","updateActiveLink","_MatTabNavBase_Factory","MatTabNav","MatTabNav_Factory","MatTabNav_ContentQueries","MatTabLink","MatTabNav_Query","MatTabNav_HostBindings","MatTabNav_Template","MatTabNav_Template_div_click_0_listener","MatTabNav_Template_div_mousedown_0_listener","MatTabNav_Template_div_touchend_0_listener","MatTabNav_Template_div_keydown_3_listener","MatTabNav_Template_div_cdkObserveContent_5_listener","MatTabNav_Template_div_mousedown_10_listener","MatTabNav_Template_div_click_10_listener","MatTabNav_Template_div_touchend_10_listener","MatTabLinkMixinBase","_MatTabLinkMixinBase","_MatTabLinkBase","_tabNavBar","exitDuration","_MatTabLinkBase_Factory","tabNavBar","_tabLinkRipple","MatTabLink_Factory","MatTabLink_HostBindings","MatTabsModule","MatTabsModule_Factory","MatToolbarBase","_MatToolbarMixinBase","MatToolbarRow","MatToolbarRow_Factory","MatToolbar","_checkToolbarMixedModes","_toolbarRows","isCombinedUsage","COMMENT_NODE","throwToolbarMixedModesError","MatToolbar_Factory","MatToolbar_ContentQueries","MatToolbar_HostBindings","MatToolbar_Template","MatToolbarModule","MatToolbarModule_Factory","matTooltipAnimations","tooltipState","SCROLL_THROTTLE_MS","TOOLTIP_PANEL_CLASS","passiveListenerOptions","LONGPRESS_DELAY","getMatTooltipInvalidPositionError","MAT_TOOLTIP_SCROLL_STRATEGY","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY","scrollThrottle","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","MatTooltipDefaultOptions","MAT_TOOLTIP_DEFAULT_OPTIONS","MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY","showDelay","hideDelay","touchendHideDelay","MatTooltip","_hammerLoader","touchGestures","_message","_passiveListeners","_isTooltipVisible","_setupPointerEvents","_touchstartTimeout","_tooltipInstance","delay","_showTimeoutId","_hideTimeoutId","_detach","TooltipComponent","afterHidden","_setTooltipClass","_tooltipClass","_updateTooltipMessage","isVisible","scrollableAncestors","withScrollableContainers","scrollableViewProperties","isOverlayClipped","_updatePosition","_getOrigin","main","fallback","isLtr","originPosition","_invertPosition","overlayPosition","tooltipClass","ANDROID","_disableNativeGesturesIfNecessary","touchendListener","gestures","MatTooltip_Factory","_visibility","_closeOnInteraction","_onHide","_isHandset","TooltipComponent_Factory","TooltipComponent_HostBindings","TooltipComponent_click_HostBindingHandler","_handleBodyInteraction","TooltipComponent_Template","TooltipComponent_Template_div_animation_state_start_0_listener","_animationStart","TooltipComponent_Template_div_animation_state_done_0_listener","tmp_0_0","currVal_0","pipes","MatTooltipModule","MatTooltipModule_Factory","_MatTreeNodeMixinBase","MatTreeNode","MatTreeNode_Factory","MatTreeNode_HostBindings","MatTreeNodeDef","MatTreeNodeDef_Factory","ɵMatTreeNodeDef_BaseFactory","MatNestedTreeNode","MatNestedTreeNode_Factory","MatNestedTreeNode_HostBindings","MatTreeNodePadding","MatTreeNodePadding_Factory","ɵMatTreeNodePadding_BaseFactory","MatTreeNodeOutlet","MatTreeNodeOutlet_Factory","MatTree","MatTree_Factory","ɵMatTree_BaseFactory","MatTree_Query","MatTree_Template","MatTreeNodeToggle","MatTreeNodeToggle_Factory","ɵMatTreeNodeToggle_BaseFactory","MAT_TREE_DIRECTIVES","MatTreeModule","MatTreeModule_Factory","MatTreeFlattener","transformFunction","resultNodes","parentMap","flatNode","_flattenChildren","childParentMap","_flattenNode","structuredData","nodes","currentExpand","expand","MatTreeFlatDataSource","_treeControl","_treeFlattener","_flattenedData","_expandedData","collectionViewer","expandFlattenedNodes","flattenNodes","MatTreeNestedDataSource","AngmaterialModule","AboutusComponent","images","setInterval","random","templateUrl","styleUrls","ComplaintsComponent","cs","dialog","getMessages","messages","dialogRef","DialogComponent","username","sessionStorage","getItem","email","log","sendMessage","alert","send","ContactusComponent","InboxComponent","getMessagesByUsername","sent","getMessagesByReciever","received","MenuOutlineComponent","router","route","cartshow","cartCount","usertype","cart","localStorage","reload","navigate","relativeTo","logout","ScrollBackDirective","temp","scrollTo","appScroll","behavior","ScrollDirective","ContactService","http","httpOptions","post","user","OrderService","setItem","publish","orderId","getTime","substr","orderid","makeOrderRest","SharedModule","PlistComponent","products","ProductComponent","product"],"mappings":"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","file":"default~admin-admin-module~user-user-module-es5.js","sourcesContent":["import { Directive, Input, EventEmitter, Optional, SkipSelf, ChangeDetectorRef, Output, NgModule } from '@angular/core';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, Subscription } from 'rxjs';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/accordion/accordion.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate unique ID for each accordion.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nlet nextId = 0;\n/**\n * Directive whose purpose is to manage the expanded state of CdkAccordionItem children.\n */\nclass CdkAccordion {\n    constructor() {\n        /**\n         * Emits when the state of the accordion changes\n         */\n        this._stateChanges = new Subject();\n        /**\n         * Stream that emits true/false when openAll/closeAll is triggered.\n         */\n        this._openCloseAllActions = new Subject();\n        /**\n         * A readonly id value to use for unique selection coordination.\n         */\n        this.id = `cdk-accordion-${nextId++}`;\n        this._multi = false;\n    }\n    /**\n     * Whether the accordion should allow multiple expanded accordion items simultaneously.\n     * @return {?}\n     */\n    get multi() { return this._multi; }\n    /**\n     * @param {?} multi\n     * @return {?}\n     */\n    set multi(multi) { this._multi = coerceBooleanProperty(multi); }\n    /**\n     * Opens all enabled accordion items in an accordion where multi is enabled.\n     * @return {?}\n     */\n    openAll() {\n        this._openCloseAll(true);\n    }\n    /**\n     * Closes all enabled accordion items in an accordion where multi is enabled.\n     * @return {?}\n     */\n    closeAll() {\n        this._openCloseAll(false);\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        this._stateChanges.next(changes);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /**\n     * @private\n     * @param {?} expanded\n     * @return {?}\n     */\n    _openCloseAll(expanded) {\n        if (this.multi) {\n            this._openCloseAllActions.next(expanded);\n        }\n    }\n}\nCdkAccordion.ɵfac = function CdkAccordion_Factory(t) { return new (t || CdkAccordion)(); };\nCdkAccordion.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAccordion, selectors: [[\"cdk-accordion\"], [\"\", \"cdkAccordion\", \"\"]], inputs: { multi: \"multi\" }, exportAs: [\"cdkAccordion\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkAccordion.propDecorators = {\n    multi: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAccordion, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-accordion, [cdkAccordion]',\n                exportAs: 'cdkAccordion'\n            }]\n    }], function () { return []; }, { multi: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkAccordion.ngAcceptInputType_multi;\n    /**\n     * Emits when the state of the accordion changes\n     * @type {?}\n     */\n    CdkAccordion.prototype._stateChanges;\n    /**\n     * Stream that emits true/false when openAll/closeAll is triggered.\n     * @type {?}\n     */\n    CdkAccordion.prototype._openCloseAllActions;\n    /**\n     * A readonly id value to use for unique selection coordination.\n     * @type {?}\n     */\n    CdkAccordion.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAccordion.prototype._multi;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/accordion/accordion-item.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate unique ID for each accordion item.\n * @type {?}\n */\nlet nextId$1 = 0;\nconst ɵ0 = undefined;\n/**\n * An basic directive expected to be extended and decorated as a component.  Sets up all\n * events and attributes needed to be managed by a CdkAccordion parent.\n */\nclass CdkAccordionItem {\n    /**\n     * @param {?} accordion\n     * @param {?} _changeDetectorRef\n     * @param {?} _expansionDispatcher\n     */\n    constructor(accordion, _changeDetectorRef, _expansionDispatcher) {\n        this.accordion = accordion;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._expansionDispatcher = _expansionDispatcher;\n        /**\n         * Subscription to openAll/closeAll events.\n         */\n        this._openCloseAllSubscription = Subscription.EMPTY;\n        /**\n         * Event emitted every time the AccordionItem is closed.\n         */\n        this.closed = new EventEmitter();\n        /**\n         * Event emitted every time the AccordionItem is opened.\n         */\n        this.opened = new EventEmitter();\n        /**\n         * Event emitted when the AccordionItem is destroyed.\n         */\n        this.destroyed = new EventEmitter();\n        /**\n         * Emits whenever the expanded state of the accordion changes.\n         * Primarily used to facilitate two-way binding.\n         * \\@docs-private\n         */\n        this.expandedChange = new EventEmitter();\n        /**\n         * The unique AccordionItem id.\n         */\n        this.id = `cdk-accordion-child-${nextId$1++}`;\n        this._expanded = false;\n        this._disabled = false;\n        /**\n         * Unregister function for _expansionDispatcher.\n         */\n        this._removeUniqueSelectionListener = (/**\n         * @return {?}\n         */\n        () => { });\n        this._removeUniqueSelectionListener =\n            _expansionDispatcher.listen((/**\n             * @param {?} id\n             * @param {?} accordionId\n             * @return {?}\n             */\n            (id, accordionId) => {\n                if (this.accordion && !this.accordion.multi &&\n                    this.accordion.id === accordionId && this.id !== id) {\n                    this.expanded = false;\n                }\n            }));\n        // When an accordion item is hosted in an accordion, subscribe to open/close events.\n        if (this.accordion) {\n            this._openCloseAllSubscription = this._subscribeToOpenCloseAllActions();\n        }\n    }\n    /**\n     * Whether the AccordionItem is expanded.\n     * @return {?}\n     */\n    get expanded() { return this._expanded; }\n    /**\n     * @param {?} expanded\n     * @return {?}\n     */\n    set expanded(expanded) {\n        expanded = coerceBooleanProperty(expanded);\n        // Only emit events and update the internal value if the value changes.\n        if (this._expanded !== expanded) {\n            this._expanded = expanded;\n            this.expandedChange.emit(expanded);\n            if (expanded) {\n                this.opened.emit();\n                /**\n                 * In the unique selection dispatcher, the id parameter is the id of the CdkAccordionItem,\n                 * the name value is the id of the accordion.\n                 * @type {?}\n                 */\n                const accordionId = this.accordion ? this.accordion.id : this.id;\n                this._expansionDispatcher.notify(this.id, accordionId);\n            }\n            else {\n                this.closed.emit();\n            }\n            // Ensures that the animation will run when the value is set outside of an `@Input`.\n            // This includes cases like the open, close and toggle methods.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the AccordionItem is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} disabled\n     * @return {?}\n     */\n    set disabled(disabled) { this._disabled = coerceBooleanProperty(disabled); }\n    /**\n     * Emits an event for the accordion item being destroyed.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.opened.complete();\n        this.closed.complete();\n        this.destroyed.emit();\n        this.destroyed.complete();\n        this._removeUniqueSelectionListener();\n        this._openCloseAllSubscription.unsubscribe();\n    }\n    /**\n     * Toggles the expanded state of the accordion item.\n     * @return {?}\n     */\n    toggle() {\n        if (!this.disabled) {\n            this.expanded = !this.expanded;\n        }\n    }\n    /**\n     * Sets the expanded state of the accordion item to false.\n     * @return {?}\n     */\n    close() {\n        if (!this.disabled) {\n            this.expanded = false;\n        }\n    }\n    /**\n     * Sets the expanded state of the accordion item to true.\n     * @return {?}\n     */\n    open() {\n        if (!this.disabled) {\n            this.expanded = true;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _subscribeToOpenCloseAllActions() {\n        return this.accordion._openCloseAllActions.subscribe((/**\n         * @param {?} expanded\n         * @return {?}\n         */\n        expanded => {\n            // Only change expanded state if item is enabled\n            if (!this.disabled) {\n                this.expanded = expanded;\n            }\n        }));\n    }\n}\nCdkAccordionItem.ɵfac = function CdkAccordionItem_Factory(t) { return new (t || CdkAccordionItem)(ɵngcc0.ɵɵdirectiveInject(CdkAccordion, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher)); };\nCdkAccordionItem.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAccordionItem, selectors: [[\"cdk-accordion-item\"], [\"\", \"cdkAccordionItem\", \"\"]], inputs: { expanded: \"expanded\", disabled: \"disabled\" }, outputs: { closed: \"closed\", opened: \"opened\", destroyed: \"destroyed\", expandedChange: \"expandedChange\" }, exportAs: [\"cdkAccordionItem\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Provide CdkAccordion as undefined to prevent nested accordion items from registering\n            // to the same accordion.\n            { provide: CdkAccordion, useValue: ɵ0 },\n        ])] });\n/** @nocollapse */\nCdkAccordionItem.ctorParameters = () => [\n    { type: CdkAccordion, decorators: [{ type: Optional }, { type: SkipSelf }] },\n    { type: ChangeDetectorRef },\n    { type: UniqueSelectionDispatcher }\n];\nCdkAccordionItem.propDecorators = {\n    closed: [{ type: Output }],\n    opened: [{ type: Output }],\n    destroyed: [{ type: Output }],\n    expandedChange: [{ type: Output }],\n    expanded: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAccordionItem, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-accordion-item, [cdkAccordionItem]',\n                exportAs: 'cdkAccordionItem',\n                providers: [\n                    // Provide CdkAccordion as undefined to prevent nested accordion items from registering\n                    // to the same accordion.\n                    { provide: CdkAccordion, useValue: ɵ0 },\n                ]\n            }]\n    }], function () { return [{ type: CdkAccordion, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.UniqueSelectionDispatcher }]; }, { closed: [{\n            type: Output\n        }], opened: [{\n            type: Output\n        }], destroyed: [{\n            type: Output\n        }], expandedChange: [{\n            type: Output\n        }], expanded: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkAccordionItem.ngAcceptInputType_expanded;\n    /** @type {?} */\n    CdkAccordionItem.ngAcceptInputType_disabled;\n    /**\n     * Subscription to openAll/closeAll events.\n     * @type {?}\n     * @private\n     */\n    CdkAccordionItem.prototype._openCloseAllSubscription;\n    /**\n     * Event emitted every time the AccordionItem is closed.\n     * @type {?}\n     */\n    CdkAccordionItem.prototype.closed;\n    /**\n     * Event emitted every time the AccordionItem is opened.\n     * @type {?}\n     */\n    CdkAccordionItem.prototype.opened;\n    /**\n     * Event emitted when the AccordionItem is destroyed.\n     * @type {?}\n     */\n    CdkAccordionItem.prototype.destroyed;\n    /**\n     * Emits whenever the expanded state of the accordion changes.\n     * Primarily used to facilitate two-way binding.\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkAccordionItem.prototype.expandedChange;\n    /**\n     * The unique AccordionItem id.\n     * @type {?}\n     */\n    CdkAccordionItem.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAccordionItem.prototype._expanded;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAccordionItem.prototype._disabled;\n    /**\n     * Unregister function for _expansionDispatcher.\n     * @type {?}\n     * @private\n     */\n    CdkAccordionItem.prototype._removeUniqueSelectionListener;\n    /** @type {?} */\n    CdkAccordionItem.prototype.accordion;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAccordionItem.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkAccordionItem.prototype._expansionDispatcher;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/accordion/accordion-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CdkAccordionModule {\n}\nCdkAccordionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkAccordionModule });\nCdkAccordionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CdkAccordionModule_Factory(t) { return new (t || CdkAccordionModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkAccordionModule, { declarations: [CdkAccordion,\n        CdkAccordionItem], exports: [CdkAccordion,\n        CdkAccordionItem] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAccordionModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkAccordion, CdkAccordionItem],\n                declarations: [CdkAccordion, CdkAccordionItem]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/accordion/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkAccordion, CdkAccordionItem, CdkAccordionModule };\n\n//# sourceMappingURL=accordion.js.map","import { DOCUMENT } from '@angular/common';\nimport { Injectable, Inject, ɵɵdefineInjectable, ɵɵinject, InjectionToken, EventEmitter, Directive, NgZone, Optional, Input, Output, NgModule } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/clipboard/pending-copy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A pending copy-to-clipboard operation.\n *\n * The implementation of copying text to the clipboard modifies the DOM and\n * forces a relayout. This relayout can take too long if the string is large,\n * causing the execCommand('copy') to happen too long after the user clicked.\n * This results in the browser refusing to copy. This object lets the\n * relayout happen in a separate tick from copying by providing a copy function\n * that can be called later.\n *\n * Destroy must be called when no longer in use, regardless of whether `copy` is\n * called.\n */\nimport * as ɵngcc0 from '@angular/core';\nclass PendingCopy {\n    /**\n     * @param {?} text\n     * @param {?} _document\n     */\n    constructor(text, _document) {\n        this._document = _document;\n        /** @type {?} */\n        const textarea = this._textarea = this._document.createElement('textarea');\n        /** @type {?} */\n        const styles = textarea.style;\n        // Hide the element for display and accessibility. Set an\n        // absolute position so the page layout isn't affected.\n        styles.opacity = '0';\n        styles.position = 'absolute';\n        styles.left = styles.top = '-999em';\n        textarea.setAttribute('aria-hidden', 'true');\n        textarea.value = text;\n        this._document.body.appendChild(textarea);\n    }\n    /**\n     * Finishes copying the text.\n     * @return {?}\n     */\n    copy() {\n        /** @type {?} */\n        const textarea = this._textarea;\n        /** @type {?} */\n        let successful = false;\n        try { // Older browsers could throw if copy is not supported.\n            if (textarea) {\n                /** @type {?} */\n                const currentFocus = (/** @type {?} */ (this._document.activeElement));\n                textarea.select();\n                textarea.setSelectionRange(0, textarea.value.length);\n                successful = this._document.execCommand('copy');\n                if (currentFocus) {\n                    currentFocus.focus();\n                }\n            }\n        }\n        catch (_a) {\n            // Discard error.\n            // Initial setting of {@code successful} will represent failure here.\n        }\n        return successful;\n    }\n    /**\n     * Cleans up DOM changes used to perform the copy operation.\n     * @return {?}\n     */\n    destroy() {\n        /** @type {?} */\n        const textarea = this._textarea;\n        if (textarea) {\n            if (textarea.parentNode) {\n                textarea.parentNode.removeChild(textarea);\n            }\n            this._textarea = undefined;\n        }\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    PendingCopy.prototype._textarea;\n    /**\n     * @type {?}\n     * @private\n     */\n    PendingCopy.prototype._document;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/clipboard/clipboard.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A service for copying text to the clipboard.\n */\nclass Clipboard {\n    /**\n     * @param {?} document\n     */\n    constructor(document) {\n        this._document = document;\n    }\n    /**\n     * Copies the provided text into the user's clipboard.\n     *\n     * @param {?} text The string to copy.\n     * @return {?} Whether the operation was successful.\n     */\n    copy(text) {\n        /** @type {?} */\n        const pendingCopy = this.beginCopy(text);\n        /** @type {?} */\n        const successful = pendingCopy.copy();\n        pendingCopy.destroy();\n        return successful;\n    }\n    /**\n     * Prepares a string to be copied later. This is useful for large strings\n     * which take too long to successfully render and be copied in the same tick.\n     *\n     * The caller must call `destroy` on the returned `PendingCopy`.\n     *\n     * @param {?} text The string to copy.\n     * @return {?} the pending copy operation.\n     */\n    beginCopy(text) {\n        return new PendingCopy(text, this._document);\n    }\n}\nClipboard.ɵfac = function Clipboard_Factory(t) { return new (t || Clipboard)(ɵngcc0.ɵɵinject(DOCUMENT)); };\n/** @nocollapse */\nClipboard.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ Clipboard.ɵprov = ɵɵdefineInjectable({ factory: function Clipboard_Factory() { return new Clipboard(ɵɵinject(DOCUMENT)); }, token: Clipboard, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Clipboard, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    Clipboard.prototype._document;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/clipboard/copy-to-clipboard.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Object that can be used to configure the default options for `CdkCopyToClipboard`.\n * @record\n */\nfunction CdkCopyToClipboardConfig() { }\nif (false) {\n    /**\n     * Default number of attempts to make when copying text to the clipboard.\n     * @type {?|undefined}\n     */\n    CdkCopyToClipboardConfig.prototype.attempts;\n}\n/**\n * Injection token that can be used to provide the default options to `CdkCopyToClipboard`.\n * @type {?}\n */\nconst CKD_COPY_TO_CLIPBOARD_CONFIG = new InjectionToken('CKD_COPY_TO_CLIPBOARD_CONFIG');\n/**\n * Provides behavior for a button that when clicked copies content into user's\n * clipboard.\n */\nclass CdkCopyToClipboard {\n    /**\n     * @param {?} _clipboard\n     * @param {?=} _ngZone\n     * @param {?=} config\n     */\n    constructor(_clipboard, _ngZone, config) {\n        this._clipboard = _clipboard;\n        this._ngZone = _ngZone;\n        /**\n         * Content to be copied.\n         */\n        this.text = '';\n        /**\n         * How many times to attempt to copy the text. This may be necessary for longer text, because\n         * the browser needs time to fill an intermediate textarea element and copy the content.\n         */\n        this.attempts = 1;\n        /**\n         * Emits when some text is copied to the clipboard. The\n         * emitted value indicates whether copying was successful.\n         */\n        this.copied = new EventEmitter();\n        /**\n         * Emits when some text is copied to the clipboard. The\n         * emitted value indicates whether copying was successful.\n         * @deprecated Use `cdkCopyToClipboardCopied` instead.\n         * \\@breaking-change 10.0.0\n         */\n        this._deprecatedCopied = this.copied;\n        /**\n         * Copies that are currently being attempted.\n         */\n        this._pending = new Set();\n        if (config && config.attempts != null) {\n            this.attempts = config.attempts;\n        }\n    }\n    /**\n     * Copies the current text to the clipboard.\n     * @param {?=} attempts\n     * @return {?}\n     */\n    copy(attempts = this.attempts) {\n        if (attempts > 1) {\n            /** @type {?} */\n            let remainingAttempts = attempts;\n            /** @type {?} */\n            const pending = this._clipboard.beginCopy(this.text);\n            this._pending.add(pending);\n            /** @type {?} */\n            const attempt = (/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const successful = pending.copy();\n                if (!successful && --remainingAttempts && !this._destroyed) {\n                    // @breaking-change 10.0.0 Remove null check for `_ngZone`.\n                    if (this._ngZone) {\n                        this._currentTimeout = this._ngZone.runOutsideAngular((/**\n                         * @return {?}\n                         */\n                        () => setTimeout(attempt, 1)));\n                    }\n                    else {\n                        // We use 1 for the timeout since it's more predictable when flushing in unit tests.\n                        this._currentTimeout = setTimeout(attempt, 1);\n                    }\n                }\n                else {\n                    this._currentTimeout = null;\n                    this._pending.delete(pending);\n                    pending.destroy();\n                    this.copied.emit(successful);\n                }\n            });\n            attempt();\n        }\n        else {\n            this.copied.emit(this._clipboard.copy(this.text));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._currentTimeout) {\n            clearTimeout(this._currentTimeout);\n        }\n        this._pending.forEach((/**\n         * @param {?} copy\n         * @return {?}\n         */\n        copy => copy.destroy()));\n        this._pending.clear();\n        this._destroyed = true;\n    }\n}\nCdkCopyToClipboard.ɵfac = function CdkCopyToClipboard_Factory(t) { return new (t || CdkCopyToClipboard)(ɵngcc0.ɵɵdirectiveInject(Clipboard), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(CKD_COPY_TO_CLIPBOARD_CONFIG, 8)); };\nCdkCopyToClipboard.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkCopyToClipboard, selectors: [[\"\", \"cdkCopyToClipboard\", \"\"]], hostBindings: function CdkCopyToClipboard_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function CdkCopyToClipboard_click_HostBindingHandler() { return ctx.copy(); });\n    } }, inputs: { text: [\"cdkCopyToClipboard\", \"text\"], attempts: [\"cdkCopyToClipboardAttempts\", \"attempts\"] }, outputs: { copied: \"cdkCopyToClipboardCopied\", _deprecatedCopied: \"copied\" } });\n/** @nocollapse */\nCdkCopyToClipboard.ctorParameters = () => [\n    { type: Clipboard },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [CKD_COPY_TO_CLIPBOARD_CONFIG,] }] }\n];\nCdkCopyToClipboard.propDecorators = {\n    text: [{ type: Input, args: ['cdkCopyToClipboard',] }],\n    attempts: [{ type: Input, args: ['cdkCopyToClipboardAttempts',] }],\n    copied: [{ type: Output, args: ['cdkCopyToClipboardCopied',] }],\n    _deprecatedCopied: [{ type: Output, args: ['copied',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkCopyToClipboard, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkCopyToClipboard]',\n                host: {\n                    '(click)': 'copy()'\n                }\n            }]\n    }], function () { return [{ type: Clipboard }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [CKD_COPY_TO_CLIPBOARD_CONFIG]\n            }] }]; }, { text: [{\n            type: Input,\n            args: ['cdkCopyToClipboard']\n        }], attempts: [{\n            type: Input,\n            args: ['cdkCopyToClipboardAttempts']\n        }], copied: [{\n            type: Output,\n            args: ['cdkCopyToClipboardCopied']\n        }], _deprecatedCopied: [{\n            type: Output,\n            args: ['copied']\n        }] }); })();\nif (false) {\n    /**\n     * Content to be copied.\n     * @type {?}\n     */\n    CdkCopyToClipboard.prototype.text;\n    /**\n     * How many times to attempt to copy the text. This may be necessary for longer text, because\n     * the browser needs time to fill an intermediate textarea element and copy the content.\n     * @type {?}\n     */\n    CdkCopyToClipboard.prototype.attempts;\n    /**\n     * Emits when some text is copied to the clipboard. The\n     * emitted value indicates whether copying was successful.\n     * @type {?}\n     */\n    CdkCopyToClipboard.prototype.copied;\n    /**\n     * Emits when some text is copied to the clipboard. The\n     * emitted value indicates whether copying was successful.\n     * @deprecated Use `cdkCopyToClipboardCopied` instead.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    CdkCopyToClipboard.prototype._deprecatedCopied;\n    /**\n     * Copies that are currently being attempted.\n     * @type {?}\n     * @private\n     */\n    CdkCopyToClipboard.prototype._pending;\n    /**\n     * Whether the directive has been destroyed.\n     * @type {?}\n     * @private\n     */\n    CdkCopyToClipboard.prototype._destroyed;\n    /**\n     * Timeout for the current copy attempt.\n     * @type {?}\n     * @private\n     */\n    CdkCopyToClipboard.prototype._currentTimeout;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkCopyToClipboard.prototype._clipboard;\n    /**\n     * @deprecated _ngZone parameter to become required.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     * @private\n     */\n    CdkCopyToClipboard.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/clipboard/clipboard-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ClipboardModule {\n}\nClipboardModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ClipboardModule });\nClipboardModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ClipboardModule_Factory(t) { return new (t || ClipboardModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ClipboardModule, { declarations: [CdkCopyToClipboard], exports: [CdkCopyToClipboard] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ClipboardModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [CdkCopyToClipboard],\n                exports: [CdkCopyToClipboard]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/clipboard/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CKD_COPY_TO_CLIPBOARD_CONFIG, CdkCopyToClipboard, Clipboard, ClipboardModule, PendingCopy };\n\n//# sourceMappingURL=clipboard.js.map","import { Injectable, NgZone, Inject, ɵɵdefineInjectable, ɵɵinject, InjectionToken, Directive, ElementRef, Optional, Input, TemplateRef, EventEmitter, isDevMode, SkipSelf, ViewContainerRef, ChangeDetectorRef, ContentChildren, ContentChild, Output, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { ViewportRuler, ScrollDispatcher, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { normalizePassiveListenerOptions, _getShadowRoot } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceElement, coerceNumberProperty, coerceArray } from '@angular/cdk/coercion';\nimport { Subject, Subscription, interval, animationFrameScheduler, Observable, merge } from 'rxjs';\nimport { takeUntil, map, take, startWith, tap, switchMap } from 'rxjs/operators';\nimport { Directionality } from '@angular/cdk/bidi';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/drag-styling.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extended CSSStyleDeclaration that includes a couple of drag-related\n * properties that aren't in the built-in TS typings.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nfunction DragCSSStyleDeclaration() { }\nif (false) {\n    /** @type {?} */\n    DragCSSStyleDeclaration.prototype.webkitUserDrag;\n    /** @type {?} */\n    DragCSSStyleDeclaration.prototype.MozUserSelect;\n}\n/**\n * Shallow-extends a stylesheet object with another stylesheet object.\n * \\@docs-private\n * @param {?} dest\n * @param {?} source\n * @return {?}\n */\nfunction extendStyles(dest, source) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            dest[key] = (/** @type {?} */ (source[key]));\n        }\n    }\n    return dest;\n}\n/**\n * Toggles whether the native drag interactions should be enabled for an element.\n * \\@docs-private\n * @param {?} element Element on which to toggle the drag interactions.\n * @param {?} enable Whether the drag interactions should be enabled.\n * @return {?}\n */\nfunction toggleNativeDragInteractions(element, enable) {\n    /** @type {?} */\n    const userSelect = enable ? '' : 'none';\n    extendStyles(element.style, {\n        touchAction: enable ? '' : 'none',\n        webkitUserDrag: enable ? '' : 'none',\n        webkitTapHighlightColor: enable ? '' : 'transparent',\n        userSelect: userSelect,\n        msUserSelect: userSelect,\n        webkitUserSelect: userSelect,\n        MozUserSelect: userSelect\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/transition-duration.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Parses a CSS time value to milliseconds.\n * @param {?} value\n * @return {?}\n */\nfunction parseCssTimeUnitsToMs(value) {\n    // Some browsers will return it in seconds, whereas others will return milliseconds.\n    /** @type {?} */\n    const multiplier = value.toLowerCase().indexOf('ms') > -1 ? 1 : 1000;\n    return parseFloat(value) * multiplier;\n}\n/**\n * Gets the transform transition duration, including the delay, of an element in milliseconds.\n * @param {?} element\n * @return {?}\n */\nfunction getTransformTransitionDurationInMs(element) {\n    /** @type {?} */\n    const computedStyle = getComputedStyle(element);\n    /** @type {?} */\n    const transitionedProperties = parseCssPropertyValue(computedStyle, 'transition-property');\n    /** @type {?} */\n    const property = transitionedProperties.find((/**\n     * @param {?} prop\n     * @return {?}\n     */\n    prop => prop === 'transform' || prop === 'all'));\n    // If there's no transition for `all` or `transform`, we shouldn't do anything.\n    if (!property) {\n        return 0;\n    }\n    // Get the index of the property that we're interested in and match\n    // it up to the same index in `transition-delay` and `transition-duration`.\n    /** @type {?} */\n    const propertyIndex = transitionedProperties.indexOf(property);\n    /** @type {?} */\n    const rawDurations = parseCssPropertyValue(computedStyle, 'transition-duration');\n    /** @type {?} */\n    const rawDelays = parseCssPropertyValue(computedStyle, 'transition-delay');\n    return parseCssTimeUnitsToMs(rawDurations[propertyIndex]) +\n        parseCssTimeUnitsToMs(rawDelays[propertyIndex]);\n}\n/**\n * Parses out multiple values from a computed style into an array.\n * @param {?} computedStyle\n * @param {?} name\n * @return {?}\n */\nfunction parseCssPropertyValue(computedStyle, name) {\n    /** @type {?} */\n    const value = computedStyle.getPropertyValue(name);\n    return value.split(',').map((/**\n     * @param {?} part\n     * @return {?}\n     */\n    part => part.trim()));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/client-rect.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Gets a mutable version of an element's bounding `ClientRect`.\n * @param {?} element\n * @return {?}\n */\nfunction getMutableClientRect(element) {\n    /** @type {?} */\n    const clientRect = element.getBoundingClientRect();\n    // We need to clone the `clientRect` here, because all the values on it are readonly\n    // and we need to be able to update them. Also we can't use a spread here, because\n    // the values on a `ClientRect` aren't own properties. See:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect#Notes\n    return {\n        top: clientRect.top,\n        right: clientRect.right,\n        bottom: clientRect.bottom,\n        left: clientRect.left,\n        width: clientRect.width,\n        height: clientRect.height\n    };\n}\n/**\n * Checks whether some coordinates are within a `ClientRect`.\n * @param {?} clientRect ClientRect that is being checked.\n * @param {?} x Coordinates along the X axis.\n * @param {?} y Coordinates along the Y axis.\n * @return {?}\n */\nfunction isInsideClientRect(clientRect, x, y) {\n    const { top, bottom, left, right } = clientRect;\n    return y >= top && y <= bottom && x >= left && x <= right;\n}\n/**\n * Updates the top/left positions of a `ClientRect`, as well as their bottom/right counterparts.\n * @param {?} clientRect `ClientRect` that should be updated.\n * @param {?} top Amount to add to the `top` position.\n * @param {?} left Amount to add to the `left` position.\n * @return {?}\n */\nfunction adjustClientRect(clientRect, top, left) {\n    clientRect.top += top;\n    clientRect.bottom = clientRect.top + clientRect.height;\n    clientRect.left += left;\n    clientRect.right = clientRect.left + clientRect.width;\n}\n/**\n * Checks whether the pointer coordinates are close to a ClientRect.\n * @param {?} rect ClientRect to check against.\n * @param {?} threshold Threshold around the ClientRect.\n * @param {?} pointerX Coordinates along the X axis.\n * @param {?} pointerY Coordinates along the Y axis.\n * @return {?}\n */\nfunction isPointerNearClientRect(rect, threshold, pointerX, pointerY) {\n    const { top, right, bottom, left, width, height } = rect;\n    /** @type {?} */\n    const xThreshold = width * threshold;\n    /** @type {?} */\n    const yThreshold = height * threshold;\n    return pointerY > top - yThreshold && pointerY < bottom + yThreshold &&\n        pointerX > left - xThreshold && pointerX < right + xThreshold;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/parent-position-tracker.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Object holding the scroll position of something.\n * @record\n */\nfunction ScrollPosition() { }\nif (false) {\n    /** @type {?} */\n    ScrollPosition.prototype.top;\n    /** @type {?} */\n    ScrollPosition.prototype.left;\n}\n/**\n * Keeps track of the scroll position and dimensions of the parents of an element.\n */\nclass ParentPositionTracker {\n    /**\n     * @param {?} _document\n     * @param {?} _viewportRuler\n     */\n    constructor(_document, _viewportRuler) {\n        this._document = _document;\n        this._viewportRuler = _viewportRuler;\n        /**\n         * Cached positions of the scrollable parent elements.\n         */\n        this.positions = new Map();\n    }\n    /**\n     * Clears the cached positions.\n     * @return {?}\n     */\n    clear() {\n        this.positions.clear();\n    }\n    /**\n     * Caches the positions. Should be called at the beginning of a drag sequence.\n     * @param {?} elements\n     * @return {?}\n     */\n    cache(elements) {\n        this.clear();\n        this.positions.set(this._document, {\n            scrollPosition: this._viewportRuler.getViewportScrollPosition(),\n        });\n        elements.forEach((/**\n         * @param {?} element\n         * @return {?}\n         */\n        element => {\n            this.positions.set(element, {\n                scrollPosition: { top: element.scrollTop, left: element.scrollLeft },\n                clientRect: getMutableClientRect(element)\n            });\n        }));\n    }\n    /**\n     * Handles scrolling while a drag is taking place.\n     * @param {?} event\n     * @return {?}\n     */\n    handleScroll(event) {\n        /** @type {?} */\n        const target = (/** @type {?} */ (event.target));\n        /** @type {?} */\n        const cachedPosition = this.positions.get(target);\n        if (!cachedPosition) {\n            return null;\n        }\n        // Used when figuring out whether an element is inside the scroll parent. If the scrolled\n        // parent is the `document`, we use the `documentElement`, because IE doesn't support\n        // `contains` on the `document`.\n        /** @type {?} */\n        const scrolledParentNode = target === this._document ? target.documentElement : target;\n        /** @type {?} */\n        const scrollPosition = cachedPosition.scrollPosition;\n        /** @type {?} */\n        let newTop;\n        /** @type {?} */\n        let newLeft;\n        if (target === this._document) {\n            /** @type {?} */\n            const viewportScrollPosition = (/** @type {?} */ (this._viewportRuler)).getViewportScrollPosition();\n            newTop = viewportScrollPosition.top;\n            newLeft = viewportScrollPosition.left;\n        }\n        else {\n            newTop = ((/** @type {?} */ (target))).scrollTop;\n            newLeft = ((/** @type {?} */ (target))).scrollLeft;\n        }\n        /** @type {?} */\n        const topDifference = scrollPosition.top - newTop;\n        /** @type {?} */\n        const leftDifference = scrollPosition.left - newLeft;\n        // Go through and update the cached positions of the scroll\n        // parents that are inside the element that was scrolled.\n        this.positions.forEach((/**\n         * @param {?} position\n         * @param {?} node\n         * @return {?}\n         */\n        (position, node) => {\n            if (position.clientRect && target !== node && scrolledParentNode.contains(node)) {\n                adjustClientRect(position.clientRect, topDifference, leftDifference);\n            }\n        }));\n        scrollPosition.top = newTop;\n        scrollPosition.left = newLeft;\n        return { top: topDifference, left: leftDifference };\n    }\n}\nif (false) {\n    /**\n     * Cached positions of the scrollable parent elements.\n     * @type {?}\n     */\n    ParentPositionTracker.prototype.positions;\n    /**\n     * @type {?}\n     * @private\n     */\n    ParentPositionTracker.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    ParentPositionTracker.prototype._viewportRuler;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/drag-ref.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Object that can be used to configure the behavior of DragRef.\n * @record\n */\nfunction DragRefConfig() { }\nif (false) {\n    /**\n     * Minimum amount of pixels that the user should\n     * drag, before the CDK initiates a drag sequence.\n     * @type {?}\n     */\n    DragRefConfig.prototype.dragStartThreshold;\n    /**\n     * Amount the pixels the user should drag before the CDK\n     * considers them to have changed the drag direction.\n     * @type {?}\n     */\n    DragRefConfig.prototype.pointerDirectionChangeThreshold;\n    /**\n     * `z-index` for the absolutely-positioned elements that are created by the drag item.\n     * @type {?|undefined}\n     */\n    DragRefConfig.prototype.zIndex;\n}\n/**\n * Options that can be used to bind a passive event listener.\n * @type {?}\n */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * Options that can be used to bind an active event listener.\n * @type {?}\n */\nconst activeEventListenerOptions = normalizePassiveListenerOptions({ passive: false });\n/**\n * Time in milliseconds for which to ignore mouse events, after\n * receiving a touch event. Used to avoid doing double work for\n * touch devices where the browser fires fake mouse events, in\n * addition to touch events.\n * @type {?}\n */\nconst MOUSE_EVENT_IGNORE_TIME = 800;\n/**\n * Internal compile-time-only representation of a `DragRef`.\n * Used to avoid circular import issues between the `DragRef` and the `DropListRef`.\n * \\@docs-private\n * @record\n */\nfunction DragRefInternal() { }\n/**\n * Template that can be used to create a drag helper element (e.g. a preview or a placeholder).\n * @record\n * @template T\n */\nfunction DragHelperTemplate() { }\nif (false) {\n    /** @type {?} */\n    DragHelperTemplate.prototype.template;\n    /** @type {?} */\n    DragHelperTemplate.prototype.viewContainer;\n    /** @type {?} */\n    DragHelperTemplate.prototype.context;\n}\n/**\n * Template that can be used to create a drag preview element.\n * @record\n * @template T\n */\nfunction DragPreviewTemplate() { }\nif (false) {\n    /** @type {?|undefined} */\n    DragPreviewTemplate.prototype.matchSize;\n}\n/**\n * Point on the page or within an element.\n * @record\n */\nfunction Point() { }\nif (false) {\n    /** @type {?} */\n    Point.prototype.x;\n    /** @type {?} */\n    Point.prototype.y;\n}\n/**\n * Reference to a draggable item. Used to manipulate or dispose of the item.\n * @template T\n */\nclass DragRef {\n    /**\n     * @param {?} element\n     * @param {?} _config\n     * @param {?} _document\n     * @param {?} _ngZone\n     * @param {?} _viewportRuler\n     * @param {?} _dragDropRegistry\n     */\n    constructor(element, _config, _document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._config = _config;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n        /**\n         * CSS `transform` applied to the element when it isn't being dragged. We need a\n         * passive transform in order for the dragged element to retain its new position\n         * after the user has stopped dragging and because we need to know the relative\n         * position in case they start dragging again. This corresponds to `element.style.transform`.\n         */\n        this._passiveTransform = { x: 0, y: 0 };\n        /**\n         * CSS `transform` that is applied to the element while it's being dragged.\n         */\n        this._activeTransform = { x: 0, y: 0 };\n        /**\n         * Emits when the item is being moved.\n         */\n        this._moveEvents = new Subject();\n        /**\n         * Subscription to pointer movement events.\n         */\n        this._pointerMoveSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to the event that is dispatched when the user lifts their pointer.\n         */\n        this._pointerUpSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to the viewport being scrolled.\n         */\n        this._scrollSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to the viewport being resized.\n         */\n        this._resizeSubscription = Subscription.EMPTY;\n        /**\n         * Cached reference to the boundary element.\n         */\n        this._boundaryElement = null;\n        /**\n         * Whether the native dragging interactions have been enabled on the root element.\n         */\n        this._nativeInteractionsEnabled = true;\n        /**\n         * Elements that can be used to drag the draggable item.\n         */\n        this._handles = [];\n        /**\n         * Registered handles that are currently disabled.\n         */\n        this._disabledHandles = new Set();\n        /**\n         * Layout direction of the item.\n         */\n        this._direction = 'ltr';\n        /**\n         * Amount of milliseconds to wait after the user has put their\n         * pointer down before starting to drag the element.\n         */\n        this.dragStartDelay = 0;\n        this._disabled = false;\n        /**\n         * Emits as the drag sequence is being prepared.\n         */\n        this.beforeStarted = new Subject();\n        /**\n         * Emits when the user starts dragging the item.\n         */\n        this.started = new Subject();\n        /**\n         * Emits when the user has released a drag item, before any animations have started.\n         */\n        this.released = new Subject();\n        /**\n         * Emits when the user stops dragging an item in the container.\n         */\n        this.ended = new Subject();\n        /**\n         * Emits when the user has moved the item into a new container.\n         */\n        this.entered = new Subject();\n        /**\n         * Emits when the user removes the item its container by dragging it into another container.\n         */\n        this.exited = new Subject();\n        /**\n         * Emits when the user drops the item inside a container.\n         */\n        this.dropped = new Subject();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = this._moveEvents.asObservable();\n        /**\n         * Handler for the `mousedown`/`touchstart` events.\n         */\n        this._pointerDown = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this.beforeStarted.next();\n            // Delegate the event based on whether it started from a handle or the element itself.\n            if (this._handles.length) {\n                /** @type {?} */\n                const targetHandle = this._handles.find((/**\n                 * @param {?} handle\n                 * @return {?}\n                 */\n                handle => {\n                    /** @type {?} */\n                    const target = event.target;\n                    return !!target && (target === handle || handle.contains((/** @type {?} */ (target))));\n                }));\n                if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n                    this._initializeDragSequence(targetHandle, event);\n                }\n            }\n            else if (!this.disabled) {\n                this._initializeDragSequence(this._rootElement, event);\n            }\n        });\n        /**\n         * Handler that is invoked when the user moves their pointer after they've initiated a drag.\n         */\n        this._pointerMove = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // Prevent the default action as early as possible in order to block\n            // native actions like dragging the selected text or images with the mouse.\n            event.preventDefault();\n            /** @type {?} */\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            if (!this._hasStartedDragging) {\n                /** @type {?} */\n                const distanceX = Math.abs(pointerPosition.x - this._pickupPositionOnPage.x);\n                /** @type {?} */\n                const distanceY = Math.abs(pointerPosition.y - this._pickupPositionOnPage.y);\n                /** @type {?} */\n                const isOverThreshold = distanceX + distanceY >= this._config.dragStartThreshold;\n                // Only start dragging after the user has moved more than the minimum distance in either\n                // direction. Note that this is preferrable over doing something like `skip(minimumDistance)`\n                // in the `pointerMove` subscription, because we're not guaranteed to have one move event\n                // per pixel of movement (e.g. if the user moves their pointer quickly).\n                if (isOverThreshold) {\n                    /** @type {?} */\n                    const isDelayElapsed = Date.now() >= this._dragStartTime + this._getDragStartDelay(event);\n                    if (!isDelayElapsed) {\n                        this._endDragSequence(event);\n                        return;\n                    }\n                    // Prevent other drag sequences from starting while something in the container is still\n                    // being dragged. This can happen while we're waiting for the drop animation to finish\n                    // and can cause errors, because some elements might still be moving around.\n                    if (!this._dropContainer || !this._dropContainer.isDragging()) {\n                        this._hasStartedDragging = true;\n                        this._ngZone.run((/**\n                         * @return {?}\n                         */\n                        () => this._startDragSequence(event)));\n                    }\n                }\n                return;\n            }\n            // We only need the preview dimensions if we have a boundary element.\n            if (this._boundaryElement) {\n                // Cache the preview element rect if we haven't cached it already or if\n                // we cached it too early before the element dimensions were computed.\n                if (!this._previewRect || (!this._previewRect.width && !this._previewRect.height)) {\n                    this._previewRect = (this._preview || this._rootElement).getBoundingClientRect();\n                }\n            }\n            /** @type {?} */\n            const constrainedPointerPosition = this._getConstrainedPointerPosition(pointerPosition);\n            this._hasMoved = true;\n            this._updatePointerDirectionDelta(constrainedPointerPosition);\n            if (this._dropContainer) {\n                this._updateActiveDropContainer(constrainedPointerPosition);\n            }\n            else {\n                /** @type {?} */\n                const activeTransform = this._activeTransform;\n                activeTransform.x =\n                    constrainedPointerPosition.x - this._pickupPositionOnPage.x + this._passiveTransform.x;\n                activeTransform.y =\n                    constrainedPointerPosition.y - this._pickupPositionOnPage.y + this._passiveTransform.y;\n                this._applyRootElementTransform(activeTransform.x, activeTransform.y);\n                // Apply transform as attribute if dragging and svg element to work for IE\n                if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {\n                    /** @type {?} */\n                    const appliedTransform = `translate(${activeTransform.x} ${activeTransform.y})`;\n                    this._rootElement.setAttribute('transform', appliedTransform);\n                }\n            }\n            // Since this event gets fired for every pixel while dragging, we only\n            // want to fire it if the consumer opted into it. Also we have to\n            // re-enter the zone because we run all of the events on the outside.\n            if (this._moveEvents.observers.length) {\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._moveEvents.next({\n                        source: this,\n                        pointerPosition: constrainedPointerPosition,\n                        event,\n                        distance: this._getDragDistance(constrainedPointerPosition),\n                        delta: this._pointerDirectionDelta\n                    });\n                }));\n            }\n        });\n        /**\n         * Handler that is invoked when the user lifts their pointer up, after initiating a drag.\n         */\n        this._pointerUp = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this._endDragSequence(event);\n        });\n        this.withRootElement(element);\n        this._parentPositions = new ParentPositionTracker(_document, _viewportRuler);\n        _dragDropRegistry.registerDragItem(this);\n    }\n    /**\n     * Whether starting to drag this element is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled || !!(this._dropContainer && this._dropContainer.disabled);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._toggleNativeDragInteractions();\n        }\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     * @return {?}\n     */\n    getPlaceholderElement() {\n        return this._placeholder;\n    }\n    /**\n     * Returns the root draggable element.\n     * @return {?}\n     */\n    getRootElement() {\n        return this._rootElement;\n    }\n    /**\n     * Gets the currently-visible element that represents the drag item.\n     * While dragging this is the placeholder, otherwise it's the root element.\n     * @return {?}\n     */\n    getVisibleElement() {\n        return this.isDragging() ? this.getPlaceholderElement() : this.getRootElement();\n    }\n    /**\n     * Registers the handles that can be used to drag the element.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} handles\n     * @return {THIS}\n     */\n    withHandles(handles) {\n        (/** @type {?} */ (this))._handles = handles.map((/**\n         * @param {?} handle\n         * @return {?}\n         */\n        handle => coerceElement(handle)));\n        (/** @type {?} */ (this))._handles.forEach((/**\n         * @param {?} handle\n         * @return {?}\n         */\n        handle => toggleNativeDragInteractions(handle, false)));\n        (/** @type {?} */ (this))._toggleNativeDragInteractions();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Registers the template that should be used for the drag preview.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} template Template that from which to stamp out the preview.\n     * @return {THIS}\n     */\n    withPreviewTemplate(template) {\n        (/** @type {?} */ (this))._previewTemplate = template;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Registers the template that should be used for the drag placeholder.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} template Template that from which to stamp out the placeholder.\n     * @return {THIS}\n     */\n    withPlaceholderTemplate(template) {\n        (/** @type {?} */ (this))._placeholderTemplate = template;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets an alternate drag root element. The root element is the element that will be moved as\n     * the user is dragging. Passing an alternate root element is useful when trying to enable\n     * dragging on an element that you might not have access to.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} rootElement\n     * @return {THIS}\n     */\n    withRootElement(rootElement) {\n        /** @type {?} */\n        const element = coerceElement(rootElement);\n        if (element !== (/** @type {?} */ (this))._rootElement) {\n            if ((/** @type {?} */ (this))._rootElement) {\n                (/** @type {?} */ (this))._removeRootElementListeners((/** @type {?} */ (this))._rootElement);\n            }\n            (/** @type {?} */ (this))._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                element.addEventListener('mousedown', (/** @type {?} */ (this))._pointerDown, activeEventListenerOptions);\n                element.addEventListener('touchstart', (/** @type {?} */ (this))._pointerDown, passiveEventListenerOptions);\n            }));\n            (/** @type {?} */ (this))._initialTransform = undefined;\n            (/** @type {?} */ (this))._rootElement = element;\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Element to which the draggable's position will be constrained.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} boundaryElement\n     * @return {THIS}\n     */\n    withBoundaryElement(boundaryElement) {\n        (/** @type {?} */ (this))._boundaryElement = boundaryElement ? coerceElement(boundaryElement) : null;\n        (/** @type {?} */ (this))._resizeSubscription.unsubscribe();\n        if (boundaryElement) {\n            (/** @type {?} */ (this))._resizeSubscription = (/** @type {?} */ (this))._viewportRuler\n                .change(10)\n                .subscribe((/**\n             * @return {?}\n             */\n            () => (/** @type {?} */ (this))._containInsideBoundaryOnResize()));\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Removes the dragging functionality from the DOM element.\n     * @return {?}\n     */\n    dispose() {\n        this._removeRootElementListeners(this._rootElement);\n        // Do this check before removing from the registry since it'll\n        // stop being considered as dragged once it is removed.\n        if (this.isDragging()) {\n            // Since we move out the element to the end of the body while it's being\n            // dragged, we have to make sure that it's removed if it gets destroyed.\n            removeNode(this._rootElement);\n        }\n        removeNode(this._anchor);\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._dragDropRegistry.removeDragItem(this);\n        this._removeSubscriptions();\n        this.beforeStarted.complete();\n        this.started.complete();\n        this.released.complete();\n        this.ended.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this._moveEvents.complete();\n        this._handles = [];\n        this._disabledHandles.clear();\n        this._dropContainer = undefined;\n        this._resizeSubscription.unsubscribe();\n        this._parentPositions.clear();\n        this._boundaryElement = this._rootElement = this._placeholderTemplate =\n            this._previewTemplate = this._anchor = (/** @type {?} */ (null));\n    }\n    /**\n     * Checks whether the element is currently being dragged.\n     * @return {?}\n     */\n    isDragging() {\n        return this._hasStartedDragging && this._dragDropRegistry.isDragging(this);\n    }\n    /**\n     * Resets a standalone drag item to its initial position.\n     * @return {?}\n     */\n    reset() {\n        this._rootElement.style.transform = this._initialTransform || '';\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform = { x: 0, y: 0 };\n    }\n    /**\n     * Sets a handle as disabled. While a handle is disabled, it'll capture and interrupt dragging.\n     * @param {?} handle Handle element that should be disabled.\n     * @return {?}\n     */\n    disableHandle(handle) {\n        if (this._handles.indexOf(handle) > -1) {\n            this._disabledHandles.add(handle);\n        }\n    }\n    /**\n     * Enables a handle, if it has been disabled.\n     * @param {?} handle Handle element to be enabled.\n     * @return {?}\n     */\n    enableHandle(handle) {\n        this._disabledHandles.delete(handle);\n    }\n    /**\n     * Sets the layout direction of the draggable item.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} direction\n     * @return {THIS}\n     */\n    withDirection(direction) {\n        (/** @type {?} */ (this))._direction = direction;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the container that the item is part of.\n     * @param {?} container\n     * @return {?}\n     */\n    _withDropContainer(container) {\n        this._dropContainer = container;\n    }\n    /**\n     * Gets the current position in pixels the draggable outside of a drop container.\n     * @return {?}\n     */\n    getFreeDragPosition() {\n        /** @type {?} */\n        const position = this.isDragging() ? this._activeTransform : this._passiveTransform;\n        return { x: position.x, y: position.y };\n    }\n    /**\n     * Sets the current position in pixels the draggable outside of a drop container.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} value New position to be set.\n     * @return {THIS}\n     */\n    setFreeDragPosition(value) {\n        (/** @type {?} */ (this))._activeTransform = { x: 0, y: 0 };\n        (/** @type {?} */ (this))._passiveTransform.x = value.x;\n        (/** @type {?} */ (this))._passiveTransform.y = value.y;\n        if (!(/** @type {?} */ (this))._dropContainer) {\n            (/** @type {?} */ (this))._applyRootElementTransform(value.x, value.y);\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Updates the item's sort order based on the last-known pointer position.\n     * @return {?}\n     */\n    _sortFromLastPointerPosition() {\n        /** @type {?} */\n        const position = this._pointerPositionAtLastDirectionChange;\n        if (position && this._dropContainer) {\n            this._updateActiveDropContainer(this._getConstrainedPointerPosition(position));\n        }\n    }\n    /**\n     * Unsubscribes from the global subscriptions.\n     * @private\n     * @return {?}\n     */\n    _removeSubscriptions() {\n        this._pointerMoveSubscription.unsubscribe();\n        this._pointerUpSubscription.unsubscribe();\n        this._scrollSubscription.unsubscribe();\n    }\n    /**\n     * Destroys the preview element and its ViewRef.\n     * @private\n     * @return {?}\n     */\n    _destroyPreview() {\n        if (this._preview) {\n            removeNode(this._preview);\n        }\n        if (this._previewRef) {\n            this._previewRef.destroy();\n        }\n        this._preview = this._previewRef = (/** @type {?} */ (null));\n    }\n    /**\n     * Destroys the placeholder element and its ViewRef.\n     * @private\n     * @return {?}\n     */\n    _destroyPlaceholder() {\n        if (this._placeholder) {\n            removeNode(this._placeholder);\n        }\n        if (this._placeholderRef) {\n            this._placeholderRef.destroy();\n        }\n        this._placeholder = this._placeholderRef = (/** @type {?} */ (null));\n    }\n    /**\n     * Clears subscriptions and stops the dragging sequence.\n     * @private\n     * @param {?} event Browser event object that ended the sequence.\n     * @return {?}\n     */\n    _endDragSequence(event) {\n        // Note that here we use `isDragging` from the service, rather than from `this`.\n        // The difference is that the one from the service reflects whether a dragging sequence\n        // has been initiated, whereas the one on `this` includes whether the user has passed\n        // the minimum dragging threshold.\n        if (!this._dragDropRegistry.isDragging(this)) {\n            return;\n        }\n        this._removeSubscriptions();\n        this._dragDropRegistry.stopDragging(this);\n        this._toggleNativeDragInteractions();\n        if (this._handles) {\n            this._rootElement.style.webkitTapHighlightColor = this._rootElementTapHighlight;\n        }\n        if (!this._hasStartedDragging) {\n            return;\n        }\n        this.released.next({ source: this });\n        if (this._dropContainer) {\n            // Stop scrolling immediately, instead of waiting for the animation to finish.\n            this._dropContainer._stopScrolling();\n            this._animatePreviewToPlaceholder().then((/**\n             * @return {?}\n             */\n            () => {\n                this._cleanupDragArtifacts(event);\n                this._cleanupCachedDimensions();\n                this._dragDropRegistry.stopDragging(this);\n            }));\n        }\n        else {\n            // Convert the active transform into a passive one. This means that next time\n            // the user starts dragging the item, its position will be calculated relatively\n            // to the new passive transform.\n            this._passiveTransform.x = this._activeTransform.x;\n            this._passiveTransform.y = this._activeTransform.y;\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                this.ended.next({\n                    source: this,\n                    distance: this._getDragDistance(this._getPointerPositionOnPage(event))\n                });\n            }));\n            this._cleanupCachedDimensions();\n            this._dragDropRegistry.stopDragging(this);\n        }\n    }\n    /**\n     * Starts the dragging sequence.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _startDragSequence(event) {\n        // Emit the event on the item before the one on the container.\n        this.started.next({ source: this });\n        if (isTouchEvent(event)) {\n            this._lastTouchEventTime = Date.now();\n        }\n        this._toggleNativeDragInteractions();\n        /** @type {?} */\n        const dropContainer = this._dropContainer;\n        if (dropContainer) {\n            /** @type {?} */\n            const element = this._rootElement;\n            /** @type {?} */\n            const parent = (/** @type {?} */ (element.parentNode));\n            /** @type {?} */\n            const preview = this._preview = this._createPreviewElement();\n            /** @type {?} */\n            const placeholder = this._placeholder = this._createPlaceholderElement();\n            /** @type {?} */\n            const anchor = this._anchor = this._anchor || this._document.createComment('');\n            // Insert an anchor node so that we can restore the element's position in the DOM.\n            parent.insertBefore(anchor, element);\n            // We move the element out at the end of the body and we make it hidden, because keeping it in\n            // place will throw off the consumer's `:last-child` selectors. We can't remove the element\n            // from the DOM completely, because iOS will stop firing all subsequent events in the chain.\n            element.style.display = 'none';\n            this._document.body.appendChild(parent.replaceChild(placeholder, element));\n            getPreviewInsertionPoint(this._document).appendChild(preview);\n            dropContainer.start();\n            this._initialContainer = dropContainer;\n            this._initialIndex = dropContainer.getItemIndex(this);\n        }\n        else {\n            this._initialContainer = this._initialIndex = (/** @type {?} */ (undefined));\n        }\n        // Important to run after we've called `start` on the parent container\n        // so that it has had time to resolve its scrollable parents.\n        this._parentPositions.cache(dropContainer ? dropContainer.getScrollableParents() : []);\n    }\n    /**\n     * Sets up the different variables and subscriptions\n     * that will be necessary for the dragging sequence.\n     * @private\n     * @param {?} referenceElement Element that started the drag sequence.\n     * @param {?} event Browser event object that started the sequence.\n     * @return {?}\n     */\n    _initializeDragSequence(referenceElement, event) {\n        // Always stop propagation for the event that initializes\n        // the dragging sequence, in order to prevent it from potentially\n        // starting another sequence for a draggable parent somewhere up the DOM tree.\n        event.stopPropagation();\n        /** @type {?} */\n        const isDragging = this.isDragging();\n        /** @type {?} */\n        const isTouchSequence = isTouchEvent(event);\n        /** @type {?} */\n        const isAuxiliaryMouseButton = !isTouchSequence && ((/** @type {?} */ (event))).button !== 0;\n        /** @type {?} */\n        const rootElement = this._rootElement;\n        /** @type {?} */\n        const isSyntheticEvent = !isTouchSequence && this._lastTouchEventTime &&\n            this._lastTouchEventTime + MOUSE_EVENT_IGNORE_TIME > Date.now();\n        // If the event started from an element with the native HTML drag&drop, it'll interfere\n        // with our own dragging (e.g. `img` tags do it by default). Prevent the default action\n        // to stop it from happening. Note that preventing on `dragstart` also seems to work, but\n        // it's flaky and it fails if the user drags it away quickly. Also note that we only want\n        // to do this for `mousedown` since doing the same for `touchstart` will stop any `click`\n        // events from firing on touch devices.\n        if (event.target && ((/** @type {?} */ (event.target))).draggable && event.type === 'mousedown') {\n            event.preventDefault();\n        }\n        // Abort if the user is already dragging or is using a mouse button other than the primary one.\n        if (isDragging || isAuxiliaryMouseButton || isSyntheticEvent) {\n            return;\n        }\n        // If we've got handles, we need to disable the tap highlight on the entire root element,\n        // otherwise iOS will still add it, even though all the drag interactions on the handle\n        // are disabled.\n        if (this._handles.length) {\n            this._rootElementTapHighlight = rootElement.style.webkitTapHighlightColor;\n            rootElement.style.webkitTapHighlightColor = 'transparent';\n        }\n        this._hasStartedDragging = this._hasMoved = false;\n        // Avoid multiple subscriptions and memory leaks when multi touch\n        // (isDragging check above isn't enough because of possible temporal and/or dimensional delays)\n        this._removeSubscriptions();\n        this._pointerMoveSubscription = this._dragDropRegistry.pointerMove.subscribe(this._pointerMove);\n        this._pointerUpSubscription = this._dragDropRegistry.pointerUp.subscribe(this._pointerUp);\n        this._scrollSubscription = this._dragDropRegistry.scroll.subscribe((/**\n         * @param {?} scrollEvent\n         * @return {?}\n         */\n        scrollEvent => {\n            this._updateOnScroll(scrollEvent);\n        }));\n        if (this._boundaryElement) {\n            this._boundaryRect = getMutableClientRect(this._boundaryElement);\n        }\n        // If we have a custom preview we can't know ahead of time how large it'll be so we position\n        // it next to the cursor. The exception is when the consumer has opted into making the preview\n        // the same size as the root element, in which case we do know the size.\n        /** @type {?} */\n        const previewTemplate = this._previewTemplate;\n        this._pickupPositionInElement = previewTemplate && previewTemplate.template &&\n            !previewTemplate.matchSize ? { x: 0, y: 0 } :\n            this._getPointerPositionInElement(referenceElement, event);\n        /** @type {?} */\n        const pointerPosition = this._pickupPositionOnPage = this._getPointerPositionOnPage(event);\n        this._pointerDirectionDelta = { x: 0, y: 0 };\n        this._pointerPositionAtLastDirectionChange = { x: pointerPosition.x, y: pointerPosition.y };\n        this._dragStartTime = Date.now();\n        this._dragDropRegistry.startDragging(this, event);\n    }\n    /**\n     * Cleans up the DOM artifacts that were added to facilitate the element being dragged.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _cleanupDragArtifacts(event) {\n        // Restore the element's visibility and insert it at its old position in the DOM.\n        // It's important that we maintain the position, because moving the element around in the DOM\n        // can throw off `NgFor` which does smart diffing and re-creates elements only when necessary,\n        // while moving the existing elements in all other cases.\n        this._rootElement.style.display = '';\n        (/** @type {?} */ (this._anchor.parentNode)).replaceChild(this._rootElement, this._anchor);\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._boundaryRect = this._previewRect = undefined;\n        // Re-enter the NgZone since we bound `document` events on the outside.\n        this._ngZone.run((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const container = (/** @type {?} */ (this._dropContainer));\n            /** @type {?} */\n            const currentIndex = container.getItemIndex(this);\n            /** @type {?} */\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            /** @type {?} */\n            const distance = this._getDragDistance(this._getPointerPositionOnPage(event));\n            /** @type {?} */\n            const isPointerOverContainer = container._isOverContainer(pointerPosition.x, pointerPosition.y);\n            this.ended.next({ source: this, distance });\n            this.dropped.next({\n                item: this,\n                currentIndex,\n                previousIndex: this._initialIndex,\n                container: container,\n                previousContainer: this._initialContainer,\n                isPointerOverContainer,\n                distance\n            });\n            container.drop(this, currentIndex, this._initialContainer, isPointerOverContainer, distance, this._initialIndex);\n            this._dropContainer = this._initialContainer;\n        }));\n    }\n    /**\n     * Updates the item's position in its drop container, or moves it\n     * into a new one, depending on its current drag position.\n     * @private\n     * @param {?} __0\n     * @return {?}\n     */\n    _updateActiveDropContainer({ x, y }) {\n        // Drop container that draggable has been moved into.\n        /** @type {?} */\n        let newContainer = this._initialContainer._getSiblingContainerFromPosition(this, x, y);\n        // If we couldn't find a new container to move the item into, and the item has left its\n        // initial container, check whether the it's over the initial container. This handles the\n        // case where two containers are connected one way and the user tries to undo dragging an\n        // item into a new container.\n        if (!newContainer && this._dropContainer !== this._initialContainer &&\n            this._initialContainer._isOverContainer(x, y)) {\n            newContainer = this._initialContainer;\n        }\n        if (newContainer && newContainer !== this._dropContainer) {\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                // Notify the old container that the item has left.\n                this.exited.next({ item: this, container: (/** @type {?} */ (this._dropContainer)) });\n                (/** @type {?} */ (this._dropContainer)).exit(this);\n                // Notify the new container that the item has entered.\n                this._dropContainer = (/** @type {?} */ (newContainer));\n                this._dropContainer.enter(this, x, y, newContainer === this._initialContainer &&\n                    // If we're re-entering the initial container and sorting is disabled,\n                    // put item the into its starting index to begin with.\n                    newContainer.sortingDisabled ? this._initialIndex : undefined);\n                this.entered.next({\n                    item: this,\n                    container: (/** @type {?} */ (newContainer)),\n                    currentIndex: (/** @type {?} */ (newContainer)).getItemIndex(this)\n                });\n            }));\n        }\n        (/** @type {?} */ (this._dropContainer))._startScrollingIfNecessary(x, y);\n        (/** @type {?} */ (this._dropContainer))._sortItem(this, x, y, this._pointerDirectionDelta);\n        this._preview.style.transform =\n            getTransform(x - this._pickupPositionInElement.x, y - this._pickupPositionInElement.y);\n    }\n    /**\n     * Creates the element that will be rendered next to the user's pointer\n     * and will be used as a preview of the element that is being dragged.\n     * @private\n     * @return {?}\n     */\n    _createPreviewElement() {\n        /** @type {?} */\n        const previewConfig = this._previewTemplate;\n        /** @type {?} */\n        const previewClass = this.previewClass;\n        /** @type {?} */\n        const previewTemplate = previewConfig ? previewConfig.template : null;\n        /** @type {?} */\n        let preview;\n        if (previewTemplate && previewConfig) {\n            // Measure the element before we've inserted the preview\n            // since the insertion could throw off the measurement.\n            /** @type {?} */\n            const rootRect = previewConfig.matchSize ? this._rootElement.getBoundingClientRect() : null;\n            /** @type {?} */\n            const viewRef = previewConfig.viewContainer.createEmbeddedView(previewTemplate, previewConfig.context);\n            viewRef.detectChanges();\n            preview = getRootNode(viewRef, this._document);\n            this._previewRef = viewRef;\n            if (previewConfig.matchSize) {\n                matchElementSize(preview, (/** @type {?} */ (rootRect)));\n            }\n            else {\n                preview.style.transform =\n                    getTransform(this._pickupPositionOnPage.x, this._pickupPositionOnPage.y);\n            }\n        }\n        else {\n            /** @type {?} */\n            const element = this._rootElement;\n            preview = deepCloneNode(element);\n            matchElementSize(preview, element.getBoundingClientRect());\n        }\n        extendStyles(preview.style, {\n            // It's important that we disable the pointer events on the preview, because\n            // it can throw off the `document.elementFromPoint` calls in the `CdkDropList`.\n            pointerEvents: 'none',\n            // We have to reset the margin, because it can throw off positioning relative to the viewport.\n            margin: '0',\n            position: 'fixed',\n            top: '0',\n            left: '0',\n            zIndex: `${this._config.zIndex || 1000}`\n        });\n        toggleNativeDragInteractions(preview, false);\n        preview.classList.add('cdk-drag-preview');\n        preview.setAttribute('dir', this._direction);\n        if (previewClass) {\n            if (Array.isArray(previewClass)) {\n                previewClass.forEach((/**\n                 * @param {?} className\n                 * @return {?}\n                 */\n                className => preview.classList.add(className)));\n            }\n            else {\n                preview.classList.add(previewClass);\n            }\n        }\n        return preview;\n    }\n    /**\n     * Animates the preview element from its current position to the location of the drop placeholder.\n     * @private\n     * @return {?} Promise that resolves when the animation completes.\n     */\n    _animatePreviewToPlaceholder() {\n        // If the user hasn't moved yet, the transitionend event won't fire.\n        if (!this._hasMoved) {\n            return Promise.resolve();\n        }\n        /** @type {?} */\n        const placeholderRect = this._placeholder.getBoundingClientRect();\n        // Apply the class that adds a transition to the preview.\n        this._preview.classList.add('cdk-drag-animating');\n        // Move the preview to the placeholder position.\n        this._preview.style.transform = getTransform(placeholderRect.left, placeholderRect.top);\n        // If the element doesn't have a `transition`, the `transitionend` event won't fire. Since\n        // we need to trigger a style recalculation in order for the `cdk-drag-animating` class to\n        // apply its style, we take advantage of the available info to figure out whether we need to\n        // bind the event in the first place.\n        /** @type {?} */\n        const duration = getTransformTransitionDurationInMs(this._preview);\n        if (duration === 0) {\n            return Promise.resolve();\n        }\n        return this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            return new Promise((/**\n             * @param {?} resolve\n             * @return {?}\n             */\n            resolve => {\n                /** @type {?} */\n                const handler = (/** @type {?} */ (((/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                (event) => {\n                    if (!event || (event.target === this._preview && event.propertyName === 'transform')) {\n                        this._preview.removeEventListener('transitionend', handler);\n                        resolve();\n                        clearTimeout(timeout);\n                    }\n                }))));\n                // If a transition is short enough, the browser might not fire the `transitionend` event.\n                // Since we know how long it's supposed to take, add a timeout with a 50% buffer that'll\n                // fire if the transition hasn't completed when it was supposed to.\n                /** @type {?} */\n                const timeout = setTimeout((/** @type {?} */ (handler)), duration * 1.5);\n                this._preview.addEventListener('transitionend', handler);\n            }));\n        }));\n    }\n    /**\n     * Creates an element that will be shown instead of the current element while dragging.\n     * @private\n     * @return {?}\n     */\n    _createPlaceholderElement() {\n        /** @type {?} */\n        const placeholderConfig = this._placeholderTemplate;\n        /** @type {?} */\n        const placeholderTemplate = placeholderConfig ? placeholderConfig.template : null;\n        /** @type {?} */\n        let placeholder;\n        if (placeholderTemplate) {\n            this._placeholderRef = (/** @type {?} */ (placeholderConfig)).viewContainer.createEmbeddedView(placeholderTemplate, (/** @type {?} */ (placeholderConfig)).context);\n            this._placeholderRef.detectChanges();\n            placeholder = getRootNode(this._placeholderRef, this._document);\n        }\n        else {\n            placeholder = deepCloneNode(this._rootElement);\n        }\n        placeholder.classList.add('cdk-drag-placeholder');\n        return placeholder;\n    }\n    /**\n     * Figures out the coordinates at which an element was picked up.\n     * @private\n     * @param {?} referenceElement Element that initiated the dragging.\n     * @param {?} event Event that initiated the dragging.\n     * @return {?}\n     */\n    _getPointerPositionInElement(referenceElement, event) {\n        /** @type {?} */\n        const elementRect = this._rootElement.getBoundingClientRect();\n        /** @type {?} */\n        const handleElement = referenceElement === this._rootElement ? null : referenceElement;\n        /** @type {?} */\n        const referenceRect = handleElement ? handleElement.getBoundingClientRect() : elementRect;\n        /** @type {?} */\n        const point = isTouchEvent(event) ? event.targetTouches[0] : event;\n        /** @type {?} */\n        const scrollPosition = this._getViewportScrollPosition();\n        /** @type {?} */\n        const x = point.pageX - referenceRect.left - scrollPosition.left;\n        /** @type {?} */\n        const y = point.pageY - referenceRect.top - scrollPosition.top;\n        return {\n            x: referenceRect.left - elementRect.left + x,\n            y: referenceRect.top - elementRect.top + y\n        };\n    }\n    /**\n     * Determines the point of the page that was touched by the user.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _getPointerPositionOnPage(event) {\n        // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n        /** @type {?} */\n        const point = isTouchEvent(event) ? (event.touches[0] || event.changedTouches[0]) : event;\n        /** @type {?} */\n        const scrollPosition = this._getViewportScrollPosition();\n        return {\n            x: point.pageX - scrollPosition.left,\n            y: point.pageY - scrollPosition.top\n        };\n    }\n    /**\n     * Gets the pointer position on the page, accounting for any position constraints.\n     * @private\n     * @param {?} point\n     * @return {?}\n     */\n    _getConstrainedPointerPosition(point) {\n        /** @type {?} */\n        const constrainedPoint = this.constrainPosition ? this.constrainPosition(point, this) : point;\n        /** @type {?} */\n        const dropContainerLock = this._dropContainer ? this._dropContainer.lockAxis : null;\n        if (this.lockAxis === 'x' || dropContainerLock === 'x') {\n            constrainedPoint.y = this._pickupPositionOnPage.y;\n        }\n        else if (this.lockAxis === 'y' || dropContainerLock === 'y') {\n            constrainedPoint.x = this._pickupPositionOnPage.x;\n        }\n        if (this._boundaryRect) {\n            const { x: pickupX, y: pickupY } = this._pickupPositionInElement;\n            /** @type {?} */\n            const boundaryRect = this._boundaryRect;\n            /** @type {?} */\n            const previewRect = (/** @type {?} */ (this._previewRect));\n            /** @type {?} */\n            const minY = boundaryRect.top + pickupY;\n            /** @type {?} */\n            const maxY = boundaryRect.bottom - (previewRect.height - pickupY);\n            /** @type {?} */\n            const minX = boundaryRect.left + pickupX;\n            /** @type {?} */\n            const maxX = boundaryRect.right - (previewRect.width - pickupX);\n            constrainedPoint.x = clamp(constrainedPoint.x, minX, maxX);\n            constrainedPoint.y = clamp(constrainedPoint.y, minY, maxY);\n        }\n        return constrainedPoint;\n    }\n    /**\n     * Updates the current drag delta, based on the user's current pointer position on the page.\n     * @private\n     * @param {?} pointerPositionOnPage\n     * @return {?}\n     */\n    _updatePointerDirectionDelta(pointerPositionOnPage) {\n        const { x, y } = pointerPositionOnPage;\n        /** @type {?} */\n        const delta = this._pointerDirectionDelta;\n        /** @type {?} */\n        const positionSinceLastChange = this._pointerPositionAtLastDirectionChange;\n        // Amount of pixels the user has dragged since the last time the direction changed.\n        /** @type {?} */\n        const changeX = Math.abs(x - positionSinceLastChange.x);\n        /** @type {?} */\n        const changeY = Math.abs(y - positionSinceLastChange.y);\n        // Because we handle pointer events on a per-pixel basis, we don't want the delta\n        // to change for every pixel, otherwise anything that depends on it can look erratic.\n        // To make the delta more consistent, we track how much the user has moved since the last\n        // delta change and we only update it after it has reached a certain threshold.\n        if (changeX > this._config.pointerDirectionChangeThreshold) {\n            delta.x = x > positionSinceLastChange.x ? 1 : -1;\n            positionSinceLastChange.x = x;\n        }\n        if (changeY > this._config.pointerDirectionChangeThreshold) {\n            delta.y = y > positionSinceLastChange.y ? 1 : -1;\n            positionSinceLastChange.y = y;\n        }\n        return delta;\n    }\n    /**\n     * Toggles the native drag interactions, based on how many handles are registered.\n     * @private\n     * @return {?}\n     */\n    _toggleNativeDragInteractions() {\n        if (!this._rootElement || !this._handles) {\n            return;\n        }\n        /** @type {?} */\n        const shouldEnable = this._handles.length > 0 || !this.isDragging();\n        if (shouldEnable !== this._nativeInteractionsEnabled) {\n            this._nativeInteractionsEnabled = shouldEnable;\n            toggleNativeDragInteractions(this._rootElement, shouldEnable);\n        }\n    }\n    /**\n     * Removes the manually-added event listeners from the root element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _removeRootElementListeners(element) {\n        element.removeEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n        element.removeEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n    }\n    /**\n     * Applies a `transform` to the root element, taking into account any existing transforms on it.\n     * @private\n     * @param {?} x New transform value along the X axis.\n     * @param {?} y New transform value along the Y axis.\n     * @return {?}\n     */\n    _applyRootElementTransform(x, y) {\n        /** @type {?} */\n        const transform = getTransform(x, y);\n        // Cache the previous transform amount only after the first drag sequence, because\n        // we don't want our own transforms to stack on top of each other.\n        if (this._initialTransform == null) {\n            this._initialTransform = this._rootElement.style.transform || '';\n        }\n        // Preserve the previous `transform` value, if there was one. Note that we apply our own\n        // transform before the user's, because things like rotation can affect which direction\n        // the element will be translated towards.\n        this._rootElement.style.transform = this._initialTransform ?\n            transform + ' ' + this._initialTransform : transform;\n    }\n    /**\n     * Gets the distance that the user has dragged during the current drag sequence.\n     * @private\n     * @param {?} currentPosition Current position of the user's pointer.\n     * @return {?}\n     */\n    _getDragDistance(currentPosition) {\n        /** @type {?} */\n        const pickupPosition = this._pickupPositionOnPage;\n        if (pickupPosition) {\n            return { x: currentPosition.x - pickupPosition.x, y: currentPosition.y - pickupPosition.y };\n        }\n        return { x: 0, y: 0 };\n    }\n    /**\n     * Cleans up any cached element dimensions that we don't need after dragging has stopped.\n     * @private\n     * @return {?}\n     */\n    _cleanupCachedDimensions() {\n        this._boundaryRect = this._previewRect = undefined;\n        this._parentPositions.clear();\n    }\n    /**\n     * Checks whether the element is still inside its boundary after the viewport has been resized.\n     * If not, the position is adjusted so that the element fits again.\n     * @private\n     * @return {?}\n     */\n    _containInsideBoundaryOnResize() {\n        let { x, y } = this._passiveTransform;\n        if ((x === 0 && y === 0) || this.isDragging() || !this._boundaryElement) {\n            return;\n        }\n        /** @type {?} */\n        const boundaryRect = this._boundaryElement.getBoundingClientRect();\n        /** @type {?} */\n        const elementRect = this._rootElement.getBoundingClientRect();\n        // It's possible that the element got hidden away after dragging (e.g. by switching to a\n        // different tab). Don't do anything in this case so we don't clear the user's position.\n        if ((boundaryRect.width === 0 && boundaryRect.height === 0) ||\n            (elementRect.width === 0 && elementRect.height === 0)) {\n            return;\n        }\n        /** @type {?} */\n        const leftOverflow = boundaryRect.left - elementRect.left;\n        /** @type {?} */\n        const rightOverflow = elementRect.right - boundaryRect.right;\n        /** @type {?} */\n        const topOverflow = boundaryRect.top - elementRect.top;\n        /** @type {?} */\n        const bottomOverflow = elementRect.bottom - boundaryRect.bottom;\n        // If the element has become wider than the boundary, we can't\n        // do much to make it fit so we just anchor it to the left.\n        if (boundaryRect.width > elementRect.width) {\n            if (leftOverflow > 0) {\n                x += leftOverflow;\n            }\n            if (rightOverflow > 0) {\n                x -= rightOverflow;\n            }\n        }\n        else {\n            x = 0;\n        }\n        // If the element has become taller than the boundary, we can't\n        // do much to make it fit so we just anchor it to the top.\n        if (boundaryRect.height > elementRect.height) {\n            if (topOverflow > 0) {\n                y += topOverflow;\n            }\n            if (bottomOverflow > 0) {\n                y -= bottomOverflow;\n            }\n        }\n        else {\n            y = 0;\n        }\n        if (x !== this._passiveTransform.x || y !== this._passiveTransform.y) {\n            this.setFreeDragPosition({ y, x });\n        }\n    }\n    /**\n     * Gets the drag start delay, based on the event type.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _getDragStartDelay(event) {\n        /** @type {?} */\n        const value = this.dragStartDelay;\n        if (typeof value === 'number') {\n            return value;\n        }\n        else if (isTouchEvent(event)) {\n            return value.touch;\n        }\n        return value ? value.mouse : 0;\n    }\n    /**\n     * Updates the internal state of the draggable element when scrolling has occurred.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _updateOnScroll(event) {\n        /** @type {?} */\n        const scrollDifference = this._parentPositions.handleScroll(event);\n        // ClientRect dimensions are based on the page's scroll position so\n        // we have to update the cached boundary ClientRect if the user has scrolled.\n        if (this._boundaryRect && scrollDifference) {\n            adjustClientRect(this._boundaryRect, scrollDifference.top, scrollDifference.left);\n        }\n    }\n    /**\n     * Gets the scroll position of the viewport.\n     * @private\n     * @return {?}\n     */\n    _getViewportScrollPosition() {\n        /** @type {?} */\n        const cachedPosition = this._parentPositions.positions.get(this._document);\n        return cachedPosition ? cachedPosition.scrollPosition :\n            this._viewportRuler.getViewportScrollPosition();\n    }\n}\nif (false) {\n    /**\n     * Element displayed next to the user's pointer while the element is dragged.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._preview;\n    /**\n     * Reference to the view of the preview element.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._previewRef;\n    /**\n     * Reference to the view of the placeholder element.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._placeholderRef;\n    /**\n     * Element that is rendered instead of the draggable item while it is being sorted.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._placeholder;\n    /**\n     * Coordinates within the element at which the user picked up the element.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._pickupPositionInElement;\n    /**\n     * Coordinates on the page at which the user picked up the element.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._pickupPositionOnPage;\n    /**\n     * Anchor node used to save the place in the DOM where the element was\n     * picked up so that it can be restored at the end of the drag sequence.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._anchor;\n    /**\n     * CSS `transform` applied to the element when it isn't being dragged. We need a\n     * passive transform in order for the dragged element to retain its new position\n     * after the user has stopped dragging and because we need to know the relative\n     * position in case they start dragging again. This corresponds to `element.style.transform`.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._passiveTransform;\n    /**\n     * CSS `transform` that is applied to the element while it's being dragged.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._activeTransform;\n    /**\n     * Inline `transform` value that the element had before the first dragging sequence.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._initialTransform;\n    /**\n     * Whether the dragging sequence has been started. Doesn't\n     * necessarily mean that the element has been moved.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._hasStartedDragging;\n    /**\n     * Whether the element has moved since the user started dragging it.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._hasMoved;\n    /**\n     * Drop container in which the DragRef resided when dragging began.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._initialContainer;\n    /**\n     * Index at which the item started in its initial container.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._initialIndex;\n    /**\n     * Cached positions of scrollable parent elements.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._parentPositions;\n    /**\n     * Emits when the item is being moved.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._moveEvents;\n    /**\n     * Keeps track of the direction in which the user is dragging along each axis.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._pointerDirectionDelta;\n    /**\n     * Pointer position at which the last change in the delta occurred.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._pointerPositionAtLastDirectionChange;\n    /**\n     * Root DOM node of the drag instance. This is the element that will\n     * be moved around as the user is dragging.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._rootElement;\n    /**\n     * Inline style value of `-webkit-tap-highlight-color` at the time the\n     * dragging was started. Used to restore the value once we're done dragging.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._rootElementTapHighlight;\n    /**\n     * Subscription to pointer movement events.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._pointerMoveSubscription;\n    /**\n     * Subscription to the event that is dispatched when the user lifts their pointer.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._pointerUpSubscription;\n    /**\n     * Subscription to the viewport being scrolled.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._scrollSubscription;\n    /**\n     * Subscription to the viewport being resized.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._resizeSubscription;\n    /**\n     * Time at which the last touch event occurred. Used to avoid firing the same\n     * events multiple times on touch devices where the browser will fire a fake\n     * mouse event for each touch event, after a certain time.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._lastTouchEventTime;\n    /**\n     * Time at which the last dragging sequence was started.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._dragStartTime;\n    /**\n     * Cached reference to the boundary element.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._boundaryElement;\n    /**\n     * Whether the native dragging interactions have been enabled on the root element.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._nativeInteractionsEnabled;\n    /**\n     * Cached dimensions of the preview element.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._previewRect;\n    /**\n     * Cached dimensions of the boundary element.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._boundaryRect;\n    /**\n     * Element that will be used as a template to create the draggable item's preview.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._previewTemplate;\n    /**\n     * Template for placeholder element rendered to show where a draggable would be dropped.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._placeholderTemplate;\n    /**\n     * Elements that can be used to drag the draggable item.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._handles;\n    /**\n     * Registered handles that are currently disabled.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._disabledHandles;\n    /**\n     * Droppable container that the draggable is a part of.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._dropContainer;\n    /**\n     * Layout direction of the item.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._direction;\n    /**\n     * Axis along which dragging is locked.\n     * @type {?}\n     */\n    DragRef.prototype.lockAxis;\n    /**\n     * Amount of milliseconds to wait after the user has put their\n     * pointer down before starting to drag the element.\n     * @type {?}\n     */\n    DragRef.prototype.dragStartDelay;\n    /**\n     * Class to be added to the preview element.\n     * @type {?}\n     */\n    DragRef.prototype.previewClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._disabled;\n    /**\n     * Emits as the drag sequence is being prepared.\n     * @type {?}\n     */\n    DragRef.prototype.beforeStarted;\n    /**\n     * Emits when the user starts dragging the item.\n     * @type {?}\n     */\n    DragRef.prototype.started;\n    /**\n     * Emits when the user has released a drag item, before any animations have started.\n     * @type {?}\n     */\n    DragRef.prototype.released;\n    /**\n     * Emits when the user stops dragging an item in the container.\n     * @type {?}\n     */\n    DragRef.prototype.ended;\n    /**\n     * Emits when the user has moved the item into a new container.\n     * @type {?}\n     */\n    DragRef.prototype.entered;\n    /**\n     * Emits when the user removes the item its container by dragging it into another container.\n     * @type {?}\n     */\n    DragRef.prototype.exited;\n    /**\n     * Emits when the user drops the item inside a container.\n     * @type {?}\n     */\n    DragRef.prototype.dropped;\n    /**\n     * Emits as the user is dragging the item. Use with caution,\n     * because this event will fire for every pixel that the user has dragged.\n     * @type {?}\n     */\n    DragRef.prototype.moved;\n    /**\n     * Arbitrary data that can be attached to the drag item.\n     * @type {?}\n     */\n    DragRef.prototype.data;\n    /**\n     * Function that can be used to customize the logic of how the position of the drag item\n     * is limited while it's being dragged. Gets called with a point containing the current position\n     * of the user's pointer on the page and should return a point describing where the item should\n     * be rendered.\n     * @type {?}\n     */\n    DragRef.prototype.constrainPosition;\n    /**\n     * Handler for the `mousedown`/`touchstart` events.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._pointerDown;\n    /**\n     * Handler that is invoked when the user moves their pointer after they've initiated a drag.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._pointerMove;\n    /**\n     * Handler that is invoked when the user lifts their pointer up, after initiating a drag.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._pointerUp;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._config;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._dragDropRegistry;\n}\n/**\n * Gets a 3d `transform` that can be applied to an element.\n * @param {?} x Desired position of the element along the X axis.\n * @param {?} y Desired position of the element along the Y axis.\n * @return {?}\n */\nfunction getTransform(x, y) {\n    // Round the transforms since some browsers will\n    // blur the elements for sub-pixel transforms.\n    return `translate3d(${Math.round(x)}px, ${Math.round(y)}px, 0)`;\n}\n/**\n * Creates a deep clone of an element.\n * @param {?} node\n * @return {?}\n */\nfunction deepCloneNode(node) {\n    /** @type {?} */\n    const clone = (/** @type {?} */ (node.cloneNode(true)));\n    /** @type {?} */\n    const descendantsWithId = clone.querySelectorAll('[id]');\n    /** @type {?} */\n    const descendantCanvases = node.querySelectorAll('canvas');\n    // Remove the `id` to avoid having multiple elements with the same id on the page.\n    clone.removeAttribute('id');\n    for (let i = 0; i < descendantsWithId.length; i++) {\n        descendantsWithId[i].removeAttribute('id');\n    }\n    // `cloneNode` won't transfer the content of `canvas` elements so we have to do it ourselves.\n    // We match up the cloned canvas to their sources using their index in the DOM.\n    if (descendantCanvases.length) {\n        /** @type {?} */\n        const cloneCanvases = clone.querySelectorAll('canvas');\n        for (let i = 0; i < descendantCanvases.length; i++) {\n            /** @type {?} */\n            const correspondingCloneContext = cloneCanvases[i].getContext('2d');\n            if (correspondingCloneContext) {\n                correspondingCloneContext.drawImage(descendantCanvases[i], 0, 0);\n            }\n        }\n    }\n    return clone;\n}\n/**\n * Clamps a value between a minimum and a maximum.\n * @param {?} value\n * @param {?} min\n * @param {?} max\n * @return {?}\n */\nfunction clamp(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * Helper to remove a node from the DOM and to do all the necessary null checks.\n * @param {?} node Node to be removed.\n * @return {?}\n */\nfunction removeNode(node) {\n    if (node && node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\n/**\n * Determines whether an event is a touch event.\n * @param {?} event\n * @return {?}\n */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/**\n * Gets the element into which the drag preview should be inserted.\n * @param {?} documentRef\n * @return {?}\n */\nfunction getPreviewInsertionPoint(documentRef) {\n    // We can't use the body if the user is in fullscreen mode,\n    // because the preview will render under the fullscreen element.\n    // TODO(crisbeto): dedupe this with the `FullscreenOverlayContainer` eventually.\n    return documentRef.fullscreenElement ||\n        documentRef.webkitFullscreenElement ||\n        documentRef.mozFullScreenElement ||\n        documentRef.msFullscreenElement ||\n        documentRef.body;\n}\n/**\n * Gets the root HTML element of an embedded view.\n * If the root is not an HTML element it gets wrapped in one.\n * @param {?} viewRef\n * @param {?} _document\n * @return {?}\n */\nfunction getRootNode(viewRef, _document) {\n    /** @type {?} */\n    const rootNodes = viewRef.rootNodes;\n    if (rootNodes.length === 1 && rootNodes[0].nodeType === _document.ELEMENT_NODE) {\n        return (/** @type {?} */ (rootNodes[0]));\n    }\n    /** @type {?} */\n    const wrapper = _document.createElement('div');\n    rootNodes.forEach((/**\n     * @param {?} node\n     * @return {?}\n     */\n    node => wrapper.appendChild(node)));\n    return wrapper;\n}\n/**\n * Matches the target element's size to the source's size.\n * @param {?} target Element that needs to be resized.\n * @param {?} sourceRect Dimensions of the source element.\n * @return {?}\n */\nfunction matchElementSize(target, sourceRect) {\n    target.style.width = `${sourceRect.width}px`;\n    target.style.height = `${sourceRect.height}px`;\n    target.style.transform = getTransform(sourceRect.left, sourceRect.top);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/drag-utils.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Moves an item one index in an array to another.\n * @template T\n * @param {?} array Array in which to move the item.\n * @param {?} fromIndex Starting index of the item.\n * @param {?} toIndex Index to which the item should be moved.\n * @return {?}\n */\nfunction moveItemInArray(array, fromIndex, toIndex) {\n    /** @type {?} */\n    const from = clamp$1(fromIndex, array.length - 1);\n    /** @type {?} */\n    const to = clamp$1(toIndex, array.length - 1);\n    if (from === to) {\n        return;\n    }\n    /** @type {?} */\n    const target = array[from];\n    /** @type {?} */\n    const delta = to < from ? -1 : 1;\n    for (let i = from; i !== to; i += delta) {\n        array[i] = array[i + delta];\n    }\n    array[to] = target;\n}\n/**\n * Moves an item from one array to another.\n * @template T\n * @param {?} currentArray Array from which to transfer the item.\n * @param {?} targetArray Array into which to put the item.\n * @param {?} currentIndex Index of the item in its current array.\n * @param {?} targetIndex Index at which to insert the item.\n * @return {?}\n */\nfunction transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    /** @type {?} */\n    const from = clamp$1(currentIndex, currentArray.length - 1);\n    /** @type {?} */\n    const to = clamp$1(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\n    }\n}\n/**\n * Copies an item from one array to another, leaving it in its\n * original position in current array.\n * @template T\n * @param {?} currentArray Array from which to copy the item.\n * @param {?} targetArray Array into which is copy the item.\n * @param {?} currentIndex Index of the item in its current array.\n * @param {?} targetIndex Index at which to insert the item.\n *\n * @return {?}\n */\nfunction copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    /** @type {?} */\n    const to = clamp$1(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray[currentIndex]);\n    }\n}\n/**\n * Clamps a number between zero and a maximum.\n * @param {?} value\n * @param {?} max\n * @return {?}\n */\nfunction clamp$1(value, max) {\n    return Math.max(0, Math.min(max, value));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/drop-list-ref.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Proximity, as a ratio to width/height, at which a\n * dragged item will affect the drop container.\n * @type {?}\n */\nconst DROP_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Proximity, as a ratio to width/height at which to start auto-scrolling the drop list or the\n * viewport. The value comes from trying it out manually until it feels right.\n * @type {?}\n */\nconst SCROLL_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Number of pixels to scroll for each frame when auto-scrolling an element.\n * The value comes from trying it out manually until it feels right.\n * @type {?}\n */\nconst AUTO_SCROLL_STEP = 2;\n/**\n * Entry in the position cache for draggable items.\n * \\@docs-private\n * @record\n */\nfunction CachedItemPosition() { }\nif (false) {\n    /**\n     * Instance of the drag item.\n     * @type {?}\n     */\n    CachedItemPosition.prototype.drag;\n    /**\n     * Dimensions of the item.\n     * @type {?}\n     */\n    CachedItemPosition.prototype.clientRect;\n    /**\n     * Amount by which the item has been moved since dragging started.\n     * @type {?}\n     */\n    CachedItemPosition.prototype.offset;\n}\n/** @enum {number} */\nconst AutoScrollVerticalDirection = {\n    NONE: 0, UP: 1, DOWN: 2,\n};\n/** @enum {number} */\nconst AutoScrollHorizontalDirection = {\n    NONE: 0, LEFT: 1, RIGHT: 2,\n};\n/**\n * Internal compile-time-only representation of a `DropListRef`.\n * Used to avoid circular import issues between the `DropListRef` and the `DragRef`.\n * \\@docs-private\n * @record\n */\nfunction DropListRefInternal() { }\n/**\n * Reference to a drop list. Used to manipulate or dispose of the container.\n * @template T\n */\nclass DropListRef {\n    /**\n     * @param {?} element\n     * @param {?} _dragDropRegistry\n     * @param {?} _document\n     * @param {?} _ngZone\n     * @param {?} _viewportRuler\n     */\n    constructor(element, _dragDropRegistry, _document, _ngZone, _viewportRuler) {\n        this._dragDropRegistry = _dragDropRegistry;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        /**\n         * Whether starting a dragging sequence from this container is disabled.\n         */\n        this.disabled = false;\n        /**\n         * Whether sorting items within the list is disabled.\n         */\n        this.sortingDisabled = false;\n        /**\n         * Whether auto-scrolling the view when the user\n         * moves their pointer close to the edges is disabled.\n         */\n        this.autoScrollDisabled = false;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = (/**\n         * @return {?}\n         */\n        () => true);\n        /**\n         * Emits right before dragging has started.\n         */\n        this.beforeStarted = new Subject();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new Subject();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new Subject();\n        /**\n         * Emits when the user drops an item inside the container.\n         */\n        this.dropped = new Subject();\n        /**\n         * Emits as the user is swapping items while actively dragging.\n         */\n        this.sorted = new Subject();\n        /**\n         * Whether an item in the list is being dragged.\n         */\n        this._isDragging = false;\n        /**\n         * Cache of the dimensions of all the items inside the container.\n         */\n        this._itemPositions = [];\n        /**\n         * Keeps track of the item that was last swapped with the dragged item, as\n         * well as what direction the pointer was moving in when the swap occured.\n         */\n        this._previousSwap = { drag: (/** @type {?} */ (null)), delta: 0 };\n        /**\n         * Drop lists that are connected to the current one.\n         */\n        this._siblings = [];\n        /**\n         * Direction in which the list is oriented.\n         */\n        this._orientation = 'vertical';\n        /**\n         * Connected siblings that currently have a dragged item.\n         */\n        this._activeSiblings = new Set();\n        /**\n         * Layout direction of the drop list.\n         */\n        this._direction = 'ltr';\n        /**\n         * Subscription to the window being scrolled.\n         */\n        this._viewportScrollSubscription = Subscription.EMPTY;\n        /**\n         * Vertical direction in which the list is currently scrolling.\n         */\n        this._verticalScrollDirection = 0 /* NONE */;\n        /**\n         * Horizontal direction in which the list is currently scrolling.\n         */\n        this._horizontalScrollDirection = 0 /* NONE */;\n        /**\n         * Used to signal to the current auto-scroll sequence when to stop.\n         */\n        this._stopScrollTimers = new Subject();\n        /**\n         * Shadow root of the current element. Necessary for `elementFromPoint` to resolve correctly.\n         */\n        this._cachedShadowRoot = null;\n        /**\n         * Starts the interval that'll auto-scroll the element.\n         */\n        this._startScrollInterval = (/**\n         * @return {?}\n         */\n        () => {\n            this._stopScrolling();\n            interval(0, animationFrameScheduler)\n                .pipe(takeUntil(this._stopScrollTimers))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const node = this._scrollNode;\n                if (this._verticalScrollDirection === 1 /* UP */) {\n                    incrementVerticalScroll(node, -AUTO_SCROLL_STEP);\n                }\n                else if (this._verticalScrollDirection === 2 /* DOWN */) {\n                    incrementVerticalScroll(node, AUTO_SCROLL_STEP);\n                }\n                if (this._horizontalScrollDirection === 1 /* LEFT */) {\n                    incrementHorizontalScroll(node, -AUTO_SCROLL_STEP);\n                }\n                else if (this._horizontalScrollDirection === 2 /* RIGHT */) {\n                    incrementHorizontalScroll(node, AUTO_SCROLL_STEP);\n                }\n            }));\n        });\n        this.element = coerceElement(element);\n        this._document = _document;\n        this.withScrollableParents([this.element]);\n        _dragDropRegistry.registerDropContainer(this);\n        this._parentPositions = new ParentPositionTracker(_document, _viewportRuler);\n    }\n    /**\n     * Removes the drop list functionality from the DOM element.\n     * @return {?}\n     */\n    dispose() {\n        this._stopScrolling();\n        this._stopScrollTimers.complete();\n        this._viewportScrollSubscription.unsubscribe();\n        this.beforeStarted.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this.sorted.complete();\n        this._activeSiblings.clear();\n        this._scrollNode = (/** @type {?} */ (null));\n        this._parentPositions.clear();\n        this._dragDropRegistry.removeDropContainer(this);\n    }\n    /**\n     * Whether an item from this list is currently being dragged.\n     * @return {?}\n     */\n    isDragging() {\n        return this._isDragging;\n    }\n    /**\n     * Starts dragging an item.\n     * @return {?}\n     */\n    start() {\n        /** @type {?} */\n        const styles = coerceElement(this.element).style;\n        this.beforeStarted.next();\n        this._isDragging = true;\n        // We need to disable scroll snapping while the user is dragging, because it breaks automatic\n        // scrolling. The browser seems to round the value based on the snapping points which means\n        // that we can't increment/decrement the scroll position.\n        this._initialScrollSnap = styles.msScrollSnapType || ((/** @type {?} */ (styles))).scrollSnapType || '';\n        ((/** @type {?} */ (styles))).scrollSnapType = styles.msScrollSnapType = 'none';\n        this._cacheItems();\n        this._siblings.forEach((/**\n         * @param {?} sibling\n         * @return {?}\n         */\n        sibling => sibling._startReceiving(this)));\n        this._viewportScrollSubscription.unsubscribe();\n        this._listenToScrollEvents();\n    }\n    /**\n     * Emits an event to indicate that the user moved an item into the container.\n     * @param {?} item Item that was moved into the container.\n     * @param {?} pointerX Position of the item along the X axis.\n     * @param {?} pointerY Position of the item along the Y axis.\n     * @param {?=} index Index at which the item entered. If omitted, the container will try to figure it\n     *   out automatically.\n     * @return {?}\n     */\n    enter(item, pointerX, pointerY, index) {\n        this.start();\n        // If sorting is disabled, we want the item to return to its starting\n        // position if the user is returning it to its initial container.\n        /** @type {?} */\n        let newIndex;\n        if (index == null) {\n            newIndex = this.sortingDisabled ? this._draggables.indexOf(item) : -1;\n            if (newIndex === -1) {\n                // We use the coordinates of where the item entered the drop\n                // zone to figure out at which index it should be inserted.\n                newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY);\n            }\n        }\n        else {\n            newIndex = index;\n        }\n        /** @type {?} */\n        const activeDraggables = this._activeDraggables;\n        /** @type {?} */\n        const currentIndex = activeDraggables.indexOf(item);\n        /** @type {?} */\n        const placeholder = item.getPlaceholderElement();\n        /** @type {?} */\n        let newPositionReference = activeDraggables[newIndex];\n        // If the item at the new position is the same as the item that is being dragged,\n        // it means that we're trying to restore the item to its initial position. In this\n        // case we should use the next item from the list as the reference.\n        if (newPositionReference === item) {\n            newPositionReference = activeDraggables[newIndex + 1];\n        }\n        // Since the item may be in the `activeDraggables` already (e.g. if the user dragged it\n        // into another container and back again), we have to ensure that it isn't duplicated.\n        if (currentIndex > -1) {\n            activeDraggables.splice(currentIndex, 1);\n        }\n        // Don't use items that are being dragged as a reference, because\n        // their element has been moved down to the bottom of the body.\n        if (newPositionReference && !this._dragDropRegistry.isDragging(newPositionReference)) {\n            /** @type {?} */\n            const element = newPositionReference.getRootElement();\n            (/** @type {?} */ (element.parentElement)).insertBefore(placeholder, element);\n            activeDraggables.splice(newIndex, 0, item);\n        }\n        else {\n            /** @type {?} */\n            const element = coerceElement(this.element);\n            if (this._shouldEnterAsFirstChild(pointerX, pointerY)) {\n                element.insertBefore(placeholder, activeDraggables[0].getRootElement());\n                activeDraggables.unshift(item);\n            }\n            else {\n                element.appendChild(placeholder);\n                activeDraggables.push(item);\n            }\n        }\n        // The transform needs to be cleared so it doesn't throw off the measurements.\n        placeholder.style.transform = '';\n        // Note that the positions were already cached when we called `start` above,\n        // but we need to refresh them since the amount of items has changed and also parent rects.\n        this._cacheItemPositions();\n        this._cacheParentPositions();\n        this.entered.next({ item, container: this, currentIndex: this.getItemIndex(item) });\n    }\n    /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @param {?} item Item that was dragged out.\n     * @return {?}\n     */\n    exit(item) {\n        this._reset();\n        this.exited.next({ item, container: this });\n    }\n    /**\n     * Drops an item into this container.\n     * \\@breaking-change 11.0.0 `previousIndex` parameter to become required.\n     * @param {?} item Item being dropped into the container.\n     * @param {?} currentIndex Index at which the item should be inserted.\n     * @param {?} previousContainer Container from which the item got dragged in.\n     * @param {?} isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     * @param {?} distance Distance the user has dragged since the start of the dragging sequence.\n     * @param {?=} previousIndex Index of the item when dragging started.\n     *\n     * @return {?}\n     */\n    drop(item, currentIndex, previousContainer, isPointerOverContainer, distance, previousIndex) {\n        this._reset();\n        // @breaking-change 11.0.0 Remove this fallback logic once `previousIndex` is a required param.\n        if (previousIndex == null) {\n            previousIndex = previousContainer.getItemIndex(item);\n        }\n        this.dropped.next({ item,\n            currentIndex,\n            previousIndex,\n            container: this,\n            previousContainer,\n            isPointerOverContainer,\n            distance\n        });\n    }\n    /**\n     * Sets the draggable items that are a part of this list.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} items Items that are a part of this list.\n     * @return {THIS}\n     */\n    withItems(items) {\n        /** @type {?} */\n        const previousItems = (/** @type {?} */ (this))._draggables;\n        (/** @type {?} */ (this))._draggables = items;\n        items.forEach((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => item._withDropContainer((/** @type {?} */ (this)))));\n        if ((/** @type {?} */ (this)).isDragging()) {\n            /** @type {?} */\n            const draggedItems = previousItems.filter((/**\n             * @param {?} item\n             * @return {?}\n             */\n            item => item.isDragging()));\n            // If all of the items being dragged were removed\n            // from the list, abort the current drag sequence.\n            if (draggedItems.every((/**\n             * @param {?} item\n             * @return {?}\n             */\n            item => items.indexOf(item) === -1))) {\n                (/** @type {?} */ (this))._reset();\n            }\n            else {\n                (/** @type {?} */ (this))._cacheItems();\n            }\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the layout direction of the drop list.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} direction\n     * @return {THIS}\n     */\n    withDirection(direction) {\n        (/** @type {?} */ (this))._direction = direction;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the containers that are connected to this one. When two or more containers are\n     * connected, the user will be allowed to transfer items between them.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} connectedTo Other containers that the current containers should be connected to.\n     * @return {THIS}\n     */\n    connectedTo(connectedTo) {\n        (/** @type {?} */ (this))._siblings = connectedTo.slice();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the orientation of the container.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} orientation New orientation for the container.\n     * @return {THIS}\n     */\n    withOrientation(orientation) {\n        (/** @type {?} */ (this))._orientation = orientation;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets which parent elements are can be scrolled while the user is dragging.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} elements Elements that can be scrolled.\n     * @return {THIS}\n     */\n    withScrollableParents(elements) {\n        /** @type {?} */\n        const element = coerceElement((/** @type {?} */ (this)).element);\n        // We always allow the current element to be scrollable\n        // so we need to ensure that it's in the array.\n        (/** @type {?} */ (this))._scrollableElements =\n            elements.indexOf(element) === -1 ? [element, ...elements] : elements.slice();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Gets the scrollable parents that are registered with this drop container.\n     * @return {?}\n     */\n    getScrollableParents() {\n        return this._scrollableElements;\n    }\n    /**\n     * Figures out the index of an item in the container.\n     * @param {?} item Item whose index should be determined.\n     * @return {?}\n     */\n    getItemIndex(item) {\n        if (!this._isDragging) {\n            return this._draggables.indexOf(item);\n        }\n        // Items are sorted always by top/left in the cache, however they flow differently in RTL.\n        // The rest of the logic still stands no matter what orientation we're in, however\n        // we need to invert the array when determining the index.\n        /** @type {?} */\n        const items = this._orientation === 'horizontal' && this._direction === 'rtl' ?\n            this._itemPositions.slice().reverse() : this._itemPositions;\n        return findIndex(items, (/**\n         * @param {?} currentItem\n         * @return {?}\n         */\n        currentItem => currentItem.drag === item));\n    }\n    /**\n     * Whether the list is able to receive the item that\n     * is currently being dragged inside a connected drop list.\n     * @return {?}\n     */\n    isReceiving() {\n        return this._activeSiblings.size > 0;\n    }\n    /**\n     * Sorts an item inside the container based on its position.\n     * @param {?} item Item to be sorted.\n     * @param {?} pointerX Position of the item along the X axis.\n     * @param {?} pointerY Position of the item along the Y axis.\n     * @param {?} pointerDelta Direction in which the pointer is moving along each axis.\n     * @return {?}\n     */\n    _sortItem(item, pointerX, pointerY, pointerDelta) {\n        // Don't sort the item if sorting is disabled or it's out of range.\n        if (this.sortingDisabled ||\n            !isPointerNearClientRect(this._clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n            return;\n        }\n        /** @type {?} */\n        const siblings = this._itemPositions;\n        /** @type {?} */\n        const newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY, pointerDelta);\n        if (newIndex === -1 && siblings.length > 0) {\n            return;\n        }\n        /** @type {?} */\n        const isHorizontal = this._orientation === 'horizontal';\n        /** @type {?} */\n        const currentIndex = findIndex(siblings, (/**\n         * @param {?} currentItem\n         * @return {?}\n         */\n        currentItem => currentItem.drag === item));\n        /** @type {?} */\n        const siblingAtNewPosition = siblings[newIndex];\n        /** @type {?} */\n        const currentPosition = siblings[currentIndex].clientRect;\n        /** @type {?} */\n        const newPosition = siblingAtNewPosition.clientRect;\n        /** @type {?} */\n        const delta = currentIndex > newIndex ? 1 : -1;\n        this._previousSwap.drag = siblingAtNewPosition.drag;\n        this._previousSwap.delta = isHorizontal ? pointerDelta.x : pointerDelta.y;\n        // How many pixels the item's placeholder should be offset.\n        /** @type {?} */\n        const itemOffset = this._getItemOffsetPx(currentPosition, newPosition, delta);\n        // How many pixels all the other items should be offset.\n        /** @type {?} */\n        const siblingOffset = this._getSiblingOffsetPx(currentIndex, siblings, delta);\n        // Save the previous order of the items before moving the item to its new index.\n        // We use this to check whether an item has been moved as a result of the sorting.\n        /** @type {?} */\n        const oldOrder = siblings.slice();\n        // Shuffle the array in place.\n        moveItemInArray(siblings, currentIndex, newIndex);\n        this.sorted.next({\n            previousIndex: currentIndex,\n            currentIndex: newIndex,\n            container: this,\n            item\n        });\n        siblings.forEach((/**\n         * @param {?} sibling\n         * @param {?} index\n         * @return {?}\n         */\n        (sibling, index) => {\n            // Don't do anything if the position hasn't changed.\n            if (oldOrder[index] === sibling) {\n                return;\n            }\n            /** @type {?} */\n            const isDraggedItem = sibling.drag === item;\n            /** @type {?} */\n            const offset = isDraggedItem ? itemOffset : siblingOffset;\n            /** @type {?} */\n            const elementToOffset = isDraggedItem ? item.getPlaceholderElement() :\n                sibling.drag.getRootElement();\n            // Update the offset to reflect the new position.\n            sibling.offset += offset;\n            // Since we're moving the items with a `transform`, we need to adjust their cached\n            // client rects to reflect their new position, as well as swap their positions in the cache.\n            // Note that we shouldn't use `getBoundingClientRect` here to update the cache, because the\n            // elements may be mid-animation which will give us a wrong result.\n            if (isHorizontal) {\n                // Round the transforms since some browsers will\n                // blur the elements, for sub-pixel transforms.\n                elementToOffset.style.transform = `translate3d(${Math.round(sibling.offset)}px, 0, 0)`;\n                adjustClientRect(sibling.clientRect, 0, offset);\n            }\n            else {\n                elementToOffset.style.transform = `translate3d(0, ${Math.round(sibling.offset)}px, 0)`;\n                adjustClientRect(sibling.clientRect, offset, 0);\n            }\n        }));\n    }\n    /**\n     * Checks whether the user's pointer is close to the edges of either the\n     * viewport or the drop list and starts the auto-scroll sequence.\n     * @param {?} pointerX User's pointer position along the x axis.\n     * @param {?} pointerY User's pointer position along the y axis.\n     * @return {?}\n     */\n    _startScrollingIfNecessary(pointerX, pointerY) {\n        if (this.autoScrollDisabled) {\n            return;\n        }\n        /** @type {?} */\n        let scrollNode;\n        /** @type {?} */\n        let verticalScrollDirection = 0 /* NONE */;\n        /** @type {?} */\n        let horizontalScrollDirection = 0 /* NONE */;\n        // Check whether we should start scrolling any of the parent containers.\n        this._parentPositions.positions.forEach((/**\n         * @param {?} position\n         * @param {?} element\n         * @return {?}\n         */\n        (position, element) => {\n            // We have special handling for the `document` below. Also this would be\n            // nicer with a  for...of loop, but it requires changing a compiler flag.\n            if (element === this._document || !position.clientRect || scrollNode) {\n                return;\n            }\n            if (isPointerNearClientRect(position.clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n                [verticalScrollDirection, horizontalScrollDirection] = getElementScrollDirections((/** @type {?} */ (element)), position.clientRect, pointerX, pointerY);\n                if (verticalScrollDirection || horizontalScrollDirection) {\n                    scrollNode = (/** @type {?} */ (element));\n                }\n            }\n        }));\n        // Otherwise check if we can start scrolling the viewport.\n        if (!verticalScrollDirection && !horizontalScrollDirection) {\n            const { width, height } = this._viewportRuler.getViewportSize();\n            /** @type {?} */\n            const clientRect = { width, height, top: 0, right: width, bottom: height, left: 0 };\n            verticalScrollDirection = getVerticalScrollDirection(clientRect, pointerY);\n            horizontalScrollDirection = getHorizontalScrollDirection(clientRect, pointerX);\n            scrollNode = window;\n        }\n        if (scrollNode && (verticalScrollDirection !== this._verticalScrollDirection ||\n            horizontalScrollDirection !== this._horizontalScrollDirection ||\n            scrollNode !== this._scrollNode)) {\n            this._verticalScrollDirection = verticalScrollDirection;\n            this._horizontalScrollDirection = horizontalScrollDirection;\n            this._scrollNode = scrollNode;\n            if ((verticalScrollDirection || horizontalScrollDirection) && scrollNode) {\n                this._ngZone.runOutsideAngular(this._startScrollInterval);\n            }\n            else {\n                this._stopScrolling();\n            }\n        }\n    }\n    /**\n     * Stops any currently-running auto-scroll sequences.\n     * @return {?}\n     */\n    _stopScrolling() {\n        this._stopScrollTimers.next();\n    }\n    /**\n     * Caches the positions of the configured scrollable parents.\n     * @private\n     * @return {?}\n     */\n    _cacheParentPositions() {\n        /** @type {?} */\n        const element = coerceElement(this.element);\n        this._parentPositions.cache(this._scrollableElements);\n        // The list element is always in the `scrollableElements`\n        // so we can take advantage of the cached `ClientRect`.\n        this._clientRect = (/** @type {?} */ ((/** @type {?} */ (this._parentPositions.positions.get(element))).clientRect));\n    }\n    /**\n     * Refreshes the position cache of the items and sibling containers.\n     * @private\n     * @return {?}\n     */\n    _cacheItemPositions() {\n        /** @type {?} */\n        const isHorizontal = this._orientation === 'horizontal';\n        this._itemPositions = this._activeDraggables.map((/**\n         * @param {?} drag\n         * @return {?}\n         */\n        drag => {\n            /** @type {?} */\n            const elementToMeasure = drag.getVisibleElement();\n            return { drag, offset: 0, clientRect: getMutableClientRect(elementToMeasure) };\n        })).sort((/**\n         * @param {?} a\n         * @param {?} b\n         * @return {?}\n         */\n        (a, b) => {\n            return isHorizontal ? a.clientRect.left - b.clientRect.left :\n                a.clientRect.top - b.clientRect.top;\n        }));\n    }\n    /**\n     * Resets the container to its initial state.\n     * @private\n     * @return {?}\n     */\n    _reset() {\n        this._isDragging = false;\n        /** @type {?} */\n        const styles = coerceElement(this.element).style;\n        ((/** @type {?} */ (styles))).scrollSnapType = styles.msScrollSnapType = this._initialScrollSnap;\n        // TODO(crisbeto): may have to wait for the animations to finish.\n        this._activeDraggables.forEach((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => {\n            /** @type {?} */\n            const rootElement = item.getRootElement();\n            if (rootElement) {\n                rootElement.style.transform = '';\n            }\n        }));\n        this._siblings.forEach((/**\n         * @param {?} sibling\n         * @return {?}\n         */\n        sibling => sibling._stopReceiving(this)));\n        this._activeDraggables = [];\n        this._itemPositions = [];\n        this._previousSwap.drag = null;\n        this._previousSwap.delta = 0;\n        this._stopScrolling();\n        this._viewportScrollSubscription.unsubscribe();\n        this._parentPositions.clear();\n    }\n    /**\n     * Gets the offset in pixels by which the items that aren't being dragged should be moved.\n     * @private\n     * @param {?} currentIndex Index of the item currently being dragged.\n     * @param {?} siblings All of the items in the list.\n     * @param {?} delta Direction in which the user is moving.\n     * @return {?}\n     */\n    _getSiblingOffsetPx(currentIndex, siblings, delta) {\n        /** @type {?} */\n        const isHorizontal = this._orientation === 'horizontal';\n        /** @type {?} */\n        const currentPosition = siblings[currentIndex].clientRect;\n        /** @type {?} */\n        const immediateSibling = siblings[currentIndex + delta * -1];\n        /** @type {?} */\n        let siblingOffset = currentPosition[isHorizontal ? 'width' : 'height'] * delta;\n        if (immediateSibling) {\n            /** @type {?} */\n            const start = isHorizontal ? 'left' : 'top';\n            /** @type {?} */\n            const end = isHorizontal ? 'right' : 'bottom';\n            // Get the spacing between the start of the current item and the end of the one immediately\n            // after it in the direction in which the user is dragging, or vice versa. We add it to the\n            // offset in order to push the element to where it will be when it's inline and is influenced\n            // by the `margin` of its siblings.\n            if (delta === -1) {\n                siblingOffset -= immediateSibling.clientRect[start] - currentPosition[end];\n            }\n            else {\n                siblingOffset += currentPosition[start] - immediateSibling.clientRect[end];\n            }\n        }\n        return siblingOffset;\n    }\n    /**\n     * Gets the offset in pixels by which the item that is being dragged should be moved.\n     * @private\n     * @param {?} currentPosition Current position of the item.\n     * @param {?} newPosition Position of the item where the current item should be moved.\n     * @param {?} delta Direction in which the user is moving.\n     * @return {?}\n     */\n    _getItemOffsetPx(currentPosition, newPosition, delta) {\n        /** @type {?} */\n        const isHorizontal = this._orientation === 'horizontal';\n        /** @type {?} */\n        let itemOffset = isHorizontal ? newPosition.left - currentPosition.left :\n            newPosition.top - currentPosition.top;\n        // Account for differences in the item width/height.\n        if (delta === -1) {\n            itemOffset += isHorizontal ? newPosition.width - currentPosition.width :\n                newPosition.height - currentPosition.height;\n        }\n        return itemOffset;\n    }\n    /**\n     * Checks if pointer is entering in the first position\n     * @private\n     * @param {?} pointerX Position of the user's pointer along the X axis.\n     * @param {?} pointerY Position of the user's pointer along the Y axis.\n     * @return {?}\n     */\n    _shouldEnterAsFirstChild(pointerX, pointerY) {\n        if (!this._activeDraggables.length) {\n            return false;\n        }\n        /** @type {?} */\n        const itemPositions = this._itemPositions;\n        /** @type {?} */\n        const isHorizontal = this._orientation === 'horizontal';\n        // `itemPositions` are sorted by position while `activeDraggables` are sorted by child index\n        // check if container is using some sort of \"reverse\" ordering (eg: flex-direction: row-reverse)\n        /** @type {?} */\n        const reversed = itemPositions[0].drag !== this._activeDraggables[0];\n        if (reversed) {\n            /** @type {?} */\n            const lastItemRect = itemPositions[itemPositions.length - 1].clientRect;\n            return isHorizontal ? pointerX >= lastItemRect.right : pointerY >= lastItemRect.bottom;\n        }\n        else {\n            /** @type {?} */\n            const firstItemRect = itemPositions[0].clientRect;\n            return isHorizontal ? pointerX <= firstItemRect.left : pointerY <= firstItemRect.top;\n        }\n    }\n    /**\n     * Gets the index of an item in the drop container, based on the position of the user's pointer.\n     * @private\n     * @param {?} item Item that is being sorted.\n     * @param {?} pointerX Position of the user's pointer along the X axis.\n     * @param {?} pointerY Position of the user's pointer along the Y axis.\n     * @param {?=} delta Direction in which the user is moving their pointer.\n     * @return {?}\n     */\n    _getItemIndexFromPointerPosition(item, pointerX, pointerY, delta) {\n        /** @type {?} */\n        const isHorizontal = this._orientation === 'horizontal';\n        return findIndex(this._itemPositions, (/**\n         * @param {?} __0\n         * @param {?} _\n         * @param {?} array\n         * @return {?}\n         */\n        ({ drag, clientRect }, _, array) => {\n            if (drag === item) {\n                // If there's only one item left in the container, it must be\n                // the dragged item itself so we use it as a reference.\n                return array.length < 2;\n            }\n            if (delta) {\n                /** @type {?} */\n                const direction = isHorizontal ? delta.x : delta.y;\n                // If the user is still hovering over the same item as last time, and they didn't change\n                // the direction in which they're dragging, we don't consider it a direction swap.\n                if (drag === this._previousSwap.drag && direction === this._previousSwap.delta) {\n                    return false;\n                }\n            }\n            return isHorizontal ?\n                // Round these down since most browsers report client rects with\n                // sub-pixel precision, whereas the pointer coordinates are rounded to pixels.\n                pointerX >= Math.floor(clientRect.left) && pointerX < Math.floor(clientRect.right) :\n                pointerY >= Math.floor(clientRect.top) && pointerY < Math.floor(clientRect.bottom);\n        }));\n    }\n    /**\n     * Caches the current items in the list and their positions.\n     * @private\n     * @return {?}\n     */\n    _cacheItems() {\n        this._activeDraggables = this._draggables.slice();\n        this._cacheItemPositions();\n        this._cacheParentPositions();\n    }\n    /**\n     * Checks whether the user's pointer is positioned over the container.\n     * @param {?} x Pointer position along the X axis.\n     * @param {?} y Pointer position along the Y axis.\n     * @return {?}\n     */\n    _isOverContainer(x, y) {\n        return isInsideClientRect(this._clientRect, x, y);\n    }\n    /**\n     * Figures out whether an item should be moved into a sibling\n     * drop container, based on its current position.\n     * @param {?} item Drag item that is being moved.\n     * @param {?} x Position of the item along the X axis.\n     * @param {?} y Position of the item along the Y axis.\n     * @return {?}\n     */\n    _getSiblingContainerFromPosition(item, x, y) {\n        return this._siblings.find((/**\n         * @param {?} sibling\n         * @return {?}\n         */\n        sibling => sibling._canReceive(item, x, y)));\n    }\n    /**\n     * Checks whether the drop list can receive the passed-in item.\n     * @param {?} item Item that is being dragged into the list.\n     * @param {?} x Position of the item along the X axis.\n     * @param {?} y Position of the item along the Y axis.\n     * @return {?}\n     */\n    _canReceive(item, x, y) {\n        if (!isInsideClientRect(this._clientRect, x, y) || !this.enterPredicate(item, this)) {\n            return false;\n        }\n        /** @type {?} */\n        const elementFromPoint = (/** @type {?} */ (this._getShadowRoot().elementFromPoint(x, y)));\n        // If there's no element at the pointer position, then\n        // the client rect is probably scrolled out of the view.\n        if (!elementFromPoint) {\n            return false;\n        }\n        /** @type {?} */\n        const nativeElement = coerceElement(this.element);\n        // The `ClientRect`, that we're using to find the container over which the user is\n        // hovering, doesn't give us any information on whether the element has been scrolled\n        // out of the view or whether it's overlapping with other containers. This means that\n        // we could end up transferring the item into a container that's invisible or is positioned\n        // below another one. We use the result from `elementFromPoint` to get the top-most element\n        // at the pointer position and to find whether it's one of the intersecting drop containers.\n        return elementFromPoint === nativeElement || nativeElement.contains(elementFromPoint);\n    }\n    /**\n     * Called by one of the connected drop lists when a dragging sequence has started.\n     * @param {?} sibling Sibling in which dragging has started.\n     * @return {?}\n     */\n    _startReceiving(sibling) {\n        /** @type {?} */\n        const activeSiblings = this._activeSiblings;\n        if (!activeSiblings.has(sibling)) {\n            activeSiblings.add(sibling);\n            this._cacheParentPositions();\n            this._listenToScrollEvents();\n        }\n    }\n    /**\n     * Called by a connected drop list when dragging has stopped.\n     * @param {?} sibling Sibling whose dragging has stopped.\n     * @return {?}\n     */\n    _stopReceiving(sibling) {\n        this._activeSiblings.delete(sibling);\n        this._viewportScrollSubscription.unsubscribe();\n    }\n    /**\n     * Starts listening to scroll events on the viewport.\n     * Used for updating the internal state of the list.\n     * @private\n     * @return {?}\n     */\n    _listenToScrollEvents() {\n        this._viewportScrollSubscription = this._dragDropRegistry.scroll.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (this.isDragging()) {\n                /** @type {?} */\n                const scrollDifference = this._parentPositions.handleScroll(event);\n                if (scrollDifference) {\n                    // Since we know the amount that the user has scrolled we can shift all of the\n                    // client rectangles ourselves. This is cheaper than re-measuring everything and\n                    // we can avoid inconsistent behavior where we might be measuring the element before\n                    // its position has changed.\n                    this._itemPositions.forEach((/**\n                     * @param {?} __0\n                     * @return {?}\n                     */\n                    ({ clientRect }) => {\n                        adjustClientRect(clientRect, scrollDifference.top, scrollDifference.left);\n                    }));\n                    // We need two loops for this, because we want all of the cached\n                    // positions to be up-to-date before we re-sort the item.\n                    this._itemPositions.forEach((/**\n                     * @param {?} __0\n                     * @return {?}\n                     */\n                    ({ drag }) => {\n                        if (this._dragDropRegistry.isDragging(drag)) {\n                            // We need to re-sort the item manually, because the pointer move\n                            // events won't be dispatched while the user is scrolling.\n                            drag._sortFromLastPointerPosition();\n                        }\n                    }));\n                }\n            }\n            else if (this.isReceiving()) {\n                this._cacheParentPositions();\n            }\n        }));\n    }\n    /**\n     * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n     * than saving it in property directly on init, because we want to resolve it as late as possible\n     * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n     * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n     * @private\n     * @return {?}\n     */\n    _getShadowRoot() {\n        if (!this._cachedShadowRoot) {\n            /** @type {?} */\n            const shadowRoot = (/** @type {?} */ (_getShadowRoot(coerceElement(this.element))));\n            this._cachedShadowRoot = shadowRoot || this._document;\n        }\n        return this._cachedShadowRoot;\n    }\n}\nif (false) {\n    /**\n     * Element that the drop list is attached to.\n     * @type {?}\n     */\n    DropListRef.prototype.element;\n    /**\n     * Whether starting a dragging sequence from this container is disabled.\n     * @type {?}\n     */\n    DropListRef.prototype.disabled;\n    /**\n     * Whether sorting items within the list is disabled.\n     * @type {?}\n     */\n    DropListRef.prototype.sortingDisabled;\n    /**\n     * Locks the position of the draggable elements inside the container along the specified axis.\n     * @type {?}\n     */\n    DropListRef.prototype.lockAxis;\n    /**\n     * Whether auto-scrolling the view when the user\n     * moves their pointer close to the edges is disabled.\n     * @type {?}\n     */\n    DropListRef.prototype.autoScrollDisabled;\n    /**\n     * Function that is used to determine whether an item\n     * is allowed to be moved into a drop container.\n     * @type {?}\n     */\n    DropListRef.prototype.enterPredicate;\n    /**\n     * Emits right before dragging has started.\n     * @type {?}\n     */\n    DropListRef.prototype.beforeStarted;\n    /**\n     * Emits when the user has moved a new drag item into this container.\n     * @type {?}\n     */\n    DropListRef.prototype.entered;\n    /**\n     * Emits when the user removes an item from the container\n     * by dragging it into another container.\n     * @type {?}\n     */\n    DropListRef.prototype.exited;\n    /**\n     * Emits when the user drops an item inside the container.\n     * @type {?}\n     */\n    DropListRef.prototype.dropped;\n    /**\n     * Emits as the user is swapping items while actively dragging.\n     * @type {?}\n     */\n    DropListRef.prototype.sorted;\n    /**\n     * Arbitrary data that can be attached to the drop list.\n     * @type {?}\n     */\n    DropListRef.prototype.data;\n    /**\n     * Whether an item in the list is being dragged.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._isDragging;\n    /**\n     * Cache of the dimensions of all the items inside the container.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._itemPositions;\n    /**\n     * Keeps track of the positions of any parent scrollable elements.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._parentPositions;\n    /**\n     * Cached `ClientRect` of the drop list.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._clientRect;\n    /**\n     * Draggable items that are currently active inside the container. Includes the items\n     * from `_draggables`, as well as any items that have been dragged in, but haven't\n     * been dropped yet.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._activeDraggables;\n    /**\n     * Keeps track of the item that was last swapped with the dragged item, as\n     * well as what direction the pointer was moving in when the swap occured.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._previousSwap;\n    /**\n     * Draggable items in the container.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._draggables;\n    /**\n     * Drop lists that are connected to the current one.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._siblings;\n    /**\n     * Direction in which the list is oriented.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._orientation;\n    /**\n     * Connected siblings that currently have a dragged item.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._activeSiblings;\n    /**\n     * Layout direction of the drop list.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._direction;\n    /**\n     * Subscription to the window being scrolled.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._viewportScrollSubscription;\n    /**\n     * Vertical direction in which the list is currently scrolling.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._verticalScrollDirection;\n    /**\n     * Horizontal direction in which the list is currently scrolling.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._horizontalScrollDirection;\n    /**\n     * Node that is being auto-scrolled.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._scrollNode;\n    /**\n     * Used to signal to the current auto-scroll sequence when to stop.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._stopScrollTimers;\n    /**\n     * Shadow root of the current element. Necessary for `elementFromPoint` to resolve correctly.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._cachedShadowRoot;\n    /**\n     * Reference to the document.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._document;\n    /**\n     * Elements that can be scrolled while the user is dragging.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._scrollableElements;\n    /**\n     * Initial value for the element's `scroll-snap-type` style.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._initialScrollSnap;\n    /**\n     * Starts the interval that'll auto-scroll the element.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._startScrollInterval;\n    /**\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._dragDropRegistry;\n    /**\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._viewportRuler;\n}\n/**\n * Finds the index of an item that matches a predicate function. Used as an equivalent\n * of `Array.prototype.findIndex` which isn't part of the standard Google typings.\n * @template T\n * @param {?} array Array in which to look for matches.\n * @param {?} predicate Function used to determine whether an item is a match.\n * @return {?}\n */\nfunction findIndex(array, predicate) {\n    for (let i = 0; i < array.length; i++) {\n        if (predicate(array[i], i, array)) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Increments the vertical scroll position of a node.\n * @param {?} node Node whose scroll position should change.\n * @param {?} amount Amount of pixels that the `node` should be scrolled.\n * @return {?}\n */\nfunction incrementVerticalScroll(node, amount) {\n    if (node === window) {\n        ((/** @type {?} */ (node))).scrollBy(0, amount);\n    }\n    else {\n        // Ideally we could use `Element.scrollBy` here as well, but IE and Edge don't support it.\n        ((/** @type {?} */ (node))).scrollTop += amount;\n    }\n}\n/**\n * Increments the horizontal scroll position of a node.\n * @param {?} node Node whose scroll position should change.\n * @param {?} amount Amount of pixels that the `node` should be scrolled.\n * @return {?}\n */\nfunction incrementHorizontalScroll(node, amount) {\n    if (node === window) {\n        ((/** @type {?} */ (node))).scrollBy(amount, 0);\n    }\n    else {\n        // Ideally we could use `Element.scrollBy` here as well, but IE and Edge don't support it.\n        ((/** @type {?} */ (node))).scrollLeft += amount;\n    }\n}\n/**\n * Gets whether the vertical auto-scroll direction of a node.\n * @param {?} clientRect Dimensions of the node.\n * @param {?} pointerY Position of the user's pointer along the y axis.\n * @return {?}\n */\nfunction getVerticalScrollDirection(clientRect, pointerY) {\n    const { top, bottom, height } = clientRect;\n    /** @type {?} */\n    const yThreshold = height * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerY >= top - yThreshold && pointerY <= top + yThreshold) {\n        return 1 /* UP */;\n    }\n    else if (pointerY >= bottom - yThreshold && pointerY <= bottom + yThreshold) {\n        return 2 /* DOWN */;\n    }\n    return 0 /* NONE */;\n}\n/**\n * Gets whether the horizontal auto-scroll direction of a node.\n * @param {?} clientRect Dimensions of the node.\n * @param {?} pointerX Position of the user's pointer along the x axis.\n * @return {?}\n */\nfunction getHorizontalScrollDirection(clientRect, pointerX) {\n    const { left, right, width } = clientRect;\n    /** @type {?} */\n    const xThreshold = width * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerX >= left - xThreshold && pointerX <= left + xThreshold) {\n        return 1 /* LEFT */;\n    }\n    else if (pointerX >= right - xThreshold && pointerX <= right + xThreshold) {\n        return 2 /* RIGHT */;\n    }\n    return 0 /* NONE */;\n}\n/**\n * Gets the directions in which an element node should be scrolled,\n * assuming that the user's pointer is already within it scrollable region.\n * @param {?} element Element for which we should calculate the scroll direction.\n * @param {?} clientRect Bounding client rectangle of the element.\n * @param {?} pointerX Position of the user's pointer along the x axis.\n * @param {?} pointerY Position of the user's pointer along the y axis.\n * @return {?}\n */\nfunction getElementScrollDirections(element, clientRect, pointerX, pointerY) {\n    /** @type {?} */\n    const computedVertical = getVerticalScrollDirection(clientRect, pointerY);\n    /** @type {?} */\n    const computedHorizontal = getHorizontalScrollDirection(clientRect, pointerX);\n    /** @type {?} */\n    let verticalScrollDirection = 0 /* NONE */;\n    /** @type {?} */\n    let horizontalScrollDirection = 0 /* NONE */;\n    // Note that we here we do some extra checks for whether the element is actually scrollable in\n    // a certain direction and we only assign the scroll direction if it is. We do this so that we\n    // can allow other elements to be scrolled, if the current element can't be scrolled anymore.\n    // This allows us to handle cases where the scroll regions of two scrollable elements overlap.\n    if (computedVertical) {\n        /** @type {?} */\n        const scrollTop = element.scrollTop;\n        if (computedVertical === 1 /* UP */) {\n            if (scrollTop > 0) {\n                verticalScrollDirection = 1 /* UP */;\n            }\n        }\n        else if (element.scrollHeight - scrollTop > element.clientHeight) {\n            verticalScrollDirection = 2 /* DOWN */;\n        }\n    }\n    if (computedHorizontal) {\n        /** @type {?} */\n        const scrollLeft = element.scrollLeft;\n        if (computedHorizontal === 1 /* LEFT */) {\n            if (scrollLeft > 0) {\n                horizontalScrollDirection = 1 /* LEFT */;\n            }\n        }\n        else if (element.scrollWidth - scrollLeft > element.clientWidth) {\n            horizontalScrollDirection = 2 /* RIGHT */;\n        }\n    }\n    return [verticalScrollDirection, horizontalScrollDirection];\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/drag-drop-registry.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Event options that can be used to bind an active, capturing event.\n * @type {?}\n */\nconst activeCapturingEventOptions = normalizePassiveListenerOptions({\n    passive: false,\n    capture: true\n});\n/**\n * Service that keeps track of all the drag item and drop container\n * instances, and manages global event listeners on the `document`.\n * \\@docs-private\n * @template I, C\n */\n// Note: this class is generic, rather than referencing CdkDrag and CdkDropList directly, in order\n// to avoid circular imports. If we were to reference them here, importing the registry into the\n// classes that are registering themselves will introduce a circular import.\nclass DragDropRegistry {\n    /**\n     * @param {?} _ngZone\n     * @param {?} _document\n     */\n    constructor(_ngZone, _document) {\n        this._ngZone = _ngZone;\n        /**\n         * Registered drop container instances.\n         */\n        this._dropInstances = new Set();\n        /**\n         * Registered drag item instances.\n         */\n        this._dragInstances = new Set();\n        /**\n         * Drag item instances that are currently being dragged.\n         */\n        this._activeDragInstances = new Set();\n        /**\n         * Keeps track of the event listeners that we've bound to the `document`.\n         */\n        this._globalListeners = new Map();\n        /**\n         * Emits the `touchmove` or `mousemove` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerMove = new Subject();\n        /**\n         * Emits the `touchend` or `mouseup` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerUp = new Subject();\n        /**\n         * Emits when the viewport has been scrolled while the user is dragging an item.\n         */\n        this.scroll = new Subject();\n        /**\n         * Event listener that will prevent the default browser action while the user is dragging.\n         * @param event Event whose default action should be prevented.\n         */\n        this._preventDefaultWhileDragging = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            if (this._activeDragInstances.size) {\n                event.preventDefault();\n            }\n        });\n        this._document = _document;\n    }\n    /**\n     * Adds a drop container to the registry.\n     * @param {?} drop\n     * @return {?}\n     */\n    registerDropContainer(drop) {\n        if (!this._dropInstances.has(drop)) {\n            this._dropInstances.add(drop);\n        }\n    }\n    /**\n     * Adds a drag item instance to the registry.\n     * @param {?} drag\n     * @return {?}\n     */\n    registerDragItem(drag) {\n        this._dragInstances.add(drag);\n        // The `touchmove` event gets bound once, ahead of time, because WebKit\n        // won't preventDefault on a dynamically-added `touchmove` listener.\n        // See https://bugs.webkit.org/show_bug.cgi?id=184250.\n        if (this._dragInstances.size === 1) {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                // The event handler has to be explicitly active,\n                // because newer browsers make it passive by default.\n                this._document.addEventListener('touchmove', this._preventDefaultWhileDragging, activeCapturingEventOptions);\n            }));\n        }\n    }\n    /**\n     * Removes a drop container from the registry.\n     * @param {?} drop\n     * @return {?}\n     */\n    removeDropContainer(drop) {\n        this._dropInstances.delete(drop);\n    }\n    /**\n     * Removes a drag item instance from the registry.\n     * @param {?} drag\n     * @return {?}\n     */\n    removeDragItem(drag) {\n        this._dragInstances.delete(drag);\n        this.stopDragging(drag);\n        if (this._dragInstances.size === 0) {\n            this._document.removeEventListener('touchmove', this._preventDefaultWhileDragging, activeCapturingEventOptions);\n        }\n    }\n    /**\n     * Starts the dragging sequence for a drag instance.\n     * @param {?} drag Drag instance which is being dragged.\n     * @param {?} event Event that initiated the dragging.\n     * @return {?}\n     */\n    startDragging(drag, event) {\n        // Do not process the same drag twice to avoid memory leaks and redundant listeners\n        if (this._activeDragInstances.has(drag)) {\n            return;\n        }\n        this._activeDragInstances.add(drag);\n        if (this._activeDragInstances.size === 1) {\n            /** @type {?} */\n            const isTouchEvent = event.type.startsWith('touch');\n            /** @type {?} */\n            const moveEvent = isTouchEvent ? 'touchmove' : 'mousemove';\n            /** @type {?} */\n            const upEvent = isTouchEvent ? 'touchend' : 'mouseup';\n            // We explicitly bind __active__ listeners here, because newer browsers will default to\n            // passive ones for `mousemove` and `touchmove`. The events need to be active, because we\n            // use `preventDefault` to prevent the page from scrolling while the user is dragging.\n            this._globalListeners\n                .set(moveEvent, {\n                handler: (/**\n                 * @param {?} e\n                 * @return {?}\n                 */\n                (e) => this.pointerMove.next((/** @type {?} */ (e)))),\n                options: activeCapturingEventOptions\n            })\n                .set(upEvent, {\n                handler: (/**\n                 * @param {?} e\n                 * @return {?}\n                 */\n                (e) => this.pointerUp.next((/** @type {?} */ (e)))),\n                options: true\n            })\n                .set('scroll', {\n                handler: (/**\n                 * @param {?} e\n                 * @return {?}\n                 */\n                (e) => this.scroll.next(e)),\n                // Use capturing so that we pick up scroll changes in any scrollable nodes that aren't\n                // the document. See https://github.com/angular/components/issues/17144.\n                options: true\n            })\n                // Preventing the default action on `mousemove` isn't enough to disable text selection\n                // on Safari so we need to prevent the selection event as well. Alternatively this can\n                // be done by setting `user-select: none` on the `body`, however it has causes a style\n                // recalculation which can be expensive on pages with a lot of elements.\n                .set('selectstart', {\n                handler: this._preventDefaultWhileDragging,\n                options: activeCapturingEventOptions\n            });\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                this._globalListeners.forEach((/**\n                 * @param {?} config\n                 * @param {?} name\n                 * @return {?}\n                 */\n                (config, name) => {\n                    this._document.addEventListener(name, config.handler, config.options);\n                }));\n            }));\n        }\n    }\n    /**\n     * Stops dragging a drag item instance.\n     * @param {?} drag\n     * @return {?}\n     */\n    stopDragging(drag) {\n        this._activeDragInstances.delete(drag);\n        if (this._activeDragInstances.size === 0) {\n            this._clearGlobalListeners();\n        }\n    }\n    /**\n     * Gets whether a drag item instance is currently being dragged.\n     * @param {?} drag\n     * @return {?}\n     */\n    isDragging(drag) {\n        return this._activeDragInstances.has(drag);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._dragInstances.forEach((/**\n         * @param {?} instance\n         * @return {?}\n         */\n        instance => this.removeDragItem(instance)));\n        this._dropInstances.forEach((/**\n         * @param {?} instance\n         * @return {?}\n         */\n        instance => this.removeDropContainer(instance)));\n        this._clearGlobalListeners();\n        this.pointerMove.complete();\n        this.pointerUp.complete();\n    }\n    /**\n     * Clears out the global event listeners from the `document`.\n     * @private\n     * @return {?}\n     */\n    _clearGlobalListeners() {\n        this._globalListeners.forEach((/**\n         * @param {?} config\n         * @param {?} name\n         * @return {?}\n         */\n        (config, name) => {\n            this._document.removeEventListener(name, config.handler, config.options);\n        }));\n        this._globalListeners.clear();\n    }\n}\nDragDropRegistry.ɵfac = function DragDropRegistry_Factory(t) { return new (t || DragDropRegistry)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT)); };\n/** @nocollapse */\nDragDropRegistry.ctorParameters = () => [\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ DragDropRegistry.ɵprov = ɵɵdefineInjectable({ factory: function DragDropRegistry_Factory() { return new DragDropRegistry(ɵɵinject(NgZone), ɵɵinject(DOCUMENT)); }, token: DragDropRegistry, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DragDropRegistry, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    DragDropRegistry.prototype._document;\n    /**\n     * Registered drop container instances.\n     * @type {?}\n     * @private\n     */\n    DragDropRegistry.prototype._dropInstances;\n    /**\n     * Registered drag item instances.\n     * @type {?}\n     * @private\n     */\n    DragDropRegistry.prototype._dragInstances;\n    /**\n     * Drag item instances that are currently being dragged.\n     * @type {?}\n     * @private\n     */\n    DragDropRegistry.prototype._activeDragInstances;\n    /**\n     * Keeps track of the event listeners that we've bound to the `document`.\n     * @type {?}\n     * @private\n     */\n    DragDropRegistry.prototype._globalListeners;\n    /**\n     * Emits the `touchmove` or `mousemove` events that are dispatched\n     * while the user is dragging a drag item instance.\n     * @type {?}\n     */\n    DragDropRegistry.prototype.pointerMove;\n    /**\n     * Emits the `touchend` or `mouseup` events that are dispatched\n     * while the user is dragging a drag item instance.\n     * @type {?}\n     */\n    DragDropRegistry.prototype.pointerUp;\n    /**\n     * Emits when the viewport has been scrolled while the user is dragging an item.\n     * @type {?}\n     */\n    DragDropRegistry.prototype.scroll;\n    /**\n     * Event listener that will prevent the default browser action while the user is dragging.\n     * \\@param event Event whose default action should be prevented.\n     * @type {?}\n     * @private\n     */\n    DragDropRegistry.prototype._preventDefaultWhileDragging;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragDropRegistry.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/drag-drop.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default configuration to be used when creating a `DragRef`.\n * @type {?}\n */\nconst DEFAULT_CONFIG = {\n    dragStartThreshold: 5,\n    pointerDirectionChangeThreshold: 5\n};\n/**\n * Service that allows for drag-and-drop functionality to be attached to DOM elements.\n */\nclass DragDrop {\n    /**\n     * @param {?} _document\n     * @param {?} _ngZone\n     * @param {?} _viewportRuler\n     * @param {?} _dragDropRegistry\n     */\n    constructor(_document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n    }\n    /**\n     * Turns an element into a draggable item.\n     * @template T\n     * @param {?} element Element to which to attach the dragging functionality.\n     * @param {?=} config Object used to configure the dragging behavior.\n     * @return {?}\n     */\n    createDrag(element, config = DEFAULT_CONFIG) {\n        return new DragRef(element, config, this._document, this._ngZone, this._viewportRuler, this._dragDropRegistry);\n    }\n    /**\n     * Turns an element into a drop list.\n     * @template T\n     * @param {?} element Element to which to attach the drop list functionality.\n     * @return {?}\n     */\n    createDropList(element) {\n        return new DropListRef(element, this._dragDropRegistry, this._document, this._ngZone, this._viewportRuler);\n    }\n}\nDragDrop.ɵfac = function DragDrop_Factory(t) { return new (t || DragDrop)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵinject(DragDropRegistry)); };\n/** @nocollapse */\nDragDrop.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: NgZone },\n    { type: ViewportRuler },\n    { type: DragDropRegistry }\n];\n/** @nocollapse */ DragDrop.ɵprov = ɵɵdefineInjectable({ factory: function DragDrop_Factory() { return new DragDrop(ɵɵinject(DOCUMENT), ɵɵinject(NgZone), ɵɵinject(ViewportRuler), ɵɵinject(DragDropRegistry)); }, token: DragDrop, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DragDrop, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc1.ViewportRuler }, { type: DragDropRegistry }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    DragDrop.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragDrop.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragDrop.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragDrop.prototype._dragDropRegistry;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/drag-events.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Event emitted when the user starts dragging a draggable.\n * @record\n * @template T\n */\nfunction CdkDragStart() { }\nif (false) {\n    /**\n     * Draggable that emitted the event.\n     * @type {?}\n     */\n    CdkDragStart.prototype.source;\n}\n/**\n * Event emitted when the user releases an item, before any animations have started.\n * @record\n * @template T\n */\nfunction CdkDragRelease() { }\nif (false) {\n    /**\n     * Draggable that emitted the event.\n     * @type {?}\n     */\n    CdkDragRelease.prototype.source;\n}\n/**\n * Event emitted when the user stops dragging a draggable.\n * @record\n * @template T\n */\nfunction CdkDragEnd() { }\nif (false) {\n    /**\n     * Draggable that emitted the event.\n     * @type {?}\n     */\n    CdkDragEnd.prototype.source;\n    /**\n     * Distance in pixels that the user has dragged since the drag sequence started.\n     * @type {?}\n     */\n    CdkDragEnd.prototype.distance;\n}\n/**\n * Event emitted when the user moves an item into a new drop container.\n * @record\n * @template T, I\n */\nfunction CdkDragEnter() { }\nif (false) {\n    /**\n     * Container into which the user has moved the item.\n     * @type {?}\n     */\n    CdkDragEnter.prototype.container;\n    /**\n     * Item that was moved into the container.\n     * @type {?}\n     */\n    CdkDragEnter.prototype.item;\n    /**\n     * Index at which the item has entered the container.\n     * @type {?}\n     */\n    CdkDragEnter.prototype.currentIndex;\n}\n/**\n * Event emitted when the user removes an item from a\n * drop container by moving it into another one.\n * @record\n * @template T, I\n */\nfunction CdkDragExit() { }\nif (false) {\n    /**\n     * Container from which the user has a removed an item.\n     * @type {?}\n     */\n    CdkDragExit.prototype.container;\n    /**\n     * Item that was removed from the container.\n     * @type {?}\n     */\n    CdkDragExit.prototype.item;\n}\n/**\n * Event emitted when the user drops a draggable item inside a drop container.\n * @record\n * @template T, O\n */\nfunction CdkDragDrop() { }\nif (false) {\n    /**\n     * Index of the item when it was picked up.\n     * @type {?}\n     */\n    CdkDragDrop.prototype.previousIndex;\n    /**\n     * Current index of the item.\n     * @type {?}\n     */\n    CdkDragDrop.prototype.currentIndex;\n    /**\n     * Item that is being dropped.\n     * @type {?}\n     */\n    CdkDragDrop.prototype.item;\n    /**\n     * Container in which the item was dropped.\n     * @type {?}\n     */\n    CdkDragDrop.prototype.container;\n    /**\n     * Container from which the item was picked up. Can be the same as the `container`.\n     * @type {?}\n     */\n    CdkDragDrop.prototype.previousContainer;\n    /**\n     * Whether the user's pointer was over the container when the item was dropped.\n     * @type {?}\n     */\n    CdkDragDrop.prototype.isPointerOverContainer;\n    /**\n     * Distance in pixels that the user has dragged since the drag sequence started.\n     * @type {?}\n     */\n    CdkDragDrop.prototype.distance;\n}\n/**\n * Event emitted as the user is dragging a draggable item.\n * @record\n * @template T\n */\nfunction CdkDragMove() { }\nif (false) {\n    /**\n     * Item that is being dragged.\n     * @type {?}\n     */\n    CdkDragMove.prototype.source;\n    /**\n     * Position of the user's pointer on the page.\n     * @type {?}\n     */\n    CdkDragMove.prototype.pointerPosition;\n    /**\n     * Native event that is causing the dragging.\n     * @type {?}\n     */\n    CdkDragMove.prototype.event;\n    /**\n     * Distance in pixels that the user has dragged since the drag sequence started.\n     * @type {?}\n     */\n    CdkDragMove.prototype.distance;\n    /**\n     * Indicates the direction in which the user is dragging the element along each axis.\n     * `1` means that the position is increasing (e.g. the user is moving to the right or downwards),\n     * whereas `-1` means that it's decreasing (they're moving to the left or upwards). `0` means\n     * that the position hasn't changed.\n     * @type {?}\n     */\n    CdkDragMove.prototype.delta;\n}\n/**\n * Event emitted when the user swaps the position of two drag items.\n * @record\n * @template T, I\n */\nfunction CdkDragSortEvent() { }\nif (false) {\n    /**\n     * Index from which the item was sorted previously.\n     * @type {?}\n     */\n    CdkDragSortEvent.prototype.previousIndex;\n    /**\n     * Index that the item is currently in.\n     * @type {?}\n     */\n    CdkDragSortEvent.prototype.currentIndex;\n    /**\n     * Container that the item belongs to.\n     * @type {?}\n     */\n    CdkDragSortEvent.prototype.container;\n    /**\n     * Item that is being sorted.\n     * @type {?}\n     */\n    CdkDragSortEvent.prototype.item;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/drag-parent.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used for a `CdkDrag` to provide itself as a parent to the\n * drag-specific child directive (`CdkDragHandle`, `CdkDragPreview` etc.). Used primarily\n * to avoid circular imports.\n * \\@docs-private\n * @type {?}\n */\nconst CDK_DRAG_PARENT = new InjectionToken('CDK_DRAG_PARENT');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/directives/drag-handle.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Handle that can be used to drag and CdkDrag instance.\n */\nclass CdkDragHandle {\n    /**\n     * @param {?} element\n     * @param {?=} parentDrag\n     */\n    constructor(element, parentDrag) {\n        this.element = element;\n        /**\n         * Emits when the state of the handle has changed.\n         */\n        this._stateChanges = new Subject();\n        this._disabled = false;\n        this._parentDrag = parentDrag;\n        toggleNativeDragInteractions(element.nativeElement, false);\n    }\n    /**\n     * Whether starting to drag through this handle is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._stateChanges.next(this);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nCdkDragHandle.ɵfac = function CdkDragHandle_Factory(t) { return new (t || CdkDragHandle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_PARENT, 8)); };\nCdkDragHandle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDragHandle, selectors: [[\"\", \"cdkDragHandle\", \"\"]], hostAttrs: [1, \"cdk-drag-handle\"], inputs: { disabled: [\"cdkDragHandleDisabled\", \"disabled\"] } });\n/** @nocollapse */\nCdkDragHandle.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_DRAG_PARENT,] }, { type: Optional }] }\n];\nCdkDragHandle.propDecorators = {\n    disabled: [{ type: Input, args: ['cdkDragHandleDisabled',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDragHandle, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDragHandle]',\n                host: {\n                    'class': 'cdk-drag-handle'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_DRAG_PARENT]\n            }, {\n                type: Optional\n            }] }]; }, { disabled: [{\n            type: Input,\n            args: ['cdkDragHandleDisabled']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkDragHandle.ngAcceptInputType_disabled;\n    /**\n     * Closest parent draggable instance.\n     * @type {?}\n     */\n    CdkDragHandle.prototype._parentDrag;\n    /**\n     * Emits when the state of the handle has changed.\n     * @type {?}\n     */\n    CdkDragHandle.prototype._stateChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDragHandle.prototype._disabled;\n    /** @type {?} */\n    CdkDragHandle.prototype.element;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/directives/drag-placeholder.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Element that will be used as a template for the placeholder of a CdkDrag when\n * it is being dragged. The placeholder is displayed in place of the element being dragged.\n * @template T\n */\nclass CdkDragPlaceholder {\n    /**\n     * @param {?} templateRef\n     */\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nCdkDragPlaceholder.ɵfac = function CdkDragPlaceholder_Factory(t) { return new (t || CdkDragPlaceholder)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkDragPlaceholder.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDragPlaceholder, selectors: [[\"ng-template\", \"cdkDragPlaceholder\", \"\"]], inputs: { data: \"data\" } });\n/** @nocollapse */\nCdkDragPlaceholder.ctorParameters = () => [\n    { type: TemplateRef }\n];\nCdkDragPlaceholder.propDecorators = {\n    data: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDragPlaceholder, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[cdkDragPlaceholder]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, { data: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Context data to be added to the placeholder template instance.\n     * @type {?}\n     */\n    CdkDragPlaceholder.prototype.data;\n    /** @type {?} */\n    CdkDragPlaceholder.prototype.templateRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/directives/drag-preview.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Element that will be used as a template for the preview\n * of a CdkDrag when it is being dragged.\n * @template T\n */\nclass CdkDragPreview {\n    /**\n     * @param {?} templateRef\n     */\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        this._matchSize = false;\n    }\n    /**\n     * Whether the preview should preserve the same size as the item that is being dragged.\n     * @return {?}\n     */\n    get matchSize() { return this._matchSize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matchSize(value) { this._matchSize = coerceBooleanProperty(value); }\n}\nCdkDragPreview.ɵfac = function CdkDragPreview_Factory(t) { return new (t || CdkDragPreview)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkDragPreview.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDragPreview, selectors: [[\"ng-template\", \"cdkDragPreview\", \"\"]], inputs: { matchSize: \"matchSize\", data: \"data\" } });\n/** @nocollapse */\nCdkDragPreview.ctorParameters = () => [\n    { type: TemplateRef }\n];\nCdkDragPreview.propDecorators = {\n    data: [{ type: Input }],\n    matchSize: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDragPreview, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[cdkDragPreview]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, { matchSize: [{\n            type: Input\n        }], data: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkDragPreview.ngAcceptInputType_matchSize;\n    /**\n     * Context data to be added to the preview template instance.\n     * @type {?}\n     */\n    CdkDragPreview.prototype.data;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDragPreview.prototype._matchSize;\n    /** @type {?} */\n    CdkDragPreview.prototype.templateRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/directives/config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to configure the\n * behavior of the drag&drop-related components.\n * @type {?}\n */\nconst CDK_DRAG_CONFIG = new InjectionToken('CDK_DRAG_CONFIG');\n/**\n * Object that can be used to configure the drag\n * items and drop lists within a module or a component.\n * @record\n */\nfunction DragDropConfig() { }\nif (false) {\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.lockAxis;\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.dragStartDelay;\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.constrainPosition;\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.previewClass;\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.boundaryElement;\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.rootElementSelector;\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.draggingDisabled;\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.sortingDisabled;\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.listAutoScrollDisabled;\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.listOrientation;\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.zIndex;\n}\n/**\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * \\@docs-private\n * @return {?}\n */\nfunction CDK_DRAG_CONFIG_FACTORY() {\n    return { dragStartThreshold: 5, pointerDirectionChangeThreshold: 5 };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/directives/drag.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that is used to provide a CdkDropList instance to CdkDrag.\n * Used for avoiding circular imports.\n * @type {?}\n */\nconst CDK_DROP_LIST = new InjectionToken('CDK_DROP_LIST');\n/**\n * Element that can be moved inside a CdkDropList container.\n * @template T\n */\nclass CdkDrag {\n    /**\n     * @param {?} element\n     * @param {?} dropContainer\n     * @param {?} _document\n     * @param {?} _ngZone\n     * @param {?} _viewContainerRef\n     * @param {?} config\n     * @param {?} _dir\n     * @param {?} dragDrop\n     * @param {?} _changeDetectorRef\n     */\n    constructor(element, dropContainer, _document, _ngZone, _viewContainerRef, config, _dir, dragDrop, _changeDetectorRef) {\n        this.element = element;\n        this.dropContainer = dropContainer;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._destroyed = new Subject();\n        /**\n         * Emits when the user starts dragging the item.\n         */\n        this.started = new EventEmitter();\n        /**\n         * Emits when the user has released a drag item, before any animations have started.\n         */\n        this.released = new EventEmitter();\n        /**\n         * Emits when the user stops dragging an item in the container.\n         */\n        this.ended = new EventEmitter();\n        /**\n         * Emits when the user has moved the item into a new container.\n         */\n        this.entered = new EventEmitter();\n        /**\n         * Emits when the user removes the item its container by dragging it into another container.\n         */\n        this.exited = new EventEmitter();\n        /**\n         * Emits when the user drops the item inside a container.\n         */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            /** @type {?} */\n            const subscription = this._dragRef.moved.pipe(map((/**\n             * @param {?} movedEvent\n             * @return {?}\n             */\n            movedEvent => ({\n                source: this,\n                pointerPosition: movedEvent.pointerPosition,\n                event: movedEvent.event,\n                delta: movedEvent.delta,\n                distance: movedEvent.distance\n            })))).subscribe(observer);\n            return (/**\n             * @return {?}\n             */\n            () => {\n                subscription.unsubscribe();\n            });\n        }));\n        this._dragRef = dragDrop.createDrag(element, {\n            dragStartThreshold: config && config.dragStartThreshold != null ?\n                config.dragStartThreshold : 5,\n            pointerDirectionChangeThreshold: config && config.pointerDirectionChangeThreshold != null ?\n                config.pointerDirectionChangeThreshold : 5,\n            zIndex: config === null || config === void 0 ? void 0 : config.zIndex\n        });\n        this._dragRef.data = this;\n        if (config) {\n            this._assignDefaults(config);\n        }\n        // Note that usually the container is assigned when the drop list is picks up the item, but in\n        // some cases (mainly transplanted views with OnPush, see #18341) we may end up in a situation\n        // where there are no items on the first change detection pass, but the items get picked up as\n        // soon as the user triggers another pass by dragging. This is a problem, because the item would\n        // have to switch from standalone mode to drag mode in the middle of the dragging sequence which\n        // is too late since the two modes save different kinds of information. We work around it by\n        // assigning the drop container both from here and the list.\n        if (dropContainer) {\n            this._dragRef._withDropContainer(dropContainer._dropListRef);\n            dropContainer.addItem(this);\n        }\n        this._syncInputs(this._dragRef);\n        this._handleEvents(this._dragRef);\n    }\n    /**\n     * Whether starting to drag this element is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled || (this.dropContainer && this.dropContainer.disabled);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._dragRef.disabled = this._disabled;\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     * @return {?}\n     */\n    getPlaceholderElement() {\n        return this._dragRef.getPlaceholderElement();\n    }\n    /**\n     * Returns the root draggable element.\n     * @return {?}\n     */\n    getRootElement() {\n        return this._dragRef.getRootElement();\n    }\n    /**\n     * Resets a standalone drag item to its initial position.\n     * @return {?}\n     */\n    reset() {\n        this._dragRef.reset();\n    }\n    /**\n     * Gets the pixel coordinates of the draggable outside of a drop container.\n     * @return {?}\n     */\n    getFreeDragPosition() {\n        return this._dragRef.getFreeDragPosition();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // We need to wait for the zone to stabilize, in order for the reference\n        // element to be in the proper place in the DOM. This is mostly relevant\n        // for draggable elements inside portals since they get stamped out in\n        // their original DOM position and then they get transferred to the portal.\n        this._ngZone.onStable.asObservable()\n            .pipe(take(1), takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._updateRootElement();\n            // Listen for any newly-added handles.\n            this._handles.changes.pipe(startWith(this._handles), \n            // Sync the new handles with the DragRef.\n            tap((/**\n             * @param {?} handles\n             * @return {?}\n             */\n            (handles) => {\n                /** @type {?} */\n                const childHandleElements = handles\n                    .filter((/**\n                 * @param {?} handle\n                 * @return {?}\n                 */\n                handle => handle._parentDrag === this))\n                    .map((/**\n                 * @param {?} handle\n                 * @return {?}\n                 */\n                handle => handle.element));\n                this._dragRef.withHandles(childHandleElements);\n            })), \n            // Listen if the state of any of the handles changes.\n            switchMap((/**\n             * @param {?} handles\n             * @return {?}\n             */\n            (handles) => {\n                return (/** @type {?} */ (merge(...handles.map((/**\n                 * @param {?} item\n                 * @return {?}\n                 */\n                item => {\n                    return item._stateChanges.pipe(startWith(item));\n                })))));\n            })), takeUntil(this._destroyed)).subscribe((/**\n             * @param {?} handleInstance\n             * @return {?}\n             */\n            handleInstance => {\n                // Enabled/disable the handle that changed in the DragRef.\n                /** @type {?} */\n                const dragRef = this._dragRef;\n                /** @type {?} */\n                const handle = handleInstance.element.nativeElement;\n                handleInstance.disabled ? dragRef.disableHandle(handle) : dragRef.enableHandle(handle);\n            }));\n            if (this.freeDragPosition) {\n                this._dragRef.setFreeDragPosition(this.freeDragPosition);\n            }\n        }));\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const rootSelectorChange = changes['rootElementSelector'];\n        /** @type {?} */\n        const positionChange = changes['freeDragPosition'];\n        // We don't have to react to the first change since it's being\n        // handled in `ngAfterViewInit` where it needs to be deferred.\n        if (rootSelectorChange && !rootSelectorChange.firstChange) {\n            this._updateRootElement();\n        }\n        // Skip the first change since it's being handled in `ngAfterViewInit`.\n        if (positionChange && !positionChange.firstChange && this.freeDragPosition) {\n            this._dragRef.setFreeDragPosition(this.freeDragPosition);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.dropContainer) {\n            this.dropContainer.removeItem(this);\n        }\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._dragRef.dispose();\n    }\n    /**\n     * Syncs the root element with the `DragRef`.\n     * @private\n     * @return {?}\n     */\n    _updateRootElement() {\n        /** @type {?} */\n        const element = this.element.nativeElement;\n        /** @type {?} */\n        const rootElement = this.rootElementSelector ?\n            getClosestMatchingAncestor(element, this.rootElementSelector) : element;\n        if (rootElement && rootElement.nodeType !== this._document.ELEMENT_NODE) {\n            throw Error(`cdkDrag must be attached to an element node. ` +\n                `Currently attached to \"${rootElement.nodeName}\".`);\n        }\n        this._dragRef.withRootElement(rootElement || element);\n    }\n    /**\n     * Gets the boundary element, based on the `boundaryElement` value.\n     * @private\n     * @return {?}\n     */\n    _getBoundaryElement() {\n        /** @type {?} */\n        const boundary = this.boundaryElement;\n        if (!boundary) {\n            return null;\n        }\n        if (typeof boundary === 'string') {\n            return getClosestMatchingAncestor(this.element.nativeElement, boundary);\n        }\n        /** @type {?} */\n        const element = coerceElement(boundary);\n        if (isDevMode() && !element.contains(this.element.nativeElement)) {\n            throw Error('Draggable element is not inside of the node passed into cdkDragBoundary.');\n        }\n        return element;\n    }\n    /**\n     * Syncs the inputs of the CdkDrag with the options of the underlying DragRef.\n     * @private\n     * @param {?} ref\n     * @return {?}\n     */\n    _syncInputs(ref) {\n        ref.beforeStarted.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (!ref.isDragging()) {\n                /** @type {?} */\n                const dir = this._dir;\n                /** @type {?} */\n                const dragStartDelay = this.dragStartDelay;\n                /** @type {?} */\n                const placeholder = this._placeholderTemplate ? {\n                    template: this._placeholderTemplate.templateRef,\n                    context: this._placeholderTemplate.data,\n                    viewContainer: this._viewContainerRef\n                } : null;\n                /** @type {?} */\n                const preview = this._previewTemplate ? {\n                    template: this._previewTemplate.templateRef,\n                    context: this._previewTemplate.data,\n                    matchSize: this._previewTemplate.matchSize,\n                    viewContainer: this._viewContainerRef\n                } : null;\n                ref.disabled = this.disabled;\n                ref.lockAxis = this.lockAxis;\n                ref.dragStartDelay = (typeof dragStartDelay === 'object' && dragStartDelay) ?\n                    dragStartDelay : coerceNumberProperty(dragStartDelay);\n                ref.constrainPosition = this.constrainPosition;\n                ref.previewClass = this.previewClass;\n                ref\n                    .withBoundaryElement(this._getBoundaryElement())\n                    .withPlaceholderTemplate(placeholder)\n                    .withPreviewTemplate(preview);\n                if (dir) {\n                    ref.withDirection(dir.value);\n                }\n            }\n        }));\n    }\n    /**\n     * Handles the events from the underlying `DragRef`.\n     * @private\n     * @param {?} ref\n     * @return {?}\n     */\n    _handleEvents(ref) {\n        ref.started.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.started.emit({ source: this });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        }));\n        ref.released.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.released.emit({ source: this });\n        }));\n        ref.ended.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.ended.emit({ source: this, distance: event.distance });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        }));\n        ref.entered.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.entered.emit({\n                container: event.container.data,\n                item: this,\n                currentIndex: event.currentIndex\n            });\n        }));\n        ref.exited.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.exited.emit({\n                container: event.container.data,\n                item: this\n            });\n        }));\n        ref.dropped.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.dropped.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                previousContainer: event.previousContainer.data,\n                container: event.container.data,\n                isPointerOverContainer: event.isPointerOverContainer,\n                item: this,\n                distance: event.distance\n            });\n        }));\n    }\n    /**\n     * Assigns the default input values based on a provided config object.\n     * @private\n     * @param {?} config\n     * @return {?}\n     */\n    _assignDefaults(config) {\n        const { lockAxis, dragStartDelay, constrainPosition, previewClass, boundaryElement, draggingDisabled, rootElementSelector } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.dragStartDelay = dragStartDelay || 0;\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n        if (constrainPosition) {\n            this.constrainPosition = constrainPosition;\n        }\n        if (previewClass) {\n            this.previewClass = previewClass;\n        }\n        if (boundaryElement) {\n            this.boundaryElement = boundaryElement;\n        }\n        if (rootElementSelector) {\n            this.rootElementSelector = rootElementSelector;\n        }\n    }\n}\nCdkDrag.ɵfac = function CdkDrag_Factory(t) { return new (t || CdkDrag)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(CDK_DROP_LIST, 12), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DragDrop), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nCdkDrag.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDrag, selectors: [[\"\", \"cdkDrag\", \"\"]], contentQueries: function CdkDrag_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkDragPreview, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkDragPlaceholder, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkDragHandle, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previewTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._handles = _t);\n    } }, hostAttrs: [1, \"cdk-drag\"], hostVars: 4, hostBindings: function CdkDrag_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"cdk-drag-disabled\", ctx.disabled)(\"cdk-drag-dragging\", ctx._dragRef.isDragging());\n    } }, inputs: { disabled: [\"cdkDragDisabled\", \"disabled\"], dragStartDelay: [\"cdkDragStartDelay\", \"dragStartDelay\"], lockAxis: [\"cdkDragLockAxis\", \"lockAxis\"], constrainPosition: [\"cdkDragConstrainPosition\", \"constrainPosition\"], previewClass: [\"cdkDragPreviewClass\", \"previewClass\"], boundaryElement: [\"cdkDragBoundary\", \"boundaryElement\"], rootElementSelector: [\"cdkDragRootElement\", \"rootElementSelector\"], data: [\"cdkDragData\", \"data\"], freeDragPosition: [\"cdkDragFreeDragPosition\", \"freeDragPosition\"] }, outputs: { started: \"cdkDragStarted\", released: \"cdkDragReleased\", ended: \"cdkDragEnded\", entered: \"cdkDragEntered\", exited: \"cdkDragExited\", dropped: \"cdkDragDropped\", moved: \"cdkDragMoved\" }, exportAs: [\"cdkDrag\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }]), ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nCdkDrag.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_DROP_LIST,] }, { type: Optional }, { type: SkipSelf }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: NgZone },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [CDK_DRAG_CONFIG,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: DragDrop },\n    { type: ChangeDetectorRef }\n];\nCdkDrag.propDecorators = {\n    _handles: [{ type: ContentChildren, args: [CdkDragHandle, { descendants: true },] }],\n    _previewTemplate: [{ type: ContentChild, args: [CdkDragPreview,] }],\n    _placeholderTemplate: [{ type: ContentChild, args: [CdkDragPlaceholder,] }],\n    data: [{ type: Input, args: ['cdkDragData',] }],\n    lockAxis: [{ type: Input, args: ['cdkDragLockAxis',] }],\n    rootElementSelector: [{ type: Input, args: ['cdkDragRootElement',] }],\n    boundaryElement: [{ type: Input, args: ['cdkDragBoundary',] }],\n    dragStartDelay: [{ type: Input, args: ['cdkDragStartDelay',] }],\n    freeDragPosition: [{ type: Input, args: ['cdkDragFreeDragPosition',] }],\n    disabled: [{ type: Input, args: ['cdkDragDisabled',] }],\n    constrainPosition: [{ type: Input, args: ['cdkDragConstrainPosition',] }],\n    previewClass: [{ type: Input, args: ['cdkDragPreviewClass',] }],\n    started: [{ type: Output, args: ['cdkDragStarted',] }],\n    released: [{ type: Output, args: ['cdkDragReleased',] }],\n    ended: [{ type: Output, args: ['cdkDragEnded',] }],\n    entered: [{ type: Output, args: ['cdkDragEntered',] }],\n    exited: [{ type: Output, args: ['cdkDragExited',] }],\n    dropped: [{ type: Output, args: ['cdkDragDropped',] }],\n    moved: [{ type: Output, args: ['cdkDragMoved',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDrag, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDrag]',\n                exportAs: 'cdkDrag',\n                host: {\n                    'class': 'cdk-drag',\n                    '[class.cdk-drag-disabled]': 'disabled',\n                    '[class.cdk-drag-dragging]': '_dragRef.isDragging()'\n                },\n                providers: [{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_DROP_LIST]\n            }, {\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [CDK_DRAG_CONFIG]\n            }] }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: DragDrop }, { type: ɵngcc0.ChangeDetectorRef }]; }, { started: [{\n            type: Output,\n            args: ['cdkDragStarted']\n        }], released: [{\n            type: Output,\n            args: ['cdkDragReleased']\n        }], ended: [{\n            type: Output,\n            args: ['cdkDragEnded']\n        }], entered: [{\n            type: Output,\n            args: ['cdkDragEntered']\n        }], exited: [{\n            type: Output,\n            args: ['cdkDragExited']\n        }], dropped: [{\n            type: Output,\n            args: ['cdkDragDropped']\n        }], moved: [{\n            type: Output,\n            args: ['cdkDragMoved']\n        }], disabled: [{\n            type: Input,\n            args: ['cdkDragDisabled']\n        }], dragStartDelay: [{\n            type: Input,\n            args: ['cdkDragStartDelay']\n        }], lockAxis: [{\n            type: Input,\n            args: ['cdkDragLockAxis']\n        }], constrainPosition: [{\n            type: Input,\n            args: ['cdkDragConstrainPosition']\n        }], previewClass: [{\n            type: Input,\n            args: ['cdkDragPreviewClass']\n        }], boundaryElement: [{\n            type: Input,\n            args: ['cdkDragBoundary']\n        }], rootElementSelector: [{\n            type: Input,\n            args: ['cdkDragRootElement']\n        }], _handles: [{\n            type: ContentChildren,\n            args: [CdkDragHandle, { descendants: true }]\n        }], _previewTemplate: [{\n            type: ContentChild,\n            args: [CdkDragPreview]\n        }], _placeholderTemplate: [{\n            type: ContentChild,\n            args: [CdkDragPlaceholder]\n        }], data: [{\n            type: Input,\n            args: ['cdkDragData']\n        }], freeDragPosition: [{\n            type: Input,\n            args: ['cdkDragFreeDragPosition']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkDrag.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDrag.prototype._destroyed;\n    /**\n     * Reference to the underlying drag instance.\n     * @type {?}\n     */\n    CdkDrag.prototype._dragRef;\n    /**\n     * Elements that can be used to drag the draggable item.\n     * @type {?}\n     */\n    CdkDrag.prototype._handles;\n    /**\n     * Element that will be used as a template to create the draggable item's preview.\n     * @type {?}\n     */\n    CdkDrag.prototype._previewTemplate;\n    /**\n     * Template for placeholder element rendered to show where a draggable would be dropped.\n     * @type {?}\n     */\n    CdkDrag.prototype._placeholderTemplate;\n    /**\n     * Arbitrary data to attach to this drag instance.\n     * @type {?}\n     */\n    CdkDrag.prototype.data;\n    /**\n     * Locks the position of the dragged element along the specified axis.\n     * @type {?}\n     */\n    CdkDrag.prototype.lockAxis;\n    /**\n     * Selector that will be used to determine the root draggable element, starting from\n     * the `cdkDrag` element and going up the DOM. Passing an alternate root element is useful\n     * when trying to enable dragging on an element that you might not have access to.\n     * @type {?}\n     */\n    CdkDrag.prototype.rootElementSelector;\n    /**\n     * Node or selector that will be used to determine the element to which the draggable's\n     * position will be constrained. If a string is passed in, it'll be used as a selector that\n     * will be matched starting from the element's parent and going up the DOM until a match\n     * has been found.\n     * @type {?}\n     */\n    CdkDrag.prototype.boundaryElement;\n    /**\n     * Amount of milliseconds to wait after the user has put their\n     * pointer down before starting to drag the element.\n     * @type {?}\n     */\n    CdkDrag.prototype.dragStartDelay;\n    /**\n     * Sets the position of a `CdkDrag` that is outside of a drop container.\n     * Can be used to restore the element's position for a returning user.\n     * @type {?}\n     */\n    CdkDrag.prototype.freeDragPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDrag.prototype._disabled;\n    /**\n     * Function that can be used to customize the logic of how the position of the drag item\n     * is limited while it's being dragged. Gets called with a point containing the current position\n     * of the user's pointer on the page and should return a point describing where the item should\n     * be rendered.\n     * @type {?}\n     */\n    CdkDrag.prototype.constrainPosition;\n    /**\n     * Class to be added to the preview element.\n     * @type {?}\n     */\n    CdkDrag.prototype.previewClass;\n    /**\n     * Emits when the user starts dragging the item.\n     * @type {?}\n     */\n    CdkDrag.prototype.started;\n    /**\n     * Emits when the user has released a drag item, before any animations have started.\n     * @type {?}\n     */\n    CdkDrag.prototype.released;\n    /**\n     * Emits when the user stops dragging an item in the container.\n     * @type {?}\n     */\n    CdkDrag.prototype.ended;\n    /**\n     * Emits when the user has moved the item into a new container.\n     * @type {?}\n     */\n    CdkDrag.prototype.entered;\n    /**\n     * Emits when the user removes the item its container by dragging it into another container.\n     * @type {?}\n     */\n    CdkDrag.prototype.exited;\n    /**\n     * Emits when the user drops the item inside a container.\n     * @type {?}\n     */\n    CdkDrag.prototype.dropped;\n    /**\n     * Emits as the user is dragging the item. Use with caution,\n     * because this event will fire for every pixel that the user has dragged.\n     * @type {?}\n     */\n    CdkDrag.prototype.moved;\n    /**\n     * Element that the draggable is attached to.\n     * @type {?}\n     */\n    CdkDrag.prototype.element;\n    /**\n     * Droppable container that the draggable is a part of.\n     * @type {?}\n     */\n    CdkDrag.prototype.dropContainer;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDrag.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDrag.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDrag.prototype._viewContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDrag.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDrag.prototype._changeDetectorRef;\n}\n/**\n * Gets the closest ancestor of an element that matches a selector.\n * @param {?} element\n * @param {?} selector\n * @return {?}\n */\nfunction getClosestMatchingAncestor(element, selector) {\n    /** @type {?} */\n    let currentElement = (/** @type {?} */ (element.parentElement));\n    while (currentElement) {\n        // IE doesn't support `matches` so we have to fall back to `msMatchesSelector`.\n        if (currentElement.matches ? currentElement.matches(selector) :\n            ((/** @type {?} */ (currentElement))).msMatchesSelector(selector)) {\n            return currentElement;\n        }\n        currentElement = currentElement.parentElement;\n    }\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/directives/drop-list-group.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Declaratively connects sibling `cdkDropList` instances together. All of the `cdkDropList`\n * elements that are placed inside a `cdkDropListGroup` will be connected to each other\n * automatically. Can be used as an alternative to the `cdkDropListConnectedTo` input\n * from `cdkDropList`.\n * @template T\n */\nclass CdkDropListGroup {\n    constructor() {\n        /**\n         * Drop lists registered inside the group.\n         */\n        this._items = new Set();\n        this._disabled = false;\n    }\n    /**\n     * Whether starting a dragging sequence from inside this group is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._items.clear();\n    }\n}\nCdkDropListGroup.ɵfac = function CdkDropListGroup_Factory(t) { return new (t || CdkDropListGroup)(); };\nCdkDropListGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDropListGroup, selectors: [[\"\", \"cdkDropListGroup\", \"\"]], inputs: { disabled: [\"cdkDropListGroupDisabled\", \"disabled\"] }, exportAs: [\"cdkDropListGroup\"] });\nCdkDropListGroup.propDecorators = {\n    disabled: [{ type: Input, args: ['cdkDropListGroupDisabled',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDropListGroup, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDropListGroup]',\n                exportAs: 'cdkDropListGroup'\n            }]\n    }], function () { return []; }, { disabled: [{\n            type: Input,\n            args: ['cdkDropListGroupDisabled']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkDropListGroup.ngAcceptInputType_disabled;\n    /**\n     * Drop lists registered inside the group.\n     * @type {?}\n     */\n    CdkDropListGroup.prototype._items;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDropListGroup.prototype._disabled;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/directives/drop-list.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Counter used to generate unique ids for drop zones.\n * @type {?}\n */\nlet _uniqueIdCounter = 0;\n/**\n * Internal compile-time-only representation of a `CdkDropList`.\n * Used to avoid circular import issues between the `CdkDropList` and the `CdkDrag`.\n * \\@docs-private\n * @record\n */\nfunction CdkDropListInternal() { }\nconst ɵ0 = undefined;\n/**\n * Container that wraps a set of draggable items.\n * @template T\n */\nclass CdkDropList {\n    /**\n     * @param {?} element\n     * @param {?} dragDrop\n     * @param {?} _changeDetectorRef\n     * @param {?=} _dir\n     * @param {?=} _group\n     * @param {?=} _scrollDispatcher\n     * @param {?=} config\n     */\n    constructor(element, dragDrop, _changeDetectorRef, _dir, _group, _scrollDispatcher, config) {\n        this.element = element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._group = _group;\n        this._scrollDispatcher = _scrollDispatcher;\n        /**\n         * Emits when the list has been destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Other draggable containers that this container is connected to and into which the\n         * container's items can be transferred. Can either be references to other drop containers,\n         * or their unique IDs.\n         */\n        this.connectedTo = [];\n        /**\n         * Unique ID for the drop zone. Can be used as a reference\n         * in the `connectedTo` of another `CdkDropList`.\n         */\n        this.id = `cdk-drop-list-${_uniqueIdCounter++}`;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = (/**\n         * @return {?}\n         */\n        () => true);\n        /**\n         * Emits when the user drops an item inside the container.\n         */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new EventEmitter();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new EventEmitter();\n        /**\n         * Emits as the user is swapping items while actively dragging.\n         */\n        this.sorted = new EventEmitter();\n        /**\n         * Keeps track of the items that are registered with this container. Historically we used to\n         * do this with a `ContentChildren` query, however queries don't handle transplanted views very\n         * well which means that we can't handle cases like dragging the headers of a `mat-table`\n         * correctly. What we do instead is to have the items register themselves with the container\n         * and then we sort them based on their position in the DOM.\n         */\n        this._unsortedItems = new Set();\n        this._dropListRef = dragDrop.createDropList(element);\n        this._dropListRef.data = this;\n        if (config) {\n            this._assignDefaults(config);\n        }\n        this._dropListRef.enterPredicate = (/**\n         * @param {?} drag\n         * @param {?} drop\n         * @return {?}\n         */\n        (drag, drop) => {\n            return this.enterPredicate(drag.data, drop.data);\n        });\n        this._setupInputSyncSubscription(this._dropListRef);\n        this._handleEvents(this._dropListRef);\n        CdkDropList._dropLists.push(this);\n        if (_group) {\n            _group._items.add(this);\n        }\n    }\n    /**\n     * Whether starting a dragging sequence from this container is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled || (!!this._group && this._group.disabled);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        // Usually we sync the directive and ref state right before dragging starts, in order to have\n        // a single point of failure and to avoid having to use setters for everything. `disabled` is\n        // a special case, because it can prevent the `beforeStarted` event from firing, which can lock\n        // the user in a disabled state, so we also need to sync it as it's being set.\n        this._dropListRef.disabled = this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * Registers an items with the drop list.\n     * @param {?} item\n     * @return {?}\n     */\n    addItem(item) {\n        this._unsortedItems.add(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /**\n     * Removes an item from the drop list.\n     * @param {?} item\n     * @return {?}\n     */\n    removeItem(item) {\n        this._unsortedItems.delete(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /**\n     * Gets the registered items in the list, sorted by their position in the DOM.\n     * @return {?}\n     */\n    getSortedItems() {\n        return Array.from(this._unsortedItems).sort((/**\n         * @param {?} a\n         * @param {?} b\n         * @return {?}\n         */\n        (a, b) => {\n            /** @type {?} */\n            const documentPosition = a._dragRef.getVisibleElement().compareDocumentPosition(b._dragRef.getVisibleElement());\n            // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n            // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n            // tslint:disable-next-line:no-bitwise\n            return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const index = CdkDropList._dropLists.indexOf(this);\n        if (index > -1) {\n            CdkDropList._dropLists.splice(index, 1);\n        }\n        if (this._group) {\n            this._group._items.delete(this);\n        }\n        this._unsortedItems.clear();\n        this._dropListRef.dispose();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Starts dragging an item.\n     * @deprecated No longer being used. To be removed.\n     * \\@breaking-change 10.0.0\n     * @return {?}\n     */\n    start() {\n        this._dropListRef.start();\n    }\n    /**\n     * Drops an item into this container.\n     * @deprecated No longer being used. To be removed.\n     * \\@breaking-change 10.0.0\n     * @param {?} item Item being dropped into the container.\n     * @param {?} currentIndex Index at which the item should be inserted.\n     * @param {?} previousContainer Container from which the item got dragged in.\n     * @param {?} isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     *\n     * @return {?}\n     */\n    drop(item, currentIndex, previousContainer, isPointerOverContainer) {\n        this._dropListRef.drop(item._dragRef, currentIndex, previousContainer._dropListRef, isPointerOverContainer, { x: 0, y: 0 });\n    }\n    /**\n     * Emits an event to indicate that the user moved an item into the container.\n     * @deprecated No longer being used. To be removed.\n     * \\@breaking-change 10.0.0\n     * @param {?} item Item that was moved into the container.\n     * @param {?} pointerX Position of the item along the X axis.\n     * @param {?} pointerY Position of the item along the Y axis.\n     * @return {?}\n     */\n    enter(item, pointerX, pointerY) {\n        this._dropListRef.enter(item._dragRef, pointerX, pointerY);\n    }\n    /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @deprecated No longer being used. To be removed.\n     * \\@breaking-change 10.0.0\n     * @param {?} item Item that was dragged out.\n     * @return {?}\n     */\n    exit(item) {\n        this._dropListRef.exit(item._dragRef);\n    }\n    /**\n     * Figures out the index of an item in the container.\n     * @deprecated No longer being used. To be removed.\n     * \\@breaking-change 10.0.0\n     * @param {?} item Item whose index should be determined.\n     * @return {?}\n     */\n    getItemIndex(item) {\n        return this._dropListRef.getItemIndex(item._dragRef);\n    }\n    /**\n     * Syncs the inputs of the CdkDropList with the options of the underlying DropListRef.\n     * @private\n     * @param {?} ref\n     * @return {?}\n     */\n    _setupInputSyncSubscription(ref) {\n        if (this._dir) {\n            this._dir.change\n                .pipe(startWith(this._dir.value), takeUntil(this._destroyed))\n                .subscribe((/**\n             * @param {?} value\n             * @return {?}\n             */\n            value => ref.withDirection(value)));\n        }\n        ref.beforeStarted.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const siblings = coerceArray(this.connectedTo).map((/**\n             * @param {?} drop\n             * @return {?}\n             */\n            drop => {\n                return typeof drop === 'string' ?\n                    (/** @type {?} */ (CdkDropList._dropLists.find((/**\n                     * @param {?} list\n                     * @return {?}\n                     */\n                    list => list.id === drop)))) : drop;\n            }));\n            if (this._group) {\n                this._group._items.forEach((/**\n                 * @param {?} drop\n                 * @return {?}\n                 */\n                drop => {\n                    if (siblings.indexOf(drop) === -1) {\n                        siblings.push(drop);\n                    }\n                }));\n            }\n            // Note that we resolve the scrollable parents here so that we delay the resolution\n            // as long as possible, ensuring that the element is in its final place in the DOM.\n            // @breaking-change 11.0.0 Remove null check for _scrollDispatcher once it's required.\n            if (!this._scrollableParentsResolved && this._scrollDispatcher) {\n                /** @type {?} */\n                const scrollableParents = this._scrollDispatcher\n                    .getAncestorScrollContainers(this.element)\n                    .map((/**\n                 * @param {?} scrollable\n                 * @return {?}\n                 */\n                scrollable => scrollable.getElementRef().nativeElement));\n                this._dropListRef.withScrollableParents(scrollableParents);\n                // Only do this once since it involves traversing the DOM and the parents\n                // shouldn't be able to change without the drop list being destroyed.\n                this._scrollableParentsResolved = true;\n            }\n            ref.disabled = this.disabled;\n            ref.lockAxis = this.lockAxis;\n            ref.sortingDisabled = coerceBooleanProperty(this.sortingDisabled);\n            ref.autoScrollDisabled = coerceBooleanProperty(this.autoScrollDisabled);\n            ref\n                .connectedTo(siblings.filter((/**\n             * @param {?} drop\n             * @return {?}\n             */\n            drop => drop && drop !== this)).map((/**\n             * @param {?} list\n             * @return {?}\n             */\n            list => list._dropListRef)))\n                .withOrientation(this.orientation);\n        }));\n    }\n    /**\n     * Handles events from the underlying DropListRef.\n     * @private\n     * @param {?} ref\n     * @return {?}\n     */\n    _handleEvents(ref) {\n        ref.beforeStarted.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._syncItemsWithRef();\n            this._changeDetectorRef.markForCheck();\n        }));\n        ref.entered.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.entered.emit({\n                container: this,\n                item: event.item.data,\n                currentIndex: event.currentIndex\n            });\n        }));\n        ref.exited.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.exited.emit({\n                container: this,\n                item: event.item.data\n            });\n            this._changeDetectorRef.markForCheck();\n        }));\n        ref.sorted.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.sorted.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                container: this,\n                item: event.item.data\n            });\n        }));\n        ref.dropped.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.dropped.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                previousContainer: event.previousContainer.data,\n                container: event.container.data,\n                item: event.item.data,\n                isPointerOverContainer: event.isPointerOverContainer,\n                distance: event.distance\n            });\n            // Mark for check since all of these events run outside of change\n            // detection and we're not guaranteed for something else to have triggered it.\n            this._changeDetectorRef.markForCheck();\n        }));\n    }\n    /**\n     * Assigns the default input values based on a provided config object.\n     * @private\n     * @param {?} config\n     * @return {?}\n     */\n    _assignDefaults(config) {\n        const { lockAxis, draggingDisabled, sortingDisabled, listAutoScrollDisabled, listOrientation } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.sortingDisabled = sortingDisabled == null ? false : sortingDisabled;\n        this.autoScrollDisabled = listAutoScrollDisabled == null ? false : listAutoScrollDisabled;\n        this.orientation = listOrientation || 'vertical';\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n    }\n    /**\n     * Syncs up the registered drag items with underlying drop list ref.\n     * @private\n     * @return {?}\n     */\n    _syncItemsWithRef() {\n        this._dropListRef.withItems(this.getSortedItems().map((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => item._dragRef)));\n    }\n}\nCdkDropList.ɵfac = function CdkDropList_Factory(t) { return new (t || CdkDropList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DragDrop), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(CdkDropListGroup, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_CONFIG, 8)); };\nCdkDropList.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDropList, selectors: [[\"\", \"cdkDropList\", \"\"], [\"cdk-drop-list\"]], hostAttrs: [1, \"cdk-drop-list\"], hostVars: 7, hostBindings: function CdkDropList_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵclassProp(\"cdk-drop-list-disabled\", ctx.disabled)(\"cdk-drop-list-dragging\", ctx._dropListRef.isDragging())(\"cdk-drop-list-receiving\", ctx._dropListRef.isReceiving());\n    } }, inputs: { connectedTo: [\"cdkDropListConnectedTo\", \"connectedTo\"], id: \"id\", enterPredicate: [\"cdkDropListEnterPredicate\", \"enterPredicate\"], disabled: [\"cdkDropListDisabled\", \"disabled\"], sortingDisabled: [\"cdkDropListSortingDisabled\", \"sortingDisabled\"], autoScrollDisabled: [\"cdkDropListAutoScrollDisabled\", \"autoScrollDisabled\"], orientation: [\"cdkDropListOrientation\", \"orientation\"], lockAxis: [\"cdkDropListLockAxis\", \"lockAxis\"], data: [\"cdkDropListData\", \"data\"] }, outputs: { dropped: \"cdkDropListDropped\", entered: \"cdkDropListEntered\", exited: \"cdkDropListExited\", sorted: \"cdkDropListSorted\" }, exportAs: [\"cdkDropList\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Prevent child drop lists from picking up the same group as their parent.\n            { provide: CdkDropListGroup, useValue: ɵ0 },\n            { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n        ])] });\n/**\n * Keeps track of the drop lists that are currently on the page.\n */\nCdkDropList._dropLists = [];\n/** @nocollapse */\nCdkDropList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: DragDrop },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: CdkDropListGroup, decorators: [{ type: Optional }, { type: SkipSelf }] },\n    { type: ScrollDispatcher },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [CDK_DRAG_CONFIG,] }] }\n];\nCdkDropList.propDecorators = {\n    connectedTo: [{ type: Input, args: ['cdkDropListConnectedTo',] }],\n    data: [{ type: Input, args: ['cdkDropListData',] }],\n    orientation: [{ type: Input, args: ['cdkDropListOrientation',] }],\n    id: [{ type: Input }],\n    lockAxis: [{ type: Input, args: ['cdkDropListLockAxis',] }],\n    disabled: [{ type: Input, args: ['cdkDropListDisabled',] }],\n    sortingDisabled: [{ type: Input, args: ['cdkDropListSortingDisabled',] }],\n    enterPredicate: [{ type: Input, args: ['cdkDropListEnterPredicate',] }],\n    autoScrollDisabled: [{ type: Input, args: ['cdkDropListAutoScrollDisabled',] }],\n    dropped: [{ type: Output, args: ['cdkDropListDropped',] }],\n    entered: [{ type: Output, args: ['cdkDropListEntered',] }],\n    exited: [{ type: Output, args: ['cdkDropListExited',] }],\n    sorted: [{ type: Output, args: ['cdkDropListSorted',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDropList, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDropList], cdk-drop-list',\n                exportAs: 'cdkDropList',\n                providers: [\n                    // Prevent child drop lists from picking up the same group as their parent.\n                    { provide: CdkDropListGroup, useValue: ɵ0 },\n                    { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n                ],\n                host: {\n                    'class': 'cdk-drop-list',\n                    '[id]': 'id',\n                    '[class.cdk-drop-list-disabled]': 'disabled',\n                    '[class.cdk-drop-list-dragging]': '_dropListRef.isDragging()',\n                    '[class.cdk-drop-list-receiving]': '_dropListRef.isReceiving()'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: DragDrop }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: CdkDropListGroup, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: ɵngcc1.ScrollDispatcher }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [CDK_DRAG_CONFIG]\n            }] }]; }, { connectedTo: [{\n            type: Input,\n            args: ['cdkDropListConnectedTo']\n        }], id: [{\n            type: Input\n        }], enterPredicate: [{\n            type: Input,\n            args: ['cdkDropListEnterPredicate']\n        }], dropped: [{\n            type: Output,\n            args: ['cdkDropListDropped']\n        }], entered: [{\n            type: Output,\n            args: ['cdkDropListEntered']\n        }], exited: [{\n            type: Output,\n            args: ['cdkDropListExited']\n        }], sorted: [{\n            type: Output,\n            args: ['cdkDropListSorted']\n        }], disabled: [{\n            type: Input,\n            args: ['cdkDropListDisabled']\n        }], sortingDisabled: [{\n            type: Input,\n            args: ['cdkDropListSortingDisabled']\n        }], autoScrollDisabled: [{\n            type: Input,\n            args: ['cdkDropListAutoScrollDisabled']\n        }], orientation: [{\n            type: Input,\n            args: ['cdkDropListOrientation']\n        }], lockAxis: [{\n            type: Input,\n            args: ['cdkDropListLockAxis']\n        }], data: [{\n            type: Input,\n            args: ['cdkDropListData']\n        }] }); })();\nif (false) {\n    /**\n     * Keeps track of the drop lists that are currently on the page.\n     * @type {?}\n     * @private\n     */\n    CdkDropList._dropLists;\n    /** @type {?} */\n    CdkDropList.ngAcceptInputType_disabled;\n    /** @type {?} */\n    CdkDropList.ngAcceptInputType_sortingDisabled;\n    /** @type {?} */\n    CdkDropList.ngAcceptInputType_autoScrollDisabled;\n    /**\n     * Emits when the list has been destroyed.\n     * @type {?}\n     * @private\n     */\n    CdkDropList.prototype._destroyed;\n    /**\n     * Whether the element's scrollable parents have been resolved.\n     * @type {?}\n     * @private\n     */\n    CdkDropList.prototype._scrollableParentsResolved;\n    /**\n     * Reference to the underlying drop list instance.\n     * @type {?}\n     */\n    CdkDropList.prototype._dropListRef;\n    /**\n     * Other draggable containers that this container is connected to and into which the\n     * container's items can be transferred. Can either be references to other drop containers,\n     * or their unique IDs.\n     * @type {?}\n     */\n    CdkDropList.prototype.connectedTo;\n    /**\n     * Arbitrary data to attach to this container.\n     * @type {?}\n     */\n    CdkDropList.prototype.data;\n    /**\n     * Direction in which the list is oriented.\n     * @type {?}\n     */\n    CdkDropList.prototype.orientation;\n    /**\n     * Unique ID for the drop zone. Can be used as a reference\n     * in the `connectedTo` of another `CdkDropList`.\n     * @type {?}\n     */\n    CdkDropList.prototype.id;\n    /**\n     * Locks the position of the draggable elements inside the container along the specified axis.\n     * @type {?}\n     */\n    CdkDropList.prototype.lockAxis;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDropList.prototype._disabled;\n    /**\n     * Whether sorting within this drop list is disabled.\n     * @type {?}\n     */\n    CdkDropList.prototype.sortingDisabled;\n    /**\n     * Function that is used to determine whether an item\n     * is allowed to be moved into a drop container.\n     * @type {?}\n     */\n    CdkDropList.prototype.enterPredicate;\n    /**\n     * Whether to auto-scroll the view when the user moves their pointer close to the edges.\n     * @type {?}\n     */\n    CdkDropList.prototype.autoScrollDisabled;\n    /**\n     * Emits when the user drops an item inside the container.\n     * @type {?}\n     */\n    CdkDropList.prototype.dropped;\n    /**\n     * Emits when the user has moved a new drag item into this container.\n     * @type {?}\n     */\n    CdkDropList.prototype.entered;\n    /**\n     * Emits when the user removes an item from the container\n     * by dragging it into another container.\n     * @type {?}\n     */\n    CdkDropList.prototype.exited;\n    /**\n     * Emits as the user is swapping items while actively dragging.\n     * @type {?}\n     */\n    CdkDropList.prototype.sorted;\n    /**\n     * Keeps track of the items that are registered with this container. Historically we used to\n     * do this with a `ContentChildren` query, however queries don't handle transplanted views very\n     * well which means that we can't handle cases like dragging the headers of a `mat-table`\n     * correctly. What we do instead is to have the items register themselves with the container\n     * and then we sort them based on their position in the DOM.\n     * @type {?}\n     * @private\n     */\n    CdkDropList.prototype._unsortedItems;\n    /**\n     * Element that the drop list is attached to.\n     * @type {?}\n     */\n    CdkDropList.prototype.element;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDropList.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDropList.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDropList.prototype._group;\n    /**\n     * @deprecated _scrollDispatcher parameter to become required.\n     * \\@breaking-change 11.0.0\n     * @type {?}\n     * @private\n     */\n    CdkDropList.prototype._scrollDispatcher;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/drag-drop-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DragDropModule {\n}\nDragDropModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DragDropModule });\nDragDropModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DragDropModule_Factory(t) { return new (t || DragDropModule)(); }, providers: [\n        DragDrop,\n    ], imports: [CdkScrollableModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DragDropModule, { declarations: function () { return [CdkDropList,\n        CdkDropListGroup,\n        CdkDrag,\n        CdkDragHandle,\n        CdkDragPreview,\n        CdkDragPlaceholder]; }, exports: function () { return [CdkScrollableModule,\n        CdkDropList,\n        CdkDropListGroup,\n        CdkDrag,\n        CdkDragHandle,\n        CdkDragPreview,\n        CdkDragPlaceholder]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DragDropModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    CdkDropList,\n                    CdkDropListGroup,\n                    CdkDrag,\n                    CdkDragHandle,\n                    CdkDragPreview,\n                    CdkDragPlaceholder,\n                ],\n                exports: [\n                    CdkScrollableModule,\n                    CdkDropList,\n                    CdkDropListGroup,\n                    CdkDrag,\n                    CdkDragHandle,\n                    CdkDragPreview,\n                    CdkDragPlaceholder,\n                ],\n                providers: [\n                    DragDrop,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CDK_DRAG_CONFIG, CDK_DRAG_CONFIG_FACTORY, CDK_DROP_LIST, CdkDrag, CdkDragHandle, CdkDragPlaceholder, CdkDragPreview, CdkDropList, CdkDropListGroup, DragDrop, DragDropModule, DragDropRegistry, DragRef, DropListRef, copyArrayItem, moveItemInArray, transferArrayItem, CDK_DRAG_PARENT as ɵangular_material_src_cdk_drag_drop_drag_drop_b };\n\n//# sourceMappingURL=drag-drop.js.map","import { NgModule, Injectable, ɵɵdefineInjectable, ɵɵinject, NgZone } from '@angular/core';\nimport { Platform } from '@angular/cdk/platform';\nimport { Subject, combineLatest, concat, Observable } from 'rxjs';\nimport { take, skip, debounceTime, map, startWith, takeUntil } from 'rxjs/operators';\nimport { coerceArray } from '@angular/cdk/coercion';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/layout-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nclass LayoutModule {\n}\nLayoutModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: LayoutModule });\nLayoutModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function LayoutModule_Factory(t) { return new (t || LayoutModule)(); } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LayoutModule, [{\n        type: NgModule,\n        args: [{}]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/media-matcher.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Global registry for all dynamically-created, injected media queries.\n * @type {?}\n */\nconst mediaQueriesForWebkitCompatibility = new Set();\n/**\n * Style tag that holds all of the dynamically-created media queries.\n * @type {?}\n */\nlet mediaQueryStyleNode;\n/**\n * A utility for calling matchMedia queries.\n */\nclass MediaMatcher {\n    /**\n     * @param {?} _platform\n     */\n    constructor(_platform) {\n        this._platform = _platform;\n        this._matchMedia = this._platform.isBrowser && window.matchMedia ?\n            // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n            // call it from a different scope.\n            window.matchMedia.bind(window) :\n            noopMatchMedia;\n    }\n    /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     * @param {?} query\n     * @return {?}\n     */\n    matchMedia(query) {\n        if (this._platform.WEBKIT) {\n            createEmptyStyleRule(query);\n        }\n        return this._matchMedia(query);\n    }\n}\nMediaMatcher.ɵfac = function MediaMatcher_Factory(t) { return new (t || MediaMatcher)(ɵngcc0.ɵɵinject(ɵngcc1.Platform)); };\n/** @nocollapse */\nMediaMatcher.ctorParameters = () => [\n    { type: Platform }\n];\n/** @nocollapse */ MediaMatcher.ɵprov = ɵɵdefineInjectable({ factory: function MediaMatcher_Factory() { return new MediaMatcher(ɵɵinject(Platform)); }, token: MediaMatcher, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MediaMatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }]; }, null); })();\nif (false) {\n    /**\n     * The internal matchMedia method to return back a MediaQueryList like object.\n     * @type {?}\n     * @private\n     */\n    MediaMatcher.prototype._matchMedia;\n    /**\n     * @type {?}\n     * @private\n     */\n    MediaMatcher.prototype._platform;\n}\n/**\n * For Webkit engines that only trigger the MediaQueryListListener when\n * there is at least one CSS selector for the respective media query.\n * @param {?} query\n * @return {?}\n */\nfunction createEmptyStyleRule(query) {\n    if (mediaQueriesForWebkitCompatibility.has(query)) {\n        return;\n    }\n    try {\n        if (!mediaQueryStyleNode) {\n            mediaQueryStyleNode = document.createElement('style');\n            mediaQueryStyleNode.setAttribute('type', 'text/css');\n            (/** @type {?} */ (document.head)).appendChild(mediaQueryStyleNode);\n        }\n        if (mediaQueryStyleNode.sheet) {\n            ((/** @type {?} */ (mediaQueryStyleNode.sheet)))\n                .insertRule(`@media ${query} {.fx-query-test{ }}`, 0);\n            mediaQueriesForWebkitCompatibility.add(query);\n        }\n    }\n    catch (e) {\n        console.error(e);\n    }\n}\n/**\n * No-op matchMedia replacement for non-browser platforms.\n * @param {?} query\n * @return {?}\n */\nfunction noopMatchMedia(query) {\n    // Use `as any` here to avoid adding additional necessary properties for\n    // the noop matcher.\n    return (/** @type {?} */ ({\n        matches: query === 'all' || query === '',\n        media: query,\n        addListener: (/**\n         * @return {?}\n         */\n        () => { }),\n        removeListener: (/**\n         * @return {?}\n         */\n        () => { })\n    }));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/breakpoints-observer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The current state of a layout breakpoint.\n * @record\n */\nfunction BreakpointState() { }\nif (false) {\n    /**\n     * Whether the breakpoint is currently matching.\n     * @type {?}\n     */\n    BreakpointState.prototype.matches;\n    /**\n     * A key boolean pair for each query provided to the observe method,\n     * with its current matched state.\n     * @type {?}\n     */\n    BreakpointState.prototype.breakpoints;\n}\n/**\n * The current state of a layout breakpoint.\n * @record\n */\nfunction InternalBreakpointState() { }\nif (false) {\n    /**\n     * Whether the breakpoint is currently matching.\n     * @type {?}\n     */\n    InternalBreakpointState.prototype.matches;\n    /**\n     * The media query being to be matched\n     * @type {?}\n     */\n    InternalBreakpointState.prototype.query;\n}\n/**\n * @record\n */\nfunction Query() { }\nif (false) {\n    /** @type {?} */\n    Query.prototype.observable;\n    /** @type {?} */\n    Query.prototype.mql;\n}\n/**\n * Utility for checking the matching state of \\@media queries.\n */\nclass BreakpointObserver {\n    /**\n     * @param {?} _mediaMatcher\n     * @param {?} _zone\n     */\n    constructor(_mediaMatcher, _zone) {\n        this._mediaMatcher = _mediaMatcher;\n        this._zone = _zone;\n        /**\n         * A map of all media queries currently being listened for.\n         */\n        this._queries = new Map();\n        /**\n         * A subject for all other observables to takeUntil based on.\n         */\n        this._destroySubject = new Subject();\n    }\n    /**\n     * Completes the active subject, signalling to all other observables to complete.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroySubject.next();\n        this._destroySubject.complete();\n    }\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param {?} value One or more media queries to check.\n     * @return {?} Whether any of the media queries match.\n     */\n    isMatched(value) {\n        /** @type {?} */\n        const queries = splitQueries(coerceArray(value));\n        return queries.some((/**\n         * @param {?} mediaQuery\n         * @return {?}\n         */\n        mediaQuery => this._registerQuery(mediaQuery).mql.matches));\n    }\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param {?} value One or more media queries to check.\n     * @return {?} A stream of matches for the given queries.\n     */\n    observe(value) {\n        /** @type {?} */\n        const queries = splitQueries(coerceArray(value));\n        /** @type {?} */\n        const observables = queries.map((/**\n         * @param {?} query\n         * @return {?}\n         */\n        query => this._registerQuery(query).observable));\n        /** @type {?} */\n        let stateObservable = combineLatest(observables);\n        // Emit the first state immediately, and then debounce the subsequent emissions.\n        stateObservable = concat(stateObservable.pipe(take(1)), stateObservable.pipe(skip(1), debounceTime(0)));\n        return stateObservable.pipe(map((/**\n         * @param {?} breakpointStates\n         * @return {?}\n         */\n        (breakpointStates) => {\n            /** @type {?} */\n            const response = {\n                matches: false,\n                breakpoints: {},\n            };\n            breakpointStates.forEach((/**\n             * @param {?} state\n             * @return {?}\n             */\n            (state) => {\n                response.matches = response.matches || state.matches;\n                response.breakpoints[state.query] = state.matches;\n            }));\n            return response;\n        })));\n    }\n    /**\n     * Registers a specific query to be listened for.\n     * @private\n     * @param {?} query\n     * @return {?}\n     */\n    _registerQuery(query) {\n        // Only set up a new MediaQueryList if it is not already being listened for.\n        if (this._queries.has(query)) {\n            return (/** @type {?} */ (this._queries.get(query)));\n        }\n        /** @type {?} */\n        const mql = this._mediaMatcher.matchMedia(query);\n        // Create callback for match changes and add it is as a listener.\n        /** @type {?} */\n        const queryObservable = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n            // back into the zone because matchMedia is only included in Zone.js by loading the\n            // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n            // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n            // patches it.\n            /** @type {?} */\n            const handler = (/**\n             * @param {?} e\n             * @return {?}\n             */\n            (e) => this._zone.run((/**\n             * @return {?}\n             */\n            () => observer.next(e))));\n            mql.addListener(handler);\n            return (/**\n             * @return {?}\n             */\n            () => {\n                mql.removeListener(handler);\n            });\n        })).pipe(startWith(mql), map((/**\n         * @param {?} nextMql\n         * @return {?}\n         */\n        (nextMql) => ({ query, matches: nextMql.matches }))), takeUntil(this._destroySubject));\n        // Add the MediaQueryList to the set of queries.\n        /** @type {?} */\n        const output = { observable: queryObservable, mql };\n        this._queries.set(query, output);\n        return output;\n    }\n}\nBreakpointObserver.ɵfac = function BreakpointObserver_Factory(t) { return new (t || BreakpointObserver)(ɵngcc0.ɵɵinject(MediaMatcher), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\n/** @nocollapse */\nBreakpointObserver.ctorParameters = () => [\n    { type: MediaMatcher },\n    { type: NgZone }\n];\n/** @nocollapse */ BreakpointObserver.ɵprov = ɵɵdefineInjectable({ factory: function BreakpointObserver_Factory() { return new BreakpointObserver(ɵɵinject(MediaMatcher), ɵɵinject(NgZone)); }, token: BreakpointObserver, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BreakpointObserver, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: MediaMatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\nif (false) {\n    /**\n     * A map of all media queries currently being listened for.\n     * @type {?}\n     * @private\n     */\n    BreakpointObserver.prototype._queries;\n    /**\n     * A subject for all other observables to takeUntil based on.\n     * @type {?}\n     * @private\n     */\n    BreakpointObserver.prototype._destroySubject;\n    /**\n     * @type {?}\n     * @private\n     */\n    BreakpointObserver.prototype._mediaMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    BreakpointObserver.prototype._zone;\n}\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n * @param {?} queries\n * @return {?}\n */\nfunction splitQueries(queries) {\n    return queries.map((/**\n     * @param {?} query\n     * @return {?}\n     */\n    (query) => query.split(',')))\n        .reduce((/**\n     * @param {?} a1\n     * @param {?} a2\n     * @return {?}\n     */\n    (a1, a2) => a1.concat(a2)))\n        .map((/**\n     * @param {?} query\n     * @return {?}\n     */\n    query => query.trim()));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/breakpoints.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// PascalCase is being used as Breakpoints is used like an enum.\n// tslint:disable-next-line:variable-name\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @type {?}\n */\nconst Breakpoints = {\n    XSmall: '(max-width: 599.99px)',\n    Small: '(min-width: 600px) and (max-width: 959.99px)',\n    Medium: '(min-width: 960px) and (max-width: 1279.99px)',\n    Large: '(min-width: 1280px) and (max-width: 1919.99px)',\n    XLarge: '(min-width: 1920px)',\n    Handset: '(max-width: 599.99px) and (orientation: portrait), ' +\n        '(max-width: 959.99px) and (orientation: landscape)',\n    Tablet: '(min-width: 600px) and (max-width: 839.99px) and (orientation: portrait), ' +\n        '(min-width: 960px) and (max-width: 1279.99px) and (orientation: landscape)',\n    Web: '(min-width: 840px) and (orientation: portrait), ' +\n        '(min-width: 1280px) and (orientation: landscape)',\n    HandsetPortrait: '(max-width: 599.99px) and (orientation: portrait)',\n    TabletPortrait: '(min-width: 600px) and (max-width: 839.99px) and (orientation: portrait)',\n    WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n    HandsetLandscape: '(max-width: 959.99px) and (orientation: landscape)',\n    TabletLandscape: '(min-width: 960px) and (max-width: 1279.99px) and (orientation: landscape)',\n    WebLandscape: '(min-width: 1280px) and (orientation: landscape)',\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BreakpointObserver, Breakpoints, LayoutModule, MediaMatcher };\n\n//# sourceMappingURL=layout.js.map","import { FocusKeyManager } from '@angular/cdk/a11y';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, SPACE, ENTER, HOME, END } from '@angular/cdk/keycodes';\nimport { DOCUMENT } from '@angular/common';\nimport { Directive, ElementRef, TemplateRef, InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, forwardRef, Optional, ContentChild, ViewChild, Input, EventEmitter, ChangeDetectorRef, ContentChildren, Output, HostListener, NgModule } from '@angular/core';\nimport { Subject, of } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/stepper/step-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\n\nfunction CdkStep_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nconst _c0 = [\"*\"];\nclass CdkStepHeader {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    /**\n     * Focuses the step header.\n     * @return {?}\n     */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n}\nCdkStepHeader.ɵfac = function CdkStepHeader_Factory(t) { return new (t || CdkStepHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkStepHeader.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkStepHeader, selectors: [[\"\", \"cdkStepHeader\", \"\"]], hostAttrs: [\"role\", \"tab\"] });\n/** @nocollapse */\nCdkStepHeader.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStepHeader, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkStepHeader]',\n                host: {\n                    'role': 'tab'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkStepHeader.prototype._elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/stepper/step-label.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CdkStepLabel {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkStepLabel.ɵfac = function CdkStepLabel_Factory(t) { return new (t || CdkStepLabel)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkStepLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkStepLabel, selectors: [[\"\", \"cdkStepLabel\", \"\"]] });\n/** @nocollapse */\nCdkStepLabel.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStepLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkStepLabel]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkStepLabel.prototype.template;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/stepper/stepper.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate unique ID for each stepper component.\n * @type {?}\n */\nlet nextId = 0;\n/**\n * Change event emitted on selection changes.\n */\nclass StepperSelectionEvent {\n}\nif (false) {\n    /**\n     * Index of the step now selected.\n     * @type {?}\n     */\n    StepperSelectionEvent.prototype.selectedIndex;\n    /**\n     * Index of the step previously selected.\n     * @type {?}\n     */\n    StepperSelectionEvent.prototype.previouslySelectedIndex;\n    /**\n     * The step instance now selected.\n     * @type {?}\n     */\n    StepperSelectionEvent.prototype.selectedStep;\n    /**\n     * The step instance previously selected.\n     * @type {?}\n     */\n    StepperSelectionEvent.prototype.previouslySelectedStep;\n}\n/**\n * Enum to represent the different states of the steps.\n * @type {?}\n */\nconst STEP_STATE = {\n    NUMBER: 'number',\n    EDIT: 'edit',\n    DONE: 'done',\n    ERROR: 'error'\n};\n/**\n * InjectionToken that can be used to specify the global stepper options.\n * @type {?}\n */\nconst STEPPER_GLOBAL_OPTIONS = new InjectionToken('STEPPER_GLOBAL_OPTIONS');\n/**\n * InjectionToken that can be used to specify the global stepper options.\n * @deprecated Use `STEPPER_GLOBAL_OPTIONS` instead.\n * \\@breaking-change 8.0.0.\n * @type {?}\n */\nconst MAT_STEPPER_GLOBAL_OPTIONS = STEPPER_GLOBAL_OPTIONS;\n/**\n * Configurable options for stepper.\n * @record\n */\nfunction StepperOptions() { }\nif (false) {\n    /**\n     * Whether the stepper should display an error state or not.\n     * Default behavior is assumed to be false.\n     * @type {?|undefined}\n     */\n    StepperOptions.prototype.showError;\n    /**\n     * Whether the stepper should display the default indicator type\n     * or not.\n     * Default behavior is assumed to be true.\n     * @type {?|undefined}\n     */\n    StepperOptions.prototype.displayDefaultIndicatorType;\n}\nclass CdkStep {\n    /**\n     * \\@breaking-change 8.0.0 remove the `?` after `stepperOptions`\n     * @param {?} _stepper\n     * @param {?=} stepperOptions\n     */\n    constructor(_stepper, stepperOptions) {\n        this._stepper = _stepper;\n        /**\n         * Whether user has seen the expanded step content or not.\n         */\n        this.interacted = false;\n        this._editable = true;\n        this._optional = false;\n        this._completedOverride = null;\n        this._customError = null;\n        this._stepperOptions = stepperOptions ? stepperOptions : {};\n        this._displayDefaultIndicatorType = this._stepperOptions.displayDefaultIndicatorType !== false;\n        this._showError = !!this._stepperOptions.showError;\n    }\n    /**\n     * Whether the user can return to this step once it has been marked as completed.\n     * @return {?}\n     */\n    get editable() {\n        return this._editable;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set editable(value) {\n        this._editable = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the completion of step is optional.\n     * @return {?}\n     */\n    get optional() {\n        return this._optional;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set optional(value) {\n        this._optional = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether step is marked as completed.\n     * @return {?}\n     */\n    get completed() {\n        return this._completedOverride == null ? this._getDefaultCompleted() : this._completedOverride;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set completed(value) {\n        this._completedOverride = coerceBooleanProperty(value);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getDefaultCompleted() {\n        return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\n    }\n    /**\n     * Whether step has an error.\n     * @return {?}\n     */\n    get hasError() {\n        return this._customError == null ? this._getDefaultError() : this._customError;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hasError(value) {\n        this._customError = coerceBooleanProperty(value);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getDefaultError() {\n        return this.stepControl && this.stepControl.invalid && this.interacted;\n    }\n    /**\n     * Selects this step component.\n     * @return {?}\n     */\n    select() {\n        this._stepper.selected = this;\n    }\n    /**\n     * Resets the step to its initial state. Note that this includes resetting form data.\n     * @return {?}\n     */\n    reset() {\n        this.interacted = false;\n        if (this._completedOverride != null) {\n            this._completedOverride = false;\n        }\n        if (this._customError != null) {\n            this._customError = false;\n        }\n        if (this.stepControl) {\n            this.stepControl.reset();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        // Since basically all inputs of the MatStep get proxied through the view down to the\n        // underlying MatStepHeader, we have to make sure that change detection runs correctly.\n        this._stepper._stateChanged();\n    }\n}\nCdkStep.ɵfac = function CdkStep_Factory(t) { return new (t || CdkStep)(ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => CdkStepper))), ɵngcc0.ɵɵdirectiveInject(STEPPER_GLOBAL_OPTIONS, 8)); };\nCdkStep.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkStep, selectors: [[\"cdk-step\"]], contentQueries: function CdkStep_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkStepLabel, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stepLabel = _t.first);\n    } }, viewQuery: function CdkStep_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.content = _t.first);\n    } }, inputs: { editable: \"editable\", optional: \"optional\", completed: \"completed\", hasError: \"hasError\", stepControl: \"stepControl\", label: \"label\", errorMessage: \"errorMessage\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], state: \"state\" }, exportAs: [\"cdkStep\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function CdkStep_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, CdkStep_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nCdkStep.ctorParameters = () => [\n    { type: CdkStepper, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => CdkStepper)),] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [STEPPER_GLOBAL_OPTIONS,] }] }\n];\nCdkStep.propDecorators = {\n    stepLabel: [{ type: ContentChild, args: [CdkStepLabel,] }],\n    content: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    stepControl: [{ type: Input }],\n    label: [{ type: Input }],\n    errorMessage: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    state: [{ type: Input }],\n    editable: [{ type: Input }],\n    optional: [{ type: Input }],\n    completed: [{ type: Input }],\n    hasError: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStep, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-step',\n                exportAs: 'cdkStep',\n                template: '<ng-template><ng-content></ng-content></ng-template>',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: CdkStepper, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => CdkStepper))]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [STEPPER_GLOBAL_OPTIONS]\n            }] }]; }, { editable: [{\n            type: Input\n        }], optional: [{\n            type: Input\n        }], completed: [{\n            type: Input\n        }], hasError: [{\n            type: Input\n        }], stepLabel: [{\n            type: ContentChild,\n            args: [CdkStepLabel]\n        }], content: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], stepControl: [{\n            type: Input\n        }], label: [{\n            type: Input\n        }], errorMessage: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], state: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkStep.ngAcceptInputType_editable;\n    /** @type {?} */\n    CdkStep.ngAcceptInputType_hasError;\n    /** @type {?} */\n    CdkStep.ngAcceptInputType_optional;\n    /** @type {?} */\n    CdkStep.ngAcceptInputType_completed;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStep.prototype._stepperOptions;\n    /** @type {?} */\n    CdkStep.prototype._showError;\n    /** @type {?} */\n    CdkStep.prototype._displayDefaultIndicatorType;\n    /**\n     * Template for step label if it exists.\n     * @type {?}\n     */\n    CdkStep.prototype.stepLabel;\n    /**\n     * Template for step content.\n     * @type {?}\n     */\n    CdkStep.prototype.content;\n    /**\n     * The top level abstract control of the step.\n     * @type {?}\n     */\n    CdkStep.prototype.stepControl;\n    /**\n     * Whether user has seen the expanded step content or not.\n     * @type {?}\n     */\n    CdkStep.prototype.interacted;\n    /**\n     * Plain text label of the step.\n     * @type {?}\n     */\n    CdkStep.prototype.label;\n    /**\n     * Error message to display when there's an error.\n     * @type {?}\n     */\n    CdkStep.prototype.errorMessage;\n    /**\n     * Aria label for the tab.\n     * @type {?}\n     */\n    CdkStep.prototype.ariaLabel;\n    /**\n     * Reference to the element that the tab is labelled by.\n     * Will be cleared if `aria-label` is set at the same time.\n     * @type {?}\n     */\n    CdkStep.prototype.ariaLabelledby;\n    /**\n     * State of the step.\n     * @type {?}\n     */\n    CdkStep.prototype.state;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStep.prototype._editable;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStep.prototype._optional;\n    /** @type {?} */\n    CdkStep.prototype._completedOverride;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStep.prototype._customError;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStep.prototype._stepper;\n}\nclass CdkStepper {\n    /**\n     * @param {?} _dir\n     * @param {?} _changeDetectorRef\n     * @param {?=} _elementRef\n     * @param {?=} _document\n     */\n    constructor(_dir, _changeDetectorRef, _elementRef, _document) {\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        this._linear = false;\n        this._selectedIndex = 0;\n        /**\n         * Event emitted when the selected step has changed.\n         */\n        this.selectionChange = new EventEmitter();\n        this._orientation = 'horizontal';\n        this._groupId = nextId++;\n        this._document = _document;\n    }\n    /**\n     * The list of step components that the stepper is holding.\n     * @return {?}\n     */\n    get steps() {\n        return this._steps;\n    }\n    /**\n     * Whether the validity of previous steps should be checked or not.\n     * @return {?}\n     */\n    get linear() {\n        return this._linear;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set linear(value) {\n        this._linear = coerceBooleanProperty(value);\n    }\n    /**\n     * The index of the selected step.\n     * @return {?}\n     */\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    set selectedIndex(index) {\n        /** @type {?} */\n        const newIndex = coerceNumberProperty(index);\n        if (this.steps) {\n            // Ensure that the index can't be out of bounds.\n            if (newIndex < 0 || newIndex > this.steps.length - 1) {\n                throw Error('cdkStepper: Cannot assign out-of-bounds value to `selectedIndex`.');\n            }\n            if (this._selectedIndex != newIndex && !this._anyControlsInvalidOrPending(newIndex) &&\n                (newIndex >= this._selectedIndex || this.steps.toArray()[newIndex].editable)) {\n                this._updateSelectedItemIndex(index);\n            }\n        }\n        else {\n            this._selectedIndex = newIndex;\n        }\n    }\n    /**\n     * The step that is selected.\n     * @return {?}\n     */\n    get selected() {\n        // @breaking-change 8.0.0 Change return type to `CdkStep | undefined`.\n        return this.steps ? this.steps.toArray()[this.selectedIndex] : (/** @type {?} */ (undefined));\n    }\n    /**\n     * @param {?} step\n     * @return {?}\n     */\n    set selected(step) {\n        this.selectedIndex = this.steps ? this.steps.toArray().indexOf(step) : -1;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // Note that while the step headers are content children by default, any components that\n        // extend this one might have them as view children. We initialize the keyboard handling in\n        // AfterViewInit so we're guaranteed for both view and content children to be defined.\n        this._keyManager = new FocusKeyManager(this._stepHeader)\n            .withWrap()\n            .withVerticalOrientation(this._orientation === 'vertical');\n        (this._dir ? ((/** @type {?} */ (this._dir.change))) : of())\n            .pipe(startWith(this._layoutDirection()), takeUntil(this._destroyed))\n            .subscribe((/**\n         * @param {?} direction\n         * @return {?}\n         */\n        direction => this._keyManager.withHorizontalOrientation(direction)));\n        this._keyManager.updateActiveItem(this._selectedIndex);\n        this.steps.changes.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (!this.selected) {\n                this._selectedIndex = Math.max(this._selectedIndex - 1, 0);\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Selects and focuses the next step in list.\n     * @return {?}\n     */\n    next() {\n        this.selectedIndex = Math.min(this._selectedIndex + 1, this.steps.length - 1);\n    }\n    /**\n     * Selects and focuses the previous step in list.\n     * @return {?}\n     */\n    previous() {\n        this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\n    }\n    /**\n     * Resets the stepper to its initial state. Note that this includes clearing form data.\n     * @return {?}\n     */\n    reset() {\n        this._updateSelectedItemIndex(0);\n        this.steps.forEach((/**\n         * @param {?} step\n         * @return {?}\n         */\n        step => step.reset()));\n        this._stateChanged();\n    }\n    /**\n     * Returns a unique id for each step label element.\n     * @param {?} i\n     * @return {?}\n     */\n    _getStepLabelId(i) {\n        return `cdk-step-label-${this._groupId}-${i}`;\n    }\n    /**\n     * Returns unique id for each step content element.\n     * @param {?} i\n     * @return {?}\n     */\n    _getStepContentId(i) {\n        return `cdk-step-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Marks the component to be change detected.\n     * @return {?}\n     */\n    _stateChanged() {\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Returns position state of the step with the given index.\n     * @param {?} index\n     * @return {?}\n     */\n    _getAnimationDirection(index) {\n        /** @type {?} */\n        const position = index - this._selectedIndex;\n        if (position < 0) {\n            return this._layoutDirection() === 'rtl' ? 'next' : 'previous';\n        }\n        else if (position > 0) {\n            return this._layoutDirection() === 'rtl' ? 'previous' : 'next';\n        }\n        return 'current';\n    }\n    /**\n     * Returns the type of icon to be displayed.\n     * @param {?} index\n     * @param {?=} state\n     * @return {?}\n     */\n    _getIndicatorType(index, state = STEP_STATE.NUMBER) {\n        /** @type {?} */\n        const step = this.steps.toArray()[index];\n        /** @type {?} */\n        const isCurrentStep = this._isCurrentStep(index);\n        return step._displayDefaultIndicatorType ? this._getDefaultIndicatorLogic(step, isCurrentStep) :\n            this._getGuidelineLogic(step, isCurrentStep, state);\n    }\n    /**\n     * @private\n     * @param {?} step\n     * @param {?} isCurrentStep\n     * @return {?}\n     */\n    _getDefaultIndicatorLogic(step, isCurrentStep) {\n        if (step._showError && step.hasError && !isCurrentStep) {\n            return STEP_STATE.ERROR;\n        }\n        else if (!step.completed || isCurrentStep) {\n            return STEP_STATE.NUMBER;\n        }\n        else {\n            return step.editable ? STEP_STATE.EDIT : STEP_STATE.DONE;\n        }\n    }\n    /**\n     * @private\n     * @param {?} step\n     * @param {?} isCurrentStep\n     * @param {?=} state\n     * @return {?}\n     */\n    _getGuidelineLogic(step, isCurrentStep, state = STEP_STATE.NUMBER) {\n        if (step._showError && step.hasError && !isCurrentStep) {\n            return STEP_STATE.ERROR;\n        }\n        else if (step.completed && !isCurrentStep) {\n            return STEP_STATE.DONE;\n        }\n        else if (step.completed && isCurrentStep) {\n            return state;\n        }\n        else if (step.editable && isCurrentStep) {\n            return STEP_STATE.EDIT;\n        }\n        else {\n            return state;\n        }\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _isCurrentStep(index) {\n        return this._selectedIndex === index;\n    }\n    /**\n     * Returns the index of the currently-focused step header.\n     * @return {?}\n     */\n    _getFocusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : this._selectedIndex;\n    }\n    /**\n     * @private\n     * @param {?} newIndex\n     * @return {?}\n     */\n    _updateSelectedItemIndex(newIndex) {\n        /** @type {?} */\n        const stepsArray = this.steps.toArray();\n        this.selectionChange.emit({\n            selectedIndex: newIndex,\n            previouslySelectedIndex: this._selectedIndex,\n            selectedStep: stepsArray[newIndex],\n            previouslySelectedStep: stepsArray[this._selectedIndex],\n        });\n        // If focus is inside the stepper, move it to the next header, otherwise it may become\n        // lost when the active step content is hidden. We can't be more granular with the check\n        // (e.g. checking whether focus is inside the active step), because we don't have a\n        // reference to the elements that are rendering out the content.\n        this._containsFocus() ? this._keyManager.setActiveItem(newIndex) :\n            this._keyManager.updateActiveItem(newIndex);\n        this._selectedIndex = newIndex;\n        this._stateChanged();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onKeydown(event) {\n        /** @type {?} */\n        const hasModifier = hasModifierKey(event);\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const manager = this._keyManager;\n        if (manager.activeItemIndex != null && !hasModifier &&\n            (keyCode === SPACE || keyCode === ENTER)) {\n            this.selectedIndex = manager.activeItemIndex;\n            event.preventDefault();\n        }\n        else if (keyCode === HOME) {\n            manager.setFirstItemActive();\n            event.preventDefault();\n        }\n        else if (keyCode === END) {\n            manager.setLastItemActive();\n            event.preventDefault();\n        }\n        else {\n            manager.onKeydown(event);\n        }\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _anyControlsInvalidOrPending(index) {\n        /** @type {?} */\n        const steps = this.steps.toArray();\n        steps[this._selectedIndex].interacted = true;\n        if (this._linear && index >= 0) {\n            return steps.slice(0, index).some((/**\n             * @param {?} step\n             * @return {?}\n             */\n            step => {\n                /** @type {?} */\n                const control = step.stepControl;\n                /** @type {?} */\n                const isIncomplete = control ? (control.invalid || control.pending || !step.interacted) : !step.completed;\n                return isIncomplete && !step.optional && !step._completedOverride;\n            }));\n        }\n        return false;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _layoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Checks whether the stepper contains the focused element.\n     * @private\n     * @return {?}\n     */\n    _containsFocus() {\n        if (!this._document || !this._elementRef) {\n            return false;\n        }\n        /** @type {?} */\n        const stepperElement = this._elementRef.nativeElement;\n        /** @type {?} */\n        const focusedElement = this._document.activeElement;\n        return stepperElement === focusedElement || stepperElement.contains(focusedElement);\n    }\n}\nCdkStepper.ɵfac = function CdkStepper_Factory(t) { return new (t || CdkStepper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nCdkStepper.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkStepper, selectors: [[\"\", \"cdkStepper\", \"\"]], contentQueries: function CdkStepper_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkStep, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkStepHeader, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._steps = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._stepHeader = _t);\n    } }, inputs: { linear: \"linear\", selectedIndex: \"selectedIndex\", selected: \"selected\" }, outputs: { selectionChange: \"selectionChange\" }, exportAs: [\"cdkStepper\"] });\n/** @nocollapse */\nCdkStepper.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nCdkStepper.propDecorators = {\n    _steps: [{ type: ContentChildren, args: [CdkStep, { descendants: true },] }],\n    _stepHeader: [{ type: ContentChildren, args: [CdkStepHeader, { descendants: true },] }],\n    linear: [{ type: Input }],\n    selectedIndex: [{ type: Input }],\n    selected: [{ type: Input }],\n    selectionChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStepper, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkStepper]',\n                exportAs: 'cdkStepper'\n            }]\n    }], function () { return [{ type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { selectionChange: [{\n            type: Output\n        }], linear: [{\n            type: Input\n        }], selectedIndex: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], _steps: [{\n            type: ContentChildren,\n            args: [CdkStep, { descendants: true }]\n        }], _stepHeader: [{\n            type: ContentChildren,\n            args: [CdkStepHeader, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkStepper.ngAcceptInputType_editable;\n    /** @type {?} */\n    CdkStepper.ngAcceptInputType_optional;\n    /** @type {?} */\n    CdkStepper.ngAcceptInputType_completed;\n    /** @type {?} */\n    CdkStepper.ngAcceptInputType_hasError;\n    /** @type {?} */\n    CdkStepper.ngAcceptInputType_linear;\n    /** @type {?} */\n    CdkStepper.ngAcceptInputType_selectedIndex;\n    /**\n     * Emits when the component is destroyed.\n     * @type {?}\n     * @protected\n     */\n    CdkStepper.prototype._destroyed;\n    /**\n     * Used for managing keyboard focus.\n     * @type {?}\n     * @private\n     */\n    CdkStepper.prototype._keyManager;\n    /**\n     * \\@breaking-change 8.0.0 Remove `| undefined` once the `_document`\n     * constructor param is required.\n     * @type {?}\n     * @private\n     */\n    CdkStepper.prototype._document;\n    /**\n     * The list of step components that the stepper is holding.\n     * @deprecated use `steps` instead\n     * \\@breaking-change 9.0.0 remove this property\n     * @type {?}\n     */\n    CdkStepper.prototype._steps;\n    /**\n     * The list of step headers of the steps in the stepper.\n     * @deprecated Type to be changed to `QueryList<CdkStepHeader>`.\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     */\n    CdkStepper.prototype._stepHeader;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStepper.prototype._linear;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStepper.prototype._selectedIndex;\n    /**\n     * Event emitted when the selected step has changed.\n     * @type {?}\n     */\n    CdkStepper.prototype.selectionChange;\n    /**\n     * Used to track unique ID for each stepper component.\n     * @type {?}\n     */\n    CdkStepper.prototype._groupId;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkStepper.prototype._orientation;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStepper.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStepper.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStepper.prototype._elementRef;\n}\n/**\n * Simplified representation of an \"AbstractControl\" from \\@angular/forms.\n * Used to avoid having to bring in \\@angular/forms for a single optional interface.\n * \\@docs-private\n * @record\n */\nfunction AbstractControlLike() { }\nif (false) {\n    /** @type {?} */\n    AbstractControlLike.prototype.asyncValidator;\n    /** @type {?} */\n    AbstractControlLike.prototype.dirty;\n    /** @type {?} */\n    AbstractControlLike.prototype.disabled;\n    /** @type {?} */\n    AbstractControlLike.prototype.enabled;\n    /** @type {?} */\n    AbstractControlLike.prototype.errors;\n    /** @type {?} */\n    AbstractControlLike.prototype.invalid;\n    /** @type {?} */\n    AbstractControlLike.prototype.parent;\n    /** @type {?} */\n    AbstractControlLike.prototype.pending;\n    /** @type {?} */\n    AbstractControlLike.prototype.pristine;\n    /** @type {?} */\n    AbstractControlLike.prototype.root;\n    /** @type {?} */\n    AbstractControlLike.prototype.status;\n    /** @type {?} */\n    AbstractControlLike.prototype.statusChanges;\n    /** @type {?} */\n    AbstractControlLike.prototype.touched;\n    /** @type {?} */\n    AbstractControlLike.prototype.untouched;\n    /** @type {?} */\n    AbstractControlLike.prototype.updateOn;\n    /** @type {?} */\n    AbstractControlLike.prototype.valid;\n    /** @type {?} */\n    AbstractControlLike.prototype.validator;\n    /** @type {?} */\n    AbstractControlLike.prototype.value;\n    /** @type {?} */\n    AbstractControlLike.prototype.valueChanges;\n    /**\n     * @return {?}\n     */\n    AbstractControlLike.prototype.clearAsyncValidators = function () { };\n    /**\n     * @return {?}\n     */\n    AbstractControlLike.prototype.clearValidators = function () { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.disable = function (opts) { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.enable = function (opts) { };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    AbstractControlLike.prototype.get = function (path) { };\n    /**\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControlLike.prototype.getError = function (errorCode, path) { };\n    /**\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControlLike.prototype.hasError = function (errorCode, path) { };\n    /**\n     * @return {?}\n     */\n    AbstractControlLike.prototype.markAllAsTouched = function () { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.markAsDirty = function (opts) { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.markAsPending = function (opts) { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.markAsPristine = function (opts) { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.markAsTouched = function (opts) { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.markAsUntouched = function (opts) { };\n    /**\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControlLike.prototype.patchValue = function (value, options) { };\n    /**\n     * @param {?=} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControlLike.prototype.reset = function (value, options) { };\n    /**\n     * @param {?} newValidator\n     * @return {?}\n     */\n    AbstractControlLike.prototype.setAsyncValidators = function (newValidator) { };\n    /**\n     * @param {?} errors\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.setErrors = function (errors, opts) { };\n    /**\n     * @param {?} parent\n     * @return {?}\n     */\n    AbstractControlLike.prototype.setParent = function (parent) { };\n    /**\n     * @param {?} newValidator\n     * @return {?}\n     */\n    AbstractControlLike.prototype.setValidators = function (newValidator) { };\n    /**\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControlLike.prototype.setValue = function (value, options) { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.updateValueAndValidity = function (opts) { };\n    /**\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControlLike.prototype.patchValue = function (value, options) { };\n    /**\n     * @param {?=} formState\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControlLike.prototype.reset = function (formState, options) { };\n    /**\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControlLike.prototype.setValue = function (value, options) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/stepper/stepper-button.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Button that moves to the next step in a stepper workflow.\n */\nclass CdkStepperNext {\n    /**\n     * @param {?} _stepper\n     */\n    constructor(_stepper) {\n        this._stepper = _stepper;\n        /**\n         * Type of the next button. Defaults to \"submit\" if not specified.\n         */\n        this.type = 'submit';\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @return {?}\n     */\n    _handleClick() {\n        this._stepper.next();\n    }\n}\nCdkStepperNext.ɵfac = function CdkStepperNext_Factory(t) { return new (t || CdkStepperNext)(ɵngcc0.ɵɵdirectiveInject(CdkStepper)); };\nCdkStepperNext.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkStepperNext, selectors: [[\"button\", \"cdkStepperNext\", \"\"]], hostVars: 1, hostBindings: function CdkStepperNext_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function CdkStepperNext_click_HostBindingHandler() { return ctx._handleClick(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" } });\n/** @nocollapse */\nCdkStepperNext.ctorParameters = () => [\n    { type: CdkStepper }\n];\nCdkStepperNext.propDecorators = {\n    type: [{ type: Input }],\n    _handleClick: [{ type: HostListener, args: ['click',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStepperNext, [{\n        type: Directive,\n        args: [{\n                selector: 'button[cdkStepperNext]',\n                host: {\n                    '[type]': 'type'\n                }\n            }]\n    }], function () { return [{ type: CdkStepper }]; }, { type: [{\n            type: Input\n        }], _handleClick: [{\n            type: HostListener,\n            args: ['click']\n        }] }); })();\nif (false) {\n    /**\n     * Type of the next button. Defaults to \"submit\" if not specified.\n     * @type {?}\n     */\n    CdkStepperNext.prototype.type;\n    /** @type {?} */\n    CdkStepperNext.prototype._stepper;\n}\n/**\n * Button that moves to the previous step in a stepper workflow.\n */\nclass CdkStepperPrevious {\n    /**\n     * @param {?} _stepper\n     */\n    constructor(_stepper) {\n        this._stepper = _stepper;\n        /**\n         * Type of the previous button. Defaults to \"button\" if not specified.\n         */\n        this.type = 'button';\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @return {?}\n     */\n    _handleClick() {\n        this._stepper.previous();\n    }\n}\nCdkStepperPrevious.ɵfac = function CdkStepperPrevious_Factory(t) { return new (t || CdkStepperPrevious)(ɵngcc0.ɵɵdirectiveInject(CdkStepper)); };\nCdkStepperPrevious.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkStepperPrevious, selectors: [[\"button\", \"cdkStepperPrevious\", \"\"]], hostVars: 1, hostBindings: function CdkStepperPrevious_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function CdkStepperPrevious_click_HostBindingHandler() { return ctx._handleClick(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" } });\n/** @nocollapse */\nCdkStepperPrevious.ctorParameters = () => [\n    { type: CdkStepper }\n];\nCdkStepperPrevious.propDecorators = {\n    type: [{ type: Input }],\n    _handleClick: [{ type: HostListener, args: ['click',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStepperPrevious, [{\n        type: Directive,\n        args: [{\n                selector: 'button[cdkStepperPrevious]',\n                host: {\n                    '[type]': 'type'\n                }\n            }]\n    }], function () { return [{ type: CdkStepper }]; }, { type: [{\n            type: Input\n        }], _handleClick: [{\n            type: HostListener,\n            args: ['click']\n        }] }); })();\nif (false) {\n    /**\n     * Type of the previous button. Defaults to \"button\" if not specified.\n     * @type {?}\n     */\n    CdkStepperPrevious.prototype.type;\n    /** @type {?} */\n    CdkStepperPrevious.prototype._stepper;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/stepper/stepper-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CdkStepperModule {\n}\nCdkStepperModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkStepperModule });\nCdkStepperModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CdkStepperModule_Factory(t) { return new (t || CdkStepperModule)(); }, imports: [[BidiModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkStepperModule, { declarations: function () { return [CdkStep,\n        CdkStepper,\n        CdkStepHeader,\n        CdkStepLabel,\n        CdkStepperNext,\n        CdkStepperPrevious]; }, imports: function () { return [BidiModule]; }, exports: function () { return [CdkStep,\n        CdkStepper,\n        CdkStepHeader,\n        CdkStepLabel,\n        CdkStepperNext,\n        CdkStepperPrevious]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStepperModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule],\n                exports: [\n                    CdkStep,\n                    CdkStepper,\n                    CdkStepHeader,\n                    CdkStepLabel,\n                    CdkStepperNext,\n                    CdkStepperPrevious,\n                ],\n                declarations: [\n                    CdkStep,\n                    CdkStepper,\n                    CdkStepHeader,\n                    CdkStepLabel,\n                    CdkStepperNext,\n                    CdkStepperPrevious,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/stepper/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkStep, CdkStepHeader, CdkStepLabel, CdkStepper, CdkStepperModule, CdkStepperNext, CdkStepperPrevious, MAT_STEPPER_GLOBAL_OPTIONS, STEPPER_GLOBAL_OPTIONS, STEP_STATE, StepperSelectionEvent };\n\n//# sourceMappingURL=stepper.js.map","import { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { isDataSource } from '@angular/cdk/collections';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\n\nconst _c0 = [[[\"caption\"]]];\nconst _c1 = [\"caption\"];\nfunction CdkTextColumn_th_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.headerText, \" \");\n} }\nfunction CdkTextColumn_td_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const data_r2 = ctx.$implicit;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r1.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.dataAccessor(data_r2, ctx_r1.name), \" \");\n} }\nexport { DataSource } from '@angular/cdk/collections';\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { InjectionToken, Directive, TemplateRef, Inject, Optional, Input, ContentChild, ElementRef, IterableDiffers, ViewContainerRef, Component, ChangeDetectionStrategy, ViewEncapsulation, EmbeddedViewRef, isDevMode, ChangeDetectorRef, Attribute, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { Subject, BehaviorSubject, isObservable, of } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/can-stick.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface for a mixin to provide a directive with a function that checks if the sticky input has\n * been changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * \\@docs-private\n * @record\n */\nfunction CanStick() { }\nif (false) {\n    /**\n     * Whether sticky positioning should be applied.\n     * @type {?}\n     */\n    CanStick.prototype.sticky;\n    /**\n     * Whether the sticky input has changed since it was last checked.\n     * @type {?}\n     */\n    CanStick.prototype._hasStickyChanged;\n    /**\n     * Whether the sticky value has changed since this was last called.\n     * @return {?}\n     */\n    CanStick.prototype.hasStickyChanged = function () { };\n    /**\n     * Resets the dirty check for cases where the sticky state has been used without checking.\n     * @return {?}\n     */\n    CanStick.prototype.resetStickyChanged = function () { };\n}\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * \\@docs-private\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinHasStickyInput(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._sticky = false;\n            /**\n             * Whether the sticky input has changed since it was last checked.\n             */\n            this._hasStickyChanged = false;\n        }\n        /**\n         * Whether sticky positioning should be applied.\n         * @return {?}\n         */\n        get sticky() { return this._sticky; }\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set sticky(v) {\n            /** @type {?} */\n            const prevValue = this._sticky;\n            this._sticky = coerceBooleanProperty(v);\n            this._hasStickyChanged = prevValue !== this._sticky;\n        }\n        /**\n         * Whether the sticky value has changed since this was last called.\n         * @return {?}\n         */\n        hasStickyChanged() {\n            /** @type {?} */\n            const hasStickyChanged = this._hasStickyChanged;\n            this._hasStickyChanged = false;\n            return hasStickyChanged;\n        }\n        /**\n         * Resets the dirty check for cases where the sticky state has been used without checking.\n         * @return {?}\n         */\n        resetStickyChanged() {\n            this._hasStickyChanged = false;\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/tokens.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to provide a table to some of the sub-components without causing a circular dependency.\n * \\@docs-private\n * @type {?}\n */\nconst CDK_TABLE = new InjectionToken('CDK_TABLE');\n/**\n * Configurable options for `CdkTextColumn`.\n * @record\n * @template T\n */\nfunction TextColumnOptions() { }\nif (false) {\n    /**\n     * Default function that provides the header text based on the column name if a header\n     * text is not provided.\n     * @type {?|undefined}\n     */\n    TextColumnOptions.prototype.defaultHeaderTextTransform;\n    /**\n     * Default data accessor to use if one is not provided.\n     * @type {?|undefined}\n     */\n    TextColumnOptions.prototype.defaultDataAccessor;\n}\n/**\n * Injection token that can be used to specify the text column options.\n * @type {?}\n */\nconst TEXT_COLUMN_OPTIONS = new InjectionToken('text-column-options');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/cell.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base interface for a cell definition. Captures a column's cell template definition.\n * @record\n */\nfunction CellDef() { }\nif (false) {\n    /** @type {?} */\n    CellDef.prototype.template;\n}\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass CdkCellDef {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkCellDef.ɵfac = function CdkCellDef_Factory(t) { return new (t || CdkCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkCellDef, selectors: [[\"\", \"cdkCellDef\", \"\"]] });\n/** @nocollapse */\nCdkCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkCellDef.prototype.template;\n}\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass CdkHeaderCellDef {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkHeaderCellDef.ɵfac = function CdkHeaderCellDef_Factory(t) { return new (t || CdkHeaderCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkHeaderCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCellDef, selectors: [[\"\", \"cdkHeaderCellDef\", \"\"]] });\n/** @nocollapse */\nCdkHeaderCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkHeaderCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkHeaderCellDef.prototype.template;\n}\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass CdkFooterCellDef {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkFooterCellDef.ɵfac = function CdkFooterCellDef_Factory(t) { return new (t || CdkFooterCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkFooterCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCellDef, selectors: [[\"\", \"cdkFooterCellDef\", \"\"]] });\n/** @nocollapse */\nCdkFooterCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkFooterCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkFooterCellDef.prototype.template;\n}\n// Boilerplate for applying mixins to CdkColumnDef.\n/**\n * \\@docs-private\n */\nclass CdkColumnDefBase {\n}\n/** @type {?} */\nconst _CdkColumnDefBase = mixinHasStickyInput(CdkColumnDefBase);\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\nclass CdkColumnDef extends _CdkColumnDefBase {\n    /**\n     * @param {?=} _table\n     */\n    constructor(_table) {\n        super();\n        this._table = _table;\n        this._stickyEnd = false;\n    }\n    /**\n     * Unique name for this column.\n     * @return {?}\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    set name(name) {\n        // If the directive is set without a name (updated programatically), then this setter will\n        // trigger with an empty string and should not overwrite the programatically set value.\n        if (name) {\n            this._name = name;\n            this.cssClassFriendlyName = name.replace(/[^a-z0-9_-]/ig, '-');\n        }\n    }\n    /**\n     * Whether this column should be sticky positioned on the end of the row. Should make sure\n     * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n     * has been changed.\n     * @return {?}\n     */\n    get stickyEnd() {\n        return this._stickyEnd;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set stickyEnd(v) {\n        /** @type {?} */\n        const prevValue = this._stickyEnd;\n        this._stickyEnd = coerceBooleanProperty(v);\n        this._hasStickyChanged = prevValue !== this._stickyEnd;\n    }\n}\nCdkColumnDef.ɵfac = function CdkColumnDef_Factory(t) { return new (t || CdkColumnDef)(ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkColumnDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkColumnDef, selectors: [[\"\", \"cdkColumnDef\", \"\"]], contentQueries: function CdkColumnDef_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkCellDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderCellDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterCellDef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footerCell = _t.first);\n    } }, inputs: { sticky: \"sticky\", name: [\"cdkColumnDef\", \"name\"], stickyEnd: \"stickyEnd\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkColumnDef.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\nCdkColumnDef.propDecorators = {\n    name: [{ type: Input, args: ['cdkColumnDef',] }],\n    stickyEnd: [{ type: Input, args: ['stickyEnd',] }],\n    cell: [{ type: ContentChild, args: [CdkCellDef,] }],\n    headerCell: [{ type: ContentChild, args: [CdkHeaderCellDef,] }],\n    footerCell: [{ type: ContentChild, args: [CdkFooterCellDef,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkColumnDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkColumnDef]',\n                inputs: ['sticky'],\n                providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, { name: [{\n            type: Input,\n            args: ['cdkColumnDef']\n        }], stickyEnd: [{\n            type: Input,\n            args: ['stickyEnd']\n        }], cell: [{\n            type: ContentChild,\n            args: [CdkCellDef]\n        }], headerCell: [{\n            type: ContentChild,\n            args: [CdkHeaderCellDef]\n        }], footerCell: [{\n            type: ContentChild,\n            args: [CdkFooterCellDef]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkColumnDef.ngAcceptInputType_sticky;\n    /** @type {?} */\n    CdkColumnDef.ngAcceptInputType_stickyEnd;\n    /** @type {?} */\n    CdkColumnDef.prototype._name;\n    /** @type {?} */\n    CdkColumnDef.prototype._stickyEnd;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkColumnDef.prototype.cell;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkColumnDef.prototype.headerCell;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkColumnDef.prototype.footerCell;\n    /**\n     * Transformed version of the column name that can be used as part of a CSS classname. Excludes\n     * all non-alphanumeric characters and the special characters '-' and '_'. Any characters that\n     * do not match are replaced by the '-' character.\n     * @type {?}\n     */\n    CdkColumnDef.prototype.cssClassFriendlyName;\n    /** @type {?} */\n    CdkColumnDef.prototype._table;\n}\n/**\n * Base class for the cells. Adds a CSS classname that identifies the column it renders in.\n */\nclass BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        /** @type {?} */\n        const columnClassName = `cdk-column-${columnDef.cssClassFriendlyName}`;\n        elementRef.nativeElement.classList.add(columnClassName);\n    }\n}\n/**\n * Header cell template container that adds the right classes and role.\n */\nclass CdkHeaderCell extends BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkHeaderCell.ɵfac = function CdkHeaderCell_Factory(t) { return new (t || CdkHeaderCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkHeaderCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCell, selectors: [[\"cdk-header-cell\"], [\"th\", \"cdk-header-cell\", \"\"]], hostAttrs: [\"role\", \"columnheader\", 1, \"cdk-header-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkHeaderCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-header-cell, th[cdk-header-cell]',\n                host: {\n                    'class': 'cdk-header-cell',\n                    'role': 'columnheader'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Footer cell template container that adds the right classes and role.\n */\nclass CdkFooterCell extends BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkFooterCell.ɵfac = function CdkFooterCell_Factory(t) { return new (t || CdkFooterCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkFooterCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCell, selectors: [[\"cdk-footer-cell\"], [\"td\", \"cdk-footer-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-footer-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkFooterCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-footer-cell, td[cdk-footer-cell]',\n                host: {\n                    'class': 'cdk-footer-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Cell template container that adds the right classes and role.\n */\nclass CdkCell extends BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkCell.ɵfac = function CdkCell_Factory(t) { return new (t || CdkCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkCell, selectors: [[\"cdk-cell\"], [\"td\", \"cdk-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-cell, td[cdk-cell]',\n                host: {\n                    'class': 'cdk-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/row.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @type {?}\n */\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n * @abstract\n */\nclass BaseRowDef {\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     */\n    constructor(template, _differs) {\n        this.template = template;\n        this._differs = _differs;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n        // of the columns property or an empty array if none is provided.\n        if (!this._columnsDiffer) {\n            /** @type {?} */\n            const columns = (changes['columns'] && changes['columns'].currentValue) || [];\n            this._columnsDiffer = this._differs.find(columns).create();\n            this._columnsDiffer.diff(columns);\n        }\n    }\n    /**\n     * Returns the difference between the current columns and the columns from the last diff, or null\n     * if there is no difference.\n     * @return {?}\n     */\n    getColumnsDiff() {\n        return this._columnsDiffer.diff(this.columns);\n    }\n    /**\n     * Gets this row def's relevant cell template from the provided column def.\n     * @param {?} column\n     * @return {?}\n     */\n    extractCellTemplate(column) {\n        if (this instanceof CdkHeaderRowDef) {\n            return column.headerCell.template;\n        }\n        if (this instanceof CdkFooterRowDef) {\n            return column.footerCell.template;\n        }\n        else {\n            return column.cell.template;\n        }\n    }\n}\nBaseRowDef.ɵfac = function BaseRowDef_Factory(t) { return new (t || BaseRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers)); };\nBaseRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: BaseRowDef, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nBaseRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BaseRowDef, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }]; }, null); })();\nif (false) {\n    /**\n     * The columns to be displayed on this row.\n     * @type {?}\n     */\n    BaseRowDef.prototype.columns;\n    /**\n     * Differ used to check if any changes were made to the columns.\n     * @type {?}\n     * @protected\n     */\n    BaseRowDef.prototype._columnsDiffer;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    BaseRowDef.prototype.template;\n    /**\n     * @type {?}\n     * @protected\n     */\n    BaseRowDef.prototype._differs;\n}\n// Boilerplate for applying mixins to CdkHeaderRowDef.\n/**\n * \\@docs-private\n */\nclass CdkHeaderRowDefBase extends BaseRowDef {\n}\n/** @type {?} */\nconst _CdkHeaderRowDefBase = mixinHasStickyInput(CdkHeaderRowDefBase);\n/**\n * Header row definition for the CDK table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass CdkHeaderRowDef extends _CdkHeaderRowDefBase {\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     * @param {?=} _table\n     */\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkHeaderRowDef.ɵfac = function CdkHeaderRowDef_Factory(t) { return new (t || CdkHeaderRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkHeaderRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderRowDef, selectors: [[\"\", \"cdkHeaderRowDef\", \"\"]], inputs: { columns: [\"cdkHeaderRowDef\", \"columns\"], sticky: [\"cdkHeaderRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nCdkHeaderRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkHeaderRowDef]',\n                inputs: ['columns: cdkHeaderRowDef', 'sticky: cdkHeaderRowDefSticky']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    CdkHeaderRowDef.ngAcceptInputType_sticky;\n    /** @type {?} */\n    CdkHeaderRowDef.prototype._table;\n}\n// Boilerplate for applying mixins to CdkFooterRowDef.\n/**\n * \\@docs-private\n */\nclass CdkFooterRowDefBase extends BaseRowDef {\n}\n/** @type {?} */\nconst _CdkFooterRowDefBase = mixinHasStickyInput(CdkFooterRowDefBase);\n/**\n * Footer row definition for the CDK table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass CdkFooterRowDef extends _CdkFooterRowDefBase {\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     * @param {?=} _table\n     */\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkFooterRowDef.ɵfac = function CdkFooterRowDef_Factory(t) { return new (t || CdkFooterRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkFooterRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFooterRowDef, selectors: [[\"\", \"cdkFooterRowDef\", \"\"]], inputs: { columns: [\"cdkFooterRowDef\", \"columns\"], sticky: [\"cdkFooterRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nCdkFooterRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkFooterRowDef]',\n                inputs: ['columns: cdkFooterRowDef', 'sticky: cdkFooterRowDefSticky']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    CdkFooterRowDef.ngAcceptInputType_sticky;\n    /** @type {?} */\n    CdkFooterRowDef.prototype._table;\n}\n/**\n * Data row definition for the CDK table.\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n * @template T\n */\nclass CdkRowDef extends BaseRowDef {\n    // TODO(andrewseguin): Add an input for providing a switch function to determine\n    //   if this template should be used.\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     * @param {?=} _table\n     */\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n}\nCdkRowDef.ɵfac = function CdkRowDef_Factory(t) { return new (t || CdkRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkRowDef, selectors: [[\"\", \"cdkRowDef\", \"\"]], inputs: { columns: [\"cdkRowDefColumns\", \"columns\"], when: [\"cdkRowDefWhen\", \"when\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkRowDef]',\n                inputs: ['columns: cdkRowDefColumns', 'when: cdkRowDefWhen']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Function that should return true if this row template should be used for the provided index\n     * and row data. If left undefined, this row will be considered the default row template to use\n     * when no other when functions return true for the data.\n     * For every row, there must be at least one when function that passes or an undefined to default.\n     * @type {?}\n     */\n    CdkRowDef.prototype.when;\n    /** @type {?} */\n    CdkRowDef.prototype._table;\n}\n/**\n * Context provided to the row cells when `multiTemplateDataRows` is false\n * @record\n * @template T\n */\nfunction CdkCellOutletRowContext() { }\nif (false) {\n    /**\n     * Data for the row that this cell is located within.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.$implicit;\n    /**\n     * Index of the data object in the provided data array.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.index;\n    /**\n     * Length of the number of total rows.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.count;\n    /**\n     * True if this cell is contained in the first row.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.first;\n    /**\n     * True if this cell is contained in the last row.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.last;\n    /**\n     * True if this cell is contained in a row with an even-numbered index.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.even;\n    /**\n     * True if this cell is contained in a row with an odd-numbered index.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.odd;\n}\n/**\n * Context provided to the row cells when `multiTemplateDataRows` is true. This context is the same\n * as CdkCellOutletRowContext except that the single `index` value is replaced by `dataIndex` and\n * `renderIndex`.\n * @record\n * @template T\n */\nfunction CdkCellOutletMultiRowContext() { }\nif (false) {\n    /**\n     * Data for the row that this cell is located within.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.$implicit;\n    /**\n     * Index of the data object in the provided data array.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.dataIndex;\n    /**\n     * Index location of the rendered row that this cell is located within.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.renderIndex;\n    /**\n     * Length of the number of total rows.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.count;\n    /**\n     * True if this cell is contained in the first row.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.first;\n    /**\n     * True if this cell is contained in the last row.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.last;\n    /**\n     * True if this cell is contained in a row with an even-numbered index.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.even;\n    /**\n     * True if this cell is contained in a row with an odd-numbered index.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.odd;\n}\n/**\n * Outlet for rendering cells inside of a row or header row.\n * \\@docs-private\n */\nclass CdkCellOutlet {\n    /**\n     * @param {?} _viewContainer\n     */\n    constructor(_viewContainer) {\n        this._viewContainer = _viewContainer;\n        CdkCellOutlet.mostRecentCellOutlet = this;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // If this was the last outlet being rendered in the view, remove the reference\n        // from the static property after it has been destroyed to avoid leaking memory.\n        if (CdkCellOutlet.mostRecentCellOutlet === this) {\n            CdkCellOutlet.mostRecentCellOutlet = null;\n        }\n    }\n}\nCdkCellOutlet.ɵfac = function CdkCellOutlet_Factory(t) { return new (t || CdkCellOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nCdkCellOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkCellOutlet, selectors: [[\"\", \"cdkCellOutlet\", \"\"]] });\n/**\n * Static property containing the latest constructed instance of this class.\n * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n * createEmbeddedView. After one of these components are created, this property will provide\n * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n * construct the cells with the provided context.\n */\nCdkCellOutlet.mostRecentCellOutlet = null;\n/** @nocollapse */\nCdkCellOutlet.ctorParameters = () => [\n    { type: ViewContainerRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkCellOutlet, [{\n        type: Directive,\n        args: [{ selector: '[cdkCellOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }]; }, null); })();\nif (false) {\n    /**\n     * Static property containing the latest constructed instance of this class.\n     * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n     * createEmbeddedView. After one of these components are created, this property will provide\n     * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n     * construct the cells with the provided context.\n     * @type {?}\n     */\n    CdkCellOutlet.mostRecentCellOutlet;\n    /**\n     * The ordered list of cells to render within this outlet's view container\n     * @type {?}\n     */\n    CdkCellOutlet.prototype.cells;\n    /**\n     * The data context to be provided to each cell\n     * @type {?}\n     */\n    CdkCellOutlet.prototype.context;\n    /** @type {?} */\n    CdkCellOutlet.prototype._viewContainer;\n}\n/**\n * Header template container that contains the cell outlet. Adds the right class and role.\n */\nclass CdkHeaderRow {\n}\nCdkHeaderRow.ɵfac = function CdkHeaderRow_Factory(t) { return new (t || CdkHeaderRow)(); };\nCdkHeaderRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkHeaderRow, selectors: [[\"cdk-header-row\"], [\"tr\", \"cdk-header-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-header-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkHeaderRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-header-row, tr[cdk-header-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-header-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n/**\n * Footer template container that contains the cell outlet. Adds the right class and role.\n */\nclass CdkFooterRow {\n}\nCdkFooterRow.ɵfac = function CdkFooterRow_Factory(t) { return new (t || CdkFooterRow)(); };\nCdkFooterRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkFooterRow, selectors: [[\"cdk-footer-row\"], [\"tr\", \"cdk-footer-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-footer-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkFooterRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-footer-row, tr[cdk-footer-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-footer-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\nclass CdkRow {\n}\nCdkRow.ɵfac = function CdkRow_Factory(t) { return new (t || CdkRow)(); };\nCdkRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkRow, selectors: [[\"cdk-row\"], [\"tr\", \"cdk-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-row, tr[cdk-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/sticky-styler.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * List of all possible directions that can be used for sticky positioning.\n * \\@docs-private\n * @type {?}\n */\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * \\@docs-private\n */\nclass StickyStyler {\n    /**\n     * @param {?} _isNativeHtmlTable Whether the sticky logic should be based on a table\n     *     that uses the native `<table>` element.\n     * @param {?} _stickCellCss The CSS class that will be applied to every row/cell that has\n     *     sticky positioning applied.\n     * @param {?} direction The directionality context of the table (ltr/rtl); affects column positioning\n     *     by reversing left/right positions.\n     * @param {?=} _isBrowser Whether the table is currently being rendered on the server or the client.\n     */\n    constructor(_isNativeHtmlTable, _stickCellCss, direction, _isBrowser = true) {\n        this._isNativeHtmlTable = _isNativeHtmlTable;\n        this._stickCellCss = _stickCellCss;\n        this.direction = direction;\n        this._isBrowser = _isBrowser;\n    }\n    /**\n     * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n     * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n     * @param {?} rows The list of rows that should be cleared from sticking in the provided directions\n     * @param {?} stickyDirections The directions that should no longer be set as sticky on the rows.\n     * @return {?}\n     */\n    clearStickyPositioning(rows, stickyDirections) {\n        for (const row of rows) {\n            // If the row isn't an element (e.g. if it's an `ng-container`),\n            // it won't have inline styles or `children` so we skip it.\n            if (row.nodeType !== row.ELEMENT_NODE) {\n                continue;\n            }\n            this._removeStickyStyle(row, stickyDirections);\n            for (let i = 0; i < row.children.length; i++) {\n                /** @type {?} */\n                const cell = (/** @type {?} */ (row.children[i]));\n                this._removeStickyStyle(cell, stickyDirections);\n            }\n        }\n    }\n    /**\n     * Applies sticky left and right positions to the cells of each row according to the sticky\n     * states of the rendered column definitions.\n     * @param {?} rows The rows that should have its set of cells stuck according to the sticky states.\n     * @param {?} stickyStartStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the start of the row.\n     * @param {?} stickyEndStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the end of the row.\n     * @return {?}\n     */\n    updateStickyColumns(rows, stickyStartStates, stickyEndStates) {\n        /** @type {?} */\n        const hasStickyColumns = stickyStartStates.some((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => state)) || stickyEndStates.some((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => state));\n        if (!rows.length || !hasStickyColumns || !this._isBrowser) {\n            return;\n        }\n        /** @type {?} */\n        const firstRow = rows[0];\n        /** @type {?} */\n        const numCells = firstRow.children.length;\n        /** @type {?} */\n        const cellWidths = this._getCellWidths(firstRow);\n        /** @type {?} */\n        const startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n        /** @type {?} */\n        const endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n        /** @type {?} */\n        const isRtl = this.direction === 'rtl';\n        for (const row of rows) {\n            for (let i = 0; i < numCells; i++) {\n                /** @type {?} */\n                const cell = (/** @type {?} */ (row.children[i]));\n                if (stickyStartStates[i]) {\n                    this._addStickyStyle(cell, isRtl ? 'right' : 'left', startPositions[i]);\n                }\n                if (stickyEndStates[i]) {\n                    this._addStickyStyle(cell, isRtl ? 'left' : 'right', endPositions[i]);\n                }\n            }\n        }\n    }\n    /**\n     * Applies sticky positioning to the row's cells if using the native table layout, and to the\n     * row itself otherwise.\n     * @param {?} rowsToStick The list of rows that should be stuck according to their corresponding\n     *     sticky state and to the provided top or bottom position.\n     * @param {?} stickyStates A list of boolean states where each state represents whether the row\n     *     should be stuck in the particular top or bottom position.\n     * @param {?} position The position direction in which the row should be stuck if that row should be\n     *     sticky.\n     *\n     * @return {?}\n     */\n    stickRows(rowsToStick, stickyStates, position) {\n        // Since we can't measure the rows on the server, we can't stick the rows properly.\n        if (!this._isBrowser) {\n            return;\n        }\n        // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n        // position such that the last row stuck will be \"bottom: 0px\" and so on.\n        /** @type {?} */\n        const rows = position === 'bottom' ? rowsToStick.reverse() : rowsToStick;\n        /** @type {?} */\n        let stickyHeight = 0;\n        for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n            if (!stickyStates[rowIndex]) {\n                continue;\n            }\n            /** @type {?} */\n            const row = rows[rowIndex];\n            if (this._isNativeHtmlTable) {\n                for (let j = 0; j < row.children.length; j++) {\n                    /** @type {?} */\n                    const cell = (/** @type {?} */ (row.children[j]));\n                    this._addStickyStyle(cell, position, stickyHeight);\n                }\n            }\n            else {\n                // Flex does not respect the stick positioning on the cells, needs to be applied to the row.\n                // If this is applied on a native table, Safari causes the header to fly in wrong direction.\n                this._addStickyStyle(row, position, stickyHeight);\n            }\n            if (rowIndex === rows.length - 1) {\n                // prevent unnecessary reflow from getBoundingClientRect()\n                return;\n            }\n            stickyHeight += row.getBoundingClientRect().height;\n        }\n    }\n    /**\n     * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n     * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n     * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n     * the tfoot element.\n     * @param {?} tableElement\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    updateStickyFooterContainer(tableElement, stickyStates) {\n        if (!this._isNativeHtmlTable) {\n            return;\n        }\n        /** @type {?} */\n        const tfoot = (/** @type {?} */ (tableElement.querySelector('tfoot')));\n        if (stickyStates.some((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => !state))) {\n            this._removeStickyStyle(tfoot, ['bottom']);\n        }\n        else {\n            this._addStickyStyle(tfoot, 'bottom', 0);\n        }\n    }\n    /**\n     * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n     * the zIndex, removing each of the provided sticky directions, and removing the\n     * sticky position if there are no more directions.\n     * @param {?} element\n     * @param {?} stickyDirections\n     * @return {?}\n     */\n    _removeStickyStyle(element, stickyDirections) {\n        for (const dir of stickyDirections) {\n            element.style[dir] = '';\n        }\n        element.style.zIndex = this._getCalculatedZIndex(element);\n        // If the element no longer has any more sticky directions, remove sticky positioning and\n        // the sticky CSS class.\n        /** @type {?} */\n        const hasDirection = STICKY_DIRECTIONS.some((/**\n         * @param {?} dir\n         * @return {?}\n         */\n        dir => !!element.style[dir]));\n        if (!hasDirection) {\n            element.style.position = '';\n            element.classList.remove(this._stickCellCss);\n        }\n    }\n    /**\n     * Adds the sticky styling to the element by adding the sticky style class, changing position\n     * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n     * direction and value.\n     * @param {?} element\n     * @param {?} dir\n     * @param {?} dirValue\n     * @return {?}\n     */\n    _addStickyStyle(element, dir, dirValue) {\n        element.classList.add(this._stickCellCss);\n        element.style[dir] = `${dirValue}px`;\n        element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n        element.style.zIndex = this._getCalculatedZIndex(element);\n    }\n    /**\n     * Calculate what the z-index should be for the element, depending on what directions (top,\n     * bottom, left, right) have been set. It should be true that elements with a top direction\n     * should have the highest index since these are elements like a table header. If any of those\n     * elements are also sticky in another direction, then they should appear above other elements\n     * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n     * (e.g. footer rows) should then be next in the ordering such that they are below the header\n     * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n     * should minimally increment so that they are above non-sticky elements but below top and bottom\n     * elements.\n     * @param {?} element\n     * @return {?}\n     */\n    _getCalculatedZIndex(element) {\n        /** @type {?} */\n        const zIndexIncrements = {\n            top: 100,\n            bottom: 10,\n            left: 1,\n            right: 1,\n        };\n        /** @type {?} */\n        let zIndex = 0;\n        // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n        // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n        // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n        for (const dir of (/** @type {?} */ (STICKY_DIRECTIONS))) {\n            if (element.style[dir]) {\n                zIndex += zIndexIncrements[dir];\n            }\n        }\n        return zIndex ? `${zIndex}` : '';\n    }\n    /**\n     * Gets the widths for each cell in the provided row.\n     * @param {?} row\n     * @return {?}\n     */\n    _getCellWidths(row) {\n        /** @type {?} */\n        const cellWidths = [];\n        /** @type {?} */\n        const firstRowCells = row.children;\n        for (let i = 0; i < firstRowCells.length; i++) {\n            /** @type {?} */\n            let cell = (/** @type {?} */ (firstRowCells[i]));\n            cellWidths.push(cell.getBoundingClientRect().width);\n        }\n        return cellWidths;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     * @param {?} widths\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    _getStickyStartColumnPositions(widths, stickyStates) {\n        /** @type {?} */\n        const positions = [];\n        /** @type {?} */\n        let nextPosition = 0;\n        for (let i = 0; i < widths.length; i++) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     * @param {?} widths\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    _getStickyEndColumnPositions(widths, stickyStates) {\n        /** @type {?} */\n        const positions = [];\n        /** @type {?} */\n        let nextPosition = 0;\n        for (let i = widths.length; i > 0; i--) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    StickyStyler.prototype._isNativeHtmlTable;\n    /**\n     * @type {?}\n     * @private\n     */\n    StickyStyler.prototype._stickCellCss;\n    /** @type {?} */\n    StickyStyler.prototype.direction;\n    /**\n     * @type {?}\n     * @private\n     */\n    StickyStyler.prototype._isBrowser;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/table-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when attempting to find an unexisting column.\n * \\@docs-private\n * @param {?} id Id whose lookup failed.\n * @return {?}\n */\nfunction getTableUnknownColumnError(id) {\n    return Error(`Could not find column with id \"${id}\".`);\n}\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * \\@docs-private\n * @param {?} name\n * @return {?}\n */\nfunction getTableDuplicateColumnNameError(name) {\n    return Error(`Duplicate column definition name provided: \"${name}\".`);\n}\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableMultipleDefaultRowDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * \\@docs-private\n * @param {?} data\n * @return {?}\n */\nfunction getTableMissingMatchingRowDefError(data) {\n    return Error(`Could not find a matching row definition for the` +\n        `provided row data: ${JSON.stringify(data)}`);\n}\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableMissingRowDefsError() {\n    return Error('Missing definitions for header, footer, and row; ' +\n        'cannot determine which columns should be rendered.');\n}\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableUnknownDataSourceError() {\n    return Error(`Provided data source did not match an array, Observable, or DataSource`);\n}\n/**\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableTextColumnMissingParentTableError() {\n    return Error(`Text column could not find a parent table for registration.`);\n}\n/**\n * Returns an error to be thrown when a table text column doesn't have a name.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableTextColumnMissingNameError() {\n    return Error(`Table text column must have a name.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/table.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface used to provide an outlet for rows to be inserted into.\n * @record\n */\nfunction RowOutlet() { }\nif (false) {\n    /** @type {?} */\n    RowOutlet.prototype.viewContainer;\n}\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\n * \\@docs-private\n */\nclass DataRowOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?} elementRef\n     */\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nDataRowOutlet.ɵfac = function DataRowOutlet_Factory(t) { return new (t || DataRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nDataRowOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DataRowOutlet, selectors: [[\"\", \"rowOutlet\", \"\"]] });\n/** @nocollapse */\nDataRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[rowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    DataRowOutlet.prototype.viewContainer;\n    /** @type {?} */\n    DataRowOutlet.prototype.elementRef;\n}\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\n * \\@docs-private\n */\nclass HeaderRowOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?} elementRef\n     */\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nHeaderRowOutlet.ɵfac = function HeaderRowOutlet_Factory(t) { return new (t || HeaderRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nHeaderRowOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: HeaderRowOutlet, selectors: [[\"\", \"headerRowOutlet\", \"\"]] });\n/** @nocollapse */\nHeaderRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HeaderRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[headerRowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    HeaderRowOutlet.prototype.viewContainer;\n    /** @type {?} */\n    HeaderRowOutlet.prototype.elementRef;\n}\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\n * \\@docs-private\n */\nclass FooterRowOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?} elementRef\n     */\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nFooterRowOutlet.ɵfac = function FooterRowOutlet_Factory(t) { return new (t || FooterRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nFooterRowOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FooterRowOutlet, selectors: [[\"\", \"footerRowOutlet\", \"\"]] });\n/** @nocollapse */\nFooterRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FooterRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[footerRowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    FooterRowOutlet.prototype.viewContainer;\n    /** @type {?} */\n    FooterRowOutlet.prototype.elementRef;\n}\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * \\@docs-private\n * @type {?}\n */\nconst CDK_TABLE_TEMPLATE = \n// Note that according to MDN, the `caption` element has to be projected as the **first**\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\n`\n  <ng-content select=\"caption\"></ng-content>\n  <ng-container headerRowOutlet></ng-container>\n  <ng-container rowOutlet></ng-container>\n  <ng-container footerRowOutlet></ng-container>\n`;\n/**\n * Interface used to conveniently type the possible context interfaces for the render row.\n * \\@docs-private\n * @record\n * @template T\n */\nfunction RowContext() { }\n/**\n * Class used to conveniently type the embedded view ref for rows with a context.\n * \\@docs-private\n * @abstract\n * @template T\n */\nclass RowViewRef extends EmbeddedViewRef {\n}\n/**\n * Set of properties that represents the identity of a single rendered row.\n *\n * When the table needs to determine the list of rows to render, it will do so by iterating through\n * each data object and evaluating its list of row templates to display (when multiTemplateDataRows\n * is false, there is only one template per data object). For each pair of data object and row\n * template, a `RenderRow` is added to the list of rows to render. If the data object and row\n * template pair has already been rendered, the previously used `RenderRow` is added; else a new\n * `RenderRow` is * created. Once the list is complete and all data objects have been itereated\n * through, a diff is performed to determine the changes that need to be made to the rendered rows.\n *\n * \\@docs-private\n * @record\n * @template T\n */\nfunction RenderRow() { }\nif (false) {\n    /** @type {?} */\n    RenderRow.prototype.data;\n    /** @type {?} */\n    RenderRow.prototype.dataIndex;\n    /** @type {?} */\n    RenderRow.prototype.rowDef;\n}\n/**\n * A data table that can render a header row, data rows, and a footer row.\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\n * connect function that will return an Observable stream that emits the data array to render.\n * @template T\n */\nclass CdkTable {\n    /**\n     * @param {?} _differs\n     * @param {?} _changeDetectorRef\n     * @param {?} _elementRef\n     * @param {?} role\n     * @param {?} _dir\n     * @param {?} _document\n     * @param {?} _platform\n     */\n    constructor(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        this._platform = _platform;\n        /**\n         * Subject that emits when the component has been destroyed.\n         */\n        this._onDestroy = new Subject();\n        /**\n         * Map of all the user's defined columns (header, data, and footer cell template) identified by\n         * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n         * any custom column definitions added to `_customColumnDefs`.\n         */\n        this._columnDefsByName = new Map();\n        /**\n         * Column definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * column definitions as *its* content child.\n         */\n        this._customColumnDefs = new Set();\n        /**\n         * Data row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in data rows as *its* content child.\n         */\n        this._customRowDefs = new Set();\n        /**\n         * Header row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in header rows as *its* content child.\n         */\n        this._customHeaderRowDefs = new Set();\n        /**\n         * Footer row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n         * built-in footer row as *its* content child.\n         */\n        this._customFooterRowDefs = new Set();\n        /**\n         * Whether the header row definition has been changed. Triggers an update to the header row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._headerRowDefChanged = true;\n        /**\n         * Whether the footer row definition has been changed. Triggers an update to the footer row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._footerRowDefChanged = true;\n        /**\n         * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n         * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n         * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n         * and row template matches, which allows the `IterableDiffer` to check rows by reference\n         * and understand which rows are added/moved/removed.\n         *\n         * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n         * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n         * contains an array of created pairs. The array is necessary to handle cases where the data\n         * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n         * stored.\n         */\n        this._cachedRenderRowsMap = new Map();\n        /**\n         * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n         * table subclasses.\n         */\n        this.stickyCssClass = 'cdk-table-sticky';\n        this._multiTemplateDataRows = false;\n        // TODO(andrewseguin): Remove max value as the end index\n        //   and instead calculate the view on init and scroll.\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         *\n         * \\@docs-private\n         */\n        this.viewChange = new BehaviorSubject({ start: 0, end: Number.MAX_VALUE });\n        if (!role) {\n            this._elementRef.nativeElement.setAttribute('role', 'grid');\n        }\n        this._document = _document;\n        this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\n    }\n    /**\n     * Tracking function that will be used to check the differences in data changes. Used similarly\n     * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n     * relative to the function to know if a row should be added/removed/moved.\n     * Accepts a function that takes two parameters, `index` and `item`.\n     * @return {?}\n     */\n    get trackBy() {\n        return this._trackByFn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set trackBy(fn) {\n        if (isDevMode() && fn != null && typeof fn !== 'function' && (/** @type {?} */ (console)) &&\n            (/** @type {?} */ (console.warn))) {\n            console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this._trackByFn = fn;\n    }\n    /**\n     * The table's source of data, which can be provided in three ways (in order of complexity):\n     *   - Simple data array (each object represents one table row)\n     *   - Stream that emits a data array each time the array changes\n     *   - `DataSource` object that implements the connect/disconnect interface.\n     *\n     * If a data array is provided, the table must be notified when the array's objects are\n     * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n     * render the diff since the last table render. If the data array reference is changed, the table\n     * will automatically trigger an update to the rows.\n     *\n     * When providing an Observable stream, the table will trigger an update automatically when the\n     * stream emits a new array of data.\n     *\n     * Finally, when providing a `DataSource` object, the table will use the Observable stream\n     * provided by the connect function and trigger updates when that stream emits new data array\n     * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n     * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n     * subscriptions registered during the connect process).\n     * @return {?}\n     */\n    get dataSource() {\n        return this._dataSource;\n    }\n    /**\n     * @param {?} dataSource\n     * @return {?}\n     */\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    /**\n     * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n     * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n     * dataobject will render the first row that evaluates its when predicate to true, in the order\n     * defined in the table, or otherwise the default row which does not have a when predicate.\n     * @return {?}\n     */\n    get multiTemplateDataRows() {\n        return this._multiTemplateDataRows;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set multiTemplateDataRows(v) {\n        this._multiTemplateDataRows = coerceBooleanProperty(v);\n        // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\n        // this setter will be invoked before the row outlet has been defined hence the null check.\n        if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\n            this._forceRenderDataRows();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._setupStickyStyler();\n        if (this._isNativeHtmlTable) {\n            this._applyNativeTableSections();\n        }\n        // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n        // the user has provided a custom trackBy, return the result of that function as evaluated\n        // with the values of the `RenderRow`'s data and index.\n        this._dataDiffer = this._differs.find([]).create((/**\n         * @param {?} _i\n         * @param {?} dataRow\n         * @return {?}\n         */\n        (_i, dataRow) => {\n            return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n        this._cacheRowDefs();\n        this._cacheColumnDefs();\n        // Make sure that the user has at least added header, footer, or data row def.\n        if (!this._headerRowDefs.length && !this._footerRowDefs.length && !this._rowDefs.length) {\n            throw getTableMissingRowDefsError();\n        }\n        // Render updates if the list of columns have been changed for the header, row, or footer defs.\n        this._renderUpdatedColumns();\n        // If the header row definition has been changed, trigger a render to the header row.\n        if (this._headerRowDefChanged) {\n            this._forceRenderHeaderRows();\n            this._headerRowDefChanged = false;\n        }\n        // If the footer row definition has been changed, trigger a render to the footer row.\n        if (this._footerRowDefChanged) {\n            this._forceRenderFooterRows();\n            this._footerRowDefChanged = false;\n        }\n        // If there is a data source and row definitions, connect to the data source unless a\n        // connection has already been made.\n        if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n            this._observeRenderChanges();\n        }\n        this._checkStickyStates();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._rowOutlet.viewContainer.clear();\n        this._headerRowOutlet.viewContainer.clear();\n        this._footerRowOutlet.viewContainer.clear();\n        this._cachedRenderRowsMap.clear();\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n    }\n    /**\n     * Renders rows based on the table's latest set of data, which was either provided directly as an\n     * input or retrieved through an Observable stream (directly or from a DataSource).\n     * Checks for differences in the data since the last diff to perform only the necessary\n     * changes (add/remove/move rows).\n     *\n     * If the table's data source is a DataSource or Observable, this will be invoked automatically\n     * each time the provided Observable stream emits a new data array. Otherwise if your data is\n     * an array, this function will need to be called to render any changes.\n     * @return {?}\n     */\n    renderRows() {\n        this._renderRows = this._getAllRenderRows();\n        /** @type {?} */\n        const changes = this._dataDiffer.diff(this._renderRows);\n        if (!changes) {\n            return;\n        }\n        /** @type {?} */\n        const viewContainer = this._rowOutlet.viewContainer;\n        changes.forEachOperation((/**\n         * @param {?} record\n         * @param {?} prevIndex\n         * @param {?} currentIndex\n         * @return {?}\n         */\n        (record, prevIndex, currentIndex) => {\n            if (record.previousIndex == null) {\n                this._insertRow(record.item, (/** @type {?} */ (currentIndex)));\n            }\n            else if (currentIndex == null) {\n                viewContainer.remove((/** @type {?} */ (prevIndex)));\n            }\n            else {\n                /** @type {?} */\n                const view = (/** @type {?} */ (viewContainer.get((/** @type {?} */ (prevIndex)))));\n                viewContainer.move((/** @type {?} */ (view)), currentIndex);\n            }\n        }));\n        // Update the meta context of a row's context data (index, count, first, last, ...)\n        this._updateRowIndexContext();\n        // Update rows that did not get added/removed/moved but may have had their identity changed,\n        // e.g. if trackBy matched data on some property but the actual data reference changed.\n        changes.forEachIdentityChange((/**\n         * @param {?} record\n         * @return {?}\n         */\n        (record) => {\n            /** @type {?} */\n            const rowView = (/** @type {?} */ (viewContainer.get((/** @type {?} */ (record.currentIndex)))));\n            rowView.context.$implicit = record.item.data;\n        }));\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Sets the header row definition to be used. Overrides the header row definition gathered by\n     * using `ContentChild`, if one exists. Sets a flag that will re-render the header row after the\n     * table's content is checked.\n     * \\@docs-private\n     * @deprecated Use `addHeaderRowDef` and `removeHeaderRowDef` instead\n     * \\@breaking-change 8.0.0\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    setHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs = new Set([headerRowDef]);\n        this._headerRowDefChanged = true;\n    }\n    /**\n     * Sets the footer row definition to be used. Overrides the footer row definition gathered by\n     * using `ContentChild`, if one exists. Sets a flag that will re-render the footer row after the\n     * table's content is checked.\n     * \\@docs-private\n     * @deprecated Use `addFooterRowDef` and `removeFooterRowDef` instead\n     * \\@breaking-change 8.0.0\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    setFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs = new Set([footerRowDef]);\n        this._footerRowDefChanged = true;\n    }\n    /**\n     * Adds a column definition that was not included as part of the content children.\n     * @param {?} columnDef\n     * @return {?}\n     */\n    addColumnDef(columnDef) {\n        this._customColumnDefs.add(columnDef);\n    }\n    /**\n     * Removes a column definition that was not included as part of the content children.\n     * @param {?} columnDef\n     * @return {?}\n     */\n    removeColumnDef(columnDef) {\n        this._customColumnDefs.delete(columnDef);\n    }\n    /**\n     * Adds a row definition that was not included as part of the content children.\n     * @param {?} rowDef\n     * @return {?}\n     */\n    addRowDef(rowDef) {\n        this._customRowDefs.add(rowDef);\n    }\n    /**\n     * Removes a row definition that was not included as part of the content children.\n     * @param {?} rowDef\n     * @return {?}\n     */\n    removeRowDef(rowDef) {\n        this._customRowDefs.delete(rowDef);\n    }\n    /**\n     * Adds a header row definition that was not included as part of the content children.\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    addHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.add(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /**\n     * Removes a header row definition that was not included as part of the content children.\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    removeHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.delete(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /**\n     * Adds a footer row definition that was not included as part of the content children.\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    addFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.add(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /**\n     * Removes a footer row definition that was not included as part of the content children.\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    removeFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.delete(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /**\n     * Updates the header sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n     * automatically called when the header row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     * @return {?}\n     */\n    updateStickyHeaderRowStyles() {\n        /** @type {?} */\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        /** @type {?} */\n        const tableElement = (/** @type {?} */ (this._elementRef.nativeElement));\n        // Hide the thead element if there are no header rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        /** @type {?} */\n        const thead = tableElement.querySelector('thead');\n        if (thead) {\n            thead.style.display = headerRows.length ? '' : 'none';\n        }\n        /** @type {?} */\n        const stickyStates = this._headerRowDefs.map((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.sticky));\n        this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n        this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._headerRowDefs.forEach((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.resetStickyChanged()));\n    }\n    /**\n     * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n     * automatically called when the footer row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     * @return {?}\n     */\n    updateStickyFooterRowStyles() {\n        /** @type {?} */\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        /** @type {?} */\n        const tableElement = (/** @type {?} */ (this._elementRef.nativeElement));\n        // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        /** @type {?} */\n        const tfoot = tableElement.querySelector('tfoot');\n        if (tfoot) {\n            tfoot.style.display = footerRows.length ? '' : 'none';\n        }\n        /** @type {?} */\n        const stickyStates = this._footerRowDefs.map((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.sticky));\n        this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n        this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n        this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._footerRowDefs.forEach((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.resetStickyChanged()));\n    }\n    /**\n     * Updates the column sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the left and right. Then sticky styles are added for the left and right according\n     * to the column definitions for each cell in each row. This is automatically called when\n     * the data source provides a new set of data or when a column definition changes its sticky\n     * input. May be called manually for cases where the cell content changes outside of these events.\n     * @return {?}\n     */\n    updateStickyColumnStyles() {\n        /** @type {?} */\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        /** @type {?} */\n        const dataRows = this._getRenderedRows(this._rowOutlet);\n        /** @type {?} */\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        // Clear the left and right positioning from all columns in the table across all rows since\n        // sticky columns span across all table sections (header, data, footer)\n        this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\n        // Update the sticky styles for each header row depending on the def's sticky state\n        headerRows.forEach((/**\n         * @param {?} headerRow\n         * @param {?} i\n         * @return {?}\n         */\n        (headerRow, i) => {\n            this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\n        }));\n        // Update the sticky styles for each data row depending on its def's sticky state\n        this._rowDefs.forEach((/**\n         * @param {?} rowDef\n         * @return {?}\n         */\n        rowDef => {\n            // Collect all the rows rendered with this row definition.\n            /** @type {?} */\n            const rows = [];\n            for (let i = 0; i < dataRows.length; i++) {\n                if (this._renderRows[i].rowDef === rowDef) {\n                    rows.push(dataRows[i]);\n                }\n            }\n            this._addStickyColumnStyles(rows, rowDef);\n        }));\n        // Update the sticky styles for each footer row depending on the def's sticky state\n        footerRows.forEach((/**\n         * @param {?} footerRow\n         * @param {?} i\n         * @return {?}\n         */\n        (footerRow, i) => {\n            this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\n        }));\n        // Reset the dirty state of the sticky input change since it has been used.\n        Array.from(this._columnDefsByName.values()).forEach((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.resetStickyChanged()));\n    }\n    /**\n     * Get the list of RenderRow objects to render according to the current list of data and defined\n     * row definitions. If the previous list already contained a particular pair, it should be reused\n     * so that the differ equates their references.\n     * @private\n     * @return {?}\n     */\n    _getAllRenderRows() {\n        /** @type {?} */\n        const renderRows = [];\n        // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n        // new cache while unused ones can be picked up by garbage collection.\n        /** @type {?} */\n        const prevCachedRenderRows = this._cachedRenderRowsMap;\n        this._cachedRenderRowsMap = new Map();\n        // For each data object, get the list of rows that should be rendered, represented by the\n        // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n        for (let i = 0; i < this._data.length; i++) {\n            /** @type {?} */\n            let data = this._data[i];\n            /** @type {?} */\n            const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n            if (!this._cachedRenderRowsMap.has(data)) {\n                this._cachedRenderRowsMap.set(data, new WeakMap());\n            }\n            for (let j = 0; j < renderRowsForData.length; j++) {\n                /** @type {?} */\n                let renderRow = renderRowsForData[j];\n                /** @type {?} */\n                const cache = (/** @type {?} */ (this._cachedRenderRowsMap.get(renderRow.data)));\n                if (cache.has(renderRow.rowDef)) {\n                    (/** @type {?} */ (cache.get(renderRow.rowDef))).push(renderRow);\n                }\n                else {\n                    cache.set(renderRow.rowDef, [renderRow]);\n                }\n                renderRows.push(renderRow);\n            }\n        }\n        return renderRows;\n    }\n    /**\n     * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n     * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n     * `(T, CdkRowDef)` pair.\n     * @private\n     * @param {?} data\n     * @param {?} dataIndex\n     * @param {?=} cache\n     * @return {?}\n     */\n    _getRenderRowsForData(data, dataIndex, cache) {\n        /** @type {?} */\n        const rowDefs = this._getRowDefs(data, dataIndex);\n        return rowDefs.map((/**\n         * @param {?} rowDef\n         * @return {?}\n         */\n        rowDef => {\n            /** @type {?} */\n            const cachedRenderRows = (cache && cache.has(rowDef)) ? (/** @type {?} */ (cache.get(rowDef))) : [];\n            if (cachedRenderRows.length) {\n                /** @type {?} */\n                const dataRow = (/** @type {?} */ (cachedRenderRows.shift()));\n                dataRow.dataIndex = dataIndex;\n                return dataRow;\n            }\n            else {\n                return { data, rowDef, dataIndex };\n            }\n        }));\n    }\n    /**\n     * Update the map containing the content's column definitions.\n     * @private\n     * @return {?}\n     */\n    _cacheColumnDefs() {\n        this._columnDefsByName.clear();\n        /** @type {?} */\n        const columnDefs = mergeArrayAndSet(this._getOwnDefs(this._contentColumnDefs), this._customColumnDefs);\n        columnDefs.forEach((/**\n         * @param {?} columnDef\n         * @return {?}\n         */\n        columnDef => {\n            if (this._columnDefsByName.has(columnDef.name)) {\n                throw getTableDuplicateColumnNameError(columnDef.name);\n            }\n            this._columnDefsByName.set(columnDef.name, columnDef);\n        }));\n    }\n    /**\n     * Update the list of all available row definitions that can be used.\n     * @private\n     * @return {?}\n     */\n    _cacheRowDefs() {\n        this._headerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentHeaderRowDefs), this._customHeaderRowDefs);\n        this._footerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentFooterRowDefs), this._customFooterRowDefs);\n        this._rowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentRowDefs), this._customRowDefs);\n        // After all row definitions are determined, find the row definition to be considered default.\n        /** @type {?} */\n        const defaultRowDefs = this._rowDefs.filter((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => !def.when));\n        if (!this.multiTemplateDataRows && defaultRowDefs.length > 1) {\n            throw getTableMultipleDefaultRowDefsError();\n        }\n        this._defaultRowDef = defaultRowDefs[0];\n    }\n    /**\n     * Check if the header, data, or footer rows have changed what columns they want to display or\n     * whether the sticky states have changed for the header or footer. If there is a diff, then\n     * re-render that section.\n     * @private\n     * @return {?}\n     */\n    _renderUpdatedColumns() {\n        /** @type {?} */\n        const columnsDiffReducer = (/**\n         * @param {?} acc\n         * @param {?} def\n         * @return {?}\n         */\n        (acc, def) => acc || !!def.getColumnsDiff());\n        // Force re-render data rows if the list of column definitions have changed.\n        if (this._rowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderDataRows();\n        }\n        // Force re-render header/footer rows if the list of column definitions have changed..\n        if (this._headerRowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderHeaderRows();\n        }\n        if (this._footerRowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderFooterRows();\n        }\n    }\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the row outlet. Otherwise start listening for new data.\n     * @private\n     * @param {?} dataSource\n     * @return {?}\n     */\n    _switchDataSource(dataSource) {\n        this._data = [];\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n        // Stop listening for data from the previous data source.\n        if (this._renderChangeSubscription) {\n            this._renderChangeSubscription.unsubscribe();\n            this._renderChangeSubscription = null;\n        }\n        if (!dataSource) {\n            if (this._dataDiffer) {\n                this._dataDiffer.diff([]);\n            }\n            this._rowOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n    }\n    /**\n     * Set up a subscription for the data provided by the data source.\n     * @private\n     * @return {?}\n     */\n    _observeRenderChanges() {\n        // If no data source has been set, there is nothing to observe for changes.\n        if (!this.dataSource) {\n            return;\n        }\n        /** @type {?} */\n        let dataStream;\n        if (isDataSource(this.dataSource)) {\n            dataStream = this.dataSource.connect(this);\n        }\n        else if (isObservable(this.dataSource)) {\n            dataStream = this.dataSource;\n        }\n        else if (Array.isArray(this.dataSource)) {\n            dataStream = of(this.dataSource);\n        }\n        if (dataStream === undefined) {\n            throw getTableUnknownDataSourceError();\n        }\n        this._renderChangeSubscription = dataStream.pipe(takeUntil(this._onDestroy)).subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => {\n            this._data = data || [];\n            this.renderRows();\n        }));\n    }\n    /**\n     * Clears any existing content in the header row outlet and creates a new embedded view\n     * in the outlet using the header row definition.\n     * @private\n     * @return {?}\n     */\n    _forceRenderHeaderRows() {\n        // Clear the header row outlet if any content exists.\n        if (this._headerRowOutlet.viewContainer.length > 0) {\n            this._headerRowOutlet.viewContainer.clear();\n        }\n        this._headerRowDefs.forEach((/**\n         * @param {?} def\n         * @param {?} i\n         * @return {?}\n         */\n        (def, i) => this._renderRow(this._headerRowOutlet, def, i)));\n        this.updateStickyHeaderRowStyles();\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Clears any existing content in the footer row outlet and creates a new embedded view\n     * in the outlet using the footer row definition.\n     * @private\n     * @return {?}\n     */\n    _forceRenderFooterRows() {\n        // Clear the footer row outlet if any content exists.\n        if (this._footerRowOutlet.viewContainer.length > 0) {\n            this._footerRowOutlet.viewContainer.clear();\n        }\n        this._footerRowDefs.forEach((/**\n         * @param {?} def\n         * @param {?} i\n         * @return {?}\n         */\n        (def, i) => this._renderRow(this._footerRowOutlet, def, i)));\n        this.updateStickyFooterRowStyles();\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Adds the sticky column styles for the rows according to the columns' stick states.\n     * @private\n     * @param {?} rows\n     * @param {?} rowDef\n     * @return {?}\n     */\n    _addStickyColumnStyles(rows, rowDef) {\n        /** @type {?} */\n        const columnDefs = Array.from(rowDef.columns || []).map((/**\n         * @param {?} columnName\n         * @return {?}\n         */\n        columnName => {\n            /** @type {?} */\n            const columnDef = this._columnDefsByName.get(columnName);\n            if (!columnDef) {\n                throw getTableUnknownColumnError(columnName);\n            }\n            return (/** @type {?} */ (columnDef));\n        }));\n        /** @type {?} */\n        const stickyStartStates = columnDefs.map((/**\n         * @param {?} columnDef\n         * @return {?}\n         */\n        columnDef => columnDef.sticky));\n        /** @type {?} */\n        const stickyEndStates = columnDefs.map((/**\n         * @param {?} columnDef\n         * @return {?}\n         */\n        columnDef => columnDef.stickyEnd));\n        this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates);\n    }\n    /**\n     * Gets the list of rows that have been rendered in the row outlet.\n     * @param {?} rowOutlet\n     * @return {?}\n     */\n    _getRenderedRows(rowOutlet) {\n        /** @type {?} */\n        const renderedRows = [];\n        for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\n            /** @type {?} */\n            const viewRef = ((/** @type {?} */ ((/** @type {?} */ (rowOutlet.viewContainer.get(i))))));\n            renderedRows.push(viewRef.rootNodes[0]);\n        }\n        return renderedRows;\n    }\n    /**\n     * Get the matching row definitions that should be used for this row data. If there is only\n     * one row definition, it is returned. Otherwise, find the row definitions that has a when\n     * predicate that returns true with the data. If none return true, return the default row\n     * definition.\n     * @param {?} data\n     * @param {?} dataIndex\n     * @return {?}\n     */\n    _getRowDefs(data, dataIndex) {\n        if (this._rowDefs.length == 1) {\n            return [this._rowDefs[0]];\n        }\n        /** @type {?} */\n        let rowDefs = [];\n        if (this.multiTemplateDataRows) {\n            rowDefs = this._rowDefs.filter((/**\n             * @param {?} def\n             * @return {?}\n             */\n            def => !def.when || def.when(dataIndex, data)));\n        }\n        else {\n            /** @type {?} */\n            let rowDef = this._rowDefs.find((/**\n             * @param {?} def\n             * @return {?}\n             */\n            def => def.when && def.when(dataIndex, data))) || this._defaultRowDef;\n            if (rowDef) {\n                rowDefs.push(rowDef);\n            }\n        }\n        if (!rowDefs.length) {\n            throw getTableMissingMatchingRowDefError(data);\n        }\n        return rowDefs;\n    }\n    /**\n     * Create the embedded view for the data row template and place it in the correct index location\n     * within the data row view container.\n     * @private\n     * @param {?} renderRow\n     * @param {?} renderIndex\n     * @return {?}\n     */\n    _insertRow(renderRow, renderIndex) {\n        /** @type {?} */\n        const rowDef = renderRow.rowDef;\n        /** @type {?} */\n        const context = { $implicit: renderRow.data };\n        this._renderRow(this._rowOutlet, rowDef, renderIndex, context);\n    }\n    /**\n     * Creates a new row template in the outlet and fills it with the set of cell templates.\n     * Optionally takes a context to provide to the row and cells, as well as an optional index\n     * of where to place the new row template in the outlet.\n     * @private\n     * @param {?} outlet\n     * @param {?} rowDef\n     * @param {?} index\n     * @param {?=} context\n     * @return {?}\n     */\n    _renderRow(outlet, rowDef, index, context = {}) {\n        // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n        outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n        for (let cellTemplate of this._getCellTemplates(rowDef)) {\n            if (CdkCellOutlet.mostRecentCellOutlet) {\n                CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Updates the index-related context for each row to reflect any changes in the index of the rows,\n     * e.g. first/last/even/odd.\n     * @private\n     * @return {?}\n     */\n    _updateRowIndexContext() {\n        /** @type {?} */\n        const viewContainer = this._rowOutlet.viewContainer;\n        for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n            /** @type {?} */\n            const viewRef = (/** @type {?} */ (viewContainer.get(renderIndex)));\n            /** @type {?} */\n            const context = (/** @type {?} */ (viewRef.context));\n            context.count = count;\n            context.first = renderIndex === 0;\n            context.last = renderIndex === count - 1;\n            context.even = renderIndex % 2 === 0;\n            context.odd = !context.even;\n            if (this.multiTemplateDataRows) {\n                context.dataIndex = this._renderRows[renderIndex].dataIndex;\n                context.renderIndex = renderIndex;\n            }\n            else {\n                context.index = this._renderRows[renderIndex].dataIndex;\n            }\n        }\n    }\n    /**\n     * Gets the column definitions for the provided row def.\n     * @private\n     * @param {?} rowDef\n     * @return {?}\n     */\n    _getCellTemplates(rowDef) {\n        if (!rowDef || !rowDef.columns) {\n            return [];\n        }\n        return Array.from(rowDef.columns, (/**\n         * @param {?} columnId\n         * @return {?}\n         */\n        columnId => {\n            /** @type {?} */\n            const column = this._columnDefsByName.get(columnId);\n            if (!column) {\n                throw getTableUnknownColumnError(columnId);\n            }\n            return rowDef.extractCellTemplate(column);\n        }));\n    }\n    /**\n     * Adds native table sections (e.g. tbody) and moves the row outlets into them.\n     * @private\n     * @return {?}\n     */\n    _applyNativeTableSections() {\n        /** @type {?} */\n        const documentFragment = this._document.createDocumentFragment();\n        /** @type {?} */\n        const sections = [\n            { tag: 'thead', outlet: this._headerRowOutlet },\n            { tag: 'tbody', outlet: this._rowOutlet },\n            { tag: 'tfoot', outlet: this._footerRowOutlet },\n        ];\n        for (const section of sections) {\n            /** @type {?} */\n            const element = this._document.createElement(section.tag);\n            element.setAttribute('role', 'rowgroup');\n            element.appendChild(section.outlet.elementRef.nativeElement);\n            documentFragment.appendChild(element);\n        }\n        // Use a DocumentFragment so we don't hit the DOM on each iteration.\n        this._elementRef.nativeElement.appendChild(documentFragment);\n    }\n    /**\n     * Forces a re-render of the data rows. Should be called in cases where there has been an input\n     * change that affects the evaluation of which rows should be rendered, e.g. toggling\n     * `multiTemplateDataRows` or adding/removing row definitions.\n     * @private\n     * @return {?}\n     */\n    _forceRenderDataRows() {\n        this._dataDiffer.diff([]);\n        this._rowOutlet.viewContainer.clear();\n        this.renderRows();\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Checks if there has been a change in sticky states since last check and applies the correct\n     * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n     * during a change detection and after the inputs are settled (after content check).\n     * @private\n     * @return {?}\n     */\n    _checkStickyStates() {\n        /** @type {?} */\n        const stickyCheckReducer = (/**\n         * @param {?} acc\n         * @param {?} d\n         * @return {?}\n         */\n        (acc, d) => {\n            return acc || d.hasStickyChanged();\n        });\n        // Note that the check needs to occur for every definition since it notifies the definition\n        // that it can reset its dirty state. Using another operator like `some` may short-circuit\n        // remaining definitions and leave them in an unchecked state.\n        if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyHeaderRowStyles();\n        }\n        if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyFooterRowStyles();\n        }\n        if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Creates the sticky styler that will be used for sticky rows and columns. Listens\n     * for directionality changes and provides the latest direction to the styler. Re-applies column\n     * stickiness when directionality changes.\n     * @private\n     * @return {?}\n     */\n    _setupStickyStyler() {\n        /** @type {?} */\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._platform.isBrowser);\n        (this._dir ? this._dir.change : of())\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => {\n            this._stickyStyler.direction = value;\n            this.updateStickyColumnStyles();\n        }));\n    }\n    /**\n     * Filters definitions that belong to this table from a QueryList.\n     * @private\n     * @template I\n     * @param {?} items\n     * @return {?}\n     */\n    _getOwnDefs(items) {\n        return items.filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => !item._table || item._table === this));\n    }\n}\nCdkTable.ɵfac = function CdkTable_Factory(t) { return new (t || CdkTable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinjectAttribute('role'), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform)); };\nCdkTable.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkTable, selectors: [[\"cdk-table\"], [\"table\", \"cdk-table\", \"\"]], contentQueries: function CdkTable_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkColumnDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkRowDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderRowDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterRowDef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentColumnDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentRowDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentHeaderRowDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentFooterRowDefs = _t);\n    } }, viewQuery: function CdkTable_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(DataRowOutlet, true);\n        ɵngcc0.ɵɵstaticViewQuery(HeaderRowOutlet, true);\n        ɵngcc0.ɵɵstaticViewQuery(FooterRowOutlet, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._rowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headerRowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._footerRowOutlet = _t.first);\n    } }, hostAttrs: [1, \"cdk-table\"], inputs: { trackBy: \"trackBy\", dataSource: \"dataSource\", multiTemplateDataRows: \"multiTemplateDataRows\" }, exportAs: [\"cdkTable\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_TABLE, useExisting: CdkTable }])], ngContentSelectors: _c1, decls: 4, vars: 0, consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]], template: function CdkTable_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementContainer(1, 0);\n        ɵngcc0.ɵɵelementContainer(2, 1);\n        ɵngcc0.ɵɵelementContainer(3, 2);\n    } }, directives: [HeaderRowOutlet,\n        DataRowOutlet,\n        FooterRowOutlet], encapsulation: 2 });\n/** @nocollapse */\nCdkTable.ctorParameters = () => [\n    { type: IterableDiffers },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Attribute, args: ['role',] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\nCdkTable.propDecorators = {\n    trackBy: [{ type: Input }],\n    dataSource: [{ type: Input }],\n    multiTemplateDataRows: [{ type: Input }],\n    _rowOutlet: [{ type: ViewChild, args: [DataRowOutlet, { static: true },] }],\n    _headerRowOutlet: [{ type: ViewChild, args: [HeaderRowOutlet, { static: true },] }],\n    _footerRowOutlet: [{ type: ViewChild, args: [FooterRowOutlet, { static: true },] }],\n    _contentColumnDefs: [{ type: ContentChildren, args: [CdkColumnDef, { descendants: true },] }],\n    _contentRowDefs: [{ type: ContentChildren, args: [CdkRowDef, { descendants: true },] }],\n    _contentHeaderRowDefs: [{ type: ContentChildren, args: [CdkHeaderRowDef, {\n                    descendants: true\n                },] }],\n    _contentFooterRowDefs: [{ type: ContentChildren, args: [CdkFooterRowDef, {\n                    descendants: true\n                },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTable, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-table, table[cdk-table]',\n                exportAs: 'cdkTable',\n                template: CDK_TABLE_TEMPLATE,\n                host: {\n                    'class': 'cdk-table'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // The \"OnPush\" status for the `MatTable` component is effectively a noop, so we are removing it.\n                // The view for `MatTable` consists entirely of templates declared in other views. As they are\n                // declared elsewhere, they are checked when their declaration points are checked.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                providers: [{ provide: CDK_TABLE, useExisting: CdkTable }]\n            }]\n    }], function () { return [{ type: ɵngcc0.IterableDiffers }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['role']\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, { trackBy: [{\n            type: Input\n        }], dataSource: [{\n            type: Input\n        }], multiTemplateDataRows: [{\n            type: Input\n        }], _rowOutlet: [{\n            type: ViewChild,\n            args: [DataRowOutlet, { static: true }]\n        }], _headerRowOutlet: [{\n            type: ViewChild,\n            args: [HeaderRowOutlet, { static: true }]\n        }], _footerRowOutlet: [{\n            type: ViewChild,\n            args: [FooterRowOutlet, { static: true }]\n        }], _contentColumnDefs: [{\n            type: ContentChildren,\n            args: [CdkColumnDef, { descendants: true }]\n        }], _contentRowDefs: [{\n            type: ContentChildren,\n            args: [CdkRowDef, { descendants: true }]\n        }], _contentHeaderRowDefs: [{\n            type: ContentChildren,\n            args: [CdkHeaderRowDef, {\n                    descendants: true\n                }]\n        }], _contentFooterRowDefs: [{\n            type: ContentChildren,\n            args: [CdkFooterRowDef, {\n                    descendants: true\n                }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkTable.ngAcceptInputType_multiTemplateDataRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._document;\n    /**\n     * Latest data provided by the data source.\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._data;\n    /**\n     * Subject that emits when the component has been destroyed.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._onDestroy;\n    /**\n     * List of the rendered rows as identified by their `RenderRow` object.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._renderRows;\n    /**\n     * Subscription that listens for the data provided by the data source.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._renderChangeSubscription;\n    /**\n     * Map of all the user's defined columns (header, data, and footer cell template) identified by\n     * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n     * any custom column definitions added to `_customColumnDefs`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._columnDefsByName;\n    /**\n     * Set of all row definitions that can be used by this table. Populated by the rows gathered by\n     * using `ContentChildren` as well as any custom row definitions added to `_customRowDefs`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._rowDefs;\n    /**\n     * Set of all header row definitions that can be used by this table. Populated by the rows\n     * gathered by using `ContentChildren` as well as any custom row definitions added to\n     * `_customHeaderRowDefs`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._headerRowDefs;\n    /**\n     * Set of all row definitions that can be used by this table. Populated by the rows gathered by\n     * using `ContentChildren` as well as any custom row definitions added to\n     * `_customFooterRowDefs`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._footerRowDefs;\n    /**\n     * Differ used to find the changes in the data provided by the data source.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._dataDiffer;\n    /**\n     * Stores the row definition that does not have a when predicate.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._defaultRowDef;\n    /**\n     * Column definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * column definitions as *its* content child.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._customColumnDefs;\n    /**\n     * Data row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * built-in data rows as *its* content child.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._customRowDefs;\n    /**\n     * Header row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * built-in header rows as *its* content child.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._customHeaderRowDefs;\n    /**\n     * Footer row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n     * built-in footer row as *its* content child.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._customFooterRowDefs;\n    /**\n     * Whether the header row definition has been changed. Triggers an update to the header row after\n     * content is checked. Initialized as true so that the table renders the initial set of rows.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._headerRowDefChanged;\n    /**\n     * Whether the footer row definition has been changed. Triggers an update to the footer row after\n     * content is checked. Initialized as true so that the table renders the initial set of rows.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._footerRowDefChanged;\n    /**\n     * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n     * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n     * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n     * and row template matches, which allows the `IterableDiffer` to check rows by reference\n     * and understand which rows are added/moved/removed.\n     *\n     * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n     * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n     * contains an array of created pairs. The array is necessary to handle cases where the data\n     * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n     * stored.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._cachedRenderRowsMap;\n    /**\n     * Whether the table is applied to a native `<table>`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._isNativeHtmlTable;\n    /**\n     * Utility class that is responsible for applying the appropriate sticky positioning styles to\n     * the table's rows and cells.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._stickyStyler;\n    /**\n     * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n     * table subclasses.\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype.stickyCssClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._trackByFn;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._dataSource;\n    /** @type {?} */\n    CdkTable.prototype._multiTemplateDataRows;\n    /**\n     * Stream containing the latest information on what rows are being displayed on screen.\n     * Can be used by the data source to as a heuristic of what data should be provided.\n     *\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkTable.prototype.viewChange;\n    /** @type {?} */\n    CdkTable.prototype._rowOutlet;\n    /** @type {?} */\n    CdkTable.prototype._headerRowOutlet;\n    /** @type {?} */\n    CdkTable.prototype._footerRowOutlet;\n    /**\n     * The column definitions provided by the user that contain what the header, data, and footer\n     * cells should render for each column.\n     * @type {?}\n     */\n    CdkTable.prototype._contentColumnDefs;\n    /**\n     * Set of data row definitions that were provided to the table as content children.\n     * @type {?}\n     */\n    CdkTable.prototype._contentRowDefs;\n    /**\n     * Set of header row definitions that were provided to the table as content children.\n     * @type {?}\n     */\n    CdkTable.prototype._contentHeaderRowDefs;\n    /**\n     * Set of footer row definitions that were provided to the table as content children.\n     * @type {?}\n     */\n    CdkTable.prototype._contentFooterRowDefs;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._differs;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._platform;\n}\n/**\n * Utility function that gets a merged list of the entries in an array and values of a Set.\n * @template T\n * @param {?} array\n * @param {?} set\n * @return {?}\n */\nfunction mergeArrayAndSet(array, set) {\n    return array.concat(Array.from(set));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/text-column.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n * @template T\n */\nclass CdkTextColumn {\n    /**\n     * @param {?} _table\n     * @param {?} _options\n     */\n    constructor(_table, _options) {\n        this._table = _table;\n        this._options = _options;\n        /**\n         * Alignment of the cell values.\n         */\n        this.justify = 'start';\n        this._options = _options || {};\n    }\n    /**\n     * Column name that should be used to reference this column.\n     * @return {?}\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    set name(name) {\n        this._name = name;\n        // With Ivy, inputs can be initialized before static query results are\n        // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\n        this._syncColumnDefName();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._syncColumnDefName();\n        if (this.headerText === undefined) {\n            this.headerText = this._createDefaultHeaderText();\n        }\n        if (!this.dataAccessor) {\n            this.dataAccessor =\n                this._options.defaultDataAccessor || ((/**\n                 * @param {?} data\n                 * @param {?} name\n                 * @return {?}\n                 */\n                (data, name) => ((/** @type {?} */ (data)))[name]));\n        }\n        if (this._table) {\n            // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\n            // since the columnDef will not pick up its content by the time the table finishes checking\n            // its content and initializing the rows.\n            this.columnDef.cell = this.cell;\n            this.columnDef.headerCell = this.headerCell;\n            this._table.addColumnDef(this.columnDef);\n        }\n        else {\n            throw getTableTextColumnMissingParentTableError();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._table) {\n            this._table.removeColumnDef(this.columnDef);\n        }\n    }\n    /**\n     * Creates a default header text. Use the options' header text transformation function if one\n     * has been provided. Otherwise simply capitalize the column name.\n     * @return {?}\n     */\n    _createDefaultHeaderText() {\n        /** @type {?} */\n        const name = this.name;\n        if (isDevMode() && !name) {\n            throw getTableTextColumnMissingNameError();\n        }\n        if (this._options && this._options.defaultHeaderTextTransform) {\n            return this._options.defaultHeaderTextTransform(name);\n        }\n        return name[0].toUpperCase() + name.slice(1);\n    }\n    /**\n     * Synchronizes the column definition name with the text column name.\n     * @private\n     * @return {?}\n     */\n    _syncColumnDefName() {\n        if (this.columnDef) {\n            this.columnDef.name = this.name;\n        }\n    }\n}\nCdkTextColumn.ɵfac = function CdkTextColumn_Factory(t) { return new (t || CdkTextColumn)(ɵngcc0.ɵɵdirectiveInject(CdkTable, 8), ɵngcc0.ɵɵdirectiveInject(TEXT_COLUMN_OPTIONS, 8)); };\nCdkTextColumn.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkTextColumn, selectors: [[\"cdk-text-column\"]], viewQuery: function CdkTextColumn_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(CdkColumnDef, true);\n        ɵngcc0.ɵɵstaticViewQuery(CdkCellDef, true);\n        ɵngcc0.ɵɵstaticViewQuery(CdkHeaderCellDef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columnDef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n    } }, inputs: { justify: \"justify\", name: \"name\", headerText: \"headerText\", dataAccessor: \"dataAccessor\" }, decls: 3, vars: 0, consts: [[\"cdkColumnDef\", \"\"], [\"cdk-header-cell\", \"\", 3, \"text-align\", 4, \"cdkHeaderCellDef\"], [\"cdk-cell\", \"\", 3, \"text-align\", 4, \"cdkCellDef\"], [\"cdk-header-cell\", \"\"], [\"cdk-cell\", \"\"]], template: function CdkTextColumn_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0, 0);\n        ɵngcc0.ɵɵtemplate(1, CdkTextColumn_th_1_Template, 2, 3, \"th\", 1);\n        ɵngcc0.ɵɵtemplate(2, CdkTextColumn_td_2_Template, 2, 3, \"td\", 2);\n        ɵngcc0.ɵɵelementContainerEnd();\n    } }, directives: [CdkColumnDef,\n        CdkHeaderCellDef,\n        CdkCellDef,\n        CdkHeaderCell,\n        CdkCell], encapsulation: 2 });\n/** @nocollapse */\nCdkTextColumn.ctorParameters = () => [\n    { type: CdkTable, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [TEXT_COLUMN_OPTIONS,] }] }\n];\nCdkTextColumn.propDecorators = {\n    name: [{ type: Input }],\n    headerText: [{ type: Input }],\n    dataAccessor: [{ type: Input }],\n    justify: [{ type: Input }],\n    columnDef: [{ type: ViewChild, args: [CdkColumnDef, { static: true },] }],\n    cell: [{ type: ViewChild, args: [CdkCellDef, { static: true },] }],\n    headerCell: [{ type: ViewChild, args: [CdkHeaderCellDef, { static: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTextColumn, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-text-column',\n                template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                encapsulation: ViewEncapsulation.None,\n                // Change detection is intentionally not set to OnPush. This component's template will be provided\n                // to the table to be inserted into its view. This is problematic when change detection runs since\n                // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                // mean's the template in the table's view will not have the updated value (and in fact will cause\n                // an ExpressionChangedAfterItHasBeenCheckedError).\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], function () { return [{ type: CdkTable, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [TEXT_COLUMN_OPTIONS]\n            }] }]; }, { justify: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], headerText: [{\n            type: Input\n        }], dataAccessor: [{\n            type: Input\n        }], columnDef: [{\n            type: ViewChild,\n            args: [CdkColumnDef, { static: true }]\n        }], cell: [{\n            type: ViewChild,\n            args: [CdkCellDef, { static: true }]\n        }], headerCell: [{\n            type: ViewChild,\n            args: [CdkHeaderCellDef, { static: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkTextColumn.prototype._name;\n    /**\n     * Text label that should be used for the column header. If this property is not\n     * set, the header text will default to the column name with its first letter capitalized.\n     * @type {?}\n     */\n    CdkTextColumn.prototype.headerText;\n    /**\n     * Accessor function to retrieve the data rendered for each cell. If this\n     * property is not set, the data cells will render the value found in the data's property matching\n     * the column's name. For example, if the column is named `id`, then the rendered value will be\n     * value defined by the data's `id` property.\n     * @type {?}\n     */\n    CdkTextColumn.prototype.dataAccessor;\n    /**\n     * Alignment of the cell values.\n     * @type {?}\n     */\n    CdkTextColumn.prototype.justify;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkTextColumn.prototype.columnDef;\n    /**\n     * The column cell is provided to the column during `ngOnInit` with a static query.\n     * Normally, this will be retrieved by the column using `ContentChild`, but that assumes the\n     * column definition was provided in the same view as the table, which is not the case with this\n     * component.\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkTextColumn.prototype.cell;\n    /**\n     * The column headerCell is provided to the column during `ngOnInit` with a static query.\n     * Normally, this will be retrieved by the column using `ContentChild`, but that assumes the\n     * column definition was provided in the same view as the table, which is not the case with this\n     * component.\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkTextColumn.prototype.headerCell;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextColumn.prototype._table;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextColumn.prototype._options;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/table-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst EXPORTED_DECLARATIONS = [\n    CdkTable,\n    CdkRowDef,\n    CdkCellDef,\n    CdkCellOutlet,\n    CdkHeaderCellDef,\n    CdkFooterCellDef,\n    CdkColumnDef,\n    CdkCell,\n    CdkRow,\n    CdkHeaderCell,\n    CdkFooterCell,\n    CdkHeaderRow,\n    CdkHeaderRowDef,\n    CdkFooterRow,\n    CdkFooterRowDef,\n    DataRowOutlet,\n    HeaderRowOutlet,\n    FooterRowOutlet,\n    CdkTextColumn,\n];\nclass CdkTableModule {\n}\nCdkTableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkTableModule });\nCdkTableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CdkTableModule_Factory(t) { return new (t || CdkTableModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkTableModule, { declarations: [CdkTable,\n        CdkRowDef,\n        CdkCellDef,\n        CdkCellOutlet,\n        CdkHeaderCellDef,\n        CdkFooterCellDef,\n        CdkColumnDef,\n        CdkCell,\n        CdkRow,\n        CdkHeaderCell,\n        CdkFooterCell,\n        CdkHeaderRow,\n        CdkHeaderRowDef,\n        CdkFooterRow,\n        CdkFooterRowDef,\n        DataRowOutlet,\n        HeaderRowOutlet,\n        FooterRowOutlet,\n        CdkTextColumn], exports: [CdkTable,\n        CdkRowDef,\n        CdkCellDef,\n        CdkCellOutlet,\n        CdkHeaderCellDef,\n        CdkFooterCellDef,\n        CdkColumnDef,\n        CdkCell,\n        CdkRow,\n        CdkHeaderCell,\n        CdkFooterCell,\n        CdkHeaderRow,\n        CdkHeaderRowDef,\n        CdkFooterRow,\n        CdkFooterRowDef,\n        DataRowOutlet,\n        HeaderRowOutlet,\n        FooterRowOutlet,\n        CdkTextColumn] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTableModule, [{\n        type: NgModule,\n        args: [{\n                exports: EXPORTED_DECLARATIONS,\n                declarations: EXPORTED_DECLARATIONS\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseCdkCell, BaseRowDef, CDK_ROW_TEMPLATE, CDK_TABLE, CDK_TABLE_TEMPLATE, CdkCell, CdkCellDef, CdkCellOutlet, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkFooterRow, CdkFooterRowDef, CdkHeaderCell, CdkHeaderCellDef, CdkHeaderRow, CdkHeaderRowDef, CdkRow, CdkRowDef, CdkTable, CdkTableModule, CdkTextColumn, DataRowOutlet, FooterRowOutlet, HeaderRowOutlet, STICKY_DIRECTIONS, StickyStyler, TEXT_COLUMN_OPTIONS, mixinHasStickyInput };\n\n//# sourceMappingURL=table.js.map","import { normalizePassiveListenerOptions, Platform, PlatformModule } from '@angular/cdk/platform';\nimport { Injectable, NgZone, ɵɵdefineInjectable, ɵɵinject, EventEmitter, Directive, ElementRef, Output, Optional, Inject, Input, HostListener, NgModule } from '@angular/core';\nimport { coerceElement, coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { EMPTY, Subject, fromEvent } from 'rxjs';\nimport { auditTime, takeUntil } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/autofill.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Options to pass to the animationstart listener.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nconst listenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * An injectable service that can be used to monitor the autofill state of an input.\n * Based on the following blog post:\n * https://medium.com/\\@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n */\nclass AutofillMonitor {\n    /**\n     * @param {?} _platform\n     * @param {?} _ngZone\n     */\n    constructor(_platform, _ngZone) {\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._monitoredElements = new Map();\n    }\n    /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    monitor(elementOrRef) {\n        if (!this._platform.isBrowser) {\n            return EMPTY;\n        }\n        /** @type {?} */\n        const element = coerceElement(elementOrRef);\n        /** @type {?} */\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            return info.subject.asObservable();\n        }\n        /** @type {?} */\n        const result = new Subject();\n        /** @type {?} */\n        const cssClass = 'cdk-text-field-autofilled';\n        /** @type {?} */\n        const listener = (/** @type {?} */ (((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // Animation events fire on initial element render, we check for the presence of the autofill\n            // CSS class to make sure this is a real change in state, not just the initial render before\n            // we fire off events.\n            if (event.animationName === 'cdk-text-field-autofill-start' &&\n                !element.classList.contains(cssClass)) {\n                element.classList.add(cssClass);\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => result.next({ target: (/** @type {?} */ (event.target)), isAutofilled: true })));\n            }\n            else if (event.animationName === 'cdk-text-field-autofill-end' &&\n                element.classList.contains(cssClass)) {\n                element.classList.remove(cssClass);\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => result.next({ target: (/** @type {?} */ (event.target)), isAutofilled: false })));\n            }\n        }))));\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            element.addEventListener('animationstart', listener, listenerOptions);\n            element.classList.add('cdk-text-field-autofill-monitored');\n        }));\n        this._monitoredElements.set(element, {\n            subject: result,\n            unlisten: (/**\n             * @return {?}\n             */\n            () => {\n                element.removeEventListener('animationstart', listener, listenerOptions);\n            })\n        });\n        return result.asObservable();\n    }\n    /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    stopMonitoring(elementOrRef) {\n        /** @type {?} */\n        const element = coerceElement(elementOrRef);\n        /** @type {?} */\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            info.unlisten();\n            info.subject.complete();\n            element.classList.remove('cdk-text-field-autofill-monitored');\n            element.classList.remove('cdk-text-field-autofilled');\n            this._monitoredElements.delete(element);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._monitoredElements.forEach((/**\n         * @param {?} _info\n         * @param {?} element\n         * @return {?}\n         */\n        (_info, element) => this.stopMonitoring(element)));\n    }\n}\nAutofillMonitor.ɵfac = function AutofillMonitor_Factory(t) { return new (t || AutofillMonitor)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\n/** @nocollapse */\nAutofillMonitor.ctorParameters = () => [\n    { type: Platform },\n    { type: NgZone }\n];\n/** @nocollapse */ AutofillMonitor.ɵprov = ɵɵdefineInjectable({ factory: function AutofillMonitor_Factory() { return new AutofillMonitor(ɵɵinject(Platform), ɵɵinject(NgZone)); }, token: AutofillMonitor, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AutofillMonitor, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    AutofillMonitor.prototype._monitoredElements;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutofillMonitor.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutofillMonitor.prototype._ngZone;\n}\n/**\n * A directive that can be used to monitor the autofill state of an input.\n */\nclass CdkAutofill {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _autofillMonitor\n     */\n    constructor(_elementRef, _autofillMonitor) {\n        this._elementRef = _elementRef;\n        this._autofillMonitor = _autofillMonitor;\n        /**\n         * Emits when the autofill state of the element changes.\n         */\n        this.cdkAutofill = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._autofillMonitor\n            .monitor(this._elementRef)\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => this.cdkAutofill.emit(event)));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._autofillMonitor.stopMonitoring(this._elementRef);\n    }\n}\nCdkAutofill.ɵfac = function CdkAutofill_Factory(t) { return new (t || CdkAutofill)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(AutofillMonitor)); };\nCdkAutofill.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAutofill, selectors: [[\"\", \"cdkAutofill\", \"\"]], outputs: { cdkAutofill: \"cdkAutofill\" } });\n/** @nocollapse */\nCdkAutofill.ctorParameters = () => [\n    { type: ElementRef },\n    { type: AutofillMonitor }\n];\nCdkAutofill.propDecorators = {\n    cdkAutofill: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAutofill, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkAutofill]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: AutofillMonitor }]; }, { cdkAutofill: [{\n            type: Output\n        }] }); })();\nif (false) {\n    /**\n     * Emits when the autofill state of the element changes.\n     * @type {?}\n     */\n    CdkAutofill.prototype.cdkAutofill;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAutofill.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAutofill.prototype._autofillMonitor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/autosize.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive to automatically resize a textarea to fit its content.\n */\nclass CdkTextareaAutosize {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _platform\n     * @param {?} _ngZone\n     * @param {?=} document\n     */\n    constructor(_elementRef, _platform, _ngZone, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._destroyed = new Subject();\n        this._enabled = true;\n        /**\n         * Value of minRows as of last resize. If the minRows has decreased, the\n         * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n         * does not have the same problem because it does not affect the textarea's scrollHeight.\n         */\n        this._previousMinRows = -1;\n        this._document = document;\n        this._textareaElement = (/** @type {?} */ (this._elementRef.nativeElement));\n        this._measuringClass = _platform.FIREFOX ?\n            'cdk-textarea-autosize-measuring-firefox' :\n            'cdk-textarea-autosize-measuring';\n    }\n    /**\n     * Minimum amount of rows in the textarea.\n     * @return {?}\n     */\n    get minRows() { return this._minRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minRows(value) {\n        this._minRows = coerceNumberProperty(value);\n        this._setMinHeight();\n    }\n    /**\n     * Maximum amount of rows in the textarea.\n     * @return {?}\n     */\n    get maxRows() { return this._maxRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxRows(value) {\n        this._maxRows = coerceNumberProperty(value);\n        this._setMaxHeight();\n    }\n    /**\n     * Whether autosizing is enabled or not\n     * @return {?}\n     */\n    get enabled() { return this._enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set enabled(value) {\n        value = coerceBooleanProperty(value);\n        // Only act if the actual value changed. This specifically helps to not run\n        // resizeToFitContent too early (i.e. before ngAfterViewInit)\n        if (this._enabled !== value) {\n            (this._enabled = value) ? this.resizeToFitContent(true) : this.reset();\n        }\n    }\n    /**\n     * Sets the minimum height of the textarea as determined by minRows.\n     * @return {?}\n     */\n    _setMinHeight() {\n        /** @type {?} */\n        const minHeight = this.minRows && this._cachedLineHeight ?\n            `${this.minRows * this._cachedLineHeight}px` : null;\n        if (minHeight) {\n            this._textareaElement.style.minHeight = minHeight;\n        }\n    }\n    /**\n     * Sets the maximum height of the textarea as determined by maxRows.\n     * @return {?}\n     */\n    _setMaxHeight() {\n        /** @type {?} */\n        const maxHeight = this.maxRows && this._cachedLineHeight ?\n            `${this.maxRows * this._cachedLineHeight}px` : null;\n        if (maxHeight) {\n            this._textareaElement.style.maxHeight = maxHeight;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            // Remember the height which we started with in case autosizing is disabled\n            this._initialHeight = this._textareaElement.style.height;\n            this.resizeToFitContent();\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const window = this._getWindow();\n                fromEvent(window, 'resize')\n                    .pipe(auditTime(16), takeUntil(this._destroyed))\n                    .subscribe((/**\n                 * @return {?}\n                 */\n                () => this.resizeToFitContent(true)));\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Cache the height of a single-row textarea if it has not already been cached.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     * @private\n     * @return {?}\n     */\n    _cacheTextareaLineHeight() {\n        if (this._cachedLineHeight) {\n            return;\n        }\n        // Use a clone element because we have to override some styles.\n        /** @type {?} */\n        let textareaClone = (/** @type {?} */ (this._textareaElement.cloneNode(false)));\n        textareaClone.rows = 1;\n        // Use `position: absolute` so that this doesn't cause a browser layout and use\n        // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n        // would affect the height.\n        textareaClone.style.position = 'absolute';\n        textareaClone.style.visibility = 'hidden';\n        textareaClone.style.border = 'none';\n        textareaClone.style.padding = '0';\n        textareaClone.style.height = '';\n        textareaClone.style.minHeight = '';\n        textareaClone.style.maxHeight = '';\n        // In Firefox it happens that textarea elements are always bigger than the specified amount\n        // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n        // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n        // to hidden. This ensures that there is no invalid calculation of the line height.\n        // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n        textareaClone.style.overflow = 'hidden';\n        (/** @type {?} */ (this._textareaElement.parentNode)).appendChild(textareaClone);\n        this._cachedLineHeight = textareaClone.clientHeight;\n        (/** @type {?} */ (this._textareaElement.parentNode)).removeChild(textareaClone);\n        // Min and max heights have to be re-calculated if the cached line height changes\n        this._setMinHeight();\n        this._setMaxHeight();\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this._platform.isBrowser) {\n            this.resizeToFitContent();\n        }\n    }\n    /**\n     * Resize the textarea to fit its content.\n     * @param {?=} force Whether to force a height recalculation. By default the height will be\n     *    recalculated only if the value changed since the last call.\n     * @return {?}\n     */\n    resizeToFitContent(force = false) {\n        // If autosizing is disabled, just skip everything else\n        if (!this._enabled) {\n            return;\n        }\n        this._cacheTextareaLineHeight();\n        // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n        // in checking the height of the textarea.\n        if (!this._cachedLineHeight) {\n            return;\n        }\n        /** @type {?} */\n        const textarea = (/** @type {?} */ (this._elementRef.nativeElement));\n        /** @type {?} */\n        const value = textarea.value;\n        // Only resize if the value or minRows have changed since these calculations can be expensive.\n        if (!force && this._minRows === this._previousMinRows && value === this._previousValue) {\n            return;\n        }\n        /** @type {?} */\n        const placeholderText = textarea.placeholder;\n        // Reset the textarea height to auto in order to shrink back to its default size.\n        // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n        // Long placeholders that are wider than the textarea width may lead to a bigger scrollHeight\n        // value. To ensure that the scrollHeight is not bigger than the content, the placeholders\n        // need to be removed temporarily.\n        textarea.classList.add(this._measuringClass);\n        textarea.placeholder = '';\n        // The measuring class includes a 2px padding to workaround an issue with Chrome,\n        // so we account for that extra space here by subtracting 4 (2px top + 2px bottom).\n        /** @type {?} */\n        const height = textarea.scrollHeight - 4;\n        // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n        textarea.style.height = `${height}px`;\n        textarea.classList.remove(this._measuringClass);\n        textarea.placeholder = placeholderText;\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            if (typeof requestAnimationFrame !== 'undefined') {\n                requestAnimationFrame((/**\n                 * @return {?}\n                 */\n                () => this._scrollToCaretPosition(textarea)));\n            }\n            else {\n                setTimeout((/**\n                 * @return {?}\n                 */\n                () => this._scrollToCaretPosition(textarea)));\n            }\n        }));\n        this._previousValue = value;\n        this._previousMinRows = this._minRows;\n    }\n    /**\n     * Resets the textarea to its original size\n     * @return {?}\n     */\n    reset() {\n        // Do not try to change the textarea, if the initialHeight has not been determined yet\n        // This might potentially remove styles when reset() is called before ngAfterViewInit\n        if (this._initialHeight !== undefined) {\n            this._textareaElement.style.height = this._initialHeight;\n        }\n    }\n    // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n    // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n    // can move this back into `host`.\n    // tslint:disable:no-host-decorator-in-concrete\n    /**\n     * @return {?}\n     */\n    _noopInputHandler() {\n        // no-op handler that ensures we're running change detection on input events.\n    }\n    /**\n     * Access injected document if available or fallback to global document reference\n     * @private\n     * @return {?}\n     */\n    _getDocument() {\n        return this._document || document;\n    }\n    /**\n     * Use defaultView of injected document if available or fallback to global window reference\n     * @private\n     * @return {?}\n     */\n    _getWindow() {\n        /** @type {?} */\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    /**\n     * Scrolls a textarea to the caret position. On Firefox resizing the textarea will\n     * prevent it from scrolling to the caret position. We need to re-set the selection\n     * in order for it to scroll to the proper position.\n     * @private\n     * @param {?} textarea\n     * @return {?}\n     */\n    _scrollToCaretPosition(textarea) {\n        const { selectionStart, selectionEnd } = textarea;\n        /** @type {?} */\n        const document = this._getDocument();\n        // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n        // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n        // between the time we requested the animation frame and when it was executed.\n        // Also note that we have to assert that the textarea is focused before we set the\n        // selection range. Setting the selection range on a non-focused textarea will cause\n        // it to receive focus on IE and Edge.\n        if (!this._destroyed.isStopped && document.activeElement === textarea) {\n            textarea.setSelectionRange(selectionStart, selectionEnd);\n        }\n    }\n}\nCdkTextareaAutosize.ɵfac = function CdkTextareaAutosize_Factory(t) { return new (t || CdkTextareaAutosize)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nCdkTextareaAutosize.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTextareaAutosize, selectors: [[\"textarea\", \"cdkTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\"], hostBindings: function CdkTextareaAutosize_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function CdkTextareaAutosize_input_HostBindingHandler() { return ctx._noopInputHandler(); });\n    } }, inputs: { minRows: [\"cdkAutosizeMinRows\", \"minRows\"], maxRows: [\"cdkAutosizeMaxRows\", \"maxRows\"], enabled: [\"cdkTextareaAutosize\", \"enabled\"] }, exportAs: [\"cdkTextareaAutosize\"] });\n/** @nocollapse */\nCdkTextareaAutosize.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nCdkTextareaAutosize.propDecorators = {\n    minRows: [{ type: Input, args: ['cdkAutosizeMinRows',] }],\n    maxRows: [{ type: Input, args: ['cdkAutosizeMaxRows',] }],\n    enabled: [{ type: Input, args: ['cdkTextareaAutosize',] }],\n    _noopInputHandler: [{ type: HostListener, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[cdkTextareaAutosize]',\n                exportAs: 'cdkTextareaAutosize',\n                host: {\n                    'class': 'cdk-textarea-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { minRows: [{\n            type: Input,\n            args: ['cdkAutosizeMinRows']\n        }], maxRows: [{\n            type: Input,\n            args: ['cdkAutosizeMaxRows']\n        }], enabled: [{\n            type: Input,\n            args: ['cdkTextareaAutosize']\n        }], _noopInputHandler: [{\n            type: HostListener,\n            args: ['input']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkTextareaAutosize.ngAcceptInputType_minRows;\n    /** @type {?} */\n    CdkTextareaAutosize.ngAcceptInputType_maxRows;\n    /** @type {?} */\n    CdkTextareaAutosize.ngAcceptInputType_enabled;\n    /**\n     * Keep track of the previous textarea value to avoid resizing when the value hasn't changed.\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._previousValue;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._initialHeight;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._destroyed;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._minRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._maxRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._enabled;\n    /**\n     * Value of minRows as of last resize. If the minRows has decreased, the\n     * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n     * does not have the same problem because it does not affect the textarea's scrollHeight.\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._previousMinRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._textareaElement;\n    /**\n     * Cached height of a textarea with a single row.\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._cachedLineHeight;\n    /**\n     * Used to reference correct document/window\n     * @type {?}\n     * @protected\n     */\n    CdkTextareaAutosize.prototype._document;\n    /**\n     * Class that should be applied to the textarea while it's being measured.\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._measuringClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/text-field-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass TextFieldModule {\n}\nTextFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: TextFieldModule });\nTextFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function TextFieldModule_Factory(t) { return new (t || TextFieldModule)(); }, imports: [[PlatformModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TextFieldModule, { declarations: function () { return [CdkAutofill,\n        CdkTextareaAutosize]; }, imports: function () { return [PlatformModule]; }, exports: function () { return [CdkAutofill,\n        CdkTextareaAutosize]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TextFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [CdkAutofill, CdkTextareaAutosize],\n                imports: [PlatformModule],\n                exports: [CdkAutofill, CdkTextareaAutosize]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutofillMonitor, CdkAutofill, CdkTextareaAutosize, TextFieldModule };\n\n//# sourceMappingURL=text-field.js.map","import { SelectionModel, isDataSource } from '@angular/cdk/collections';\nimport { isObservable, Subject, BehaviorSubject, of } from 'rxjs';\nimport { take, filter, takeUntil } from 'rxjs/operators';\nimport { InjectionToken, Directive, ViewContainerRef, Inject, Optional, TemplateRef, Component, ViewEncapsulation, ChangeDetectionStrategy, IterableDiffers, ChangeDetectorRef, Input, ViewChild, ContentChildren, ElementRef, Renderer2, HostListener, NgModule } from '@angular/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { FocusMonitor } from '@angular/cdk/a11y';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/control/base-tree-control.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base tree control. It has basic toggle/expand/collapse operations on a single data node.\n * @abstract\n * @template T\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nclass BaseTreeControl {\n    constructor() {\n        /**\n         * A selection model with multi-selection to track expansion status.\n         */\n        this.expansionModel = new SelectionModel(true);\n    }\n    /**\n     * Toggles one single data node's expanded/collapsed state.\n     * @param {?} dataNode\n     * @return {?}\n     */\n    toggle(dataNode) {\n        this.expansionModel.toggle(dataNode);\n    }\n    /**\n     * Expands one single data node.\n     * @param {?} dataNode\n     * @return {?}\n     */\n    expand(dataNode) {\n        this.expansionModel.select(dataNode);\n    }\n    /**\n     * Collapses one single data node.\n     * @param {?} dataNode\n     * @return {?}\n     */\n    collapse(dataNode) {\n        this.expansionModel.deselect(dataNode);\n    }\n    /**\n     * Whether a given data node is expanded or not. Returns true if the data node is expanded.\n     * @param {?} dataNode\n     * @return {?}\n     */\n    isExpanded(dataNode) {\n        return this.expansionModel.isSelected(dataNode);\n    }\n    /**\n     * Toggles a subtree rooted at `node` recursively.\n     * @param {?} dataNode\n     * @return {?}\n     */\n    toggleDescendants(dataNode) {\n        this.expansionModel.isSelected(dataNode)\n            ? this.collapseDescendants(dataNode)\n            : this.expandDescendants(dataNode);\n    }\n    /**\n     * Collapse all dataNodes in the tree.\n     * @return {?}\n     */\n    collapseAll() {\n        this.expansionModel.clear();\n    }\n    /**\n     * Expands a subtree rooted at given data node recursively.\n     * @param {?} dataNode\n     * @return {?}\n     */\n    expandDescendants(dataNode) {\n        /** @type {?} */\n        let toBeProcessed = [dataNode];\n        toBeProcessed.push(...this.getDescendants(dataNode));\n        this.expansionModel.select(...toBeProcessed);\n    }\n    /**\n     * Collapses a subtree rooted at given data node recursively.\n     * @param {?} dataNode\n     * @return {?}\n     */\n    collapseDescendants(dataNode) {\n        /** @type {?} */\n        let toBeProcessed = [dataNode];\n        toBeProcessed.push(...this.getDescendants(dataNode));\n        this.expansionModel.deselect(...toBeProcessed);\n    }\n}\nif (false) {\n    /**\n     * Saved data node for `expandAll` action.\n     * @type {?}\n     */\n    BaseTreeControl.prototype.dataNodes;\n    /**\n     * A selection model with multi-selection to track expansion status.\n     * @type {?}\n     */\n    BaseTreeControl.prototype.expansionModel;\n    /**\n     * Get depth of a given data node, return the level number. This is for flat tree node.\n     * @type {?}\n     */\n    BaseTreeControl.prototype.getLevel;\n    /**\n     * Whether the data node is expandable. Returns true if expandable.\n     * This is for flat tree node.\n     * @type {?}\n     */\n    BaseTreeControl.prototype.isExpandable;\n    /**\n     * Gets a stream that emits whenever the given data node's children change.\n     * @type {?}\n     */\n    BaseTreeControl.prototype.getChildren;\n    /**\n     * Gets a list of descendent data nodes of a subtree rooted at given data node recursively.\n     * @abstract\n     * @param {?} dataNode\n     * @return {?}\n     */\n    BaseTreeControl.prototype.getDescendants = function (dataNode) { };\n    /**\n     * Expands all data nodes in the tree.\n     * @abstract\n     * @return {?}\n     */\n    BaseTreeControl.prototype.expandAll = function () { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/control/flat-tree-control.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Flat tree control. Able to expand/collapse a subtree recursively for flattened tree.\n * @template T\n */\nclass FlatTreeControl extends BaseTreeControl {\n    /**\n     * Construct with flat tree data node functions getLevel and isExpandable.\n     * @param {?} getLevel\n     * @param {?} isExpandable\n     */\n    constructor(getLevel, isExpandable) {\n        super();\n        this.getLevel = getLevel;\n        this.isExpandable = isExpandable;\n    }\n    /**\n     * Gets a list of the data node's subtree of descendent data nodes.\n     *\n     * To make this working, the `dataNodes` of the TreeControl must be flattened tree nodes\n     * with correct levels.\n     * @param {?} dataNode\n     * @return {?}\n     */\n    getDescendants(dataNode) {\n        /** @type {?} */\n        const startIndex = this.dataNodes.indexOf(dataNode);\n        /** @type {?} */\n        const results = [];\n        // Goes through flattened tree nodes in the `dataNodes` array, and get all descendants.\n        // The level of descendants of a tree node must be greater than the level of the given\n        // tree node.\n        // If we reach a node whose level is equal to the level of the tree node, we hit a sibling.\n        // If we reach a node whose level is greater than the level of the tree node, we hit a\n        // sibling of an ancestor.\n        for (let i = startIndex + 1; i < this.dataNodes.length && this.getLevel(dataNode) < this.getLevel(this.dataNodes[i]); i++) {\n            results.push(this.dataNodes[i]);\n        }\n        return results;\n    }\n    /**\n     * Expands all data nodes in the tree.\n     *\n     * To make this working, the `dataNodes` variable of the TreeControl must be set to all flattened\n     * data nodes of the tree.\n     * @return {?}\n     */\n    expandAll() {\n        this.expansionModel.select(...this.dataNodes);\n    }\n}\nif (false) {\n    /** @type {?} */\n    FlatTreeControl.prototype.getLevel;\n    /** @type {?} */\n    FlatTreeControl.prototype.isExpandable;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/control/nested-tree-control.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Nested tree control. Able to expand/collapse a subtree recursively for NestedNode type.\n * @template T\n */\nclass NestedTreeControl extends BaseTreeControl {\n    /**\n     * Construct with nested tree function getChildren.\n     * @param {?} getChildren\n     */\n    constructor(getChildren) {\n        super();\n        this.getChildren = getChildren;\n    }\n    /**\n     * Expands all dataNodes in the tree.\n     *\n     * To make this working, the `dataNodes` variable of the TreeControl must be set to all root level\n     * data nodes of the tree.\n     * @return {?}\n     */\n    expandAll() {\n        this.expansionModel.clear();\n        /** @type {?} */\n        const allNodes = this.dataNodes.reduce((/**\n         * @param {?} accumulator\n         * @param {?} dataNode\n         * @return {?}\n         */\n        (accumulator, dataNode) => [...accumulator, ...this.getDescendants(dataNode), dataNode]), []);\n        this.expansionModel.select(...allNodes);\n    }\n    /**\n     * Gets a list of descendant dataNodes of a subtree rooted at given data node recursively.\n     * @param {?} dataNode\n     * @return {?}\n     */\n    getDescendants(dataNode) {\n        /** @type {?} */\n        const descendants = [];\n        this._getDescendants(descendants, dataNode);\n        // Remove the node itself\n        return descendants.splice(1);\n    }\n    /**\n     * A helper function to get descendants recursively.\n     * @protected\n     * @param {?} descendants\n     * @param {?} dataNode\n     * @return {?}\n     */\n    _getDescendants(descendants, dataNode) {\n        descendants.push(dataNode);\n        /** @type {?} */\n        const childrenNodes = this.getChildren(dataNode);\n        if (Array.isArray(childrenNodes)) {\n            childrenNodes.forEach((/**\n             * @param {?} child\n             * @return {?}\n             */\n            (child) => this._getDescendants(descendants, child)));\n        }\n        else if (isObservable(childrenNodes)) {\n            // TypeScript as of version 3.5 doesn't seem to treat `Boolean` like a function that\n            // returns a `boolean` specifically in the context of `filter`, so we manually clarify that.\n            childrenNodes.pipe(take(1), filter((/** @type {?} */ (Boolean))))\n                .subscribe((/**\n             * @param {?} children\n             * @return {?}\n             */\n            children => {\n                for (const child of children) {\n                    this._getDescendants(descendants, child);\n                }\n            }));\n        }\n    }\n}\nif (false) {\n    /** @type {?} */\n    NestedTreeControl.prototype.getChildren;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/control/tree-control.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Tree control interface. User can implement TreeControl to expand/collapse dataNodes in the tree.\n * The CDKTree will use this TreeControl to expand/collapse a node.\n * User can also use it outside the `<cdk-tree>` to control the expansion status of the tree.\n * @record\n * @template T\n */\nfunction TreeControl() { }\nif (false) {\n    /**\n     * The saved tree nodes data for `expandAll` action.\n     * @type {?}\n     */\n    TreeControl.prototype.dataNodes;\n    /**\n     * The expansion model\n     * @type {?}\n     */\n    TreeControl.prototype.expansionModel;\n    /**\n     * Get depth of a given data node, return the level number. This is for flat tree node.\n     * @type {?}\n     */\n    TreeControl.prototype.getLevel;\n    /**\n     * Whether the data node is expandable. Returns true if expandable.\n     * This is for flat tree node.\n     * @type {?}\n     */\n    TreeControl.prototype.isExpandable;\n    /**\n     * Gets a stream that emits whenever the given data node's children change.\n     * @type {?}\n     */\n    TreeControl.prototype.getChildren;\n    /**\n     * Whether the data node is expanded or collapsed. Return true if it's expanded.\n     * @param {?} dataNode\n     * @return {?}\n     */\n    TreeControl.prototype.isExpanded = function (dataNode) { };\n    /**\n     * Get all descendants of a data node\n     * @param {?} dataNode\n     * @return {?}\n     */\n    TreeControl.prototype.getDescendants = function (dataNode) { };\n    /**\n     * Expand or collapse data node\n     * @param {?} dataNode\n     * @return {?}\n     */\n    TreeControl.prototype.toggle = function (dataNode) { };\n    /**\n     * Expand one data node\n     * @param {?} dataNode\n     * @return {?}\n     */\n    TreeControl.prototype.expand = function (dataNode) { };\n    /**\n     * Collapse one data node\n     * @param {?} dataNode\n     * @return {?}\n     */\n    TreeControl.prototype.collapse = function (dataNode) { };\n    /**\n     * Expand all the dataNodes in the tree\n     * @return {?}\n     */\n    TreeControl.prototype.expandAll = function () { };\n    /**\n     * Collapse all the dataNodes in the tree\n     * @return {?}\n     */\n    TreeControl.prototype.collapseAll = function () { };\n    /**\n     * Toggle a data node by expand/collapse it and all its descendants\n     * @param {?} dataNode\n     * @return {?}\n     */\n    TreeControl.prototype.toggleDescendants = function (dataNode) { };\n    /**\n     * Expand a data node and all its descendants\n     * @param {?} dataNode\n     * @return {?}\n     */\n    TreeControl.prototype.expandDescendants = function (dataNode) { };\n    /**\n     * Collapse a data node and all its descendants\n     * @param {?} dataNode\n     * @return {?}\n     */\n    TreeControl.prototype.collapseDescendants = function (dataNode) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/outlet.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token used to provide a `CdkTreeNode` to its outlet.\n * Used primarily to avoid circular imports.\n * \\@docs-private\n * @type {?}\n */\nconst CDK_TREE_NODE_OUTLET_NODE = new InjectionToken('CDK_TREE_NODE_OUTLET_NODE');\n/**\n * Outlet for nested CdkNode. Put `[cdkTreeNodeOutlet]` on a tag to place children dataNodes\n * inside the outlet.\n */\nclass CdkTreeNodeOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?=} _node\n     */\n    constructor(viewContainer, _node) {\n        this.viewContainer = viewContainer;\n        this._node = _node;\n    }\n}\nCdkTreeNodeOutlet.ɵfac = function CdkTreeNodeOutlet_Factory(t) { return new (t || CdkTreeNodeOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(CDK_TREE_NODE_OUTLET_NODE, 8)); };\nCdkTreeNodeOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTreeNodeOutlet, selectors: [[\"\", \"cdkTreeNodeOutlet\", \"\"]] });\n/** @nocollapse */\nCdkTreeNodeOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TREE_NODE_OUTLET_NODE,] }, { type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTreeNodeOutlet, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkTreeNodeOutlet]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TREE_NODE_OUTLET_NODE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    CdkTreeNodeOutlet.prototype.viewContainer;\n    /** @type {?} */\n    CdkTreeNodeOutlet.prototype._node;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/node.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Context provided to the tree node component.\n * @template T\n */\nclass CdkTreeNodeOutletContext {\n    /**\n     * @param {?} data\n     */\n    constructor(data) {\n        this.$implicit = data;\n    }\n}\nif (false) {\n    /**\n     * Data for the node.\n     * @type {?}\n     */\n    CdkTreeNodeOutletContext.prototype.$implicit;\n    /**\n     * Depth of the node.\n     * @type {?}\n     */\n    CdkTreeNodeOutletContext.prototype.level;\n    /**\n     * Index location of the node.\n     * @type {?}\n     */\n    CdkTreeNodeOutletContext.prototype.index;\n    /**\n     * Length of the number of total dataNodes.\n     * @type {?}\n     */\n    CdkTreeNodeOutletContext.prototype.count;\n}\n/**\n * Data node definition for the CdkTree.\n * Captures the node's template and a when predicate that describes when this node should be used.\n * @template T\n */\nclass CdkTreeNodeDef {\n    /**\n     * \\@docs-private\n     * @param {?} template\n     */\n    constructor(template) {\n        this.template = template;\n    }\n}\nCdkTreeNodeDef.ɵfac = function CdkTreeNodeDef_Factory(t) { return new (t || CdkTreeNodeDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkTreeNodeDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTreeNodeDef, selectors: [[\"\", \"cdkTreeNodeDef\", \"\"]], inputs: { when: [\"cdkTreeNodeDefWhen\", \"when\"] } });\n/** @nocollapse */\nCdkTreeNodeDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTreeNodeDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkTreeNodeDef]',\n                inputs: [\n                    'when: cdkTreeNodeDefWhen'\n                ]\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /**\n     * Function that should return true if this node template should be used for the provided node\n     * data and index. If left undefined, this node will be considered the default node template to\n     * use when no other when functions return true for the data.\n     * For every node, there must be at least one when function that passes or an undefined to\n     * default.\n     * @type {?}\n     */\n    CdkTreeNodeDef.prototype.when;\n    /** @type {?} */\n    CdkTreeNodeDef.prototype.template;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/tree-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when there is no usable data.\n * \\@docs-private\n * @return {?}\n */\nfunction getTreeNoValidDataSourceError() {\n    return Error(`A valid data source must be provided.`);\n}\n/**\n * Returns an error to be thrown when there are multiple nodes that are missing a when function.\n * \\@docs-private\n * @return {?}\n */\nfunction getTreeMultipleDefaultNodeDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching node defs for a particular set of data.\n * \\@docs-private\n * @return {?}\n */\nfunction getTreeMissingMatchingNodeDefError() {\n    return Error(`Could not find a matching node definition for the provided node data.`);\n}\n/**\n * Returns an error to be thrown when there are tree control.\n * \\@docs-private\n * @return {?}\n */\nfunction getTreeControlMissingError() {\n    return Error(`Could not find a tree control for the tree.`);\n}\n/**\n * Returns an error to be thrown when tree control did not implement functions for flat/nested node.\n * \\@docs-private\n * @return {?}\n */\nfunction getTreeControlFunctionsMissingError() {\n    return Error(`Could not find functions for nested/flat tree in tree control.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/tree.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * CDK tree component that connects with a data source to retrieve data of type `T` and renders\n * dataNodes with hierarchy. Updates the dataNodes when new data is provided by the data source.\n * @template T\n */\nclass CdkTree {\n    /**\n     * @param {?} _differs\n     * @param {?} _changeDetectorRef\n     */\n    constructor(_differs, _changeDetectorRef) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Subject that emits when the component has been destroyed.\n         */\n        this._onDestroy = new Subject();\n        /**\n         * Level of nodes\n         */\n        this._levels = new Map();\n        // TODO(tinayuangao): Setup a listener for scrolling, emit the calculated view to viewChange.\n        //     Remove the MAX_VALUE in viewChange\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         */\n        this.viewChange = new BehaviorSubject({ start: 0, end: Number.MAX_VALUE });\n    }\n    /**\n     * Provides a stream containing the latest data array to render. Influenced by the tree's\n     * stream of view window (what dataNodes are currently on screen).\n     * Data source can be an observable of data array, or a data array to render.\n     * @return {?}\n     */\n    get dataSource() { return this._dataSource; }\n    /**\n     * @param {?} dataSource\n     * @return {?}\n     */\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._dataDiffer = this._differs.find([]).create(this.trackBy);\n        if (!this.treeControl) {\n            throw getTreeControlMissingError();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._nodeOutlet.viewContainer.clear();\n        this.viewChange.complete();\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (this._dataSource && typeof ((/** @type {?} */ (this._dataSource))).disconnect === 'function') {\n            ((/** @type {?} */ (this.dataSource))).disconnect(this);\n        }\n        if (this._dataSubscription) {\n            this._dataSubscription.unsubscribe();\n            this._dataSubscription = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        /** @type {?} */\n        const defaultNodeDefs = this._nodeDefs.filter((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => !def.when));\n        if (defaultNodeDefs.length > 1) {\n            throw getTreeMultipleDefaultNodeDefsError();\n        }\n        this._defaultNodeDef = defaultNodeDefs[0];\n        if (this.dataSource && this._nodeDefs && !this._dataSubscription) {\n            this._observeRenderChanges();\n        }\n    }\n    // TODO(tinayuangao): Work on keyboard traversal and actions, make sure it's working for RTL\n    //     and nested trees.\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the node outlet. Otherwise start listening for new data.\n     * @private\n     * @param {?} dataSource\n     * @return {?}\n     */\n    _switchDataSource(dataSource) {\n        if (this._dataSource && typeof ((/** @type {?} */ (this._dataSource))).disconnect === 'function') {\n            ((/** @type {?} */ (this.dataSource))).disconnect(this);\n        }\n        if (this._dataSubscription) {\n            this._dataSubscription.unsubscribe();\n            this._dataSubscription = null;\n        }\n        // Remove the all dataNodes if there is now no data source\n        if (!dataSource) {\n            this._nodeOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n        if (this._nodeDefs) {\n            this._observeRenderChanges();\n        }\n    }\n    /**\n     * Set up a subscription for the data provided by the data source.\n     * @private\n     * @return {?}\n     */\n    _observeRenderChanges() {\n        /** @type {?} */\n        let dataStream;\n        if (isDataSource(this._dataSource)) {\n            dataStream = this._dataSource.connect(this);\n        }\n        else if (isObservable(this._dataSource)) {\n            dataStream = this._dataSource;\n        }\n        else if (Array.isArray(this._dataSource)) {\n            dataStream = of(this._dataSource);\n        }\n        if (dataStream) {\n            this._dataSubscription = dataStream.pipe(takeUntil(this._onDestroy))\n                .subscribe((/**\n             * @param {?} data\n             * @return {?}\n             */\n            data => this.renderNodeChanges(data)));\n        }\n        else {\n            throw getTreeNoValidDataSourceError();\n        }\n    }\n    /**\n     * Check for changes made in the data and render each change (node added/removed/moved).\n     * @param {?} data\n     * @param {?=} dataDiffer\n     * @param {?=} viewContainer\n     * @param {?=} parentData\n     * @return {?}\n     */\n    renderNodeChanges(data, dataDiffer = this._dataDiffer, viewContainer = this._nodeOutlet.viewContainer, parentData) {\n        /** @type {?} */\n        const changes = dataDiffer.diff(data);\n        if (!changes) {\n            return;\n        }\n        changes.forEachOperation((/**\n         * @param {?} item\n         * @param {?} adjustedPreviousIndex\n         * @param {?} currentIndex\n         * @return {?}\n         */\n        (item, adjustedPreviousIndex, currentIndex) => {\n            if (item.previousIndex == null) {\n                this.insertNode(data[(/** @type {?} */ (currentIndex))], (/** @type {?} */ (currentIndex)), viewContainer, parentData);\n            }\n            else if (currentIndex == null) {\n                viewContainer.remove((/** @type {?} */ (adjustedPreviousIndex)));\n                this._levels.delete(item.item);\n            }\n            else {\n                /** @type {?} */\n                const view = viewContainer.get((/** @type {?} */ (adjustedPreviousIndex)));\n                viewContainer.move((/** @type {?} */ (view)), currentIndex);\n            }\n        }));\n        this._changeDetectorRef.detectChanges();\n    }\n    /**\n     * Finds the matching node definition that should be used for this node data. If there is only\n     * one node definition, it is returned. Otherwise, find the node definition that has a when\n     * predicate that returns true with the data. If none return true, return the default node\n     * definition.\n     * @param {?} data\n     * @param {?} i\n     * @return {?}\n     */\n    _getNodeDef(data, i) {\n        if (this._nodeDefs.length === 1) {\n            return this._nodeDefs.first;\n        }\n        /** @type {?} */\n        const nodeDef = this._nodeDefs.find((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.when && def.when(i, data))) || this._defaultNodeDef;\n        if (!nodeDef) {\n            throw getTreeMissingMatchingNodeDefError();\n        }\n        return nodeDef;\n    }\n    /**\n     * Create the embedded view for the data node template and place it in the correct index location\n     * within the data node view container.\n     * @param {?} nodeData\n     * @param {?} index\n     * @param {?=} viewContainer\n     * @param {?=} parentData\n     * @return {?}\n     */\n    insertNode(nodeData, index, viewContainer, parentData) {\n        /** @type {?} */\n        const node = this._getNodeDef(nodeData, index);\n        // Node context that will be provided to created embedded view\n        /** @type {?} */\n        const context = new CdkTreeNodeOutletContext(nodeData);\n        // If the tree is flat tree, then use the `getLevel` function in flat tree control\n        // Otherwise, use the level of parent node.\n        if (this.treeControl.getLevel) {\n            context.level = this.treeControl.getLevel(nodeData);\n        }\n        else if (typeof parentData !== 'undefined' && this._levels.has(parentData)) {\n            context.level = (/** @type {?} */ (this._levels.get(parentData))) + 1;\n        }\n        else {\n            context.level = 0;\n        }\n        this._levels.set(nodeData, context.level);\n        // Use default tree nodeOutlet, or nested node's nodeOutlet\n        /** @type {?} */\n        const container = viewContainer ? viewContainer : this._nodeOutlet.viewContainer;\n        container.createEmbeddedView(node.template, context, index);\n        // Set the data to just created `CdkTreeNode`.\n        // The `CdkTreeNode` created from `createEmbeddedView` will be saved in static variable\n        //     `mostRecentTreeNode`. We get it from static variable and pass the node data to it.\n        if (CdkTreeNode.mostRecentTreeNode) {\n            CdkTreeNode.mostRecentTreeNode.data = nodeData;\n        }\n    }\n}\nCdkTree.ɵfac = function CdkTree_Factory(t) { return new (t || CdkTree)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nCdkTree.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkTree, selectors: [[\"cdk-tree\"]], contentQueries: function CdkTree_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkTreeNodeDef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nodeDefs = _t);\n    } }, viewQuery: function CdkTree_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(CdkTreeNodeOutlet, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nodeOutlet = _t.first);\n    } }, hostAttrs: [\"role\", \"tree\", 1, \"cdk-tree\"], inputs: { dataSource: \"dataSource\", treeControl: \"treeControl\", trackBy: \"trackBy\" }, exportAs: [\"cdkTree\"], decls: 1, vars: 0, consts: [[\"cdkTreeNodeOutlet\", \"\"]], template: function CdkTree_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkTreeNodeOutlet], encapsulation: 2 });\n/** @nocollapse */\nCdkTree.ctorParameters = () => [\n    { type: IterableDiffers },\n    { type: ChangeDetectorRef }\n];\nCdkTree.propDecorators = {\n    dataSource: [{ type: Input }],\n    treeControl: [{ type: Input }],\n    trackBy: [{ type: Input }],\n    _nodeOutlet: [{ type: ViewChild, args: [CdkTreeNodeOutlet, { static: true },] }],\n    _nodeDefs: [{ type: ContentChildren, args: [CdkTreeNodeDef, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTree, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-tree',\n                exportAs: 'cdkTree',\n                template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n                host: {\n                    'class': 'cdk-tree',\n                    'role': 'tree'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // The \"OnPush\" status for the `CdkTree` component is effectively a noop, so we are removing it.\n                // The view for `CdkTree` consists entirely of templates declared in other views. As they are\n                // declared elsewhere, they are checked when their declaration points are checked.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], function () { return [{ type: ɵngcc0.IterableDiffers }, { type: ɵngcc0.ChangeDetectorRef }]; }, { dataSource: [{\n            type: Input\n        }], treeControl: [{\n            type: Input\n        }], trackBy: [{\n            type: Input\n        }], _nodeOutlet: [{\n            type: ViewChild,\n            args: [CdkTreeNodeOutlet, { static: true }]\n        }], _nodeDefs: [{\n            type: ContentChildren,\n            args: [CdkTreeNodeDef, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }] }); })();\nif (false) {\n    /**\n     * Subject that emits when the component has been destroyed.\n     * @type {?}\n     * @private\n     */\n    CdkTree.prototype._onDestroy;\n    /**\n     * Differ used to find the changes in the data provided by the data source.\n     * @type {?}\n     * @private\n     */\n    CdkTree.prototype._dataDiffer;\n    /**\n     * Stores the node definition that does not have a when predicate.\n     * @type {?}\n     * @private\n     */\n    CdkTree.prototype._defaultNodeDef;\n    /**\n     * Data subscription\n     * @type {?}\n     * @private\n     */\n    CdkTree.prototype._dataSubscription;\n    /**\n     * Level of nodes\n     * @type {?}\n     * @private\n     */\n    CdkTree.prototype._levels;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTree.prototype._dataSource;\n    /**\n     * The tree controller\n     * @type {?}\n     */\n    CdkTree.prototype.treeControl;\n    /**\n     * Tracking function that will be used to check the differences in data changes. Used similarly\n     * to `ngFor` `trackBy` function. Optimize node operations by identifying a node based on its data\n     * relative to the function to know if a node should be added/removed/moved.\n     * Accepts a function that takes two parameters, `index` and `item`.\n     * @type {?}\n     */\n    CdkTree.prototype.trackBy;\n    /** @type {?} */\n    CdkTree.prototype._nodeOutlet;\n    /**\n     * The tree node template for the tree\n     * @type {?}\n     */\n    CdkTree.prototype._nodeDefs;\n    /**\n     * Stream containing the latest information on what rows are being displayed on screen.\n     * Can be used by the data source to as a heuristic of what data should be provided.\n     * @type {?}\n     */\n    CdkTree.prototype.viewChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTree.prototype._differs;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTree.prototype._changeDetectorRef;\n}\n/**\n * Tree node for CdkTree. It contains the data in the tree node.\n * @template T\n */\nclass CdkTreeNode {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _tree\n     */\n    constructor(_elementRef, _tree) {\n        this._elementRef = _elementRef;\n        this._tree = _tree;\n        /**\n         * Subject that emits when the component has been destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Emits when the node's data has changed.\n         */\n        this._dataChanges = new Subject();\n        /**\n         * The role of the node should be 'group' if it's an internal node,\n         * and 'treeitem' if it's a leaf node.\n         */\n        this.role = 'treeitem';\n        CdkTreeNode.mostRecentTreeNode = (/** @type {?} */ (this));\n    }\n    /**\n     * The tree node's data.\n     * @return {?}\n     */\n    get data() { return this._data; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set data(value) {\n        if (value !== this._data) {\n            this._data = value;\n            this._setRoleFromData();\n            this._dataChanges.next();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get isExpanded() {\n        return this._tree.treeControl.isExpanded(this._data);\n    }\n    /**\n     * @return {?}\n     */\n    get level() {\n        return this._tree.treeControl.getLevel ? this._tree.treeControl.getLevel(this._data) : 0;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // If this is the last tree node being destroyed,\n        // clear out the reference to avoid leaking memory.\n        if (CdkTreeNode.mostRecentTreeNode === this) {\n            CdkTreeNode.mostRecentTreeNode = null;\n        }\n        this._dataChanges.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Focuses the menu item. Implements for FocusableOption.\n     * @return {?}\n     */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _setRoleFromData() {\n        if (this._tree.treeControl.isExpandable) {\n            this.role = this._tree.treeControl.isExpandable(this._data) ? 'group' : 'treeitem';\n        }\n        else {\n            if (!this._tree.treeControl.getChildren) {\n                throw getTreeControlFunctionsMissingError();\n            }\n            /** @type {?} */\n            const childrenNodes = this._tree.treeControl.getChildren(this._data);\n            if (Array.isArray(childrenNodes)) {\n                this._setRoleFromChildren((/** @type {?} */ (childrenNodes)));\n            }\n            else if (isObservable(childrenNodes)) {\n                childrenNodes.pipe(takeUntil(this._destroyed))\n                    .subscribe((/**\n                 * @param {?} children\n                 * @return {?}\n                 */\n                children => this._setRoleFromChildren(children)));\n            }\n        }\n    }\n    /**\n     * @protected\n     * @param {?} children\n     * @return {?}\n     */\n    _setRoleFromChildren(children) {\n        this.role = children && children.length ? 'group' : 'treeitem';\n    }\n}\nCdkTreeNode.ɵfac = function CdkTreeNode_Factory(t) { return new (t || CdkTreeNode)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(CdkTree)); };\nCdkTreeNode.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTreeNode, selectors: [[\"cdk-tree-node\"]], hostAttrs: [1, \"cdk-tree-node\"], hostVars: 3, hostBindings: function CdkTreeNode_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.isExpanded)(\"aria-level\", ctx.role === \"treeitem\" ? ctx.level : null)(\"role\", ctx.role);\n    } }, inputs: { role: \"role\" }, exportAs: [\"cdkTreeNode\"] });\n/**\n * The most recently created `CdkTreeNode`. We save it in static variable so we can retrieve it\n * in `CdkTree` and set the data to it.\n */\nCdkTreeNode.mostRecentTreeNode = null;\n/** @nocollapse */\nCdkTreeNode.ctorParameters = () => [\n    { type: ElementRef },\n    { type: CdkTree }\n];\nCdkTreeNode.propDecorators = {\n    role: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTreeNode, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-tree-node',\n                exportAs: 'cdkTreeNode',\n                host: {\n                    '[attr.aria-expanded]': 'isExpanded',\n                    '[attr.aria-level]': 'role === \"treeitem\" ? level : null',\n                    '[attr.role]': 'role',\n                    'class': 'cdk-tree-node'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: CdkTree }]; }, { role: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * The most recently created `CdkTreeNode`. We save it in static variable so we can retrieve it\n     * in `CdkTree` and set the data to it.\n     * @type {?}\n     */\n    CdkTreeNode.mostRecentTreeNode;\n    /**\n     * Subject that emits when the component has been destroyed.\n     * @type {?}\n     * @protected\n     */\n    CdkTreeNode.prototype._destroyed;\n    /**\n     * Emits when the node's data has changed.\n     * @type {?}\n     */\n    CdkTreeNode.prototype._dataChanges;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTreeNode.prototype._data;\n    /**\n     * The role of the node should be 'group' if it's an internal node,\n     * and 'treeitem' if it's a leaf node.\n     * @type {?}\n     */\n    CdkTreeNode.prototype.role;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTreeNode.prototype._elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTreeNode.prototype._tree;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/nested-node.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Nested node is a child of `<cdk-tree>`. It works with nested tree.\n * By using `cdk-nested-tree-node` component in tree node template, children of the parent node will\n * be added in the `cdkTreeNodeOutlet` in tree node template.\n * The children of node will be automatically added to `cdkTreeNodeOutlet`.\n * @template T\n */\nclass CdkNestedTreeNode extends CdkTreeNode {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _tree\n     * @param {?} _differs\n     */\n    constructor(_elementRef, _tree, _differs) {\n        super(_elementRef, _tree);\n        this._elementRef = _elementRef;\n        this._tree = _tree;\n        this._differs = _differs;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._dataDiffer = this._differs.find([]).create(this._tree.trackBy);\n        if (!this._tree.treeControl.getChildren) {\n            throw getTreeControlFunctionsMissingError();\n        }\n        /** @type {?} */\n        const childrenNodes = this._tree.treeControl.getChildren(this.data);\n        if (Array.isArray(childrenNodes)) {\n            this.updateChildrenNodes((/** @type {?} */ (childrenNodes)));\n        }\n        else if (isObservable(childrenNodes)) {\n            childrenNodes.pipe(takeUntil(this._destroyed))\n                .subscribe((/**\n             * @param {?} result\n             * @return {?}\n             */\n            result => this.updateChildrenNodes(result)));\n        }\n        this.nodeOutlet.changes.pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this.updateChildrenNodes()));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._clear();\n        super.ngOnDestroy();\n    }\n    /**\n     * Add children dataNodes to the NodeOutlet\n     * @protected\n     * @param {?=} children\n     * @return {?}\n     */\n    updateChildrenNodes(children) {\n        /** @type {?} */\n        const outlet = this._getNodeOutlet();\n        if (children) {\n            this._children = children;\n        }\n        if (outlet && this._children) {\n            /** @type {?} */\n            const viewContainer = outlet.viewContainer;\n            this._tree.renderNodeChanges(this._children, this._dataDiffer, viewContainer, this._data);\n        }\n        else {\n            // Reset the data differ if there's no children nodes displayed\n            this._dataDiffer.diff([]);\n        }\n    }\n    /**\n     * Clear the children dataNodes.\n     * @protected\n     * @return {?}\n     */\n    _clear() {\n        /** @type {?} */\n        const outlet = this._getNodeOutlet();\n        if (outlet) {\n            outlet.viewContainer.clear();\n            this._dataDiffer.diff([]);\n        }\n    }\n    /**\n     * Gets the outlet for the current node.\n     * @private\n     * @return {?}\n     */\n    _getNodeOutlet() {\n        /** @type {?} */\n        const outlets = this.nodeOutlet;\n        // Note that since we use `descendants: true` on the query, we have to ensure\n        // that we don't pick up the outlet of a child node by accident.\n        return outlets && outlets.find((/**\n         * @param {?} outlet\n         * @return {?}\n         */\n        outlet => !outlet._node || outlet._node === this));\n    }\n}\nCdkNestedTreeNode.ɵfac = function CdkNestedTreeNode_Factory(t) { return new (t || CdkNestedTreeNode)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(CdkTree), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers)); };\nCdkNestedTreeNode.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkNestedTreeNode, selectors: [[\"cdk-nested-tree-node\"]], contentQueries: function CdkNestedTreeNode_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkTreeNodeOutlet, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.nodeOutlet = _t);\n    } }, hostAttrs: [1, \"cdk-tree-node\", \"cdk-nested-tree-node\"], hostVars: 2, hostBindings: function CdkNestedTreeNode_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.isExpanded)(\"role\", ctx.role);\n    } }, exportAs: [\"cdkNestedTreeNode\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CdkTreeNode, useExisting: CdkNestedTreeNode },\n            { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: CdkNestedTreeNode }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkNestedTreeNode.ctorParameters = () => [\n    { type: ElementRef },\n    { type: CdkTree },\n    { type: IterableDiffers }\n];\nCdkNestedTreeNode.propDecorators = {\n    nodeOutlet: [{ type: ContentChildren, args: [CdkTreeNodeOutlet, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkNestedTreeNode, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-nested-tree-node',\n                exportAs: 'cdkNestedTreeNode',\n                host: {\n                    '[attr.aria-expanded]': 'isExpanded',\n                    '[attr.role]': 'role',\n                    'class': 'cdk-tree-node cdk-nested-tree-node'\n                },\n                providers: [\n                    { provide: CdkTreeNode, useExisting: CdkNestedTreeNode },\n                    { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: CdkNestedTreeNode }\n                ]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: CdkTree }, { type: ɵngcc0.IterableDiffers }]; }, { nodeOutlet: [{\n            type: ContentChildren,\n            args: [CdkTreeNodeOutlet, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }] }); })();\nif (false) {\n    /**\n     * Differ used to find the changes in the data provided by the data source.\n     * @type {?}\n     * @private\n     */\n    CdkNestedTreeNode.prototype._dataDiffer;\n    /**\n     * The children data dataNodes of current node. They will be placed in `CdkTreeNodeOutlet`.\n     * @type {?}\n     * @protected\n     */\n    CdkNestedTreeNode.prototype._children;\n    /**\n     * The children node placeholder.\n     * @type {?}\n     */\n    CdkNestedTreeNode.prototype.nodeOutlet;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkNestedTreeNode.prototype._elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkNestedTreeNode.prototype._tree;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkNestedTreeNode.prototype._differs;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/padding.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Regex used to split a string on its CSS units.\n * @type {?}\n */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * Indent for the children tree dataNodes.\n * This directive will add left-padding to the node to show hierarchy.\n * @template T\n */\nclass CdkTreeNodePadding {\n    /**\n     * @param {?} _treeNode\n     * @param {?} _tree\n     * @param {?} _renderer\n     * @param {?} _element\n     * @param {?} _dir\n     */\n    constructor(_treeNode, _tree, \n    /**\n     * @deprecated _renderer parameter no longer being used. To be removed.\n     * @breaking-change 11.0.0\n     */\n    _renderer, _element, _dir) {\n        this._treeNode = _treeNode;\n        this._tree = _tree;\n        this._element = _element;\n        this._dir = _dir;\n        /**\n         * Subject that emits when the component has been destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * CSS units used for the indentation value.\n         */\n        this.indentUnits = 'px';\n        this._indent = 40;\n        this._setPadding();\n        if (_dir) {\n            _dir.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => this._setPadding(true)));\n        }\n        // In Ivy the indentation binding might be set before the tree node's data has been added,\n        // which means that we'll miss the first render. We have to subscribe to changes in the\n        // data to ensure that everything is up to date.\n        _treeNode._dataChanges.subscribe((/**\n         * @return {?}\n         */\n        () => this._setPadding()));\n    }\n    /**\n     * The level of depth of the tree node. The padding will be `level * indent` pixels.\n     * @return {?}\n     */\n    get level() { return this._level; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set level(value) {\n        // Set to null as the fallback value so that _setPadding can fall back to the node level if the\n        // consumer set the directive as `cdkTreeNodePadding=\"\"`. We still want to take this value if\n        // they set 0 explicitly.\n        this._level = (/** @type {?} */ (coerceNumberProperty(value, null)));\n        this._setPadding();\n    }\n    /**\n     * The indent for each level. Can be a number or a CSS string.\n     * Default number 40px from material design menu sub-menu spec.\n     * @return {?}\n     */\n    get indent() { return this._indent; }\n    /**\n     * @param {?} indent\n     * @return {?}\n     */\n    set indent(indent) {\n        /** @type {?} */\n        let value = indent;\n        /** @type {?} */\n        let units = 'px';\n        if (typeof indent === 'string') {\n            /** @type {?} */\n            const parts = indent.split(cssUnitPattern);\n            value = parts[0];\n            units = parts[1] || units;\n        }\n        this.indentUnits = units;\n        this._indent = coerceNumberProperty(value);\n        this._setPadding();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * The padding indent value for the tree node. Returns a string with px numbers if not null.\n     * @return {?}\n     */\n    _paddingIndent() {\n        /** @type {?} */\n        const nodeLevel = (this._treeNode.data && this._tree.treeControl.getLevel)\n            ? this._tree.treeControl.getLevel(this._treeNode.data)\n            : null;\n        /** @type {?} */\n        const level = this._level == null ? nodeLevel : this._level;\n        return typeof level === 'number' ? `${level * this._indent}${this.indentUnits}` : null;\n    }\n    /**\n     * @param {?=} forceChange\n     * @return {?}\n     */\n    _setPadding(forceChange = false) {\n        /** @type {?} */\n        const padding = this._paddingIndent();\n        if (padding !== this._currentPadding || forceChange) {\n            /** @type {?} */\n            const element = this._element.nativeElement;\n            /** @type {?} */\n            const paddingProp = this._dir && this._dir.value === 'rtl' ? 'paddingRight' : 'paddingLeft';\n            /** @type {?} */\n            const resetProp = paddingProp === 'paddingLeft' ? 'paddingRight' : 'paddingLeft';\n            element.style[paddingProp] = padding || '';\n            element.style[resetProp] = '';\n            this._currentPadding = padding;\n        }\n    }\n}\nCdkTreeNodePadding.ɵfac = function CdkTreeNodePadding_Factory(t) { return new (t || CdkTreeNodePadding)(ɵngcc0.ɵɵdirectiveInject(CdkTreeNode), ɵngcc0.ɵɵdirectiveInject(CdkTree), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8)); };\nCdkTreeNodePadding.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTreeNodePadding, selectors: [[\"\", \"cdkTreeNodePadding\", \"\"]], inputs: { level: [\"cdkTreeNodePadding\", \"level\"], indent: [\"cdkTreeNodePaddingIndent\", \"indent\"] } });\n/** @nocollapse */\nCdkTreeNodePadding.ctorParameters = () => [\n    { type: CdkTreeNode },\n    { type: CdkTree },\n    { type: Renderer2 },\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nCdkTreeNodePadding.propDecorators = {\n    level: [{ type: Input, args: ['cdkTreeNodePadding',] }],\n    indent: [{ type: Input, args: ['cdkTreeNodePaddingIndent',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTreeNodePadding, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkTreeNodePadding]'\n            }]\n    }], function () { return [{ type: CdkTreeNode }, { type: CdkTree }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { level: [{\n            type: Input,\n            args: ['cdkTreeNodePadding']\n        }], indent: [{\n            type: Input,\n            args: ['cdkTreeNodePaddingIndent']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkTreeNodePadding.ngAcceptInputType_level;\n    /**\n     * Current padding value applied to the element. Used to avoid unnecessarily hitting the DOM.\n     * @type {?}\n     * @private\n     */\n    CdkTreeNodePadding.prototype._currentPadding;\n    /**\n     * Subject that emits when the component has been destroyed.\n     * @type {?}\n     * @private\n     */\n    CdkTreeNodePadding.prototype._destroyed;\n    /**\n     * CSS units used for the indentation value.\n     * @type {?}\n     */\n    CdkTreeNodePadding.prototype.indentUnits;\n    /** @type {?} */\n    CdkTreeNodePadding.prototype._level;\n    /** @type {?} */\n    CdkTreeNodePadding.prototype._indent;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTreeNodePadding.prototype._treeNode;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTreeNodePadding.prototype._tree;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTreeNodePadding.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTreeNodePadding.prototype._dir;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/toggle.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Node toggle to expand/collapse the node.\n * @template T\n */\nclass CdkTreeNodeToggle {\n    /**\n     * @param {?} _tree\n     * @param {?} _treeNode\n     */\n    constructor(_tree, _treeNode) {\n        this._tree = _tree;\n        this._treeNode = _treeNode;\n        this._recursive = false;\n    }\n    /**\n     * Whether expand/collapse the node recursively.\n     * @return {?}\n     */\n    get recursive() { return this._recursive; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set recursive(value) { this._recursive = coerceBooleanProperty(value); }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _toggle(event) {\n        this.recursive\n            ? this._tree.treeControl.toggleDescendants(this._treeNode.data)\n            : this._tree.treeControl.toggle(this._treeNode.data);\n        event.stopPropagation();\n    }\n}\nCdkTreeNodeToggle.ɵfac = function CdkTreeNodeToggle_Factory(t) { return new (t || CdkTreeNodeToggle)(ɵngcc0.ɵɵdirectiveInject(CdkTree), ɵngcc0.ɵɵdirectiveInject(CdkTreeNode)); };\nCdkTreeNodeToggle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTreeNodeToggle, selectors: [[\"\", \"cdkTreeNodeToggle\", \"\"]], hostBindings: function CdkTreeNodeToggle_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function CdkTreeNodeToggle_click_HostBindingHandler($event) { return ctx._toggle($event); });\n    } }, inputs: { recursive: [\"cdkTreeNodeToggleRecursive\", \"recursive\"] } });\n/** @nocollapse */\nCdkTreeNodeToggle.ctorParameters = () => [\n    { type: CdkTree },\n    { type: CdkTreeNode }\n];\nCdkTreeNodeToggle.propDecorators = {\n    recursive: [{ type: Input, args: ['cdkTreeNodeToggleRecursive',] }],\n    _toggle: [{ type: HostListener, args: ['click', ['$event'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTreeNodeToggle, [{\n        type: Directive,\n        args: [{ selector: '[cdkTreeNodeToggle]' }]\n    }], function () { return [{ type: CdkTree }, { type: CdkTreeNode }]; }, { recursive: [{\n            type: Input,\n            args: ['cdkTreeNodeToggleRecursive']\n        }], _toggle: [{\n            type: HostListener,\n            args: ['click', ['$event']]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkTreeNodeToggle.ngAcceptInputType_recursive;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTreeNodeToggle.prototype._recursive;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTreeNodeToggle.prototype._tree;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTreeNodeToggle.prototype._treeNode;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/tree-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst EXPORTED_DECLARATIONS = [\n    CdkNestedTreeNode,\n    CdkTreeNodeDef,\n    CdkTreeNodePadding,\n    CdkTreeNodeToggle,\n    CdkTree,\n    CdkTreeNode,\n    CdkTreeNodeOutlet,\n];\nclass CdkTreeModule {\n}\nCdkTreeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkTreeModule });\nCdkTreeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CdkTreeModule_Factory(t) { return new (t || CdkTreeModule)(); }, providers: [FocusMonitor, CdkTreeNodeDef] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkTreeModule, { declarations: [CdkNestedTreeNode,\n        CdkTreeNodeDef,\n        CdkTreeNodePadding,\n        CdkTreeNodeToggle,\n        CdkTree,\n        CdkTreeNode,\n        CdkTreeNodeOutlet], exports: [CdkNestedTreeNode,\n        CdkTreeNodeDef,\n        CdkTreeNodePadding,\n        CdkTreeNodeToggle,\n        CdkTree,\n        CdkTreeNode,\n        CdkTreeNodeOutlet] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTreeModule, [{\n        type: NgModule,\n        args: [{\n                exports: EXPORTED_DECLARATIONS,\n                declarations: EXPORTED_DECLARATIONS,\n                providers: [FocusMonitor, CdkTreeNodeDef]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseTreeControl, CDK_TREE_NODE_OUTLET_NODE, CdkNestedTreeNode, CdkTree, CdkTreeModule, CdkTreeNode, CdkTreeNodeDef, CdkTreeNodeOutlet, CdkTreeNodeOutletContext, CdkTreeNodePadding, CdkTreeNodeToggle, FlatTreeControl, NestedTreeControl, getTreeControlFunctionsMissingError, getTreeControlMissingError, getTreeMissingMatchingNodeDefError, getTreeMultipleDefaultNodeDefsError, getTreeNoValidDataSourceError };\n\n//# sourceMappingURL=tree.js.map","import { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { InjectionToken, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, ElementRef, Inject, ViewChild, TemplateRef, ContentChildren, Input, Output, Directive, forwardRef, ViewContainerRef, NgZone, Optional, Host, NgModule } from '@angular/core';\nimport { mixinDisableRipple, MAT_OPTION_PARENT_COMPONENT, MatOption, MatOptgroup, MatOptionSelectionChange, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { Subscription, Subject, defer, merge, of, fromEvent } from 'rxjs';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { ESCAPE, ENTER, UP_ARROW, DOWN_ARROW, TAB } from '@angular/cdk/keycodes';\nimport { _getShadowRoot } from '@angular/cdk/platform';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatFormField, MAT_FORM_FIELD } from '@angular/material/form-field';\nimport { take, switchMap, filter, map, tap, delay } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/autocomplete/autocomplete.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Autocomplete IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/cdk/overlay';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/cdk/scrolling';\nimport * as ɵngcc5 from '@angular/material/form-field';\n\nconst _c0 = [\"panel\"];\nfunction MatAutocomplete_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r0.id)(\"ngClass\", ctx_r0._classList);\n} }\nconst _c1 = [\"*\"];\nlet _uniqueAutocompleteIdCounter = 0;\n/**\n * Event object that is emitted when an autocomplete option is selected.\n */\nclass MatAutocompleteSelectedEvent {\n    /**\n     * @param {?} source\n     * @param {?} option\n     */\n    constructor(source, option) {\n        this.source = source;\n        this.option = option;\n    }\n}\nif (false) {\n    /**\n     * Reference to the autocomplete panel that emitted the event.\n     * @type {?}\n     */\n    MatAutocompleteSelectedEvent.prototype.source;\n    /**\n     * Option that was selected.\n     * @type {?}\n     */\n    MatAutocompleteSelectedEvent.prototype.option;\n}\n/**\n * Event object that is emitted when an autocomplete option is activated.\n * @record\n */\nfunction MatAutocompleteActivatedEvent() { }\nif (false) {\n    /**\n     * Reference to the autocomplete panel that emitted the event.\n     * @type {?}\n     */\n    MatAutocompleteActivatedEvent.prototype.source;\n    /**\n     * Option that was selected.\n     * @type {?}\n     */\n    MatAutocompleteActivatedEvent.prototype.option;\n}\n// Boilerplate for applying mixins to MatAutocomplete.\n/**\n * \\@docs-private\n */\nclass MatAutocompleteBase {\n}\n/** @type {?} */\nconst _MatAutocompleteMixinBase = mixinDisableRipple(MatAutocompleteBase);\n/**\n * Default `mat-autocomplete` options that can be overridden.\n * @record\n */\nfunction MatAutocompleteDefaultOptions() { }\nif (false) {\n    /**\n     * Whether the first option should be highlighted when an autocomplete panel is opened.\n     * @type {?|undefined}\n     */\n    MatAutocompleteDefaultOptions.prototype.autoActiveFirstOption;\n}\n/**\n * Injection token to be used to override the default options for `mat-autocomplete`.\n * @type {?}\n */\nconst MAT_AUTOCOMPLETE_DEFAULT_OPTIONS = new InjectionToken('mat-autocomplete-default-options', {\n    providedIn: 'root',\n    factory: MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY() {\n    return { autoActiveFirstOption: false };\n}\nclass MatAutocomplete extends _MatAutocompleteMixinBase {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _elementRef\n     * @param {?} defaults\n     */\n    constructor(_changeDetectorRef, _elementRef, defaults) {\n        super();\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._activeOptionChanges = Subscription.EMPTY;\n        /**\n         * Whether the autocomplete panel should be visible, depending on option length.\n         */\n        this.showPanel = false;\n        this._isOpen = false;\n        /**\n         * Function that maps an option's control value to its display value in the trigger.\n         */\n        this.displayWith = null;\n        /**\n         * Event that is emitted whenever an option from the list is selected.\n         */\n        this.optionSelected = new EventEmitter();\n        /**\n         * Event that is emitted when the autocomplete panel is opened.\n         */\n        this.opened = new EventEmitter();\n        /**\n         * Event that is emitted when the autocomplete panel is closed.\n         */\n        this.closed = new EventEmitter();\n        /**\n         * Emits whenever an option is activated using the keyboard.\n         */\n        this.optionActivated = new EventEmitter();\n        this._classList = {};\n        /**\n         * Unique ID to be used by autocomplete trigger's \"aria-owns\" property.\n         */\n        this.id = `mat-autocomplete-${_uniqueAutocompleteIdCounter++}`;\n        this._autoActiveFirstOption = !!defaults.autoActiveFirstOption;\n    }\n    /**\n     * Whether the autocomplete panel is open.\n     * @return {?}\n     */\n    get isOpen() { return this._isOpen && this.showPanel; }\n    /**\n     * Whether the first option should be highlighted when the autocomplete panel is opened.\n     * Can be configured globally through the `MAT_AUTOCOMPLETE_DEFAULT_OPTIONS` token.\n     * @return {?}\n     */\n    get autoActiveFirstOption() { return this._autoActiveFirstOption; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autoActiveFirstOption(value) {\n        this._autoActiveFirstOption = coerceBooleanProperty(value);\n    }\n    /**\n     * Takes classes set on the host mat-autocomplete element and applies them to the panel\n     * inside the overlay container to allow for easy styling.\n     * @param {?} value\n     * @return {?}\n     */\n    set classList(value) {\n        if (value && value.length) {\n            this._classList = value.split(' ').reduce((/**\n             * @param {?} classList\n             * @param {?} className\n             * @return {?}\n             */\n            (classList, className) => {\n                classList[className.trim()] = true;\n                return classList;\n            }), (/** @type {?} */ ({})));\n        }\n        else {\n            this._classList = {};\n        }\n        this._setVisibilityClasses(this._classList);\n        this._elementRef.nativeElement.className = '';\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options).withWrap();\n        this._activeOptionChanges = this._keyManager.change.subscribe((/**\n         * @param {?} index\n         * @return {?}\n         */\n        index => {\n            this.optionActivated.emit({ source: this, option: this.options.toArray()[index] || null });\n        }));\n        // Set the initial visibility state.\n        this._setVisibility();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._activeOptionChanges.unsubscribe();\n    }\n    /**\n     * Sets the panel scrollTop. This allows us to manually scroll to display options\n     * above or below the fold, as they are not actually being focused when active.\n     * @param {?} scrollTop\n     * @return {?}\n     */\n    _setScrollTop(scrollTop) {\n        if (this.panel) {\n            this.panel.nativeElement.scrollTop = scrollTop;\n        }\n    }\n    /**\n     * Returns the panel's scrollTop.\n     * @return {?}\n     */\n    _getScrollTop() {\n        return this.panel ? this.panel.nativeElement.scrollTop : 0;\n    }\n    /**\n     * Panel should hide itself when the option list is empty.\n     * @return {?}\n     */\n    _setVisibility() {\n        this.showPanel = !!this.options.length;\n        this._setVisibilityClasses(this._classList);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Emits the `select` event.\n     * @param {?} option\n     * @return {?}\n     */\n    _emitSelectEvent(option) {\n        /** @type {?} */\n        const event = new MatAutocompleteSelectedEvent(this, option);\n        this.optionSelected.emit(event);\n    }\n    /**\n     * Sets the autocomplete visibility classes on a classlist based on the panel is visible.\n     * @private\n     * @param {?} classList\n     * @return {?}\n     */\n    _setVisibilityClasses(classList) {\n        classList['mat-autocomplete-visible'] = this.showPanel;\n        classList['mat-autocomplete-hidden'] = !this.showPanel;\n    }\n}\nMatAutocomplete.ɵfac = function MatAutocomplete_Factory(t) { return new (t || MatAutocomplete)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_DEFAULT_OPTIONS)); };\nMatAutocomplete.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatAutocomplete, selectors: [[\"mat-autocomplete\"]], contentQueries: function MatAutocomplete_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOptgroup, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n    } }, viewQuery: function MatAutocomplete_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n    } }, hostAttrs: [1, \"mat-autocomplete\"], inputs: { disableRipple: \"disableRipple\", displayWith: \"displayWith\", autoActiveFirstOption: \"autoActiveFirstOption\", classList: [\"class\", \"classList\"], panelWidth: \"panelWidth\" }, outputs: { optionSelected: \"optionSelected\", opened: \"opened\", closed: \"closed\", optionActivated: \"optionActivated\" }, exportAs: [\"matAutocomplete\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 1, vars: 0, consts: [[\"role\", \"listbox\", 1, \"mat-autocomplete-panel\", 3, \"id\", \"ngClass\"], [\"panel\", \"\"]], template: function MatAutocomplete_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatAutocomplete_ng_template_0_Template, 3, 2, \"ng-template\");\n    } }, directives: [ɵngcc1.NgClass], styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatAutocomplete.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS,] }] }\n];\nMatAutocomplete.propDecorators = {\n    template: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }],\n    optionGroups: [{ type: ContentChildren, args: [MatOptgroup, { descendants: true },] }],\n    displayWith: [{ type: Input }],\n    autoActiveFirstOption: [{ type: Input }],\n    panelWidth: [{ type: Input }],\n    optionSelected: [{ type: Output }],\n    opened: [{ type: Output }],\n    closed: [{ type: Output }],\n    optionActivated: [{ type: Output }],\n    classList: [{ type: Input, args: ['class',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocomplete, [{\n        type: Component,\n        args: [{\n                selector: 'mat-autocomplete',\n                template: \"<ng-template>\\n  <div class=\\\"mat-autocomplete-panel\\\" role=\\\"listbox\\\" [id]=\\\"id\\\" [ngClass]=\\\"_classList\\\" #panel>\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                exportAs: 'matAutocomplete',\n                inputs: ['disableRipple'],\n                host: {\n                    'class': 'mat-autocomplete'\n                },\n                providers: [\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete }\n                ],\n                styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS]\n            }] }]; }, { displayWith: [{\n            type: Input\n        }], optionSelected: [{\n            type: Output\n        }], opened: [{\n            type: Output\n        }], closed: [{\n            type: Output\n        }], optionActivated: [{\n            type: Output\n        }], autoActiveFirstOption: [{\n            type: Input\n        }], classList: [{\n            type: Input,\n            args: ['class']\n        }], template: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel']\n        }], options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }], optionGroups: [{\n            type: ContentChildren,\n            args: [MatOptgroup, { descendants: true }]\n        }], panelWidth: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatAutocomplete.ngAcceptInputType_autoActiveFirstOption;\n    /** @type {?} */\n    MatAutocomplete.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocomplete.prototype._activeOptionChanges;\n    /**\n     * Manages active item in option list based on key events.\n     * @type {?}\n     */\n    MatAutocomplete.prototype._keyManager;\n    /**\n     * Whether the autocomplete panel should be visible, depending on option length.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.showPanel;\n    /** @type {?} */\n    MatAutocomplete.prototype._isOpen;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatAutocomplete.prototype.template;\n    /**\n     * Element for the panel containing the autocomplete options.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.panel;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatAutocomplete.prototype.options;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatAutocomplete.prototype.optionGroups;\n    /**\n     * Function that maps an option's control value to its display value in the trigger.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.displayWith;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocomplete.prototype._autoActiveFirstOption;\n    /**\n     * Specify the width of the autocomplete panel.  Can be any CSS sizing value, otherwise it will\n     * match the width of its host.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.panelWidth;\n    /**\n     * Event that is emitted whenever an option from the list is selected.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.optionSelected;\n    /**\n     * Event that is emitted when the autocomplete panel is opened.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.opened;\n    /**\n     * Event that is emitted when the autocomplete panel is closed.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.closed;\n    /**\n     * Emits whenever an option is activated using the keyboard.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.optionActivated;\n    /** @type {?} */\n    MatAutocomplete.prototype._classList;\n    /**\n     * Unique ID to be used by autocomplete trigger's \"aria-owns\" property.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocomplete.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocomplete.prototype._elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/autocomplete/autocomplete-origin.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive applied to an element to make it usable\n * as a connection point for an autocomplete panel.\n */\nclass MatAutocompleteOrigin {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n    }\n}\nMatAutocompleteOrigin.ɵfac = function MatAutocompleteOrigin_Factory(t) { return new (t || MatAutocompleteOrigin)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatAutocompleteOrigin.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAutocompleteOrigin, selectors: [[\"\", \"matAutocompleteOrigin\", \"\"]], exportAs: [\"matAutocompleteOrigin\"] });\n/** @nocollapse */\nMatAutocompleteOrigin.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteOrigin, [{\n        type: Directive,\n        args: [{\n                selector: '[matAutocompleteOrigin]',\n                exportAs: 'matAutocompleteOrigin'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /**\n     * Reference to the element on which the directive is applied.\n     * @type {?}\n     */\n    MatAutocompleteOrigin.prototype.elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/autocomplete/autocomplete-trigger.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The height of each autocomplete option.\n * @type {?}\n */\nconst AUTOCOMPLETE_OPTION_HEIGHT = 48;\n/**\n * The total height of the autocomplete panel.\n * @type {?}\n */\nconst AUTOCOMPLETE_PANEL_HEIGHT = 256;\n/**\n * Injection token that determines the scroll handling while the autocomplete panel is open.\n * @type {?}\n */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY = new InjectionToken('mat-autocomplete-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_AUTOCOMPLETE_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_AUTOCOMPLETE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatAutocompleteTrigger)),\n    multi: true\n};\n/**\n * Creates an error to be thrown when attempting to use an autocomplete trigger without a panel.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatAutocompleteMissingPanelError() {\n    return Error('Attempting to open an undefined instance of `mat-autocomplete`. ' +\n        'Make sure that the id passed to the `matAutocomplete` is correct and that ' +\n        'you\\'re attempting to open it after the ngAfterContentInit hook.');\n}\nclass MatAutocompleteTrigger {\n    /**\n     * @param {?} _element\n     * @param {?} _overlay\n     * @param {?} _viewContainerRef\n     * @param {?} _zone\n     * @param {?} _changeDetectorRef\n     * @param {?} scrollStrategy\n     * @param {?} _dir\n     * @param {?} _formField\n     * @param {?} _document\n     * @param {?=} _viewportRuler\n     */\n    constructor(_element, _overlay, _viewContainerRef, _zone, _changeDetectorRef, scrollStrategy, _dir, _formField, _document, _viewportRuler) {\n        this._element = _element;\n        this._overlay = _overlay;\n        this._viewContainerRef = _viewContainerRef;\n        this._zone = _zone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._formField = _formField;\n        this._document = _document;\n        this._viewportRuler = _viewportRuler;\n        this._componentDestroyed = false;\n        this._autocompleteDisabled = false;\n        /**\n         * Whether or not the label state is being overridden.\n         */\n        this._manuallyFloatingLabel = false;\n        /**\n         * Subscription to viewport size changes.\n         */\n        this._viewportSubscription = Subscription.EMPTY;\n        /**\n         * Whether the autocomplete can open the next time it is focused. Used to prevent a focused,\n         * closed autocomplete from being reopened if the user switches to another browser tab and then\n         * comes back.\n         */\n        this._canOpenOnNextFocus = true;\n        /**\n         * Stream of keyboard events that can close the panel.\n         */\n        this._closeKeyEventStream = new Subject();\n        /**\n         * Event handler for when the window is blurred. Needs to be an\n         * arrow function in order to preserve the context.\n         */\n        this._windowBlurHandler = (/**\n         * @return {?}\n         */\n        () => {\n            // If the user blurred the window while the autocomplete is focused, it means that it'll be\n            // refocused when they come back. In this case we want to skip the first focus event, if the\n            // pane was closed, in order to avoid reopening it unintentionally.\n            this._canOpenOnNextFocus =\n                this._document.activeElement !== this._element.nativeElement || this.panelOpen;\n        });\n        /**\n         * `View -> model callback called when value changes`\n         */\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * `View -> model callback called when autocomplete has been touched`\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * Position of the autocomplete panel relative to the trigger element. A position of `auto`\n         * will render the panel underneath the trigger if there is enough space for it to fit in\n         * the viewport, otherwise the panel will be shown above it. If the position is set to\n         * `above` or `below`, the panel will always be shown above or below the trigger. no matter\n         * whether it fits completely in the viewport.\n         */\n        this.position = 'auto';\n        /**\n         * `autocomplete` attribute to be set on the input element.\n         * \\@docs-private\n         */\n        this.autocompleteAttribute = 'off';\n        this._overlayAttached = false;\n        /**\n         * Stream of autocomplete option selections.\n         */\n        this.optionSelections = (/** @type {?} */ (defer((/**\n         * @return {?}\n         */\n        () => {\n            if (this.autocomplete && this.autocomplete.options) {\n                return merge(...this.autocomplete.options.map((/**\n                 * @param {?} option\n                 * @return {?}\n                 */\n                option => option.onSelectionChange)));\n            }\n            // If there are any subscribers before `ngAfterViewInit`, the `autocomplete` will be undefined.\n            // Return a stream that we'll replace with the real one once everything is in place.\n            return this._zone.onStable\n                .asObservable()\n                .pipe(take(1), switchMap((/**\n             * @return {?}\n             */\n            () => this.optionSelections)));\n        }))));\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * Whether the autocomplete is disabled. When disabled, the element will\n     * act as a regular input and the user won't be able to open the panel.\n     * @return {?}\n     */\n    get autocompleteDisabled() { return this._autocompleteDisabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autocompleteDisabled(value) {\n        this._autocompleteDisabled = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        /** @type {?} */\n        const window = this._getWindow();\n        if (typeof window !== 'undefined') {\n            this._zone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => window.addEventListener('blur', this._windowBlurHandler)));\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes['position'] && this._positionStrategy) {\n            this._setStrategyPositions(this._positionStrategy);\n            if (this.panelOpen) {\n                (/** @type {?} */ (this._overlayRef)).updatePosition();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const window = this._getWindow();\n        if (typeof window !== 'undefined') {\n            window.removeEventListener('blur', this._windowBlurHandler);\n        }\n        this._viewportSubscription.unsubscribe();\n        this._componentDestroyed = true;\n        this._destroyPanel();\n        this._closeKeyEventStream.complete();\n    }\n    /**\n     * Whether or not the autocomplete panel is open.\n     * @return {?}\n     */\n    get panelOpen() {\n        return this._overlayAttached && this.autocomplete.showPanel;\n    }\n    /**\n     * Opens the autocomplete suggestion panel.\n     * @return {?}\n     */\n    openPanel() {\n        this._attachOverlay();\n        this._floatLabel();\n    }\n    /**\n     * Closes the autocomplete suggestion panel.\n     * @return {?}\n     */\n    closePanel() {\n        this._resetLabel();\n        if (!this._overlayAttached) {\n            return;\n        }\n        if (this.panelOpen) {\n            // Only emit if the panel was visible.\n            this.autocomplete.closed.emit();\n        }\n        this.autocomplete._isOpen = this._overlayAttached = false;\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n            this._closingActionsSubscription.unsubscribe();\n        }\n        // Note that in some cases this can end up being called after the component is destroyed.\n        // Add a check to ensure that we don't try to run change detection on a destroyed view.\n        if (!this._componentDestroyed) {\n            // We need to trigger change detection manually, because\n            // `fromEvent` doesn't seem to do it at the proper time.\n            // This ensures that the label is reset when the\n            // user clicks outside.\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /**\n     * Updates the position of the autocomplete suggestion panel to ensure that it fits all options\n     * within the viewport.\n     * @return {?}\n     */\n    updatePosition() {\n        if (this._overlayAttached) {\n            (/** @type {?} */ (this._overlayRef)).updatePosition();\n        }\n    }\n    /**\n     * A stream of actions that should close the autocomplete panel, including\n     * when an option is selected, on blur, and when TAB is pressed.\n     * @return {?}\n     */\n    get panelClosingActions() {\n        return merge(this.optionSelections, this.autocomplete._keyManager.tabOut.pipe(filter((/**\n         * @return {?}\n         */\n        () => this._overlayAttached))), this._closeKeyEventStream, this._getOutsideClickStream(), this._overlayRef ?\n            this._overlayRef.detachments().pipe(filter((/**\n             * @return {?}\n             */\n            () => this._overlayAttached))) :\n            of()).pipe(\n        // Normalize the output so we return a consistent type.\n        map((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => event instanceof MatOptionSelectionChange ? event : null)));\n    }\n    /**\n     * The currently active option, coerced to MatOption type.\n     * @return {?}\n     */\n    get activeOption() {\n        if (this.autocomplete && this.autocomplete._keyManager) {\n            return this.autocomplete._keyManager.activeItem;\n        }\n        return null;\n    }\n    /**\n     * Stream of clicks outside of the autocomplete panel.\n     * @private\n     * @return {?}\n     */\n    _getOutsideClickStream() {\n        return merge((/** @type {?} */ (fromEvent(this._document, 'click'))), (/** @type {?} */ (fromEvent(this._document, 'touchend'))))\n            .pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            // If we're in the Shadow DOM, the event target will be the shadow root, so we have to\n            // fall back to check the first element in the path of the click event.\n            /** @type {?} */\n            const clickTarget = (/** @type {?} */ ((this._isInsideShadowRoot && event.composedPath ? event.composedPath()[0] :\n                event.target)));\n            /** @type {?} */\n            const formField = this._formField ? this._formField._elementRef.nativeElement : null;\n            return this._overlayAttached && clickTarget !== this._element.nativeElement &&\n                (!formField || !formField.contains(clickTarget)) &&\n                (!!this._overlayRef && !this._overlayRef.overlayElement.contains(clickTarget));\n        })));\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        Promise.resolve(null).then((/**\n         * @return {?}\n         */\n        () => this._setTriggerValue(value)));\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this._element.nativeElement.disabled = isDisabled;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        // Prevent the default action on all escape key presses. This is here primarily to bring IE\n        // in line with other browsers. By default, pressing escape on IE will cause it to revert\n        // the input value to the one that it had on focus, however it won't dispatch any events\n        // which means that the model value will be out of sync with the view.\n        if (keyCode === ESCAPE) {\n            event.preventDefault();\n        }\n        if (this.activeOption && keyCode === ENTER && this.panelOpen) {\n            this.activeOption._selectViaInteraction();\n            this._resetActiveItem();\n            event.preventDefault();\n        }\n        else if (this.autocomplete) {\n            /** @type {?} */\n            const prevActiveItem = this.autocomplete._keyManager.activeItem;\n            /** @type {?} */\n            const isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\n            if (this.panelOpen || keyCode === TAB) {\n                this.autocomplete._keyManager.onKeydown(event);\n            }\n            else if (isArrowKey && this._canOpen()) {\n                this.openPanel();\n            }\n            if (isArrowKey || this.autocomplete._keyManager.activeItem !== prevActiveItem) {\n                this._scrollToOption();\n            }\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _handleInput(event) {\n        /** @type {?} */\n        let target = (/** @type {?} */ (event.target));\n        /** @type {?} */\n        let value = target.value;\n        // Based on `NumberValueAccessor` from forms.\n        if (target.type === 'number') {\n            value = value == '' ? null : parseFloat(value);\n        }\n        // If the input has a placeholder, IE will fire the `input` event on page load,\n        // focus and blur, in addition to when the user actually changed the value. To\n        // filter out all of the extra events, we save the value on focus and between\n        // `input` events, and we check whether it changed.\n        // See: https://connect.microsoft.com/IE/feedback/details/885747/\n        if (this._previousValue !== value) {\n            this._previousValue = value;\n            this._onChange(value);\n            if (this._canOpen() && this._document.activeElement === event.target) {\n                this.openPanel();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _handleFocus() {\n        if (!this._canOpenOnNextFocus) {\n            this._canOpenOnNextFocus = true;\n        }\n        else if (this._canOpen()) {\n            this._previousValue = this._element.nativeElement.value;\n            this._attachOverlay();\n            this._floatLabel(true);\n        }\n    }\n    /**\n     * In \"auto\" mode, the label will animate down as soon as focus is lost.\n     * This causes the value to jump when selecting an option with the mouse.\n     * This method manually floats the label until the panel can be closed.\n     * @private\n     * @param {?=} shouldAnimate Whether the label should be animated when it is floated.\n     * @return {?}\n     */\n    _floatLabel(shouldAnimate = false) {\n        if (this._formField && this._formField.floatLabel === 'auto') {\n            if (shouldAnimate) {\n                this._formField._animateAndLockLabel();\n            }\n            else {\n                this._formField.floatLabel = 'always';\n            }\n            this._manuallyFloatingLabel = true;\n        }\n    }\n    /**\n     * If the label has been manually elevated, return it to its normal state.\n     * @private\n     * @return {?}\n     */\n    _resetLabel() {\n        if (this._manuallyFloatingLabel) {\n            this._formField.floatLabel = 'auto';\n            this._manuallyFloatingLabel = false;\n        }\n    }\n    /**\n     * Given that we are not actually focusing active options, we must manually adjust scroll\n     * to reveal options below the fold. First, we find the offset of the option from the top\n     * of the panel. If that offset is below the fold, the new scrollTop will be the offset -\n     * the panel height + the option height, so the active option will be just visible at the\n     * bottom of the panel. If that offset is above the top of the visible panel, the new scrollTop\n     * will become the offset. If that offset is visible within the panel already, the scrollTop is\n     * not adjusted.\n     * @private\n     * @return {?}\n     */\n    _scrollToOption() {\n        /** @type {?} */\n        const index = this.autocomplete._keyManager.activeItemIndex || 0;\n        /** @type {?} */\n        const labelCount = _countGroupLabelsBeforeOption(index, this.autocomplete.options, this.autocomplete.optionGroups);\n        if (index === 0 && labelCount === 1) {\n            // If we've got one group label before the option and we're at the top option,\n            // scroll the list to the top. This is better UX than scrolling the list to the\n            // top of the option, because it allows the user to read the top group's label.\n            this.autocomplete._setScrollTop(0);\n        }\n        else {\n            /** @type {?} */\n            const newScrollPosition = _getOptionScrollPosition(index + labelCount, AUTOCOMPLETE_OPTION_HEIGHT, this.autocomplete._getScrollTop(), AUTOCOMPLETE_PANEL_HEIGHT);\n            this.autocomplete._setScrollTop(newScrollPosition);\n        }\n    }\n    /**\n     * This method listens to a stream of panel closing actions and resets the\n     * stream every time the option list changes.\n     * @private\n     * @return {?}\n     */\n    _subscribeToClosingActions() {\n        /** @type {?} */\n        const firstStable = this._zone.onStable.asObservable().pipe(take(1));\n        /** @type {?} */\n        const optionChanges = this.autocomplete.options.changes.pipe(tap((/**\n         * @return {?}\n         */\n        () => this._positionStrategy.reapplyLastPosition())), \n        // Defer emitting to the stream until the next tick, because changing\n        // bindings in here will cause \"changed after checked\" errors.\n        delay(0));\n        // When the zone is stable initially, and when the option list changes...\n        return merge(firstStable, optionChanges)\n            .pipe(\n        // create a new stream of panelClosingActions, replacing any previous streams\n        // that were created, and flatten it so our stream only emits closing events...\n        switchMap((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const wasOpen = this.panelOpen;\n            this._resetActiveItem();\n            this.autocomplete._setVisibility();\n            if (this.panelOpen) {\n                (/** @type {?} */ (this._overlayRef)).updatePosition();\n                // If the `panelOpen` state changed, we need to make sure to emit the `opened`\n                // event, because we may not have emitted it when the panel was attached. This\n                // can happen if the users opens the panel and there are no options, but the\n                // options come in slightly later or as a result of the value changing.\n                if (wasOpen !== this.panelOpen) {\n                    this.autocomplete.opened.emit();\n                }\n            }\n            return this.panelClosingActions;\n        })), \n        // when the first closing event occurs...\n        take(1))\n            // set the value, close the panel, and complete.\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => this._setValueAndClose(event)));\n    }\n    /**\n     * Destroys the autocomplete suggestion panel.\n     * @private\n     * @return {?}\n     */\n    _destroyPanel() {\n        if (this._overlayRef) {\n            this.closePanel();\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _setTriggerValue(value) {\n        /** @type {?} */\n        const toDisplay = this.autocomplete && this.autocomplete.displayWith ?\n            this.autocomplete.displayWith(value) :\n            value;\n        // Simply falling back to an empty string if the display value is falsy does not work properly.\n        // The display value can also be the number zero and shouldn't fall back to an empty string.\n        /** @type {?} */\n        const inputValue = toDisplay != null ? toDisplay : '';\n        // If it's used within a `MatFormField`, we should set it through the property so it can go\n        // through change detection.\n        if (this._formField) {\n            this._formField._control.value = inputValue;\n        }\n        else {\n            this._element.nativeElement.value = inputValue;\n        }\n        this._previousValue = inputValue;\n    }\n    /**\n     * This method closes the panel, and if a value is specified, also sets the associated\n     * control to that value. It will also mark the control as dirty if this interaction\n     * stemmed from the user.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _setValueAndClose(event) {\n        if (event && event.source) {\n            this._clearPreviousSelectedOption(event.source);\n            this._setTriggerValue(event.source.value);\n            this._onChange(event.source.value);\n            this._element.nativeElement.focus();\n            this.autocomplete._emitSelectEvent(event.source);\n        }\n        this.closePanel();\n    }\n    /**\n     * Clear any previous selected option and emit a selection change event for this option\n     * @private\n     * @param {?} skip\n     * @return {?}\n     */\n    _clearPreviousSelectedOption(skip) {\n        this.autocomplete.options.forEach((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => {\n            if (option != skip && option.selected) {\n                option.deselect();\n            }\n        }));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _attachOverlay() {\n        if (!this.autocomplete) {\n            throw getMatAutocompleteMissingPanelError();\n        }\n        // We want to resolve this once, as late as possible so that we can be\n        // sure that the element has been moved into its final place in the DOM.\n        if (this._isInsideShadowRoot == null) {\n            this._isInsideShadowRoot = !!_getShadowRoot(this._element.nativeElement);\n        }\n        /** @type {?} */\n        let overlayRef = this._overlayRef;\n        if (!overlayRef) {\n            this._portal = new TemplatePortal(this.autocomplete.template, this._viewContainerRef);\n            overlayRef = this._overlay.create(this._getOverlayConfig());\n            this._overlayRef = overlayRef;\n            // Use the `keydownEvents` in order to take advantage of\n            // the overlay event targeting provided by the CDK overlay.\n            overlayRef.keydownEvents().subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                // Close when pressing ESCAPE or ALT + UP_ARROW, based on the a11y guidelines.\n                // See: https://www.w3.org/TR/wai-aria-practices-1.1/#textbox-keyboard-interaction\n                if (event.keyCode === ESCAPE || (event.keyCode === UP_ARROW && event.altKey)) {\n                    this._resetActiveItem();\n                    this._closeKeyEventStream.next();\n                    // We need to stop propagation, otherwise the event will eventually\n                    // reach the input itself and cause the overlay to be reopened.\n                    event.stopPropagation();\n                    event.preventDefault();\n                }\n            }));\n            if (this._viewportRuler) {\n                this._viewportSubscription = this._viewportRuler.change().subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    if (this.panelOpen && overlayRef) {\n                        overlayRef.updateSize({ width: this._getPanelWidth() });\n                    }\n                }));\n            }\n        }\n        else {\n            // Update the trigger, panel width and direction, in case anything has changed.\n            this._positionStrategy.setOrigin(this._getConnectedElement());\n            overlayRef.updateSize({ width: this._getPanelWidth() });\n        }\n        if (overlayRef && !overlayRef.hasAttached()) {\n            overlayRef.attach(this._portal);\n            this._closingActionsSubscription = this._subscribeToClosingActions();\n        }\n        /** @type {?} */\n        const wasOpen = this.panelOpen;\n        this.autocomplete._setVisibility();\n        this.autocomplete._isOpen = this._overlayAttached = true;\n        // We need to do an extra `panelOpen` check in here, because the\n        // autocomplete won't be shown if there are no options.\n        if (this.panelOpen && wasOpen !== this.panelOpen) {\n            this.autocomplete.opened.emit();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getOverlayConfig() {\n        return new OverlayConfig({\n            positionStrategy: this._getOverlayPosition(),\n            scrollStrategy: this._scrollStrategy(),\n            width: this._getPanelWidth(),\n            direction: this._dir\n        });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getOverlayPosition() {\n        /** @type {?} */\n        const strategy = this._overlay.position()\n            .flexibleConnectedTo(this._getConnectedElement())\n            .withFlexibleDimensions(false)\n            .withPush(false);\n        this._setStrategyPositions(strategy);\n        this._positionStrategy = strategy;\n        return strategy;\n    }\n    /**\n     * Sets the positions on a position strategy based on the directive's input state.\n     * @private\n     * @param {?} positionStrategy\n     * @return {?}\n     */\n    _setStrategyPositions(positionStrategy) {\n        // Note that we provide horizontal fallback positions, even though by default the dropdown\n        // width matches the input, because consumers can override the width. See #18854.\n        /** @type {?} */\n        const belowPositions = [\n            { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' },\n            { originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top' }\n        ];\n        // The overlay edge connected to the trigger should have squared corners, while\n        // the opposite end has rounded corners. We apply a CSS class to swap the\n        // border-radius based on the overlay position.\n        /** @type {?} */\n        const panelClass = 'mat-autocomplete-panel-above';\n        /** @type {?} */\n        const abovePositions = [\n            { originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom', panelClass },\n            { originX: 'end', originY: 'top', overlayX: 'end', overlayY: 'bottom', panelClass }\n        ];\n        /** @type {?} */\n        let positions;\n        if (this.position === 'above') {\n            positions = abovePositions;\n        }\n        else if (this.position === 'below') {\n            positions = belowPositions;\n        }\n        else {\n            positions = [...belowPositions, ...abovePositions];\n        }\n        positionStrategy.withPositions(positions);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getConnectedElement() {\n        if (this.connectedTo) {\n            return this.connectedTo.elementRef;\n        }\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._element;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getPanelWidth() {\n        return this.autocomplete.panelWidth || this._getHostWidth();\n    }\n    /**\n     * Returns the width of the input element, so the panel width can match it.\n     * @private\n     * @return {?}\n     */\n    _getHostWidth() {\n        return this._getConnectedElement().nativeElement.getBoundingClientRect().width;\n    }\n    /**\n     * Resets the active item to -1 so arrow events will activate the\n     * correct options, or to 0 if the consumer opted into it.\n     * @private\n     * @return {?}\n     */\n    _resetActiveItem() {\n        this.autocomplete._keyManager.setActiveItem(this.autocomplete.autoActiveFirstOption ? 0 : -1);\n    }\n    /**\n     * Determines whether the panel can be opened.\n     * @private\n     * @return {?}\n     */\n    _canOpen() {\n        /** @type {?} */\n        const element = this._element.nativeElement;\n        return !element.readOnly && !element.disabled && !this._autocompleteDisabled;\n    }\n    /**\n     * Use defaultView of injected document if available or fallback to global window reference\n     * @private\n     * @return {?}\n     */\n    _getWindow() {\n        var _a;\n        return ((_a = this._document) === null || _a === void 0 ? void 0 : _a.defaultView) || window;\n    }\n}\nMatAutocompleteTrigger.ɵfac = function MatAutocompleteTrigger_Factory(t) { return new (t || MatAutocompleteTrigger)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 9), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.ViewportRuler)); };\nMatAutocompleteTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAutocompleteTrigger, selectors: [[\"input\", \"matAutocomplete\", \"\"], [\"textarea\", \"matAutocomplete\", \"\"]], hostAttrs: [1, \"mat-autocomplete-trigger\"], hostVars: 7, hostBindings: function MatAutocompleteTrigger_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focusin\", function MatAutocompleteTrigger_focusin_HostBindingHandler() { return ctx._handleFocus(); })(\"blur\", function MatAutocompleteTrigger_blur_HostBindingHandler() { return ctx._onTouched(); })(\"input\", function MatAutocompleteTrigger_input_HostBindingHandler($event) { return ctx._handleInput($event); })(\"keydown\", function MatAutocompleteTrigger_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"autocomplete\", ctx.autocompleteAttribute)(\"role\", ctx.autocompleteDisabled ? null : \"combobox\")(\"aria-autocomplete\", ctx.autocompleteDisabled ? null : \"list\")(\"aria-activedescendant\", ctx.panelOpen && ctx.activeOption ? ctx.activeOption.id : null)(\"aria-expanded\", ctx.autocompleteDisabled ? null : ctx.panelOpen.toString())(\"aria-owns\", ctx.autocompleteDisabled || !ctx.panelOpen ? null : ctx.autocomplete == null ? null : ctx.autocomplete.id)(\"aria-haspopup\", !ctx.autocompleteDisabled);\n    } }, inputs: { position: [\"matAutocompletePosition\", \"position\"], autocompleteAttribute: [\"autocomplete\", \"autocompleteAttribute\"], autocompleteDisabled: [\"matAutocompleteDisabled\", \"autocompleteDisabled\"], autocomplete: [\"matAutocomplete\", \"autocomplete\"], connectedTo: [\"matAutocompleteConnectedTo\", \"connectedTo\"] }, exportAs: [\"matAutocompleteTrigger\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_AUTOCOMPLETE_VALUE_ACCESSOR]), ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nMatAutocompleteTrigger.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Overlay },\n    { type: ViewContainerRef },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }, { type: Host }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: ViewportRuler }\n];\nMatAutocompleteTrigger.propDecorators = {\n    autocomplete: [{ type: Input, args: ['matAutocomplete',] }],\n    position: [{ type: Input, args: ['matAutocompletePosition',] }],\n    connectedTo: [{ type: Input, args: ['matAutocompleteConnectedTo',] }],\n    autocompleteAttribute: [{ type: Input, args: ['autocomplete',] }],\n    autocompleteDisabled: [{ type: Input, args: ['matAutocompleteDisabled',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteTrigger, [{\n        type: Directive,\n        args: [{\n                selector: `input[matAutocomplete], textarea[matAutocomplete]`,\n                host: {\n                    'class': 'mat-autocomplete-trigger',\n                    '[attr.autocomplete]': 'autocompleteAttribute',\n                    '[attr.role]': 'autocompleteDisabled ? null : \"combobox\"',\n                    '[attr.aria-autocomplete]': 'autocompleteDisabled ? null : \"list\"',\n                    '[attr.aria-activedescendant]': '(panelOpen && activeOption) ? activeOption.id : null',\n                    '[attr.aria-expanded]': 'autocompleteDisabled ? null : panelOpen.toString()',\n                    '[attr.aria-owns]': '(autocompleteDisabled || !panelOpen) ? null : autocomplete?.id',\n                    '[attr.aria-haspopup]': '!autocompleteDisabled',\n                    // Note: we use `focusin`, as opposed to `focus`, in order to open the panel\n                    // a little earlier. This avoids issues where IE delays the focusing of the input.\n                    '(focusin)': '_handleFocus()',\n                    '(blur)': '_onTouched()',\n                    '(input)': '_handleInput($event)',\n                    '(keydown)': '_handleKeydown($event)'\n                },\n                exportAs: 'matAutocompleteTrigger',\n                providers: [MAT_AUTOCOMPLETE_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.Overlay }, { type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc5.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }, {\n                type: Host\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc4.ViewportRuler }]; }, { position: [{\n            type: Input,\n            args: ['matAutocompletePosition']\n        }], autocompleteAttribute: [{\n            type: Input,\n            args: ['autocomplete']\n        }], autocompleteDisabled: [{\n            type: Input,\n            args: ['matAutocompleteDisabled']\n        }], autocomplete: [{\n            type: Input,\n            args: ['matAutocomplete']\n        }], connectedTo: [{\n            type: Input,\n            args: ['matAutocompleteConnectedTo']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatAutocompleteTrigger.ngAcceptInputType_autocompleteDisabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._portal;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._componentDestroyed;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._autocompleteDisabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._scrollStrategy;\n    /**\n     * Old value of the native input. Used to work around issues with the `input` event on IE.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._previousValue;\n    /**\n     * Strategy that is used to position the panel.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._positionStrategy;\n    /**\n     * Whether or not the label state is being overridden.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._manuallyFloatingLabel;\n    /**\n     * The subscription for closing actions (some are bound to document).\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._closingActionsSubscription;\n    /**\n     * Subscription to viewport size changes.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._viewportSubscription;\n    /**\n     * Whether the autocomplete can open the next time it is focused. Used to prevent a focused,\n     * closed autocomplete from being reopened if the user switches to another browser tab and then\n     * comes back.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._canOpenOnNextFocus;\n    /**\n     * Whether the element is inside of a ShadowRoot component.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._isInsideShadowRoot;\n    /**\n     * Stream of keyboard events that can close the panel.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._closeKeyEventStream;\n    /**\n     * Event handler for when the window is blurred. Needs to be an\n     * arrow function in order to preserve the context.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._windowBlurHandler;\n    /**\n     * `View -> model callback called when value changes`\n     * @type {?}\n     */\n    MatAutocompleteTrigger.prototype._onChange;\n    /**\n     * `View -> model callback called when autocomplete has been touched`\n     * @type {?}\n     */\n    MatAutocompleteTrigger.prototype._onTouched;\n    /**\n     * The autocomplete panel to be attached to this trigger.\n     * @type {?}\n     */\n    MatAutocompleteTrigger.prototype.autocomplete;\n    /**\n     * Position of the autocomplete panel relative to the trigger element. A position of `auto`\n     * will render the panel underneath the trigger if there is enough space for it to fit in\n     * the viewport, otherwise the panel will be shown above it. If the position is set to\n     * `above` or `below`, the panel will always be shown above or below the trigger. no matter\n     * whether it fits completely in the viewport.\n     * @type {?}\n     */\n    MatAutocompleteTrigger.prototype.position;\n    /**\n     * Reference relative to which to position the autocomplete panel.\n     * Defaults to the autocomplete trigger element.\n     * @type {?}\n     */\n    MatAutocompleteTrigger.prototype.connectedTo;\n    /**\n     * `autocomplete` attribute to be set on the input element.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatAutocompleteTrigger.prototype.autocompleteAttribute;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._overlayAttached;\n    /**\n     * Stream of autocomplete option selections.\n     * @type {?}\n     */\n    MatAutocompleteTrigger.prototype.optionSelections;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._viewContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._zone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._formField;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._viewportRuler;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/autocomplete/autocomplete-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatAutocompleteModule {\n}\nMatAutocompleteModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatAutocompleteModule });\nMatAutocompleteModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatAutocompleteModule_Factory(t) { return new (t || MatAutocompleteModule)(); }, providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[MatOptionModule, OverlayModule, MatCommonModule, CommonModule],\n        CdkScrollableModule,\n        MatOptionModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatAutocompleteModule, { declarations: function () { return [MatAutocomplete,\n        MatAutocompleteTrigger,\n        MatAutocompleteOrigin]; }, imports: function () { return [MatOptionModule, OverlayModule, MatCommonModule, CommonModule]; }, exports: function () { return [CdkScrollableModule,\n        MatAutocomplete,\n        MatOptionModule,\n        MatAutocompleteTrigger,\n        MatAutocompleteOrigin,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatOptionModule, OverlayModule, MatCommonModule, CommonModule],\n                exports: [\n                    CdkScrollableModule,\n                    MatAutocomplete,\n                    MatOptionModule,\n                    MatAutocompleteTrigger,\n                    MatAutocompleteOrigin,\n                    MatCommonModule\n                ],\n                declarations: [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin],\n                providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/autocomplete/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AUTOCOMPLETE_OPTION_HEIGHT, AUTOCOMPLETE_PANEL_HEIGHT, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_AUTOCOMPLETE_VALUE_ACCESSOR, MatAutocomplete, MatAutocompleteModule, MatAutocompleteOrigin, MatAutocompleteSelectedEvent, MatAutocompleteTrigger, getMatAutocompleteMissingPanelError };\n\n//# sourceMappingURL=autocomplete.js.map","import { isDevMode, Directive, NgZone, ElementRef, Renderer2, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { mixinDisabled, MatCommonModule } from '@angular/material/core';\nimport { AriaDescriber, A11yModule } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/badge/badge.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nlet nextId = 0;\n// Boilerplate for applying mixins to MatBadge.\n/**\n * \\@docs-private\n */\nclass MatBadgeBase {\n}\n/** @type {?} */\nconst _MatBadgeMixinBase = mixinDisabled(MatBadgeBase);\n/**\n * Directive to display a text badge.\n */\nclass MatBadge extends _MatBadgeMixinBase {\n    /**\n     * @param {?} _ngZone\n     * @param {?} _elementRef\n     * @param {?} _ariaDescriber\n     * @param {?} _renderer\n     * @param {?=} _animationMode\n     */\n    constructor(_ngZone, _elementRef, _ariaDescriber, _renderer, _animationMode) {\n        super();\n        this._ngZone = _ngZone;\n        this._elementRef = _elementRef;\n        this._ariaDescriber = _ariaDescriber;\n        this._renderer = _renderer;\n        this._animationMode = _animationMode;\n        /**\n         * Whether the badge has any content.\n         */\n        this._hasContent = false;\n        this._color = 'primary';\n        this._overlap = true;\n        /**\n         * Position the badge should reside.\n         * Accepts any combination of 'above'|'below' and 'before'|'after'\n         */\n        this.position = 'above after';\n        /**\n         * Size of the badge. Can be 'small', 'medium', or 'large'.\n         */\n        this.size = 'medium';\n        /**\n         * Unique id for the badge\n         */\n        this._id = nextId++;\n        if (isDevMode()) {\n            /** @type {?} */\n            const nativeElement = _elementRef.nativeElement;\n            if (nativeElement.nodeType !== nativeElement.ELEMENT_NODE) {\n                throw Error('matBadge must be attached to an element node.');\n            }\n        }\n    }\n    /**\n     * The color of the badge. Can be `primary`, `accent`, or `warn`.\n     * @return {?}\n     */\n    get color() { return this._color; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set color(value) {\n        this._setColor(value);\n        this._color = value;\n    }\n    /**\n     * Whether the badge should overlap its contents or not\n     * @return {?}\n     */\n    get overlap() { return this._overlap; }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set overlap(val) {\n        this._overlap = coerceBooleanProperty(val);\n    }\n    /**\n     * Message used to describe the decorated element via aria-describedby\n     * @return {?}\n     */\n    get description() { return this._description; }\n    /**\n     * @param {?} newDescription\n     * @return {?}\n     */\n    set description(newDescription) {\n        if (newDescription !== this._description) {\n            /** @type {?} */\n            const badgeElement = this._badgeElement;\n            this._updateHostAriaDescription(newDescription, this._description);\n            this._description = newDescription;\n            if (badgeElement) {\n                newDescription ? badgeElement.setAttribute('aria-label', newDescription) :\n                    badgeElement.removeAttribute('aria-label');\n            }\n        }\n    }\n    /**\n     * Whether the badge is hidden.\n     * @return {?}\n     */\n    get hidden() { return this._hidden; }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set hidden(val) {\n        this._hidden = coerceBooleanProperty(val);\n    }\n    /**\n     * Whether the badge is above the host or not\n     * @return {?}\n     */\n    isAbove() {\n        return this.position.indexOf('below') === -1;\n    }\n    /**\n     * Whether the badge is after the host or not\n     * @return {?}\n     */\n    isAfter() {\n        return this.position.indexOf('before') === -1;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const contentChange = changes['content'];\n        if (contentChange) {\n            /** @type {?} */\n            const value = contentChange.currentValue;\n            this._hasContent = value != null && `${value}`.trim().length > 0;\n            this._updateTextContent();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const badgeElement = this._badgeElement;\n        if (badgeElement) {\n            if (this.description) {\n                this._ariaDescriber.removeDescription(badgeElement, this.description);\n            }\n            // When creating a badge through the Renderer, Angular will keep it in an index.\n            // We have to destroy it ourselves, otherwise it'll be retained in memory.\n            if (this._renderer.destroyNode) {\n                this._renderer.destroyNode(badgeElement);\n            }\n        }\n    }\n    /**\n     * Gets the element into which the badge's content is being rendered.\n     * Undefined if the element hasn't been created (e.g. if the badge doesn't have content).\n     * @return {?}\n     */\n    getBadgeElement() {\n        return this._badgeElement;\n    }\n    /**\n     * Injects a span element into the DOM with the content.\n     * @private\n     * @return {?}\n     */\n    _updateTextContent() {\n        if (!this._badgeElement) {\n            this._badgeElement = this._createBadgeElement();\n        }\n        else {\n            this._badgeElement.textContent = this.content;\n        }\n        return this._badgeElement;\n    }\n    /**\n     * Creates the badge element\n     * @private\n     * @return {?}\n     */\n    _createBadgeElement() {\n        /** @type {?} */\n        const badgeElement = this._renderer.createElement('span');\n        /** @type {?} */\n        const activeClass = 'mat-badge-active';\n        /** @type {?} */\n        const contentClass = 'mat-badge-content';\n        // Clear any existing badges which may have persisted from a server-side render.\n        this._clearExistingBadges(contentClass);\n        badgeElement.setAttribute('id', `mat-badge-content-${this._id}`);\n        badgeElement.classList.add(contentClass);\n        badgeElement.textContent = this.content;\n        if (this._animationMode === 'NoopAnimations') {\n            badgeElement.classList.add('_mat-animation-noopable');\n        }\n        if (this.description) {\n            badgeElement.setAttribute('aria-label', this.description);\n        }\n        this._elementRef.nativeElement.appendChild(badgeElement);\n        // animate in after insertion\n        if (typeof requestAnimationFrame === 'function' && this._animationMode !== 'NoopAnimations') {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                requestAnimationFrame((/**\n                 * @return {?}\n                 */\n                () => {\n                    badgeElement.classList.add(activeClass);\n                }));\n            }));\n        }\n        else {\n            badgeElement.classList.add(activeClass);\n        }\n        return badgeElement;\n    }\n    /**\n     * Sets the aria-label property on the element\n     * @private\n     * @param {?} newDescription\n     * @param {?} oldDescription\n     * @return {?}\n     */\n    _updateHostAriaDescription(newDescription, oldDescription) {\n        // ensure content available before setting label\n        /** @type {?} */\n        const content = this._updateTextContent();\n        if (oldDescription) {\n            this._ariaDescriber.removeDescription(content, oldDescription);\n        }\n        if (newDescription) {\n            this._ariaDescriber.describe(content, newDescription);\n        }\n    }\n    /**\n     * Adds css theme class given the color to the component host\n     * @private\n     * @param {?} colorPalette\n     * @return {?}\n     */\n    _setColor(colorPalette) {\n        if (colorPalette !== this._color) {\n            if (this._color) {\n                this._elementRef.nativeElement.classList.remove(`mat-badge-${this._color}`);\n            }\n            if (colorPalette) {\n                this._elementRef.nativeElement.classList.add(`mat-badge-${colorPalette}`);\n            }\n        }\n    }\n    /**\n     * Clears any existing badges that might be left over from server-side rendering.\n     * @private\n     * @param {?} cssClass\n     * @return {?}\n     */\n    _clearExistingBadges(cssClass) {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        /** @type {?} */\n        let childCount = element.children.length;\n        // Use a reverse while, because we'll be removing elements from the list as we're iterating.\n        while (childCount--) {\n            /** @type {?} */\n            const currentChild = element.children[childCount];\n            if (currentChild.classList.contains(cssClass)) {\n                element.removeChild(currentChild);\n            }\n        }\n    }\n}\nMatBadge.ɵfac = function MatBadge_Factory(t) { return new (t || MatBadge)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.AriaDescriber), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatBadge.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatBadge, selectors: [[\"\", \"matBadge\", \"\"]], hostAttrs: [1, \"mat-badge\"], hostVars: 20, hostBindings: function MatBadge_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-badge-overlap\", ctx.overlap)(\"mat-badge-above\", ctx.isAbove())(\"mat-badge-below\", !ctx.isAbove())(\"mat-badge-before\", !ctx.isAfter())(\"mat-badge-after\", ctx.isAfter())(\"mat-badge-small\", ctx.size === \"small\")(\"mat-badge-medium\", ctx.size === \"medium\")(\"mat-badge-large\", ctx.size === \"large\")(\"mat-badge-hidden\", ctx.hidden || !ctx._hasContent)(\"mat-badge-disabled\", ctx.disabled);\n    } }, inputs: { disabled: [\"matBadgeDisabled\", \"disabled\"], position: [\"matBadgePosition\", \"position\"], size: [\"matBadgeSize\", \"size\"], color: [\"matBadgeColor\", \"color\"], overlap: [\"matBadgeOverlap\", \"overlap\"], description: [\"matBadgeDescription\", \"description\"], hidden: [\"matBadgeHidden\", \"hidden\"], content: [\"matBadge\", \"content\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nMatBadge.ctorParameters = () => [\n    { type: NgZone },\n    { type: ElementRef },\n    { type: AriaDescriber },\n    { type: Renderer2 },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatBadge.propDecorators = {\n    color: [{ type: Input, args: ['matBadgeColor',] }],\n    overlap: [{ type: Input, args: ['matBadgeOverlap',] }],\n    position: [{ type: Input, args: ['matBadgePosition',] }],\n    content: [{ type: Input, args: ['matBadge',] }],\n    description: [{ type: Input, args: ['matBadgeDescription',] }],\n    size: [{ type: Input, args: ['matBadgeSize',] }],\n    hidden: [{ type: Input, args: ['matBadgeHidden',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatBadge, [{\n        type: Directive,\n        args: [{\n                selector: '[matBadge]',\n                inputs: ['disabled: matBadgeDisabled'],\n                host: {\n                    'class': 'mat-badge',\n                    '[class.mat-badge-overlap]': 'overlap',\n                    '[class.mat-badge-above]': 'isAbove()',\n                    '[class.mat-badge-below]': '!isAbove()',\n                    '[class.mat-badge-before]': '!isAfter()',\n                    '[class.mat-badge-after]': 'isAfter()',\n                    '[class.mat-badge-small]': 'size === \"small\"',\n                    '[class.mat-badge-medium]': 'size === \"medium\"',\n                    '[class.mat-badge-large]': 'size === \"large\"',\n                    '[class.mat-badge-hidden]': 'hidden || !_hasContent',\n                    '[class.mat-badge-disabled]': 'disabled'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.AriaDescriber }, { type: ɵngcc0.Renderer2 }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { position: [{\n            type: Input,\n            args: ['matBadgePosition']\n        }], size: [{\n            type: Input,\n            args: ['matBadgeSize']\n        }], color: [{\n            type: Input,\n            args: ['matBadgeColor']\n        }], overlap: [{\n            type: Input,\n            args: ['matBadgeOverlap']\n        }], description: [{\n            type: Input,\n            args: ['matBadgeDescription']\n        }], hidden: [{\n            type: Input,\n            args: ['matBadgeHidden']\n        }], content: [{\n            type: Input,\n            args: ['matBadge']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatBadge.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatBadge.ngAcceptInputType_hidden;\n    /** @type {?} */\n    MatBadge.ngAcceptInputType_overlap;\n    /**\n     * Whether the badge has any content.\n     * @type {?}\n     */\n    MatBadge.prototype._hasContent;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBadge.prototype._color;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBadge.prototype._overlap;\n    /**\n     * Position the badge should reside.\n     * Accepts any combination of 'above'|'below' and 'before'|'after'\n     * @type {?}\n     */\n    MatBadge.prototype.position;\n    /**\n     * The content for the badge\n     * @type {?}\n     */\n    MatBadge.prototype.content;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBadge.prototype._description;\n    /**\n     * Size of the badge. Can be 'small', 'medium', or 'large'.\n     * @type {?}\n     */\n    MatBadge.prototype.size;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBadge.prototype._hidden;\n    /**\n     * Unique id for the badge\n     * @type {?}\n     */\n    MatBadge.prototype._id;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBadge.prototype._badgeElement;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBadge.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBadge.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBadge.prototype._ariaDescriber;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBadge.prototype._renderer;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBadge.prototype._animationMode;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/badge/badge-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatBadgeModule {\n}\nMatBadgeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatBadgeModule });\nMatBadgeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatBadgeModule_Factory(t) { return new (t || MatBadgeModule)(); }, imports: [[\n            A11yModule,\n            MatCommonModule\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatBadgeModule, { declarations: function () { return [MatBadge]; }, imports: function () { return [A11yModule,\n        MatCommonModule]; }, exports: function () { return [MatBadge,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatBadgeModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    A11yModule,\n                    MatCommonModule\n                ],\n                exports: [MatBadge, MatCommonModule],\n                declarations: [MatBadge]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/badge/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatBadge, MatBadgeModule };\n\n//# sourceMappingURL=badge.js.map","import { OverlayModule, OverlayConfig, Overlay } from '@angular/cdk/overlay';\nimport { BasePortalOutlet, CdkPortalOutlet, PortalModule, TemplatePortal, ComponentPortal, PortalInjector } from '@angular/cdk/portal';\nimport { InjectionToken, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, ChangeDetectorRef, Optional, Inject, ViewChild, NgModule, TemplateRef, Injectable, Injector, SkipSelf, ɵɵdefineInjectable, ɵɵinject, INJECTOR } from '@angular/core';\nimport { AnimationDurations, AnimationCurves, MatCommonModule } from '@angular/material/core';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { DOCUMENT, Location } from '@angular/common';\nimport { FocusTrapFactory } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Subject, merge, of } from 'rxjs';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { filter, take } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/bottom-sheet/bottom-sheet-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to access the data that was passed in to a bottom sheet.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/layout';\nimport * as ɵngcc3 from '@angular/cdk/portal';\nimport * as ɵngcc4 from '@angular/cdk/overlay';\nimport * as ɵngcc5 from '@angular/common';\n\nfunction MatBottomSheetContainer_ng_template_0_Template(rf, ctx) { }\nconst MAT_BOTTOM_SHEET_DATA = new InjectionToken('MatBottomSheetData');\n/**\n * Configuration used when opening a bottom sheet.\n * @template D\n */\nclass MatBottomSheetConfig {\n    constructor() {\n        /**\n         * Data being injected into the child component.\n         */\n        this.data = null;\n        /**\n         * Whether the bottom sheet has a backdrop.\n         */\n        this.hasBackdrop = true;\n        /**\n         * Whether the user can use escape or clicking outside to close the bottom sheet.\n         */\n        this.disableClose = false;\n        /**\n         * Aria label to assign to the bottom sheet element.\n         */\n        this.ariaLabel = null;\n        /**\n         * Whether the bottom sheet should close when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.closeOnNavigation = true;\n        // Note that this is disabled by default, because while the a11y recommendations are to focus\n        // the first focusable element, doing so prevents screen readers from reading out the\n        // rest of the bottom sheet content.\n        /**\n         * Whether the bottom sheet should focus the first focusable element on open.\n         */\n        this.autoFocus = false;\n        /**\n         * Whether the bottom sheet should restore focus to the\n         * previously-focused element, after it's closed.\n         */\n        this.restoreFocus = true;\n    }\n}\nif (false) {\n    /**\n     * The view container to place the overlay for the bottom sheet into.\n     * @type {?}\n     */\n    MatBottomSheetConfig.prototype.viewContainerRef;\n    /**\n     * Extra CSS classes to be added to the bottom sheet container.\n     * @type {?}\n     */\n    MatBottomSheetConfig.prototype.panelClass;\n    /**\n     * Text layout direction for the bottom sheet.\n     * @type {?}\n     */\n    MatBottomSheetConfig.prototype.direction;\n    /**\n     * Data being injected into the child component.\n     * @type {?}\n     */\n    MatBottomSheetConfig.prototype.data;\n    /**\n     * Whether the bottom sheet has a backdrop.\n     * @type {?}\n     */\n    MatBottomSheetConfig.prototype.hasBackdrop;\n    /**\n     * Custom class for the backdrop.\n     * @type {?}\n     */\n    MatBottomSheetConfig.prototype.backdropClass;\n    /**\n     * Whether the user can use escape or clicking outside to close the bottom sheet.\n     * @type {?}\n     */\n    MatBottomSheetConfig.prototype.disableClose;\n    /**\n     * Aria label to assign to the bottom sheet element.\n     * @type {?}\n     */\n    MatBottomSheetConfig.prototype.ariaLabel;\n    /**\n     * Whether the bottom sheet should close when the user goes backwards/forwards in history.\n     * Note that this usually doesn't include clicking on links (unless the user is using\n     * the `HashLocationStrategy`).\n     * @type {?}\n     */\n    MatBottomSheetConfig.prototype.closeOnNavigation;\n    /**\n     * Whether the bottom sheet should focus the first focusable element on open.\n     * @type {?}\n     */\n    MatBottomSheetConfig.prototype.autoFocus;\n    /**\n     * Whether the bottom sheet should restore focus to the\n     * previously-focused element, after it's closed.\n     * @type {?}\n     */\n    MatBottomSheetConfig.prototype.restoreFocus;\n    /**\n     * Scroll strategy to be used for the bottom sheet.\n     * @type {?}\n     */\n    MatBottomSheetConfig.prototype.scrollStrategy;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/bottom-sheet/bottom-sheet-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material bottom sheet.\n * @type {?}\n */\nconst matBottomSheetAnimations = {\n    /**\n     * Animation that shows and hides a bottom sheet.\n     */\n    bottomSheetState: trigger('state', [\n        state('void, hidden', style({ transform: 'translateY(100%)' })),\n        state('visible', style({ transform: 'translateY(0%)' })),\n        transition('visible => void, visible => hidden', animate(`${AnimationDurations.COMPLEX} ${AnimationCurves.ACCELERATION_CURVE}`)),\n        transition('void => visible', animate(`${AnimationDurations.EXITING} ${AnimationCurves.DECELERATION_CURVE}`)),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/bottom-sheet/bottom-sheet-container.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO(crisbeto): consolidate some logic between this, MatDialog and MatSnackBar\n/**\n * Internal component that wraps user-provided bottom sheet content.\n * \\@docs-private\n */\nclass MatBottomSheetContainer extends BasePortalOutlet {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} _focusTrapFactory\n     * @param {?} breakpointObserver\n     * @param {?} document\n     * @param {?} bottomSheetConfig\n     */\n    constructor(_elementRef, _changeDetectorRef, _focusTrapFactory, breakpointObserver, document, bottomSheetConfig) {\n        super();\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this.bottomSheetConfig = bottomSheetConfig;\n        /**\n         * The state of the bottom sheet animations.\n         */\n        this._animationState = 'void';\n        /**\n         * Emits whenever the state of the animation changes.\n         */\n        this._animationStateChanged = new EventEmitter();\n        /**\n         * Element that was focused before the bottom sheet was opened.\n         */\n        this._elementFocusedBeforeOpened = null;\n        /**\n         * Attaches a DOM portal to the bottom sheet container.\n         * @deprecated To be turned into a method.\n         * \\@breaking-change 10.0.0\n         */\n        this.attachDomPortal = (/**\n         * @param {?} portal\n         * @return {?}\n         */\n        (portal) => {\n            this._validatePortalAttached();\n            this._setPanelClass();\n            this._savePreviouslyFocusedElement();\n            return this._portalOutlet.attachDomPortal(portal);\n        });\n        this._document = document;\n        this._breakpointSubscription = breakpointObserver\n            .observe([Breakpoints.Medium, Breakpoints.Large, Breakpoints.XLarge])\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._toggleClass('mat-bottom-sheet-container-medium', breakpointObserver.isMatched(Breakpoints.Medium));\n            this._toggleClass('mat-bottom-sheet-container-large', breakpointObserver.isMatched(Breakpoints.Large));\n            this._toggleClass('mat-bottom-sheet-container-xlarge', breakpointObserver.isMatched(Breakpoints.XLarge));\n        }));\n    }\n    /**\n     * Attach a component portal as content to this bottom sheet container.\n     * @template T\n     * @param {?} portal\n     * @return {?}\n     */\n    attachComponentPortal(portal) {\n        this._validatePortalAttached();\n        this._setPanelClass();\n        this._savePreviouslyFocusedElement();\n        return this._portalOutlet.attachComponentPortal(portal);\n    }\n    /**\n     * Attach a template portal as content to this bottom sheet container.\n     * @template C\n     * @param {?} portal\n     * @return {?}\n     */\n    attachTemplatePortal(portal) {\n        this._validatePortalAttached();\n        this._setPanelClass();\n        this._savePreviouslyFocusedElement();\n        return this._portalOutlet.attachTemplatePortal(portal);\n    }\n    /**\n     * Begin animation of bottom sheet entrance into view.\n     * @return {?}\n     */\n    enter() {\n        if (!this._destroyed) {\n            this._animationState = 'visible';\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /**\n     * Begin animation of the bottom sheet exiting from view.\n     * @return {?}\n     */\n    exit() {\n        if (!this._destroyed) {\n            this._animationState = 'hidden';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._breakpointSubscription.unsubscribe();\n        this._destroyed = true;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onAnimationDone(event) {\n        if (event.toState === 'hidden') {\n            this._restoreFocus();\n        }\n        else if (event.toState === 'visible') {\n            this._trapFocus();\n        }\n        this._animationStateChanged.emit(event);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onAnimationStart(event) {\n        this._animationStateChanged.emit(event);\n    }\n    /**\n     * @private\n     * @param {?} cssClass\n     * @param {?} add\n     * @return {?}\n     */\n    _toggleClass(cssClass, add) {\n        /** @type {?} */\n        const classList = this._elementRef.nativeElement.classList;\n        add ? classList.add(cssClass) : classList.remove(cssClass);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _validatePortalAttached() {\n        if (this._portalOutlet.hasAttached()) {\n            throw Error('Attempting to attach bottom sheet content after content is already attached');\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _setPanelClass() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        /** @type {?} */\n        const panelClass = this.bottomSheetConfig.panelClass;\n        if (Array.isArray(panelClass)) {\n            // Note that we can't use a spread here, because IE doesn't support multiple arguments.\n            panelClass.forEach((/**\n             * @param {?} cssClass\n             * @return {?}\n             */\n            cssClass => element.classList.add(cssClass)));\n        }\n        else if (panelClass) {\n            element.classList.add(panelClass);\n        }\n    }\n    /**\n     * Moves the focus inside the focus trap.\n     * @private\n     * @return {?}\n     */\n    _trapFocus() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        if (!this._focusTrap) {\n            this._focusTrap = this._focusTrapFactory.create(element);\n        }\n        if (this.bottomSheetConfig.autoFocus) {\n            this._focusTrap.focusInitialElementWhenReady();\n        }\n        else {\n            /** @type {?} */\n            const activeElement = this._document.activeElement;\n            // Otherwise ensure that focus is on the container. It's possible that a different\n            // component tried to move focus while the open animation was running. See:\n            // https://github.com/angular/components/issues/16215. Note that we only want to do this\n            // if the focus isn't inside the bottom sheet already, because it's possible that the\n            // consumer turned off `autoFocus` in order to move focus themselves.\n            if (activeElement !== element && !element.contains(activeElement)) {\n                element.focus();\n            }\n        }\n    }\n    /**\n     * Restores focus to the element that was focused before the bottom sheet was opened.\n     * @private\n     * @return {?}\n     */\n    _restoreFocus() {\n        /** @type {?} */\n        const toFocus = this._elementFocusedBeforeOpened;\n        // We need the extra check, because IE can set the `activeElement` to null in some cases.\n        if (this.bottomSheetConfig.restoreFocus && toFocus && typeof toFocus.focus === 'function') {\n            /** @type {?} */\n            const activeElement = this._document.activeElement;\n            /** @type {?} */\n            const element = this._elementRef.nativeElement;\n            // Make sure that focus is still inside the bottom sheet or is on the body (usually because a\n            // non-focusable element like the backdrop was clicked) before moving it. It's possible that\n            // the consumer moved it themselves before the animation was done, in which case we shouldn't\n            // do anything.\n            if (!activeElement || activeElement === this._document.body || activeElement === element ||\n                element.contains(activeElement)) {\n                toFocus.focus();\n            }\n        }\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n    }\n    /**\n     * Saves a reference to the element that was focused before the bottom sheet was opened.\n     * @private\n     * @return {?}\n     */\n    _savePreviouslyFocusedElement() {\n        this._elementFocusedBeforeOpened = (/** @type {?} */ (this._document.activeElement));\n        // The `focus` method isn't available during server-side rendering.\n        if (this._elementRef.nativeElement.focus) {\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => this._elementRef.nativeElement.focus()));\n        }\n    }\n}\nMatBottomSheetContainer.ɵfac = function MatBottomSheetContainer_Factory(t) { return new (t || MatBottomSheetContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.BreakpointObserver), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(MatBottomSheetConfig)); };\nMatBottomSheetContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatBottomSheetContainer, selectors: [[\"mat-bottom-sheet-container\"]], viewQuery: function MatBottomSheetContainer_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(CdkPortalOutlet, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalOutlet = _t.first);\n    } }, hostAttrs: [\"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-modal\", \"true\", 1, \"mat-bottom-sheet-container\"], hostVars: 2, hostBindings: function MatBottomSheetContainer_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵcomponentHostSyntheticListener(\"@state.start\", function MatBottomSheetContainer_animation_state_start_HostBindingHandler($event) { return ctx._onAnimationStart($event); })(\"@state.done\", function MatBottomSheetContainer_animation_state_done_HostBindingHandler($event) { return ctx._onAnimationDone($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.bottomSheetConfig == null ? null : ctx.bottomSheetConfig.ariaLabel);\n        ɵngcc0.ɵɵupdateSyntheticHostBinding(\"@state\", ctx._animationState);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkPortalOutlet\", \"\"]], template: function MatBottomSheetContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatBottomSheetContainer_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n    } }, directives: [ɵngcc3.CdkPortalOutlet], styles: [\".mat-bottom-sheet-container{padding:8px 16px;min-width:100vw;box-sizing:border-box;display:block;outline:0;max-height:80vh;overflow:auto}.cdk-high-contrast-active .mat-bottom-sheet-container{outline:1px solid}.mat-bottom-sheet-container-xlarge,.mat-bottom-sheet-container-large,.mat-bottom-sheet-container-medium{border-top-left-radius:4px;border-top-right-radius:4px}.mat-bottom-sheet-container-medium{min-width:384px;max-width:calc(100vw - 128px)}.mat-bottom-sheet-container-large{min-width:512px;max-width:calc(100vw - 256px)}.mat-bottom-sheet-container-xlarge{min-width:576px;max-width:calc(100vw - 384px)}\\n\"], encapsulation: 2, data: { animation: [matBottomSheetAnimations.bottomSheetState] }, changeDetection: 0 });\n/** @nocollapse */\nMatBottomSheetContainer.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusTrapFactory },\n    { type: BreakpointObserver },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: MatBottomSheetConfig }\n];\nMatBottomSheetContainer.propDecorators = {\n    _portalOutlet: [{ type: ViewChild, args: [CdkPortalOutlet, { static: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatBottomSheetContainer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-bottom-sheet-container',\n                template: \"<ng-template cdkPortalOutlet></ng-template>\\r\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                animations: [matBottomSheetAnimations.bottomSheetState],\n                host: {\n                    'class': 'mat-bottom-sheet-container',\n                    'tabindex': '-1',\n                    'role': 'dialog',\n                    'aria-modal': 'true',\n                    '[attr.aria-label]': 'bottomSheetConfig?.ariaLabel',\n                    '[@state]': '_animationState',\n                    '(@state.start)': '_onAnimationStart($event)',\n                    '(@state.done)': '_onAnimationDone($event)'\n                },\n                styles: [\".mat-bottom-sheet-container{padding:8px 16px;min-width:100vw;box-sizing:border-box;display:block;outline:0;max-height:80vh;overflow:auto}.cdk-high-contrast-active .mat-bottom-sheet-container{outline:1px solid}.mat-bottom-sheet-container-xlarge,.mat-bottom-sheet-container-large,.mat-bottom-sheet-container-medium{border-top-left-radius:4px;border-top-right-radius:4px}.mat-bottom-sheet-container-medium{min-width:384px;max-width:calc(100vw - 128px)}.mat-bottom-sheet-container-large{min-width:512px;max-width:calc(100vw - 256px)}.mat-bottom-sheet-container-xlarge{min-width:576px;max-width:calc(100vw - 384px)}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusTrapFactory }, { type: ɵngcc2.BreakpointObserver }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: MatBottomSheetConfig }]; }, { _portalOutlet: [{\n            type: ViewChild,\n            args: [CdkPortalOutlet, { static: true }]\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBottomSheetContainer.prototype._breakpointSubscription;\n    /**\n     * The portal outlet inside of this container into which the content will be loaded.\n     * @type {?}\n     */\n    MatBottomSheetContainer.prototype._portalOutlet;\n    /**\n     * The state of the bottom sheet animations.\n     * @type {?}\n     */\n    MatBottomSheetContainer.prototype._animationState;\n    /**\n     * Emits whenever the state of the animation changes.\n     * @type {?}\n     */\n    MatBottomSheetContainer.prototype._animationStateChanged;\n    /**\n     * The class that traps and manages focus within the bottom sheet.\n     * @type {?}\n     * @private\n     */\n    MatBottomSheetContainer.prototype._focusTrap;\n    /**\n     * Element that was focused before the bottom sheet was opened.\n     * @type {?}\n     * @private\n     */\n    MatBottomSheetContainer.prototype._elementFocusedBeforeOpened;\n    /**\n     * Server-side rendering-compatible reference to the global document object.\n     * @type {?}\n     * @private\n     */\n    MatBottomSheetContainer.prototype._document;\n    /**\n     * Whether the component has been destroyed.\n     * @type {?}\n     * @private\n     */\n    MatBottomSheetContainer.prototype._destroyed;\n    /**\n     * Attaches a DOM portal to the bottom sheet container.\n     * @deprecated To be turned into a method.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    MatBottomSheetContainer.prototype.attachDomPortal;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBottomSheetContainer.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBottomSheetContainer.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBottomSheetContainer.prototype._focusTrapFactory;\n    /**\n     * The bottom sheet configuration.\n     * @type {?}\n     */\n    MatBottomSheetContainer.prototype.bottomSheetConfig;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/bottom-sheet/bottom-sheet-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatBottomSheetModule {\n}\nMatBottomSheetModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatBottomSheetModule });\nMatBottomSheetModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatBottomSheetModule_Factory(t) { return new (t || MatBottomSheetModule)(); }, imports: [[\n            OverlayModule,\n            MatCommonModule,\n            PortalModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatBottomSheetModule, { declarations: function () { return [MatBottomSheetContainer]; }, imports: function () { return [OverlayModule,\n        MatCommonModule,\n        PortalModule]; }, exports: function () { return [MatBottomSheetContainer,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatBottomSheetModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    OverlayModule,\n                    MatCommonModule,\n                    PortalModule,\n                ],\n                exports: [MatBottomSheetContainer, MatCommonModule],\n                declarations: [MatBottomSheetContainer],\n                entryComponents: [MatBottomSheetContainer]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/bottom-sheet/bottom-sheet-ref.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Reference to a bottom sheet dispatched from the bottom sheet service.\n * @template T, R\n */\nclass MatBottomSheetRef {\n    /**\n     * @param {?} containerInstance\n     * @param {?} _overlayRef\n     * @param {?=} _location\n     */\n    constructor(containerInstance, _overlayRef, \n    // @breaking-change 8.0.0 `_location` parameter to be removed.\n    _location) {\n        this._overlayRef = _overlayRef;\n        /**\n         * Subject for notifying the user that the bottom sheet has been dismissed.\n         */\n        this._afterDismissed = new Subject();\n        /**\n         * Subject for notifying the user that the bottom sheet has opened and appeared.\n         */\n        this._afterOpened = new Subject();\n        this.containerInstance = containerInstance;\n        this.disableClose = containerInstance.bottomSheetConfig.disableClose;\n        // Emit when opening animation completes\n        containerInstance._animationStateChanged.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => event.phaseName === 'done' && event.toState === 'visible')), take(1))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        }));\n        // Dispose overlay when closing animation is complete\n        containerInstance._animationStateChanged\n            .pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => event.phaseName === 'done' && event.toState === 'hidden')), take(1))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            clearTimeout(this._closeFallbackTimeout);\n            _overlayRef.dispose();\n        }));\n        _overlayRef.detachments().pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._afterDismissed.next(this._result);\n            this._afterDismissed.complete();\n        }));\n        merge(_overlayRef.backdropClick(), _overlayRef.keydownEvents().pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => event.keyCode === ESCAPE)))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (!this.disableClose &&\n                (event.type !== 'keydown' || !hasModifierKey((/** @type {?} */ (event))))) {\n                event.preventDefault();\n                this.dismiss();\n            }\n        }));\n    }\n    /**\n     * Dismisses the bottom sheet.\n     * @param {?=} result Data to be passed back to the bottom sheet opener.\n     * @return {?}\n     */\n    dismiss(result) {\n        if (!this._afterDismissed.closed) {\n            // Transition the backdrop in parallel to the bottom sheet.\n            this.containerInstance._animationStateChanged.pipe(filter((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => event.phaseName === 'start')), take(1)).subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                // The logic that disposes of the overlay depends on the exit animation completing, however\n                // it isn't guaranteed if the parent view is destroyed while it's running. Add a fallback\n                // timeout which will clean everything up if the animation hasn't fired within the specified\n                // amount of time plus 100ms. We don't need to run this outside the NgZone, because for the\n                // vast majority of cases the timeout will have been cleared before it has fired.\n                this._closeFallbackTimeout = setTimeout((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._overlayRef.dispose();\n                }), event.totalTime + 100);\n                this._overlayRef.detachBackdrop();\n            }));\n            this._result = result;\n            this.containerInstance.exit();\n        }\n    }\n    /**\n     * Gets an observable that is notified when the bottom sheet is finished closing.\n     * @return {?}\n     */\n    afterDismissed() {\n        return this._afterDismissed.asObservable();\n    }\n    /**\n     * Gets an observable that is notified when the bottom sheet has opened and appeared.\n     * @return {?}\n     */\n    afterOpened() {\n        return this._afterOpened.asObservable();\n    }\n    /**\n     * Gets an observable that emits when the overlay's backdrop has been clicked.\n     * @return {?}\n     */\n    backdropClick() {\n        return this._overlayRef.backdropClick();\n    }\n    /**\n     * Gets an observable that emits when keydown events are targeted on the overlay.\n     * @return {?}\n     */\n    keydownEvents() {\n        return this._overlayRef.keydownEvents();\n    }\n}\nif (false) {\n    /**\n     * Instance of the component making up the content of the bottom sheet.\n     * @type {?}\n     */\n    MatBottomSheetRef.prototype.instance;\n    /**\n     * Instance of the component into which the bottom sheet content is projected.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatBottomSheetRef.prototype.containerInstance;\n    /**\n     * Whether the user is allowed to close the bottom sheet.\n     * @type {?}\n     */\n    MatBottomSheetRef.prototype.disableClose;\n    /**\n     * Subject for notifying the user that the bottom sheet has been dismissed.\n     * @type {?}\n     * @private\n     */\n    MatBottomSheetRef.prototype._afterDismissed;\n    /**\n     * Subject for notifying the user that the bottom sheet has opened and appeared.\n     * @type {?}\n     * @private\n     */\n    MatBottomSheetRef.prototype._afterOpened;\n    /**\n     * Result to be passed down to the `afterDismissed` stream.\n     * @type {?}\n     * @private\n     */\n    MatBottomSheetRef.prototype._result;\n    /**\n     * Handle to the timeout that's running as a fallback in case the exit animation doesn't fire.\n     * @type {?}\n     * @private\n     */\n    MatBottomSheetRef.prototype._closeFallbackTimeout;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBottomSheetRef.prototype._overlayRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/bottom-sheet/bottom-sheet.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to specify default bottom sheet options.\n * @type {?}\n */\nconst MAT_BOTTOM_SHEET_DEFAULT_OPTIONS = new InjectionToken('mat-bottom-sheet-default-options');\n/**\n * Service to trigger Material Design bottom sheets.\n */\nclass MatBottomSheet {\n    /**\n     * @param {?} _overlay\n     * @param {?} _injector\n     * @param {?} _parentBottomSheet\n     * @param {?=} _location\n     * @param {?=} _defaultOptions\n     */\n    constructor(_overlay, _injector, _parentBottomSheet, _location, _defaultOptions) {\n        this._overlay = _overlay;\n        this._injector = _injector;\n        this._parentBottomSheet = _parentBottomSheet;\n        this._location = _location;\n        this._defaultOptions = _defaultOptions;\n        this._bottomSheetRefAtThisLevel = null;\n    }\n    /**\n     * Reference to the currently opened bottom sheet.\n     * @return {?}\n     */\n    get _openedBottomSheetRef() {\n        /** @type {?} */\n        const parent = this._parentBottomSheet;\n        return parent ? parent._openedBottomSheetRef : this._bottomSheetRefAtThisLevel;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set _openedBottomSheetRef(value) {\n        if (this._parentBottomSheet) {\n            this._parentBottomSheet._openedBottomSheetRef = value;\n        }\n        else {\n            this._bottomSheetRefAtThisLevel = value;\n        }\n    }\n    /**\n     * @template T, D, R\n     * @param {?} componentOrTemplateRef\n     * @param {?=} config\n     * @return {?}\n     */\n    open(componentOrTemplateRef, config) {\n        /** @type {?} */\n        const _config = _applyConfigDefaults(this._defaultOptions || new MatBottomSheetConfig(), config);\n        /** @type {?} */\n        const overlayRef = this._createOverlay(_config);\n        /** @type {?} */\n        const container = this._attachContainer(overlayRef, _config);\n        /** @type {?} */\n        const ref = new MatBottomSheetRef(container, overlayRef, this._location);\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            container.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, (/** @type {?} */ (null)), (/** @type {?} */ ({\n                $implicit: _config.data,\n                bottomSheetRef: ref\n            }))));\n        }\n        else {\n            /** @type {?} */\n            const portal = new ComponentPortal(componentOrTemplateRef, undefined, this._createInjector(_config, ref));\n            /** @type {?} */\n            const contentRef = container.attachComponentPortal(portal);\n            ref.instance = contentRef.instance;\n        }\n        // When the bottom sheet is dismissed, clear the reference to it.\n        ref.afterDismissed().subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // Clear the bottom sheet ref if it hasn't already been replaced by a newer one.\n            if (this._openedBottomSheetRef == ref) {\n                this._openedBottomSheetRef = null;\n            }\n        }));\n        if (this._openedBottomSheetRef) {\n            // If a bottom sheet is already in view, dismiss it and enter the\n            // new bottom sheet after exit animation is complete.\n            this._openedBottomSheetRef.afterDismissed().subscribe((/**\n             * @return {?}\n             */\n            () => ref.containerInstance.enter()));\n            this._openedBottomSheetRef.dismiss();\n        }\n        else {\n            // If no bottom sheet is in view, enter the new bottom sheet.\n            ref.containerInstance.enter();\n        }\n        this._openedBottomSheetRef = ref;\n        return ref;\n    }\n    /**\n     * Dismisses the currently-visible bottom sheet.\n     * @template R\n     * @param {?=} result Data to pass to the bottom sheet instance.\n     * @return {?}\n     */\n    dismiss(result) {\n        if (this._openedBottomSheetRef) {\n            this._openedBottomSheetRef.dismiss(result);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._bottomSheetRefAtThisLevel) {\n            this._bottomSheetRefAtThisLevel.dismiss();\n        }\n    }\n    /**\n     * Attaches the bottom sheet container component to the overlay.\n     * @private\n     * @param {?} overlayRef\n     * @param {?} config\n     * @return {?}\n     */\n    _attachContainer(overlayRef, config) {\n        /** @type {?} */\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        /** @type {?} */\n        const injector = new PortalInjector(userInjector || this._injector, new WeakMap([\n            [MatBottomSheetConfig, config]\n        ]));\n        /** @type {?} */\n        const containerPortal = new ComponentPortal(MatBottomSheetContainer, config.viewContainerRef, injector);\n        /** @type {?} */\n        const containerRef = overlayRef.attach(containerPortal);\n        return containerRef.instance;\n    }\n    /**\n     * Creates a new overlay and places it in the correct location.\n     * @private\n     * @param {?} config The user-specified bottom sheet config.\n     * @return {?}\n     */\n    _createOverlay(config) {\n        /** @type {?} */\n        const overlayConfig = new OverlayConfig({\n            direction: config.direction,\n            hasBackdrop: config.hasBackdrop,\n            disposeOnNavigation: config.closeOnNavigation,\n            maxWidth: '100%',\n            scrollStrategy: config.scrollStrategy || this._overlay.scrollStrategies.block(),\n            positionStrategy: this._overlay.position().global().centerHorizontally().bottom('0')\n        });\n        if (config.backdropClass) {\n            overlayConfig.backdropClass = config.backdropClass;\n        }\n        return this._overlay.create(overlayConfig);\n    }\n    /**\n     * Creates an injector to be used inside of a bottom sheet component.\n     * @private\n     * @template T\n     * @param {?} config Config that was used to create the bottom sheet.\n     * @param {?} bottomSheetRef Reference to the bottom sheet.\n     * @return {?}\n     */\n    _createInjector(config, bottomSheetRef) {\n        /** @type {?} */\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        /** @type {?} */\n        const injectionTokens = new WeakMap([\n            [MatBottomSheetRef, bottomSheetRef],\n            [MAT_BOTTOM_SHEET_DATA, config.data]\n        ]);\n        if (config.direction &&\n            (!userInjector || !userInjector.get(Directionality, null))) {\n            injectionTokens.set(Directionality, {\n                value: config.direction,\n                change: of()\n            });\n        }\n        return new PortalInjector(userInjector || this._injector, injectionTokens);\n    }\n}\nMatBottomSheet.ɵfac = function MatBottomSheet_Factory(t) { return new (t || MatBottomSheet)(ɵngcc0.ɵɵinject(ɵngcc4.Overlay), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(MatBottomSheet, 12), ɵngcc0.ɵɵinject(ɵngcc5.Location, 8), ɵngcc0.ɵɵinject(MAT_BOTTOM_SHEET_DEFAULT_OPTIONS, 8)); };\n/** @nocollapse */\nMatBottomSheet.ctorParameters = () => [\n    { type: Overlay },\n    { type: Injector },\n    { type: MatBottomSheet, decorators: [{ type: Optional }, { type: SkipSelf }] },\n    { type: Location, decorators: [{ type: Optional }] },\n    { type: MatBottomSheetConfig, decorators: [{ type: Optional }, { type: Inject, args: [MAT_BOTTOM_SHEET_DEFAULT_OPTIONS,] }] }\n];\n/** @nocollapse */ MatBottomSheet.ɵprov = ɵɵdefineInjectable({ factory: function MatBottomSheet_Factory() { return new MatBottomSheet(ɵɵinject(Overlay), ɵɵinject(INJECTOR), ɵɵinject(MatBottomSheet, 12), ɵɵinject(Location, 8), ɵɵinject(MAT_BOTTOM_SHEET_DEFAULT_OPTIONS, 8)); }, token: MatBottomSheet, providedIn: MatBottomSheetModule });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatBottomSheet, [{\n        type: Injectable,\n        args: [{ providedIn: MatBottomSheetModule }]\n    }], function () { return [{ type: ɵngcc4.Overlay }, { type: ɵngcc0.Injector }, { type: MatBottomSheet, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: ɵngcc5.Location, decorators: [{\n                type: Optional\n            }] }, { type: MatBottomSheetConfig, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_BOTTOM_SHEET_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBottomSheet.prototype._bottomSheetRefAtThisLevel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBottomSheet.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBottomSheet.prototype._injector;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBottomSheet.prototype._parentBottomSheet;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBottomSheet.prototype._location;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBottomSheet.prototype._defaultOptions;\n}\n/**\n * Applies default options to the bottom sheet config.\n * @param {?} defaults Object containing the default values to which to fall back.\n * @param {?=} config The configuration to which the defaults will be applied.\n * @return {?} The new configuration object with defaults applied.\n */\nfunction _applyConfigDefaults(defaults, config) {\n    return Object.assign(Object.assign({}, defaults), config);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/bottom-sheet/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_BOTTOM_SHEET_DATA, MAT_BOTTOM_SHEET_DEFAULT_OPTIONS, MatBottomSheet, MatBottomSheetConfig, MatBottomSheetContainer, MatBottomSheetModule, MatBottomSheetRef, matBottomSheetAnimations };\n\n//# sourceMappingURL=bottom-sheet.js.map","import { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { InjectionToken, forwardRef, EventEmitter, Directive, ChangeDetectorRef, Optional, Inject, ContentChildren, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Attribute, ViewChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { mixinDisableRipple, MatCommonModule, MatRippleModule } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/button-toggle/button-toggle.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Represents the default options for the button toggle that can be configured\n * using the `MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS` injection token.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\n\nconst _c0 = [\"button\"];\nconst _c1 = [\"*\"];\nfunction MatButtonToggleDefaultOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    MatButtonToggleDefaultOptions.prototype.appearance;\n}\n/**\n * Injection token that can be used to configure the\n * default options for all button toggles within an app.\n * @type {?}\n */\nconst MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS');\n/**\n * Provider Expression that allows mat-button-toggle-group to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * \\@docs-private\n * @type {?}\n */\nconst MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatButtonToggleGroup)),\n    multi: true\n};\n/**\n * @deprecated Use `MatButtonToggleGroup` instead.\n * \\@breaking-change 8.0.0\n */\nclass MatButtonToggleGroupMultiple {\n}\n/** @type {?} */\nlet _uniqueIdCounter = 0;\n/**\n * Change event object emitted by MatButtonToggle.\n */\nclass MatButtonToggleChange {\n    /**\n     * @param {?} source\n     * @param {?} value\n     */\n    constructor(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n}\nif (false) {\n    /**\n     * The MatButtonToggle that emits the event.\n     * @type {?}\n     */\n    MatButtonToggleChange.prototype.source;\n    /**\n     * The value assigned to the MatButtonToggle.\n     * @type {?}\n     */\n    MatButtonToggleChange.prototype.value;\n}\n/**\n * Exclusive selection button toggle group that behaves like a radio-button group.\n */\nclass MatButtonToggleGroup {\n    /**\n     * @param {?} _changeDetector\n     * @param {?=} defaultOptions\n     */\n    constructor(_changeDetector, defaultOptions) {\n        this._changeDetector = _changeDetector;\n        this._vertical = false;\n        this._multiple = false;\n        this._disabled = false;\n        /**\n         * The method to be called in order to update ngModel.\n         * Now `ngModel` binding is not supported in multiple selection mode.\n         */\n        this._controlValueAccessorChangeFn = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * onTouch function registered via registerOnTouch (ControlValueAccessor).\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this._name = `mat-button-toggle-group-${_uniqueIdCounter++}`;\n        /**\n         * Event that emits whenever the value of the group changes.\n         * Used to facilitate two-way data binding.\n         * \\@docs-private\n         */\n        this.valueChange = new EventEmitter();\n        /**\n         * Event emitted when the group's value changes.\n         */\n        this.change = new EventEmitter();\n        this.appearance =\n            defaultOptions && defaultOptions.appearance ? defaultOptions.appearance : 'standard';\n    }\n    /**\n     * `name` attribute for the underlying `input` element.\n     * @return {?}\n     */\n    get name() { return this._name; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set name(value) {\n        this._name = value;\n        if (this._buttonToggles) {\n            this._buttonToggles.forEach((/**\n             * @param {?} toggle\n             * @return {?}\n             */\n            toggle => {\n                toggle.name = this._name;\n                toggle._markForCheck();\n            }));\n        }\n    }\n    /**\n     * Whether the toggle group is vertical.\n     * @return {?}\n     */\n    get vertical() { return this._vertical; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set vertical(value) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n    /**\n     * Value of the toggle group.\n     * @return {?}\n     */\n    get value() {\n        /** @type {?} */\n        const selected = this._selectionModel ? this._selectionModel.selected : [];\n        if (this.multiple) {\n            return selected.map((/**\n             * @param {?} toggle\n             * @return {?}\n             */\n            toggle => toggle.value));\n        }\n        return selected[0] ? selected[0].value : undefined;\n    }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        this._setSelectionByValue(newValue);\n        this.valueChange.emit(this.value);\n    }\n    /**\n     * Selected button toggles in the group.\n     * @return {?}\n     */\n    get selected() {\n        /** @type {?} */\n        const selected = this._selectionModel ? this._selectionModel.selected : [];\n        return this.multiple ? selected : (selected[0] || null);\n    }\n    /**\n     * Whether multiple button toggles can be selected.\n     * @return {?}\n     */\n    get multiple() { return this._multiple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set multiple(value) {\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether multiple button toggle group is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        if (this._buttonToggles) {\n            this._buttonToggles.forEach((/**\n             * @param {?} toggle\n             * @return {?}\n             */\n            toggle => toggle._markForCheck()));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple, undefined, false);\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._selectionModel.select(...this._buttonToggles.filter((/**\n         * @param {?} toggle\n         * @return {?}\n         */\n        toggle => toggle.checked)));\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param {?} value Value to be set to the model.\n     * @return {?}\n     */\n    writeValue(value) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * Dispatch change event with current selection and group value.\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        /** @type {?} */\n        const selected = this.selected;\n        /** @type {?} */\n        const source = Array.isArray(selected) ? selected[selected.length - 1] : selected;\n        /** @type {?} */\n        const event = new MatButtonToggleChange((/** @type {?} */ (source)), this.value);\n        this._controlValueAccessorChangeFn(event.value);\n        this.change.emit(event);\n    }\n    /**\n     * Syncs a button toggle's selected state with the model value.\n     * @param {?} toggle Toggle to be synced.\n     * @param {?} select Whether the toggle should be selected.\n     * @param {?=} isUserInput Whether the change was a result of a user interaction.\n     * @param {?=} deferEvents Whether to defer emitting the change events.\n     * @return {?}\n     */\n    _syncButtonToggle(toggle, select, isUserInput = false, deferEvents = false) {\n        // Deselect the currently-selected toggle, if we're in single-selection\n        // mode and the button being toggled isn't selected at the moment.\n        if (!this.multiple && this.selected && !toggle.checked) {\n            ((/** @type {?} */ (this.selected))).checked = false;\n        }\n        if (this._selectionModel) {\n            if (select) {\n                this._selectionModel.select(toggle);\n            }\n            else {\n                this._selectionModel.deselect(toggle);\n            }\n        }\n        else {\n            deferEvents = true;\n        }\n        // We need to defer in some cases in order to avoid \"changed after checked errors\", however\n        // the side-effect is that we may end up updating the model value out of sequence in others\n        // The `deferEvents` flag allows us to decide whether to do it on a case-by-case basis.\n        if (deferEvents) {\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => this._updateModelValue(isUserInput)));\n        }\n        else {\n            this._updateModelValue(isUserInput);\n        }\n    }\n    /**\n     * Checks whether a button toggle is selected.\n     * @param {?} toggle\n     * @return {?}\n     */\n    _isSelected(toggle) {\n        return this._selectionModel && this._selectionModel.isSelected(toggle);\n    }\n    /**\n     * Determines whether a button toggle should be checked on init.\n     * @param {?} toggle\n     * @return {?}\n     */\n    _isPrechecked(toggle) {\n        if (typeof this._rawValue === 'undefined') {\n            return false;\n        }\n        if (this.multiple && Array.isArray(this._rawValue)) {\n            return this._rawValue.some((/**\n             * @param {?} value\n             * @return {?}\n             */\n            value => toggle.value != null && value === toggle.value));\n        }\n        return toggle.value === this._rawValue;\n    }\n    /**\n     * Updates the selection state of the toggles in the group based on a value.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _setSelectionByValue(value) {\n        this._rawValue = value;\n        if (!this._buttonToggles) {\n            return;\n        }\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw Error('Value must be an array in multiple-selection mode.');\n            }\n            this._clearSelection();\n            value.forEach((/**\n             * @param {?} currentValue\n             * @return {?}\n             */\n            (currentValue) => this._selectValue(currentValue)));\n        }\n        else {\n            this._clearSelection();\n            this._selectValue(value);\n        }\n    }\n    /**\n     * Clears the selected toggles.\n     * @private\n     * @return {?}\n     */\n    _clearSelection() {\n        this._selectionModel.clear();\n        this._buttonToggles.forEach((/**\n         * @param {?} toggle\n         * @return {?}\n         */\n        toggle => toggle.checked = false));\n    }\n    /**\n     * Selects a value if there's a toggle that corresponds to it.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _selectValue(value) {\n        /** @type {?} */\n        const correspondingOption = this._buttonToggles.find((/**\n         * @param {?} toggle\n         * @return {?}\n         */\n        toggle => {\n            return toggle.value != null && toggle.value === value;\n        }));\n        if (correspondingOption) {\n            correspondingOption.checked = true;\n            this._selectionModel.select(correspondingOption);\n        }\n    }\n    /**\n     * Syncs up the group's value with the model and emits the change event.\n     * @private\n     * @param {?} isUserInput\n     * @return {?}\n     */\n    _updateModelValue(isUserInput) {\n        // Only emit the change event for user input.\n        if (isUserInput) {\n            this._emitChangeEvent();\n        }\n        // Note: we emit this one no matter whether it was a user interaction, because\n        // it is used by Angular to sync up the two-way data binding.\n        this.valueChange.emit(this.value);\n    }\n}\nMatButtonToggleGroup.ɵfac = function MatButtonToggleGroup_Factory(t) { return new (t || MatButtonToggleGroup)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, 8)); };\nMatButtonToggleGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatButtonToggleGroup, selectors: [[\"mat-button-toggle-group\"]], contentQueries: function MatButtonToggleGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatButtonToggle, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._buttonToggles = _t);\n    } }, hostAttrs: [\"role\", \"group\", 1, \"mat-button-toggle-group\"], hostVars: 5, hostBindings: function MatButtonToggleGroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled);\n        ɵngcc0.ɵɵclassProp(\"mat-button-toggle-vertical\", ctx.vertical)(\"mat-button-toggle-group-appearance-standard\", ctx.appearance === \"standard\");\n    } }, inputs: { appearance: \"appearance\", name: \"name\", vertical: \"vertical\", value: \"value\", multiple: \"multiple\", disabled: \"disabled\" }, outputs: { valueChange: \"valueChange\", change: \"change\" }, exportAs: [\"matButtonToggleGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR,\n            { provide: MatButtonToggleGroupMultiple, useExisting: MatButtonToggleGroup },\n        ])] });\n/** @nocollapse */\nMatButtonToggleGroup.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS,] }] }\n];\nMatButtonToggleGroup.propDecorators = {\n    _buttonToggles: [{ type: ContentChildren, args: [forwardRef((/**\n                 * @return {?}\n                 */\n                () => MatButtonToggle)), {\n                    // Note that this would technically pick up toggles\n                    // from nested groups, but that's not a case that we support.\n                    descendants: true\n                },] }],\n    appearance: [{ type: Input }],\n    name: [{ type: Input }],\n    vertical: [{ type: Input }],\n    value: [{ type: Input }],\n    valueChange: [{ type: Output }],\n    multiple: [{ type: Input }],\n    disabled: [{ type: Input }],\n    change: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatButtonToggleGroup, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-button-toggle-group',\n                providers: [\n                    MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR,\n                    { provide: MatButtonToggleGroupMultiple, useExisting: MatButtonToggleGroup },\n                ],\n                host: {\n                    'role': 'group',\n                    'class': 'mat-button-toggle-group',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[class.mat-button-toggle-vertical]': 'vertical',\n                    '[class.mat-button-toggle-group-appearance-standard]': 'appearance === \"standard\"'\n                },\n                exportAs: 'matButtonToggleGroup'\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS]\n            }] }]; }, { valueChange: [{\n            type: Output\n        }], change: [{\n            type: Output\n        }], appearance: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], vertical: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], _buttonToggles: [{\n            type: ContentChildren,\n            args: [forwardRef(( /**\n                             * @return {?}\n                             */() => MatButtonToggle)), {\n                    // Note that this would technically pick up toggles\n                    // from nested groups, but that's not a case that we support.\n                    descendants: true\n                }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatButtonToggleGroup.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatButtonToggleGroup.ngAcceptInputType_multiple;\n    /** @type {?} */\n    MatButtonToggleGroup.ngAcceptInputType_vertical;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggleGroup.prototype._vertical;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggleGroup.prototype._multiple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggleGroup.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggleGroup.prototype._selectionModel;\n    /**\n     * Reference to the raw value that the consumer tried to assign. The real\n     * value will exclude any values from this one that don't correspond to a\n     * toggle. Useful for the cases where the value is assigned before the toggles\n     * have been initialized or at the same that they're being swapped out.\n     * @type {?}\n     * @private\n     */\n    MatButtonToggleGroup.prototype._rawValue;\n    /**\n     * The method to be called in order to update ngModel.\n     * Now `ngModel` binding is not supported in multiple selection mode.\n     * @type {?}\n     */\n    MatButtonToggleGroup.prototype._controlValueAccessorChangeFn;\n    /**\n     * onTouch function registered via registerOnTouch (ControlValueAccessor).\n     * @type {?}\n     */\n    MatButtonToggleGroup.prototype._onTouched;\n    /**\n     * Child button toggle buttons.\n     * @type {?}\n     */\n    MatButtonToggleGroup.prototype._buttonToggles;\n    /**\n     * The appearance for all the buttons in the group.\n     * @type {?}\n     */\n    MatButtonToggleGroup.prototype.appearance;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggleGroup.prototype._name;\n    /**\n     * Event that emits whenever the value of the group changes.\n     * Used to facilitate two-way data binding.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatButtonToggleGroup.prototype.valueChange;\n    /**\n     * Event emitted when the group's value changes.\n     * @type {?}\n     */\n    MatButtonToggleGroup.prototype.change;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggleGroup.prototype._changeDetector;\n}\n// Boilerplate for applying mixins to the MatButtonToggle class.\n/**\n * \\@docs-private\n */\nclass MatButtonToggleBase {\n}\n/** @type {?} */\nconst _MatButtonToggleMixinBase = mixinDisableRipple(MatButtonToggleBase);\n/**\n * Single button inside of a toggle group.\n */\nclass MatButtonToggle extends _MatButtonToggleMixinBase {\n    /**\n     * @param {?} toggleGroup\n     * @param {?} _changeDetectorRef\n     * @param {?} _elementRef\n     * @param {?} _focusMonitor\n     * @param {?} defaultTabIndex\n     * @param {?=} defaultOptions\n     */\n    constructor(toggleGroup, _changeDetectorRef, _elementRef, _focusMonitor, \n    // @breaking-change 8.0.0 `defaultTabIndex` to be made a required parameter.\n    defaultTabIndex, defaultOptions) {\n        super();\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this._isSingleSelector = false;\n        this._checked = false;\n        /**\n         * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n         */\n        this.ariaLabelledby = null;\n        this._disabled = false;\n        /**\n         * Event emitted when the group value changes.\n         */\n        this.change = new EventEmitter();\n        /** @type {?} */\n        const parsedTabIndex = Number(defaultTabIndex);\n        this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\n        this.buttonToggleGroup = toggleGroup;\n        this.appearance =\n            defaultOptions && defaultOptions.appearance ? defaultOptions.appearance : 'standard';\n    }\n    /**\n     * Unique ID for the underlying `button` element.\n     * @return {?}\n     */\n    get buttonId() { return `${this.id}-button`; }\n    /**\n     * The appearance style of the button.\n     * @return {?}\n     */\n    get appearance() {\n        return this.buttonToggleGroup ? this.buttonToggleGroup.appearance : this._appearance;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set appearance(value) {\n        this._appearance = value;\n    }\n    /**\n     * Whether the button is checked.\n     * @return {?}\n     */\n    get checked() {\n        return this.buttonToggleGroup ? this.buttonToggleGroup._isSelected(this) : this._checked;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set checked(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._checked) {\n            this._checked = newValue;\n            if (this.buttonToggleGroup) {\n                this.buttonToggleGroup._syncButtonToggle(this, this._checked);\n            }\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the button is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled || (this.buttonToggleGroup && this.buttonToggleGroup.disabled);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        /** @type {?} */\n        const group = this.buttonToggleGroup;\n        this._isSingleSelector = group && !group.multiple;\n        this._type = this._isSingleSelector ? 'radio' : 'checkbox';\n        this.id = this.id || `mat-button-toggle-${_uniqueIdCounter++}`;\n        if (this._isSingleSelector) {\n            this.name = group.name;\n        }\n        if (group) {\n            if (group._isPrechecked(this)) {\n                this.checked = true;\n            }\n            else if (group._isSelected(this) !== this._checked) {\n                // As as side effect of the circular dependency between the toggle group and the button,\n                // we may end up in a state where the button is supposed to be checked on init, but it\n                // isn't, because the checked value was assigned too early. This can happen when Ivy\n                // assigns the static input value before the `ngOnInit` has run.\n                group._syncButtonToggle(this, this._checked);\n            }\n        }\n        this._focusMonitor.monitor(this._elementRef, true);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const group = this.buttonToggleGroup;\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        // Remove the toggle from the selection once it's destroyed. Needs to happen\n        // on the next tick in order to avoid \"changed after checked\" errors.\n        if (group && group._isSelected(this)) {\n            group._syncButtonToggle(this, false, false, true);\n        }\n    }\n    /**\n     * Focuses the button.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._buttonElement.nativeElement.focus(options);\n    }\n    /**\n     * Checks the button toggle due to an interaction with the underlying native button.\n     * @return {?}\n     */\n    _onButtonClick() {\n        /** @type {?} */\n        const newChecked = this._isSingleSelector ? true : !this._checked;\n        if (newChecked !== this._checked) {\n            this._checked = newChecked;\n            if (this.buttonToggleGroup) {\n                this.buttonToggleGroup._syncButtonToggle(this, this._checked, true);\n                this.buttonToggleGroup._onTouched();\n            }\n        }\n        // Emit a change event when it's the single selector\n        this.change.emit(new MatButtonToggleChange(this, this.value));\n    }\n    /**\n     * Marks the button toggle as needing checking for change detection.\n     * This method is exposed because the parent button toggle group will directly\n     * update bound properties of the radio button.\n     * @return {?}\n     */\n    _markForCheck() {\n        // When the group value changes, the button will not be notified.\n        // Use `markForCheck` to explicit update button toggle's status.\n        this._changeDetectorRef.markForCheck();\n    }\n}\nMatButtonToggle.ɵfac = function MatButtonToggle_Factory(t) { return new (t || MatButtonToggle)(ɵngcc0.ɵɵdirectiveInject(MatButtonToggleGroup, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, 8)); };\nMatButtonToggle.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatButtonToggle, selectors: [[\"mat-button-toggle\"]], viewQuery: function MatButtonToggle_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._buttonElement = _t.first);\n    } }, hostAttrs: [1, \"mat-button-toggle\"], hostVars: 11, hostBindings: function MatButtonToggle_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatButtonToggle_focus_HostBindingHandler() { return ctx.focus(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", 0 - 1)(\"id\", ctx.id)(\"name\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-button-toggle-standalone\", !ctx.buttonToggleGroup)(\"mat-button-toggle-checked\", ctx.checked)(\"mat-button-toggle-disabled\", ctx.disabled)(\"mat-button-toggle-appearance-standard\", ctx.appearance === \"standard\");\n    } }, inputs: { disableRipple: \"disableRipple\", ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], tabIndex: \"tabIndex\", appearance: \"appearance\", checked: \"checked\", disabled: \"disabled\", id: \"id\", name: \"name\", ariaLabel: [\"aria-label\", \"ariaLabel\"], value: \"value\" }, outputs: { change: \"change\" }, exportAs: [\"matButtonToggle\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 6, vars: 9, consts: [[\"type\", \"button\", 1, \"mat-button-toggle-button\", \"mat-focus-indicator\", 3, \"id\", \"disabled\", \"click\"], [\"button\", \"\"], [1, \"mat-button-toggle-label-content\"], [1, \"mat-button-toggle-focus-overlay\"], [\"matRipple\", \"\", 1, \"mat-button-toggle-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"]], template: function MatButtonToggle_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"button\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatButtonToggle_Template_button_click_0_listener() { return ctx._onButtonClick(); });\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵprojection(3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(4, \"div\", 3);\n        ɵngcc0.ɵɵelement(5, \"div\", 4);\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.buttonId)(\"disabled\", ctx.disabled || null);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? 0 - 1 : ctx.tabIndex)(\"aria-pressed\", ctx.checked)(\"name\", ctx.name || null)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled);\n    } }, directives: [ɵngcc2.MatRipple], styles: [\".mat-button-toggle-standalone,.mat-button-toggle-group{position:relative;display:inline-flex;flex-direction:row;white-space:nowrap;overflow:hidden;border-radius:2px;-webkit-tap-highlight-color:transparent}.cdk-high-contrast-active .mat-button-toggle-standalone,.cdk-high-contrast-active .mat-button-toggle-group{outline:solid 1px}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{border-radius:4px}.cdk-high-contrast-active .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.cdk-high-contrast-active .mat-button-toggle-group-appearance-standard{outline:0}.mat-button-toggle-vertical{flex-direction:column}.mat-button-toggle-vertical .mat-button-toggle-label-content{display:block}.mat-button-toggle{white-space:nowrap;position:relative}.mat-button-toggle .mat-icon svg{vertical-align:top}.mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:1}.cdk-high-contrast-active .mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:.5}.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{opacity:.04}.mat-button-toggle-appearance-standard.cdk-keyboard-focused:not(.mat-button-toggle-disabled) .mat-button-toggle-focus-overlay{opacity:.12}.cdk-high-contrast-active .mat-button-toggle-appearance-standard.cdk-keyboard-focused:not(.mat-button-toggle-disabled) .mat-button-toggle-focus-overlay{opacity:.5}@media(hover: none){.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{display:none}}.mat-button-toggle-label-content{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;display:inline-block;line-height:36px;padding:0 16px;position:relative}.mat-button-toggle-appearance-standard .mat-button-toggle-label-content{line-height:48px;padding:0 12px}.mat-button-toggle-label-content>*{vertical-align:middle}.mat-button-toggle-focus-overlay{border-radius:inherit;pointer-events:none;opacity:0;top:0;left:0;right:0;bottom:0;position:absolute}.mat-button-toggle-checked .mat-button-toggle-focus-overlay{border-bottom:solid 36px}.cdk-high-contrast-active .mat-button-toggle-checked .mat-button-toggle-focus-overlay{opacity:.5;height:0}.cdk-high-contrast-active .mat-button-toggle-checked.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{border-bottom:solid 48px}.mat-button-toggle .mat-button-toggle-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-toggle-button{border:0;background:none;color:inherit;padding:0;margin:0;font:inherit;outline:none;width:100%;cursor:pointer}.mat-button-toggle-disabled .mat-button-toggle-button{cursor:default}.mat-button-toggle-button::-moz-focus-inner{border:0}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatButtonToggle.ctorParameters = () => [\n    { type: MatButtonToggleGroup, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS,] }] }\n];\nMatButtonToggle.propDecorators = {\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    _buttonElement: [{ type: ViewChild, args: ['button',] }],\n    id: [{ type: Input }],\n    name: [{ type: Input }],\n    value: [{ type: Input }],\n    tabIndex: [{ type: Input }],\n    appearance: [{ type: Input }],\n    checked: [{ type: Input }],\n    disabled: [{ type: Input }],\n    change: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatButtonToggle, [{\n        type: Component,\n        args: [{\n                selector: 'mat-button-toggle',\n                template: \"<button #button class=\\\"mat-button-toggle-button mat-focus-indicator\\\"\\n        type=\\\"button\\\"\\n        [id]=\\\"buttonId\\\"\\n        [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\\n        [attr.aria-pressed]=\\\"checked\\\"\\n        [disabled]=\\\"disabled || null\\\"\\n        [attr.name]=\\\"name || null\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        (click)=\\\"_onButtonClick()\\\">\\n  <div class=\\\"mat-button-toggle-label-content\\\">\\n    <ng-content></ng-content>\\n  </div>\\n</button>\\n\\n<div class=\\\"mat-button-toggle-focus-overlay\\\"></div>\\n<div class=\\\"mat-button-toggle-ripple\\\" matRipple\\n     [matRippleTrigger]=\\\"button\\\"\\n     [matRippleDisabled]=\\\"this.disableRipple || this.disabled\\\">\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matButtonToggle',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disableRipple'],\n                host: {\n                    '[class.mat-button-toggle-standalone]': '!buttonToggleGroup',\n                    '[class.mat-button-toggle-checked]': 'checked',\n                    '[class.mat-button-toggle-disabled]': 'disabled',\n                    '[class.mat-button-toggle-appearance-standard]': 'appearance === \"standard\"',\n                    'class': 'mat-button-toggle',\n                    // Always reset the tabindex to -1 so it doesn't conflict with the one on the `button`,\n                    // but can still receive focus from things like cdkFocusInitial.\n                    '[attr.tabindex]': '-1',\n                    '[attr.id]': 'id',\n                    '[attr.name]': 'null',\n                    '(focus)': 'focus()'\n                },\n                styles: [\".mat-button-toggle-standalone,.mat-button-toggle-group{position:relative;display:inline-flex;flex-direction:row;white-space:nowrap;overflow:hidden;border-radius:2px;-webkit-tap-highlight-color:transparent}.cdk-high-contrast-active .mat-button-toggle-standalone,.cdk-high-contrast-active .mat-button-toggle-group{outline:solid 1px}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{border-radius:4px}.cdk-high-contrast-active .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.cdk-high-contrast-active .mat-button-toggle-group-appearance-standard{outline:0}.mat-button-toggle-vertical{flex-direction:column}.mat-button-toggle-vertical .mat-button-toggle-label-content{display:block}.mat-button-toggle{white-space:nowrap;position:relative}.mat-button-toggle .mat-icon svg{vertical-align:top}.mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:1}.cdk-high-contrast-active .mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:.5}.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{opacity:.04}.mat-button-toggle-appearance-standard.cdk-keyboard-focused:not(.mat-button-toggle-disabled) .mat-button-toggle-focus-overlay{opacity:.12}.cdk-high-contrast-active .mat-button-toggle-appearance-standard.cdk-keyboard-focused:not(.mat-button-toggle-disabled) .mat-button-toggle-focus-overlay{opacity:.5}@media(hover: none){.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{display:none}}.mat-button-toggle-label-content{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;display:inline-block;line-height:36px;padding:0 16px;position:relative}.mat-button-toggle-appearance-standard .mat-button-toggle-label-content{line-height:48px;padding:0 12px}.mat-button-toggle-label-content>*{vertical-align:middle}.mat-button-toggle-focus-overlay{border-radius:inherit;pointer-events:none;opacity:0;top:0;left:0;right:0;bottom:0;position:absolute}.mat-button-toggle-checked .mat-button-toggle-focus-overlay{border-bottom:solid 36px}.cdk-high-contrast-active .mat-button-toggle-checked .mat-button-toggle-focus-overlay{opacity:.5;height:0}.cdk-high-contrast-active .mat-button-toggle-checked.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{border-bottom:solid 48px}.mat-button-toggle .mat-button-toggle-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-toggle-button{border:0;background:none;color:inherit;padding:0;margin:0;font:inherit;outline:none;width:100%;cursor:pointer}.mat-button-toggle-disabled .mat-button-toggle-button{cursor:default}.mat-button-toggle-button::-moz-focus-inner{border:0}\\n\"]\n            }]\n    }], function () { return [{ type: MatButtonToggleGroup, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS]\n            }] }]; }, { ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], change: [{\n            type: Output\n        }], tabIndex: [{\n            type: Input\n        }], appearance: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], _buttonElement: [{\n            type: ViewChild,\n            args: ['button']\n        }], value: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatButtonToggle.ngAcceptInputType_checked;\n    /** @type {?} */\n    MatButtonToggle.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatButtonToggle.ngAcceptInputType_vertical;\n    /** @type {?} */\n    MatButtonToggle.ngAcceptInputType_multiple;\n    /** @type {?} */\n    MatButtonToggle.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggle.prototype._isSingleSelector;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggle.prototype._checked;\n    /**\n     * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n     * take precedence so this may be omitted.\n     * @type {?}\n     */\n    MatButtonToggle.prototype.ariaLabel;\n    /**\n     * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n     * @type {?}\n     */\n    MatButtonToggle.prototype.ariaLabelledby;\n    /**\n     * Type of the button toggle. Either 'radio' or 'checkbox'.\n     * @type {?}\n     */\n    MatButtonToggle.prototype._type;\n    /** @type {?} */\n    MatButtonToggle.prototype._buttonElement;\n    /**\n     * The parent button toggle group (exclusive selection). Optional.\n     * @type {?}\n     */\n    MatButtonToggle.prototype.buttonToggleGroup;\n    /**\n     * The unique ID for this button toggle.\n     * @type {?}\n     */\n    MatButtonToggle.prototype.id;\n    /**\n     * HTML's 'name' attribute used to group radios for unique selection.\n     * @type {?}\n     */\n    MatButtonToggle.prototype.name;\n    /**\n     * MatButtonToggleGroup reads this to assign its own value.\n     * @type {?}\n     */\n    MatButtonToggle.prototype.value;\n    /**\n     * Tabindex for the toggle.\n     * @type {?}\n     */\n    MatButtonToggle.prototype.tabIndex;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggle.prototype._appearance;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggle.prototype._disabled;\n    /**\n     * Event emitted when the group value changes.\n     * @type {?}\n     */\n    MatButtonToggle.prototype.change;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggle.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggle.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggle.prototype._focusMonitor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/button-toggle/button-toggle-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatButtonToggleModule {\n}\nMatButtonToggleModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatButtonToggleModule });\nMatButtonToggleModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatButtonToggleModule_Factory(t) { return new (t || MatButtonToggleModule)(); }, imports: [[MatCommonModule, MatRippleModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatButtonToggleModule, { declarations: function () { return [MatButtonToggleGroup,\n        MatButtonToggle]; }, imports: function () { return [MatCommonModule, MatRippleModule]; }, exports: function () { return [MatCommonModule,\n        MatButtonToggleGroup,\n        MatButtonToggle]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatButtonToggleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule, MatRippleModule],\n                exports: [MatCommonModule, MatButtonToggleGroup, MatButtonToggle],\n                declarations: [MatButtonToggleGroup, MatButtonToggle]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/button-toggle/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR, MatButtonToggle, MatButtonToggleChange, MatButtonToggleGroup, MatButtonToggleGroupMultiple, MatButtonToggleModule };\n\n//# sourceMappingURL=button-toggle.js.map","import { Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Optional, Inject, ViewChild, Input, NgModule } from '@angular/core';\nimport { mixinColor, mixinDisabled, mixinDisableRipple, MatRipple, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/button/button.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default color palette for round buttons (mat-fab and mat-mini-fab)\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\n\nconst _c0 = [\"mat-button\", \"\"];\nconst _c1 = [\"*\"];\nconst DEFAULT_ROUND_BUTTON_COLOR = 'accent';\n/**\n * List of classes to add to MatButton instances based on host attributes to\n * style as different variants.\n * @type {?}\n */\nconst BUTTON_HOST_ATTRIBUTES = [\n    'mat-button',\n    'mat-flat-button',\n    'mat-icon-button',\n    'mat-raised-button',\n    'mat-stroked-button',\n    'mat-mini-fab',\n    'mat-fab',\n];\n// Boilerplate for applying mixins to MatButton.\n/**\n * \\@docs-private\n */\nclass MatButtonBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatButtonBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatButtonMixinBase = mixinColor(mixinDisabled(mixinDisableRipple(MatButtonBase)));\n/**\n * Material design button.\n */\nclass MatButton extends _MatButtonMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _focusMonitor\n     * @param {?} _animationMode\n     */\n    constructor(elementRef, _focusMonitor, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._animationMode = _animationMode;\n        /**\n         * Whether the button is round.\n         */\n        this.isRoundButton = this._hasHostAttributes('mat-fab', 'mat-mini-fab');\n        /**\n         * Whether the button is icon button.\n         */\n        this.isIconButton = this._hasHostAttributes('mat-icon-button');\n        // For each of the variant selectors that is present in the button's host\n        // attributes, add the correct corresponding class.\n        for (const attr of BUTTON_HOST_ATTRIBUTES) {\n            if (this._hasHostAttributes(attr)) {\n                ((/** @type {?} */ (this._getHostElement()))).classList.add(attr);\n            }\n        }\n        // Add a class that applies to all buttons. This makes it easier to target if somebody\n        // wants to target all Material buttons. We do it here rather than `host` to ensure that\n        // the class is applied to derived classes.\n        elementRef.nativeElement.classList.add('mat-button-base');\n        this._focusMonitor.monitor(this._elementRef, true);\n        if (this.isRoundButton) {\n            this.color = DEFAULT_ROUND_BUTTON_COLOR;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Focuses the button.\n     * @param {?=} origin\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(origin = 'program', options) {\n        this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n    }\n    /**\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /**\n     * Gets whether the button has one of the given attributes.\n     * @param {...?} attributes\n     * @return {?}\n     */\n    _hasHostAttributes(...attributes) {\n        return attributes.some((/**\n         * @param {?} attribute\n         * @return {?}\n         */\n        attribute => this._getHostElement().hasAttribute(attribute)));\n    }\n}\nMatButton.ɵfac = function MatButton_Factory(t) { return new (t || MatButton)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatButton.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatButton, selectors: [[\"button\", \"mat-button\", \"\"], [\"button\", \"mat-raised-button\", \"\"], [\"button\", \"mat-icon-button\", \"\"], [\"button\", \"mat-fab\", \"\"], [\"button\", \"mat-mini-fab\", \"\"], [\"button\", \"mat-stroked-button\", \"\"], [\"button\", \"mat-flat-button\", \"\"]], viewQuery: function MatButton_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatRipple, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ripple = _t.first);\n    } }, hostAttrs: [1, \"mat-focus-indicator\"], hostVars: 3, hostBindings: function MatButton_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx.disabled || null);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\" }, exportAs: [\"matButton\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 4, vars: 5, consts: [[1, \"mat-button-wrapper\"], [\"matRipple\", \"\", 1, \"mat-button-ripple\", 3, \"matRippleDisabled\", \"matRippleCentered\", \"matRippleTrigger\"], [1, \"mat-button-focus-overlay\"]], template: function MatButton_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(2, \"div\", 1);\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-button-ripple-round\", ctx.isRoundButton || ctx.isIconButton);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", ctx.isIconButton)(\"matRippleTrigger\", ctx._getHostElement());\n    } }, directives: [ɵngcc2.MatRipple], styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled],.mat-flat-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatButton.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatButton.propDecorators = {\n    ripple: [{ type: ViewChild, args: [MatRipple,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatButton, [{\n        type: Component,\n        args: [{\n                selector: `button[mat-button], button[mat-raised-button], button[mat-icon-button],\n             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],\n             button[mat-flat-button]`,\n                exportAs: 'matButton',\n                host: {\n                    '[attr.disabled]': 'disabled || null',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    'class': 'mat-focus-indicator'\n                },\n                template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<div matRipple class=\\\"mat-button-ripple\\\"\\n     [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n     [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n     [matRippleCentered]=\\\"isIconButton\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"></div>\\n<div class=\\\"mat-button-focus-overlay\\\"></div>\\n\",\n                inputs: ['disabled', 'disableRipple', 'color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled],.mat-flat-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { ripple: [{\n            type: ViewChild,\n            args: [MatRipple]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatButton.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatButton.ngAcceptInputType_disableRipple;\n    /**\n     * Whether the button is round.\n     * @type {?}\n     */\n    MatButton.prototype.isRoundButton;\n    /**\n     * Whether the button is icon button.\n     * @type {?}\n     */\n    MatButton.prototype.isIconButton;\n    /**\n     * Reference to the MatRipple instance of the button.\n     * @type {?}\n     */\n    MatButton.prototype.ripple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButton.prototype._focusMonitor;\n    /** @type {?} */\n    MatButton.prototype._animationMode;\n}\n/**\n * Material design anchor button.\n */\nclass MatAnchor extends MatButton {\n    /**\n     * @param {?} focusMonitor\n     * @param {?} elementRef\n     * @param {?} animationMode\n     */\n    constructor(focusMonitor, elementRef, animationMode) {\n        super(elementRef, focusMonitor, animationMode);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _haltDisabledEvents(event) {\n        // A disabled button shouldn't apply any actions\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\nMatAnchor.ɵfac = function MatAnchor_Factory(t) { return new (t || MatAnchor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatAnchor.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatAnchor, selectors: [[\"a\", \"mat-button\", \"\"], [\"a\", \"mat-raised-button\", \"\"], [\"a\", \"mat-icon-button\", \"\"], [\"a\", \"mat-fab\", \"\"], [\"a\", \"mat-mini-fab\", \"\"], [\"a\", \"mat-stroked-button\", \"\"], [\"a\", \"mat-flat-button\", \"\"]], hostAttrs: [1, \"mat-focus-indicator\"], hostVars: 5, hostBindings: function MatAnchor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatAnchor_click_HostBindingHandler($event) { return ctx._haltDisabledEvents($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? 0 - 1 : ctx.tabIndex || 0)(\"disabled\", ctx.disabled || null)(\"aria-disabled\", ctx.disabled.toString());\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\" }, exportAs: [\"matButton\", \"matAnchor\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 4, vars: 5, consts: [[1, \"mat-button-wrapper\"], [\"matRipple\", \"\", 1, \"mat-button-ripple\", 3, \"matRippleDisabled\", \"matRippleCentered\", \"matRippleTrigger\"], [1, \"mat-button-focus-overlay\"]], template: function MatAnchor_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(2, \"div\", 1);\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-button-ripple-round\", ctx.isRoundButton || ctx.isIconButton);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", ctx.isIconButton)(\"matRippleTrigger\", ctx._getHostElement());\n    } }, directives: [ɵngcc2.MatRipple], styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled],.mat-flat-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatAnchor.ctorParameters = () => [\n    { type: FocusMonitor },\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatAnchor.propDecorators = {\n    tabIndex: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAnchor, [{\n        type: Component,\n        args: [{\n                selector: `a[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab],\n             a[mat-mini-fab], a[mat-stroked-button], a[mat-flat-button]`,\n                exportAs: 'matButton, matAnchor',\n                host: {\n                    // Note that we ignore the user-specified tabindex when it's disabled for\n                    // consistency with the `mat-button` applied on native buttons where even\n                    // though they have an index, they're not tabbable.\n                    '[attr.tabindex]': 'disabled ? -1 : (tabIndex || 0)',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '(click)': '_haltDisabledEvents($event)',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    'class': 'mat-focus-indicator'\n                },\n                inputs: ['disabled', 'disableRipple', 'color'],\n                template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<div matRipple class=\\\"mat-button-ripple\\\"\\n     [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n     [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n     [matRippleCentered]=\\\"isIconButton\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"></div>\\n<div class=\\\"mat-button-focus-overlay\\\"></div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled],.mat-flat-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { tabIndex: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Tabindex of the button.\n     * @type {?}\n     */\n    MatAnchor.prototype.tabIndex;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/button/button-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatButtonModule {\n}\nMatButtonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatButtonModule });\nMatButtonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatButtonModule_Factory(t) { return new (t || MatButtonModule)(); }, imports: [[\n            MatRippleModule,\n            MatCommonModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatButtonModule, { declarations: function () { return [MatButton,\n        MatAnchor]; }, imports: function () { return [MatRippleModule,\n        MatCommonModule]; }, exports: function () { return [MatButton,\n        MatAnchor,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatButtonModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    MatRippleModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    MatButton,\n                    MatAnchor,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatButton,\n                    MatAnchor,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/button/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatAnchor, MatButton, MatButtonModule };\n\n//# sourceMappingURL=button.js.map","import { Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, NgModule } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/card/card.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"*\", [[\"mat-card-footer\"]]];\nconst _c1 = [\"*\", \"mat-card-footer\"];\nconst _c2 = [[[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], [[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], \"*\"];\nconst _c3 = [\"[mat-card-avatar], [matCardAvatar]\", \"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"*\"];\nconst _c4 = [[[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], [[\"img\"]], \"*\"];\nconst _c5 = [\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"img\", \"*\"];\nclass MatCardContent {\n}\nMatCardContent.ɵfac = function MatCardContent_Factory(t) { return new (t || MatCardContent)(); };\nMatCardContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardContent, selectors: [[\"mat-card-content\"], [\"\", \"mat-card-content\", \"\"], [\"\", \"matCardContent\", \"\"]], hostAttrs: [1, \"mat-card-content\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardContent, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-content, [mat-card-content], [matCardContent]',\n                host: { 'class': 'mat-card-content' }\n            }]\n    }], null, null); })();\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardTitle {\n}\nMatCardTitle.ɵfac = function MatCardTitle_Factory(t) { return new (t || MatCardTitle)(); };\nMatCardTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardTitle, selectors: [[\"mat-card-title\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"matCardTitle\", \"\"]], hostAttrs: [1, \"mat-card-title\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardTitle, [{\n        type: Directive,\n        args: [{\n                selector: `mat-card-title, [mat-card-title], [matCardTitle]`,\n                host: {\n                    'class': 'mat-card-title'\n                }\n            }]\n    }], null, null); })();\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardSubtitle {\n}\nMatCardSubtitle.ɵfac = function MatCardSubtitle_Factory(t) { return new (t || MatCardSubtitle)(); };\nMatCardSubtitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardSubtitle, selectors: [[\"mat-card-subtitle\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], hostAttrs: [1, \"mat-card-subtitle\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardSubtitle, [{\n        type: Directive,\n        args: [{\n                selector: `mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]`,\n                host: {\n                    'class': 'mat-card-subtitle'\n                }\n            }]\n    }], null, null); })();\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardActions {\n    constructor() {\n        /**\n         * Position of the actions inside the card.\n         */\n        this.align = 'start';\n    }\n}\nMatCardActions.ɵfac = function MatCardActions_Factory(t) { return new (t || MatCardActions)(); };\nMatCardActions.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardActions, selectors: [[\"mat-card-actions\"]], hostAttrs: [1, \"mat-card-actions\"], hostVars: 2, hostBindings: function MatCardActions_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-card-actions-align-end\", ctx.align === \"end\");\n    } }, inputs: { align: \"align\" }, exportAs: [\"matCardActions\"] });\nMatCardActions.propDecorators = {\n    align: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardActions, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-actions',\n                exportAs: 'matCardActions',\n                host: {\n                    'class': 'mat-card-actions',\n                    '[class.mat-card-actions-align-end]': 'align === \"end\"'\n                }\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Position of the actions inside the card.\n     * @type {?}\n     */\n    MatCardActions.prototype.align;\n}\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardFooter {\n}\nMatCardFooter.ɵfac = function MatCardFooter_Factory(t) { return new (t || MatCardFooter)(); };\nMatCardFooter.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardFooter, selectors: [[\"mat-card-footer\"]], hostAttrs: [1, \"mat-card-footer\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardFooter, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-footer',\n                host: { 'class': 'mat-card-footer' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardImage {\n}\nMatCardImage.ɵfac = function MatCardImage_Factory(t) { return new (t || MatCardImage)(); };\nMatCardImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardImage, selectors: [[\"\", \"mat-card-image\", \"\"], [\"\", \"matCardImage\", \"\"]], hostAttrs: [1, \"mat-card-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-image], [matCardImage]',\n                host: { 'class': 'mat-card-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardSmImage {\n}\nMatCardSmImage.ɵfac = function MatCardSmImage_Factory(t) { return new (t || MatCardSmImage)(); };\nMatCardSmImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardSmImage, selectors: [[\"\", \"mat-card-sm-image\", \"\"], [\"\", \"matCardImageSmall\", \"\"]], hostAttrs: [1, \"mat-card-sm-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardSmImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-sm-image], [matCardImageSmall]',\n                host: { 'class': 'mat-card-sm-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardMdImage {\n}\nMatCardMdImage.ɵfac = function MatCardMdImage_Factory(t) { return new (t || MatCardMdImage)(); };\nMatCardMdImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardMdImage, selectors: [[\"\", \"mat-card-md-image\", \"\"], [\"\", \"matCardImageMedium\", \"\"]], hostAttrs: [1, \"mat-card-md-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardMdImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-md-image], [matCardImageMedium]',\n                host: { 'class': 'mat-card-md-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardLgImage {\n}\nMatCardLgImage.ɵfac = function MatCardLgImage_Factory(t) { return new (t || MatCardLgImage)(); };\nMatCardLgImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardLgImage, selectors: [[\"\", \"mat-card-lg-image\", \"\"], [\"\", \"matCardImageLarge\", \"\"]], hostAttrs: [1, \"mat-card-lg-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardLgImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-lg-image], [matCardImageLarge]',\n                host: { 'class': 'mat-card-lg-image' }\n            }]\n    }], null, null); })();\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardXlImage {\n}\nMatCardXlImage.ɵfac = function MatCardXlImage_Factory(t) { return new (t || MatCardXlImage)(); };\nMatCardXlImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardXlImage, selectors: [[\"\", \"mat-card-xl-image\", \"\"], [\"\", \"matCardImageXLarge\", \"\"]], hostAttrs: [1, \"mat-card-xl-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardXlImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-xl-image], [matCardImageXLarge]',\n                host: { 'class': 'mat-card-xl-image' }\n            }]\n    }], null, null); })();\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardAvatar {\n}\nMatCardAvatar.ɵfac = function MatCardAvatar_Factory(t) { return new (t || MatCardAvatar)(); };\nMatCardAvatar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardAvatar, selectors: [[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], hostAttrs: [1, \"mat-card-avatar\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardAvatar, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-avatar], [matCardAvatar]',\n                host: { 'class': 'mat-card-avatar' }\n            }]\n    }], null, null); })();\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - mat-card-title\n * - mat-card-subtitle\n * - mat-card-content\n * - mat-card-actions\n * - mat-card-footer\n */\nclass MatCard {\n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    /**\n     * @param {?=} _animationMode\n     */\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n    }\n}\nMatCard.ɵfac = function MatCard_Factory(t) { return new (t || MatCard)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatCard.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCard, selectors: [[\"mat-card\"]], hostAttrs: [1, \"mat-card\", \"mat-focus-indicator\"], hostVars: 2, hostBindings: function MatCard_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, exportAs: [\"matCard\"], ngContentSelectors: _c1, decls: 2, vars: 0, template: function MatCard_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n    } }, styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatCard.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCard, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card',\n                exportAs: 'matCard',\n                template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-card-footer\\\"></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'class': 'mat-card mat-focus-indicator',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"]\n            }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatCard.prototype._animationMode;\n}\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * \\@docs-private\n */\nclass MatCardHeader {\n}\nMatCardHeader.ɵfac = function MatCardHeader_Factory(t) { return new (t || MatCardHeader)(); };\nMatCardHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCardHeader, selectors: [[\"mat-card-header\"]], hostAttrs: [1, \"mat-card-header\"], ngContentSelectors: _c3, decls: 4, vars: 0, consts: [[1, \"mat-card-header-text\"]], template: function MatCardHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card-header',\n                template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content>\\n<div class=\\\"mat-card-header-text\\\">\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-header' }\n            }]\n    }], null, null); })();\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\n * layout that groups an image with a title section.\n * \\@docs-private\n */\nclass MatCardTitleGroup {\n}\nMatCardTitleGroup.ɵfac = function MatCardTitleGroup_Factory(t) { return new (t || MatCardTitleGroup)(); };\nMatCardTitleGroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCardTitleGroup, selectors: [[\"mat-card-title-group\"]], hostAttrs: [1, \"mat-card-title-group\"], ngContentSelectors: _c5, decls: 4, vars: 0, template: function MatCardTitleGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardTitleGroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card-title-group',\n                template: \"<div>\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"img\\\"></ng-content>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-title-group' }\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/card/card-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatCardModule {\n}\nMatCardModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCardModule });\nMatCardModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatCardModule_Factory(t) { return new (t || MatCardModule)(); }, imports: [[MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCardModule, { declarations: function () { return [MatCard,\n        MatCardHeader,\n        MatCardTitleGroup,\n        MatCardContent,\n        MatCardTitle,\n        MatCardSubtitle,\n        MatCardActions,\n        MatCardFooter,\n        MatCardSmImage,\n        MatCardMdImage,\n        MatCardLgImage,\n        MatCardImage,\n        MatCardXlImage,\n        MatCardAvatar]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatCard,\n        MatCardHeader,\n        MatCardTitleGroup,\n        MatCardContent,\n        MatCardTitle,\n        MatCardSubtitle,\n        MatCardActions,\n        MatCardFooter,\n        MatCardSmImage,\n        MatCardMdImage,\n        MatCardLgImage,\n        MatCardImage,\n        MatCardXlImage,\n        MatCardAvatar,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [\n                    MatCard,\n                    MatCardHeader,\n                    MatCardTitleGroup,\n                    MatCardContent,\n                    MatCardTitle,\n                    MatCardSubtitle,\n                    MatCardActions,\n                    MatCardFooter,\n                    MatCardSmImage,\n                    MatCardMdImage,\n                    MatCardLgImage,\n                    MatCardImage,\n                    MatCardXlImage,\n                    MatCardAvatar,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle,\n                    MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage,\n                    MatCardXlImage, MatCardAvatar,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/card/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardModule, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage };\n\n//# sourceMappingURL=card.js.map","import { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, NgZone, Attribute, Optional, Inject, Input, Output, ViewChild, Directive, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRipple, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ObserversModule } from '@angular/cdk/observers';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/checkbox/checkbox-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default `mat-checkbox` options that can be overridden.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/observers';\n\nconst _c0 = [\"input\"];\nconst _c1 = function () { return { enterDuration: 150 }; };\nconst _c2 = [\"*\"];\nfunction MatCheckboxDefaultOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    MatCheckboxDefaultOptions.prototype.color;\n    /** @type {?|undefined} */\n    MatCheckboxDefaultOptions.prototype.clickAction;\n}\n/**\n * Injection token to be used to override the default options for `mat-checkbox`.\n * @type {?}\n */\nconst MAT_CHECKBOX_DEFAULT_OPTIONS = new InjectionToken('mat-checkbox-default-options', {\n    providedIn: 'root',\n    factory: MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent',\n        clickAction: 'check-indeterminate',\n    };\n}\n/**\n * Injection token that can be used to specify the checkbox click behavior.\n * @deprecated Injection token will be removed, use `MAT_CHECKBOX_DEFAULT_OPTIONS` instead.\n * \\@breaking-change 10.0.0\n * @type {?}\n */\nconst MAT_CHECKBOX_CLICK_ACTION = new InjectionToken('mat-checkbox-click-action');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/checkbox/checkbox.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Increasing integer for generating unique ids for checkbox components.\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * Provider Expression that allows mat-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * \\@docs-private\n * @type {?}\n */\nconst MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatCheckbox)),\n    multi: true\n};\n/** @enum {number} */\nconst TransitionCheckState = {\n    /** The initial state of the component before any user interaction. */\n    Init: 0,\n    /** The state representing the component when it's becoming checked. */\n    Checked: 1,\n    /** The state representing the component when it's becoming unchecked. */\n    Unchecked: 2,\n    /** The state representing the component when it's becoming indeterminate. */\n    Indeterminate: 3,\n};\n/**\n * Change event object emitted by MatCheckbox.\n */\nclass MatCheckboxChange {\n}\nif (false) {\n    /**\n     * The source MatCheckbox of the event.\n     * @type {?}\n     */\n    MatCheckboxChange.prototype.source;\n    /**\n     * The new `checked` value of the checkbox.\n     * @type {?}\n     */\n    MatCheckboxChange.prototype.checked;\n}\n// Boilerplate for applying mixins to MatCheckbox.\n/**\n * \\@docs-private\n */\nclass MatCheckboxBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatCheckboxBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatCheckboxMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatCheckboxBase))));\n/**\n * A material design checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A MatCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n * See: https://material.io/design/components/selection-controls.html\n */\nclass MatCheckbox extends _MatCheckboxMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} _focusMonitor\n     * @param {?} _ngZone\n     * @param {?} tabIndex\n     * @param {?} _clickAction\n     * @param {?=} _animationMode\n     * @param {?=} _options\n     */\n    constructor(elementRef, _changeDetectorRef, _focusMonitor, _ngZone, tabIndex, _clickAction, _animationMode, _options) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._focusMonitor = _focusMonitor;\n        this._ngZone = _ngZone;\n        this._clickAction = _clickAction;\n        this._animationMode = _animationMode;\n        this._options = _options;\n        /**\n         * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n         * take precedence so this may be omitted.\n         */\n        this.ariaLabel = '';\n        /**\n         * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n         */\n        this.ariaLabelledby = null;\n        this._uniqueId = `mat-checkbox-${++nextUniqueId}`;\n        /**\n         * A unique id for the checkbox input. If none is supplied, it will be auto-generated.\n         */\n        this.id = this._uniqueId;\n        /**\n         * Whether the label should appear after or before the checkbox. Defaults to 'after'\n         */\n        this.labelPosition = 'after';\n        /**\n         * Name value will be applied to the input element if present\n         */\n        this.name = null;\n        /**\n         * Event emitted when the checkbox's `checked` value changes.\n         */\n        this.change = new EventEmitter();\n        /**\n         * Event emitted when the checkbox's `indeterminate` value changes.\n         */\n        this.indeterminateChange = new EventEmitter();\n        /**\n         * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n         * \\@docs-private\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this._currentAnimationClass = '';\n        this._currentCheckState = 0 /* Init */;\n        this._controlValueAccessorChangeFn = (/**\n         * @return {?}\n         */\n        () => { });\n        this._checked = false;\n        this._disabled = false;\n        this._indeterminate = false;\n        this._options = this._options || {};\n        if (this._options.color) {\n            this.color = this._options.color;\n        }\n        this.tabIndex = parseInt(tabIndex) || 0;\n        this._focusMonitor.monitor(elementRef, true).subscribe((/**\n         * @param {?} focusOrigin\n         * @return {?}\n         */\n        focusOrigin => {\n            if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state change\n                // (such as a form control's 'ng-touched') will cause a changed-after-checked error.\n                // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n                // telling the form control it has been touched until the next tick.\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._onTouched();\n                    _changeDetectorRef.markForCheck();\n                }));\n            }\n        }));\n        // TODO: Remove this after the `_clickAction` parameter is removed as an injection parameter.\n        this._clickAction = this._clickAction || this._options.clickAction;\n    }\n    /**\n     * Returns the unique id for the visual hidden input.\n     * @return {?}\n     */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    /**\n     * Whether the checkbox is required.\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this._syncIndeterminate(this._indeterminate);\n    }\n    // TODO: Delete next major revision.\n    /**\n     * @return {?}\n     */\n    ngAfterViewChecked() { }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Whether the checkbox is checked.\n     * @return {?}\n     */\n    get checked() { return this._checked; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set checked(value) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the checkbox is disabled. This fully overrides the implementation provided by\n     * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this.disabled) {\n            this._disabled = newValue;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     * @return {?}\n     */\n    get indeterminate() { return this._indeterminate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set indeterminate(value) {\n        /** @type {?} */\n        const changed = value != this._indeterminate;\n        this._indeterminate = coerceBooleanProperty(value);\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(3 /* Indeterminate */);\n            }\n            else {\n                this._transitionCheckState(this.checked ? 1 /* Checked */ : 2 /* Unchecked */);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n        this._syncIndeterminate(this._indeterminate);\n    }\n    /**\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /**\n     * Method being called whenever the label text changes.\n     * @return {?}\n     */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the checkbox\n        // component will be only marked for check, but no actual change detection runs automatically.\n        // Instead of going back into the zone in order to trigger a change detection which causes\n        // *all* components to be checked (if explicitly marked or not using OnPush), we only trigger\n        // an explicit change detection for the checkbox view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * @return {?}\n     */\n    _getAriaChecked() {\n        if (this.checked) {\n            return 'true';\n        }\n        return this.indeterminate ? 'mixed' : 'false';\n    }\n    /**\n     * @private\n     * @param {?} newState\n     * @return {?}\n     */\n    _transitionCheckState(newState) {\n        /** @type {?} */\n        let oldState = this._currentCheckState;\n        /** @type {?} */\n        let element = this._elementRef.nativeElement;\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n        this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(oldState, newState);\n        this._currentCheckState = newState;\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n            // Remove the animation class to avoid animation when the checkbox is moved between containers\n            /** @type {?} */\n            const animationClass = this._currentAnimationClass;\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                setTimeout((/**\n                 * @return {?}\n                 */\n                () => {\n                    element.classList.remove(animationClass);\n                }), 1000);\n            }));\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        /** @type {?} */\n        const event = new MatCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n    }\n    /**\n     * Toggles the `checked` state of the checkbox.\n     * @return {?}\n     */\n    toggle() {\n        this.checked = !this.checked;\n    }\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param {?} event\n     * @return {?}\n     */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && this._clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && this._clickAction !== 'check') {\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                }));\n            }\n            this.toggle();\n            this._transitionCheckState(this._checked ? 1 /* Checked */ : 2 /* Unchecked */);\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        }\n        else if (!this.disabled && this._clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mat-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n    /**\n     * Focuses the checkbox.\n     * @param {?=} origin\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(origin = 'keyboard', options) {\n        this._focusMonitor.focusVia(this._inputElement, origin, options);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onInteractionEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n    /**\n     * @private\n     * @param {?} oldState\n     * @param {?} newState\n     * @return {?}\n     */\n    _getAnimationClassForCheckStateTransition(oldState, newState) {\n        // Don't transition if animations are disabled.\n        if (this._animationMode === 'NoopAnimations') {\n            return '';\n        }\n        /** @type {?} */\n        let animSuffix = '';\n        switch (oldState) {\n            case 0 /* Init */:\n                // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\n                // [checked] bound to it.\n                if (newState === 1 /* Checked */) {\n                    animSuffix = 'unchecked-checked';\n                }\n                else if (newState == 3 /* Indeterminate */) {\n                    animSuffix = 'unchecked-indeterminate';\n                }\n                else {\n                    return '';\n                }\n                break;\n            case 2 /* Unchecked */:\n                animSuffix = newState === 1 /* Checked */ ?\n                    'unchecked-checked' : 'unchecked-indeterminate';\n                break;\n            case 1 /* Checked */:\n                animSuffix = newState === 2 /* Unchecked */ ?\n                    'checked-unchecked' : 'checked-indeterminate';\n                break;\n            case 3 /* Indeterminate */:\n                animSuffix = newState === 1 /* Checked */ ?\n                    'indeterminate-checked' : 'indeterminate-unchecked';\n                break;\n        }\n        return `mat-checkbox-anim-${animSuffix}`;\n    }\n    /**\n     * Syncs the indeterminate value with the checkbox DOM node.\n     *\n     * We sync `indeterminate` directly on the DOM node, because in Ivy the check for whether a\n     * property is supported on an element boils down to `if (propName in element)`. Domino's\n     * HTMLInputElement doesn't have an `indeterminate` property so Ivy will warn during\n     * server-side rendering.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _syncIndeterminate(value) {\n        /** @type {?} */\n        const nativeCheckbox = this._inputElement;\n        if (nativeCheckbox) {\n            nativeCheckbox.nativeElement.indeterminate = value;\n        }\n    }\n}\nMatCheckbox.ɵfac = function MatCheckbox_Factory(t) { return new (t || MatCheckbox)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_CHECKBOX_CLICK_ACTION, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_CHECKBOX_DEFAULT_OPTIONS, 8)); };\nMatCheckbox.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCheckbox, selectors: [[\"mat-checkbox\"]], viewQuery: function MatCheckbox_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(MatRipple, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ripple = _t.first);\n    } }, hostAttrs: [1, \"mat-checkbox\"], hostVars: 12, hostBindings: function MatCheckbox_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-checkbox-indeterminate\", ctx.indeterminate)(\"mat-checkbox-checked\", ctx.checked)(\"mat-checkbox-disabled\", ctx.disabled)(\"mat-checkbox-label-before\", ctx.labelPosition == \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], id: \"id\", labelPosition: \"labelPosition\", name: \"name\", required: \"required\", checked: \"checked\", disabled: \"disabled\", indeterminate: \"indeterminate\", value: \"value\" }, outputs: { change: \"change\", indeterminateChange: \"indeterminateChange\" }, exportAs: [\"matCheckbox\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 17, vars: 19, consts: [[1, \"mat-checkbox-layout\"], [\"label\", \"\"], [1, \"mat-checkbox-inner-container\"], [\"type\", \"checkbox\", 1, \"mat-checkbox-input\", \"cdk-visually-hidden\", 3, \"id\", \"required\", \"checked\", \"disabled\", \"tabIndex\", \"change\", \"click\"], [\"input\", \"\"], [\"matRipple\", \"\", 1, \"mat-checkbox-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleRadius\", \"matRippleCentered\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-checkbox-persistent-ripple\"], [1, \"mat-checkbox-frame\"], [1, \"mat-checkbox-background\"], [\"version\", \"1.1\", \"focusable\", \"false\", \"viewBox\", \"0 0 24 24\", 0, \"xml\", \"space\", \"preserve\", 1, \"mat-checkbox-checkmark\"], [\"fill\", \"none\", \"stroke\", \"white\", \"d\", \"M4.1,12.7 9,17.6 20.3,6.3\", 1, \"mat-checkbox-checkmark-path\"], [1, \"mat-checkbox-mixedmark\"], [1, \"mat-checkbox-label\", 3, \"cdkObserveContent\"], [\"checkboxLabel\", \"\"], [2, \"display\", \"none\"]], template: function MatCheckbox_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"input\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"change\", function MatCheckbox_Template_input_change_3_listener($event) { return ctx._onInteractionEvent($event); })(\"click\", function MatCheckbox_Template_input_click_3_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5);\n        ɵngcc0.ɵɵelement(6, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(7, \"div\", 7);\n        ɵngcc0.ɵɵelementStart(8, \"div\", 8);\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(9, \"svg\", 9);\n        ɵngcc0.ɵɵelement(10, \"path\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelement(11, \"div\", 11);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(12, \"span\", 12, 13);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatCheckbox_Template_span_cdkObserveContent_12_listener() { return ctx._onLabelTextChange(); });\n        ɵngcc0.ɵɵelementStart(14, \"span\", 14);\n        ɵngcc0.ɵɵtext(15, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(16);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        const _r2 = ɵngcc0.ɵɵreference(13);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-checkbox-inner-container-no-side-margin\", !_r2.textContent || !_r2.textContent.trim());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"required\", ctx.required)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵattribute(\"value\", ctx.value)(\"name\", ctx.name)(\"aria-label\", ctx.ariaLabel || null)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-checked\", ctx._getAriaChecked());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleRadius\", 20)(\"matRippleCentered\", true)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(18, _c1));\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.CdkObserveContent], styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox-layout{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.mat-checkbox.cdk-keyboard-focused .cdk-high-contrast-active .mat-checkbox-frame{border-style:dotted}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatCheckbox.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_CHECKBOX_CLICK_ACTION,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_CHECKBOX_DEFAULT_OPTIONS,] }] }\n];\nMatCheckbox.propDecorators = {\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    id: [{ type: Input }],\n    required: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    name: [{ type: Input }],\n    change: [{ type: Output }],\n    indeterminateChange: [{ type: Output }],\n    value: [{ type: Input }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }],\n    ripple: [{ type: ViewChild, args: [MatRipple,] }],\n    checked: [{ type: Input }],\n    disabled: [{ type: Input }],\n    indeterminate: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCheckbox, [{\n        type: Component,\n        args: [{\n                selector: 'mat-checkbox',\n                template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-checkbox-layout\\\" #label>\\n  <div class=\\\"mat-checkbox-inner-container\\\"\\n       [class.mat-checkbox-inner-container-no-side-margin]=\\\"!checkboxLabel.textContent || !checkboxLabel.textContent.trim()\\\">\\n    <input #input\\n           class=\\\"mat-checkbox-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [checked]=\\\"checked\\\"\\n           [attr.value]=\\\"value\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-checked]=\\\"_getAriaChecked()\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n    <div matRipple class=\\\"mat-checkbox-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n      <div class=\\\"mat-ripple-element mat-checkbox-persistent-ripple\\\"></div>\\n    </div>\\n    <div class=\\\"mat-checkbox-frame\\\"></div>\\n    <div class=\\\"mat-checkbox-background\\\">\\n      <svg version=\\\"1.1\\\"\\n           focusable=\\\"false\\\"\\n           class=\\\"mat-checkbox-checkmark\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           xml:space=\\\"preserve\\\">\\n        <path class=\\\"mat-checkbox-checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              stroke=\\\"white\\\"\\n              d=\\\"M4.1,12.7 9,17.6 20.3,6.3\\\"/>\\n      </svg>\\n      <!-- Element for rendering the indeterminate state checkbox. -->\\n      <div class=\\\"mat-checkbox-mixedmark\\\"></div>\\n    </div>\\n  </div>\\n  <span class=\\\"mat-checkbox-label\\\" #checkboxLabel (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                exportAs: 'matCheckbox',\n                host: {\n                    'class': 'mat-checkbox',\n                    '[id]': 'id',\n                    '[attr.tabindex]': 'null',\n                    '[class.mat-checkbox-indeterminate]': 'indeterminate',\n                    '[class.mat-checkbox-checked]': 'checked',\n                    '[class.mat-checkbox-disabled]': 'disabled',\n                    '[class.mat-checkbox-label-before]': 'labelPosition == \"before\"',\n                    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`\n                },\n                providers: [MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n                inputs: ['disableRipple', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox-layout{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.mat-checkbox.cdk-keyboard-focused .cdk-high-contrast-active .mat-checkbox-frame{border-style:dotted}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_CHECKBOX_CLICK_ACTION]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_CHECKBOX_DEFAULT_OPTIONS]\n            }] }]; }, { ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], id: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], change: [{\n            type: Output\n        }], indeterminateChange: [{\n            type: Output\n        }], required: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], indeterminate: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }], ripple: [{\n            type: ViewChild,\n            args: [MatRipple]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatCheckbox.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatCheckbox.ngAcceptInputType_required;\n    /** @type {?} */\n    MatCheckbox.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatCheckbox.ngAcceptInputType_indeterminate;\n    /**\n     * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n     * take precedence so this may be omitted.\n     * @type {?}\n     */\n    MatCheckbox.prototype.ariaLabel;\n    /**\n     * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n     * @type {?}\n     */\n    MatCheckbox.prototype.ariaLabelledby;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._uniqueId;\n    /**\n     * A unique id for the checkbox input. If none is supplied, it will be auto-generated.\n     * @type {?}\n     */\n    MatCheckbox.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._required;\n    /**\n     * Whether the label should appear after or before the checkbox. Defaults to 'after'\n     * @type {?}\n     */\n    MatCheckbox.prototype.labelPosition;\n    /**\n     * Name value will be applied to the input element if present\n     * @type {?}\n     */\n    MatCheckbox.prototype.name;\n    /**\n     * Event emitted when the checkbox's `checked` value changes.\n     * @type {?}\n     */\n    MatCheckbox.prototype.change;\n    /**\n     * Event emitted when the checkbox's `indeterminate` value changes.\n     * @type {?}\n     */\n    MatCheckbox.prototype.indeterminateChange;\n    /**\n     * The value attribute of the native input element\n     * @type {?}\n     */\n    MatCheckbox.prototype.value;\n    /**\n     * The native `<input type=\"checkbox\">` element\n     * @type {?}\n     */\n    MatCheckbox.prototype._inputElement;\n    /**\n     * Reference to the ripple instance of the checkbox.\n     * @type {?}\n     */\n    MatCheckbox.prototype.ripple;\n    /**\n     * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatCheckbox.prototype._onTouched;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._currentAnimationClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._currentCheckState;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._controlValueAccessorChangeFn;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._checked;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._indeterminate;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._ngZone;\n    /**\n     * @deprecated `_clickAction` parameter to be removed, use\n     * `MAT_CHECKBOX_DEFAULT_OPTIONS`\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._clickAction;\n    /** @type {?} */\n    MatCheckbox.prototype._animationMode;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._options;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/checkbox/checkbox-required-validator.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAT_CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatCheckboxRequiredValidator)),\n    multi: true\n};\n/**\n * Validator for Material checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mat-checkbox`.\n */\nclass MatCheckboxRequiredValidator extends CheckboxRequiredValidator {\n}\nMatCheckboxRequiredValidator.ɵfac = function MatCheckboxRequiredValidator_Factory(t) { return ɵMatCheckboxRequiredValidator_BaseFactory(t || MatCheckboxRequiredValidator); };\nMatCheckboxRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCheckboxRequiredValidator, selectors: [[\"mat-checkbox\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"formControl\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([MAT_CHECKBOX_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatCheckboxRequiredValidator_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatCheckboxRequiredValidator);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCheckboxRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: `mat-checkbox[required][formControlName],\n             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]`,\n                providers: [MAT_CHECKBOX_REQUIRED_VALIDATOR]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/checkbox/checkbox-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This module is used by both original and MDC-based checkbox implementations.\n */\n// tslint:disable-next-line:class-name\nclass _MatCheckboxRequiredValidatorModule {\n}\n_MatCheckboxRequiredValidatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: _MatCheckboxRequiredValidatorModule });\n_MatCheckboxRequiredValidatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function _MatCheckboxRequiredValidatorModule_Factory(t) { return new (t || _MatCheckboxRequiredValidatorModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatCheckboxRequiredValidatorModule, { declarations: [MatCheckboxRequiredValidator], exports: [MatCheckboxRequiredValidator] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatCheckboxRequiredValidatorModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatCheckboxRequiredValidator],\n                declarations: [MatCheckboxRequiredValidator]\n            }]\n    }], null, null); })();\nclass MatCheckboxModule {\n}\nMatCheckboxModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCheckboxModule });\nMatCheckboxModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatCheckboxModule_Factory(t) { return new (t || MatCheckboxModule)(); }, imports: [[\n            MatRippleModule, MatCommonModule, ObserversModule,\n            _MatCheckboxRequiredValidatorModule\n        ],\n        MatCommonModule,\n        _MatCheckboxRequiredValidatorModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCheckboxModule, { declarations: function () { return [MatCheckbox]; }, imports: function () { return [MatRippleModule, MatCommonModule, ObserversModule,\n        _MatCheckboxRequiredValidatorModule]; }, exports: function () { return [MatCheckbox,\n        MatCommonModule,\n        _MatCheckboxRequiredValidatorModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCheckboxModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    MatRippleModule, MatCommonModule, ObserversModule,\n                    _MatCheckboxRequiredValidatorModule\n                ],\n                exports: [MatCheckbox, MatCommonModule, _MatCheckboxRequiredValidatorModule],\n                declarations: [MatCheckbox]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/checkbox/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHECKBOX_CLICK_ACTION, MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR, MAT_CHECKBOX_DEFAULT_OPTIONS, MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY, MAT_CHECKBOX_REQUIRED_VALIDATOR, MatCheckbox, MatCheckboxChange, MatCheckboxModule, MatCheckboxRequiredValidator, _MatCheckboxRequiredValidatorModule };\n\n//# sourceMappingURL=checkbox.js.map","import { SPACE, BACKSPACE, DELETE, HOME, END, TAB, hasModifierKey, ENTER } from '@angular/cdk/keycodes';\nimport { Directive, EventEmitter, ElementRef, NgZone, Optional, Inject, ChangeDetectorRef, Attribute, ContentChild, forwardRef, Input, Output, InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Self, ContentChildren, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, RippleRenderer, MAT_RIPPLE_GLOBAL_OPTIONS, mixinErrorState, ErrorStateMatcher } from '@angular/material/core';\nimport { DOCUMENT } from '@angular/common';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Platform } from '@angular/cdk/platform';\nimport { Subject, merge } from 'rxjs';\nimport { take, takeUntil, startWith } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { NgForm, FormGroupDirective, NgControl } from '@angular/forms';\nimport { MatFormFieldControl } from '@angular/material/form-field';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chip.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Represents an event fired on an individual `mat-chip`.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/forms';\nimport * as ɵngcc4 from '@angular/material/core';\n\nconst _c0 = [\"*\"];\nfunction MatChipEvent() { }\nif (false) {\n    /**\n     * The chip the event was fired on.\n     * @type {?}\n     */\n    MatChipEvent.prototype.chip;\n}\n/**\n * Event object emitted by MatChip when selected or deselected.\n */\nclass MatChipSelectionChange {\n    /**\n     * @param {?} source\n     * @param {?} selected\n     * @param {?=} isUserInput\n     */\n    constructor(source, selected, isUserInput = false) {\n        this.source = source;\n        this.selected = selected;\n        this.isUserInput = isUserInput;\n    }\n}\nif (false) {\n    /**\n     * Reference to the chip that emitted the event.\n     * @type {?}\n     */\n    MatChipSelectionChange.prototype.source;\n    /**\n     * Whether the chip that emitted the event is selected.\n     * @type {?}\n     */\n    MatChipSelectionChange.prototype.selected;\n    /**\n     * Whether the selection change was a result of a user interaction.\n     * @type {?}\n     */\n    MatChipSelectionChange.prototype.isUserInput;\n}\n// Boilerplate for applying mixins to MatChip.\n/**\n * \\@docs-private\n */\nclass MatChipBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatChipBase.prototype.disabled;\n    /** @type {?} */\n    MatChipBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatChipMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(MatChipBase), 'primary'), -1);\n/**\n * Dummy directive to add CSS class to chip avatar.\n * \\@docs-private\n */\nclass MatChipAvatar {\n}\nMatChipAvatar.ɵfac = function MatChipAvatar_Factory(t) { return new (t || MatChipAvatar)(); };\nMatChipAvatar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipAvatar, selectors: [[\"mat-chip-avatar\"], [\"\", \"matChipAvatar\", \"\"]], hostAttrs: [1, \"mat-chip-avatar\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipAvatar, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-chip-avatar, [matChipAvatar]',\n                host: { 'class': 'mat-chip-avatar' }\n            }]\n    }], null, null); })();\n/**\n * Dummy directive to add CSS class to chip trailing icon.\n * \\@docs-private\n */\nclass MatChipTrailingIcon {\n}\nMatChipTrailingIcon.ɵfac = function MatChipTrailingIcon_Factory(t) { return new (t || MatChipTrailingIcon)(); };\nMatChipTrailingIcon.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipTrailingIcon, selectors: [[\"mat-chip-trailing-icon\"], [\"\", \"matChipTrailingIcon\", \"\"]], hostAttrs: [1, \"mat-chip-trailing-icon\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipTrailingIcon, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-chip-trailing-icon, [matChipTrailingIcon]',\n                host: { 'class': 'mat-chip-trailing-icon' }\n            }]\n    }], null, null); })();\n/**\n * Material design styled Chip component. Used inside the MatChipList component.\n */\nclass MatChip extends _MatChipMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?} platform\n     * @param {?} globalRippleOptions\n     * @param {?=} animationMode\n     * @param {?=} _changeDetectorRef\n     * @param {?=} tabIndex\n     * @param {?=} _document\n     */\n    constructor(_elementRef, _ngZone, platform, globalRippleOptions, \n    // @breaking-change 8.0.0 `animationMode` parameter to become required.\n    animationMode, _changeDetectorRef, tabIndex, \n    // @breaking-change 11.0.0 `_document` parameter to become required.\n    _document) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Whether the chip has focus.\n         */\n        this._hasFocus = false;\n        /**\n         * Whether the chip list is selectable\n         */\n        this.chipListSelectable = true;\n        /**\n         * Whether the chip list is in multi-selection mode.\n         */\n        this._chipListMultiple = false;\n        /**\n         * Whether the chip list as a whole is disabled.\n         */\n        this._chipListDisabled = false;\n        this._selected = false;\n        this._selectable = true;\n        this._disabled = false;\n        this._removable = true;\n        /**\n         * Emits when the chip is focused.\n         */\n        this._onFocus = new Subject();\n        /**\n         * Emits when the chip is blured.\n         */\n        this._onBlur = new Subject();\n        /**\n         * Emitted when the chip is selected or deselected.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Emitted when the chip is destroyed.\n         */\n        this.destroyed = new EventEmitter();\n        /**\n         * Emitted when a chip is to be removed.\n         */\n        this.removed = new EventEmitter();\n        this._addHostClassName();\n        // Dynamically create the ripple target, append it within the chip, and use it as the\n        // chip's ripple target. Adding the class '.mat-chip-ripple' ensures that it will have\n        // the proper styles.\n        this._chipRippleTarget = (_document || document).createElement('div');\n        this._chipRippleTarget.classList.add('mat-chip-ripple');\n        this._elementRef.nativeElement.appendChild(this._chipRippleTarget);\n        this._chipRipple = new RippleRenderer(this, _ngZone, this._chipRippleTarget, platform);\n        this._chipRipple.setupTriggerEvents(_elementRef);\n        this.rippleConfig = globalRippleOptions || {};\n        this._animationsDisabled = animationMode === 'NoopAnimations';\n        this.tabIndex = tabIndex != null ? (parseInt(tabIndex) || -1) : -1;\n    }\n    /**\n     * Whether ripples are disabled on interaction\n     * \\@docs-private\n     * @return {?}\n     */\n    get rippleDisabled() {\n        return this.disabled || this.disableRipple || !!this.rippleConfig.disabled;\n    }\n    /**\n     * Whether the chip is selected.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        /** @type {?} */\n        const coercedValue = coerceBooleanProperty(value);\n        if (coercedValue !== this._selected) {\n            this._selected = coercedValue;\n            this._dispatchSelectionChange();\n        }\n    }\n    /**\n     * The value of the chip. Defaults to the content inside `<mat-chip>` tags.\n     * @return {?}\n     */\n    get value() {\n        return this._value !== undefined\n            ? this._value\n            : this._elementRef.nativeElement.textContent;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) { this._value = value; }\n    /**\n     * Whether or not the chip is selectable. When a chip is not selectable,\n     * changes to its selected state are always ignored. By default a chip is\n     * selectable, and it becomes non-selectable if its parent chip list is\n     * not selectable.\n     * @return {?}\n     */\n    get selectable() { return this._selectable && this.chipListSelectable; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectable(value) {\n        this._selectable = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the chip is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._chipListDisabled || this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * Determines whether or not the chip displays the remove styling and emits (removed) events.\n     * @return {?}\n     */\n    get removable() { return this._removable; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set removable(value) {\n        this._removable = coerceBooleanProperty(value);\n    }\n    /**\n     * The ARIA selected applied to the chip.\n     * @return {?}\n     */\n    get ariaSelected() {\n        // Remove the `aria-selected` when the chip is deselected in single-selection mode, because\n        // it adds noise to NVDA users where \"not selected\" will be read out for each chip.\n        return this.selectable && (this._chipListMultiple || this.selected) ?\n            this.selected.toString() : null;\n    }\n    /**\n     * @return {?}\n     */\n    _addHostClassName() {\n        /** @type {?} */\n        const basicChipAttrName = 'mat-basic-chip';\n        /** @type {?} */\n        const element = (/** @type {?} */ (this._elementRef.nativeElement));\n        if (element.hasAttribute(basicChipAttrName) ||\n            element.tagName.toLowerCase() === basicChipAttrName) {\n            element.classList.add(basicChipAttrName);\n            return;\n        }\n        else {\n            element.classList.add('mat-standard-chip');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.destroyed.emit({ chip: this });\n        this._chipRipple._removeTriggerEvents();\n    }\n    /**\n     * Selects the chip.\n     * @return {?}\n     */\n    select() {\n        if (!this._selected) {\n            this._selected = true;\n            this._dispatchSelectionChange();\n            this._markForCheck();\n        }\n    }\n    /**\n     * Deselects the chip.\n     * @return {?}\n     */\n    deselect() {\n        if (this._selected) {\n            this._selected = false;\n            this._dispatchSelectionChange();\n            this._markForCheck();\n        }\n    }\n    /**\n     * Select this chip and emit selected event\n     * @return {?}\n     */\n    selectViaInteraction() {\n        if (!this._selected) {\n            this._selected = true;\n            this._dispatchSelectionChange(true);\n            this._markForCheck();\n        }\n    }\n    /**\n     * Toggles the current selected state of this chip.\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    toggleSelected(isUserInput = false) {\n        this._selected = !this.selected;\n        this._dispatchSelectionChange(isUserInput);\n        this._markForCheck();\n        return this.selected;\n    }\n    /**\n     * Allows for programmatic focusing of the chip.\n     * @return {?}\n     */\n    focus() {\n        if (!this._hasFocus) {\n            this._elementRef.nativeElement.focus();\n            this._onFocus.next({ chip: this });\n        }\n        this._hasFocus = true;\n    }\n    /**\n     * Allows for programmatic removal of the chip. Called by the MatChipList when the DELETE or\n     * BACKSPACE keys are pressed.\n     *\n     * Informs any listeners of the removal request. Does not remove the chip from the DOM.\n     * @return {?}\n     */\n    remove() {\n        if (this.removable) {\n            this.removed.emit({ chip: this });\n        }\n    }\n    /**\n     * Handles click events on the chip.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClick(event) {\n        if (this.disabled) {\n            event.preventDefault();\n        }\n        else {\n            event.stopPropagation();\n        }\n    }\n    /**\n     * Handle custom key presses.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if (this.disabled) {\n            return;\n        }\n        switch (event.keyCode) {\n            case DELETE:\n            case BACKSPACE:\n                // If we are removable, remove the focused chip\n                this.remove();\n                // Always prevent so page navigation does not occur\n                event.preventDefault();\n                break;\n            case SPACE:\n                // If we are selectable, toggle the focused chip\n                if (this.selectable) {\n                    this.toggleSelected(true);\n                }\n                // Always prevent space from scrolling the page since the list has focus\n                event.preventDefault();\n                break;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _blur() {\n        // When animations are enabled, Angular may end up removing the chip from the DOM a little\n        // earlier than usual, causing it to be blurred and throwing off the logic in the chip list\n        // that moves focus not the next item. To work around the issue, we defer marking the chip\n        // as not focused until the next time the zone stabilizes.\n        this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                this._hasFocus = false;\n                this._onBlur.next({ chip: this });\n            }));\n        }));\n    }\n    /**\n     * @private\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    _dispatchSelectionChange(isUserInput = false) {\n        this.selectionChange.emit({\n            source: this,\n            isUserInput,\n            selected: this._selected\n        });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _markForCheck() {\n        // @breaking-change 9.0.0 Remove this method once the _changeDetectorRef is a required param.\n        if (this._changeDetectorRef) {\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n}\nMatChip.ɵfac = function MatChip_Factory(t) { return new (t || MatChip)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nMatChip.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChip, selectors: [[\"mat-basic-chip\"], [\"\", \"mat-basic-chip\", \"\"], [\"mat-chip\"], [\"\", \"mat-chip\", \"\"]], contentQueries: function MatChip_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatChipAvatar, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatChipTrailingIcon, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatChipRemove, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trailingIcon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.removeIcon = _t.first);\n    } }, hostAttrs: [\"role\", \"option\", 1, \"mat-chip\", \"mat-focus-indicator\"], hostVars: 14, hostBindings: function MatChip_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatChip_click_HostBindingHandler($event) { return ctx._handleClick($event); })(\"keydown\", function MatChip_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"focus\", function MatChip_focus_HostBindingHandler() { return ctx.focus(); })(\"blur\", function MatChip_blur_HostBindingHandler() { return ctx._blur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : ctx.tabIndex)(\"disabled\", ctx.disabled || null)(\"aria-disabled\", ctx.disabled.toString())(\"aria-selected\", ctx.ariaSelected);\n        ɵngcc0.ɵɵclassProp(\"mat-chip-selected\", ctx.selected)(\"mat-chip-with-avatar\", ctx.avatar)(\"mat-chip-with-trailing-icon\", ctx.trailingIcon || ctx.removeIcon)(\"mat-chip-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationsDisabled);\n    } }, inputs: { color: \"color\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", selected: \"selected\", value: \"value\", selectable: \"selectable\", disabled: \"disabled\", removable: \"removable\" }, outputs: { selectionChange: \"selectionChange\", destroyed: \"destroyed\", removed: \"removed\" }, exportAs: [\"matChip\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatChip.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nMatChip.propDecorators = {\n    avatar: [{ type: ContentChild, args: [MatChipAvatar,] }],\n    trailingIcon: [{ type: ContentChild, args: [MatChipTrailingIcon,] }],\n    removeIcon: [{ type: ContentChild, args: [forwardRef((/**\n                 * @return {?}\n                 */\n                () => MatChipRemove)),] }],\n    selected: [{ type: Input }],\n    value: [{ type: Input }],\n    selectable: [{ type: Input }],\n    disabled: [{ type: Input }],\n    removable: [{ type: Input }],\n    selectionChange: [{ type: Output }],\n    destroyed: [{ type: Output }],\n    removed: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChip, [{\n        type: Directive,\n        args: [{\n                selector: `mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]`,\n                inputs: ['color', 'disableRipple', 'tabIndex'],\n                exportAs: 'matChip',\n                host: {\n                    'class': 'mat-chip mat-focus-indicator',\n                    '[attr.tabindex]': 'disabled ? null : tabIndex',\n                    'role': 'option',\n                    '[class.mat-chip-selected]': 'selected',\n                    '[class.mat-chip-with-avatar]': 'avatar',\n                    '[class.mat-chip-with-trailing-icon]': 'trailingIcon || removeIcon',\n                    '[class.mat-chip-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationsDisabled',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-selected]': 'ariaSelected',\n                    '(click)': '_handleClick($event)',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': 'focus()',\n                    '(blur)': '_blur()'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { selectionChange: [{\n            type: Output\n        }], destroyed: [{\n            type: Output\n        }], removed: [{\n            type: Output\n        }], selected: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], selectable: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], removable: [{\n            type: Input\n        }], avatar: [{\n            type: ContentChild,\n            args: [MatChipAvatar]\n        }], trailingIcon: [{\n            type: ContentChild,\n            args: [MatChipTrailingIcon]\n        }], removeIcon: [{\n            type: ContentChild,\n            args: [forwardRef(( /**\n                             * @return {?}\n                             */() => MatChipRemove))]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatChip.ngAcceptInputType_selected;\n    /** @type {?} */\n    MatChip.ngAcceptInputType_selectable;\n    /** @type {?} */\n    MatChip.ngAcceptInputType_removable;\n    /** @type {?} */\n    MatChip.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatChip.ngAcceptInputType_disableRipple;\n    /**\n     * Reference to the RippleRenderer for the chip.\n     * @type {?}\n     * @private\n     */\n    MatChip.prototype._chipRipple;\n    /**\n     * Reference to the element that acts as the chip's ripple target. This element is\n     * dynamically added as a child node of the chip. The chip itself cannot be used as the\n     * ripple target because it must be the host of the focus indicator.\n     * @type {?}\n     * @private\n     */\n    MatChip.prototype._chipRippleTarget;\n    /**\n     * Ripple configuration for ripples that are launched on pointer down. The ripple config\n     * is set to the global ripple options since we don't have any configurable options for\n     * the chip ripples.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChip.prototype.rippleConfig;\n    /**\n     * Whether the chip has focus.\n     * @type {?}\n     */\n    MatChip.prototype._hasFocus;\n    /**\n     * Whether animations for the chip are enabled.\n     * @type {?}\n     */\n    MatChip.prototype._animationsDisabled;\n    /**\n     * Whether the chip list is selectable\n     * @type {?}\n     */\n    MatChip.prototype.chipListSelectable;\n    /**\n     * Whether the chip list is in multi-selection mode.\n     * @type {?}\n     */\n    MatChip.prototype._chipListMultiple;\n    /**\n     * Whether the chip list as a whole is disabled.\n     * @type {?}\n     */\n    MatChip.prototype._chipListDisabled;\n    /**\n     * The chip avatar\n     * @type {?}\n     */\n    MatChip.prototype.avatar;\n    /**\n     * The chip's trailing icon.\n     * @type {?}\n     */\n    MatChip.prototype.trailingIcon;\n    /**\n     * The chip's remove toggler.\n     * @type {?}\n     */\n    MatChip.prototype.removeIcon;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChip.prototype._selected;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChip.prototype._value;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChip.prototype._selectable;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChip.prototype._disabled;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChip.prototype._removable;\n    /**\n     * Emits when the chip is focused.\n     * @type {?}\n     */\n    MatChip.prototype._onFocus;\n    /**\n     * Emits when the chip is blured.\n     * @type {?}\n     */\n    MatChip.prototype._onBlur;\n    /**\n     * Emitted when the chip is selected or deselected.\n     * @type {?}\n     */\n    MatChip.prototype.selectionChange;\n    /**\n     * Emitted when the chip is destroyed.\n     * @type {?}\n     */\n    MatChip.prototype.destroyed;\n    /**\n     * Emitted when a chip is to be removed.\n     * @type {?}\n     */\n    MatChip.prototype.removed;\n    /** @type {?} */\n    MatChip.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChip.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChip.prototype._changeDetectorRef;\n}\n/**\n * Applies proper (click) support and adds styling for use with the Material Design \"cancel\" icon\n * available at https://material.io/icons/#ic_cancel.\n *\n * Example:\n *\n *     `<mat-chip>\n *       <mat-icon matChipRemove>cancel</mat-icon>\n *     </mat-chip>`\n *\n * You *may* use a custom icon, but you may need to override the `mat-chip-remove` positioning\n * styles to properly center the icon within the chip.\n */\nclass MatChipRemove {\n    /**\n     * @param {?} _parentChip\n     * @param {?=} elementRef\n     */\n    constructor(_parentChip, \n    // @breaking-change 11.0.0 `elementRef` parameter to be made required.\n    elementRef) {\n        this._parentChip = _parentChip;\n        // @breaking-change 11.0.0 Remove null check for `elementRef`.\n        if (elementRef && elementRef.nativeElement.nodeName === 'BUTTON') {\n            elementRef.nativeElement.setAttribute('type', 'button');\n        }\n    }\n    /**\n     * Calls the parent chip's public `remove()` method if applicable.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClick(event) {\n        /** @type {?} */\n        const parentChip = this._parentChip;\n        if (parentChip.removable && !parentChip.disabled) {\n            parentChip.remove();\n        }\n        // We need to stop event propagation because otherwise the event will bubble up to the\n        // form field and cause the `onContainerClick` method to be invoked. This method would then\n        // reset the focused chip that has been focused after chip removal. Usually the parent\n        // the parent click listener of the `MatChip` would prevent propagation, but it can happen\n        // that the chip is being removed before the event bubbles up.\n        event.stopPropagation();\n    }\n}\nMatChipRemove.ɵfac = function MatChipRemove_Factory(t) { return new (t || MatChipRemove)(ɵngcc0.ɵɵdirectiveInject(MatChip), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatChipRemove.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipRemove, selectors: [[\"\", \"matChipRemove\", \"\"]], hostAttrs: [1, \"mat-chip-remove\", \"mat-chip-trailing-icon\"], hostBindings: function MatChipRemove_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatChipRemove_click_HostBindingHandler($event) { return ctx._handleClick($event); });\n    } } });\n/** @nocollapse */\nMatChipRemove.ctorParameters = () => [\n    { type: MatChip },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipRemove, [{\n        type: Directive,\n        args: [{\n                selector: '[matChipRemove]',\n                host: {\n                    'class': 'mat-chip-remove mat-chip-trailing-icon',\n                    '(click)': '_handleClick($event)'\n                }\n            }]\n    }], function () { return [{ type: MatChip }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipRemove.prototype._parentChip;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chip-default-options.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default options, for the chips module, that can be overridden.\n * @record\n */\nfunction MatChipsDefaultOptions() { }\nif (false) {\n    /**\n     * The list of key codes that will trigger a chipEnd event.\n     * @type {?}\n     */\n    MatChipsDefaultOptions.prototype.separatorKeyCodes;\n}\n/**\n * Injection token to be used to override the default options for the chips module.\n * @type {?}\n */\nconst MAT_CHIPS_DEFAULT_OPTIONS = new InjectionToken('mat-chips-default-options');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chip-list.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatChipList.\n/**\n * \\@docs-private\n */\nclass MatChipListBase {\n    /**\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} ngControl\n     */\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatChipListBase.prototype._defaultErrorStateMatcher;\n    /** @type {?} */\n    MatChipListBase.prototype._parentForm;\n    /** @type {?} */\n    MatChipListBase.prototype._parentFormGroup;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChipListBase.prototype.ngControl;\n}\n/** @type {?} */\nconst _MatChipListMixinBase = mixinErrorState(MatChipListBase);\n// Increasing integer for generating unique ids for chip-list components.\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * Change event object that is emitted when the chip list value has changed.\n */\nclass MatChipListChange {\n    /**\n     * @param {?} source\n     * @param {?} value\n     */\n    constructor(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n}\nif (false) {\n    /**\n     * Chip list that emitted the event.\n     * @type {?}\n     */\n    MatChipListChange.prototype.source;\n    /**\n     * Value of the chip list when the event was emitted.\n     * @type {?}\n     */\n    MatChipListChange.prototype.value;\n}\n/**\n * A material design chips component (named ChipList for its similarity to the List component).\n */\nclass MatChipList extends _MatChipListMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} _dir\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} ngControl\n     */\n    constructor(_elementRef, _changeDetectorRef, _dir, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, ngControl) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this.ngControl = ngControl;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.controlType = 'mat-chip-list';\n        /**\n         * When a chip is destroyed, we store the index of the destroyed chip until the chips\n         * query list notifies about the update. This is necessary because we cannot determine an\n         * appropriate chip that should receive focus until the array of chips updated completely.\n         */\n        this._lastDestroyedChipIndex = null;\n        /**\n         * Subject that emits when the component has been destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Uid of the chip list\n         */\n        this._uid = `mat-chip-list-${nextUniqueId++}`;\n        /**\n         * Tab index for the chip list.\n         */\n        this._tabIndex = 0;\n        /**\n         * User defined tab index.\n         * When it is not null, use user defined tab index. Otherwise use _tabIndex\n         */\n        this._userTabIndex = null;\n        /**\n         * Function when touched\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * Function when changed\n         */\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this._multiple = false;\n        this._compareWith = (/**\n         * @param {?} o1\n         * @param {?} o2\n         * @return {?}\n         */\n        (o1, o2) => o1 === o2);\n        this._required = false;\n        this._disabled = false;\n        /**\n         * Orientation of the chip list.\n         */\n        this.ariaOrientation = 'horizontal';\n        this._selectable = true;\n        /**\n         * Event emitted when the selected chip list value has been changed by the user.\n         */\n        this.change = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the chip-list changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * \\@docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            this.ngControl.valueAccessor = this;\n        }\n    }\n    /**\n     * The array of selected chips inside chip list.\n     * @return {?}\n     */\n    get selected() {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /**\n     * The ARIA role applied to the chip list.\n     * @return {?}\n     */\n    get role() { return this.empty ? null : 'listbox'; }\n    /**\n     * Whether the user should be allowed to select multiple chips.\n     * @return {?}\n     */\n    get multiple() { return this._multiple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set multiple(value) {\n        this._multiple = coerceBooleanProperty(value);\n        this._syncChipsState();\n    }\n    /**\n     * A function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     * @return {?}\n     */\n    get compareWith() { return this._compareWith; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set compareWith(fn) {\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        this.writeValue(value);\n        this._value = value;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get id() {\n        return this._chipInput ? this._chipInput.id : this._uid;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get placeholder() {\n        return this._chipInput ? this._chipInput.placeholder : this._placeholder;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /**\n     * Whether any chips or the matChipInput inside of this chip-list has focus.\n     * @return {?}\n     */\n    get focused() {\n        return (this._chipInput && this._chipInput.focused) || this._hasFocusedChip();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get empty() {\n        return (!this._chipInput || this._chipInput.empty) && this.chips.length === 0;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() { return !this.empty || this.focused; }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get disabled() { return this.ngControl ? !!this.ngControl.disabled : this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._syncChipsState();\n    }\n    /**\n     * Whether or not this chip list is selectable. When a chip list is not selectable,\n     * the selected states for all the chips inside the chip list are always ignored.\n     * @return {?}\n     */\n    get selectable() { return this._selectable; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectable(value) {\n        this._selectable = coerceBooleanProperty(value);\n        if (this.chips) {\n            this.chips.forEach((/**\n             * @param {?} chip\n             * @return {?}\n             */\n            chip => chip.chipListSelectable = this._selectable));\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set tabIndex(value) {\n        this._userTabIndex = value;\n        this._tabIndex = value;\n    }\n    /**\n     * Combined stream of all of the child chips' selection change events.\n     * @return {?}\n     */\n    get chipSelectionChanges() {\n        return merge(...this.chips.map((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip.selectionChange)));\n    }\n    /**\n     * Combined stream of all of the child chips' focus change events.\n     * @return {?}\n     */\n    get chipFocusChanges() {\n        return merge(...this.chips.map((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip._onFocus)));\n    }\n    /**\n     * Combined stream of all of the child chips' blur change events.\n     * @return {?}\n     */\n    get chipBlurChanges() {\n        return merge(...this.chips.map((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip._onBlur)));\n    }\n    /**\n     * Combined stream of all of the child chips' remove change events.\n     * @return {?}\n     */\n    get chipRemoveChanges() {\n        return merge(...this.chips.map((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip.destroyed)));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager(this.chips)\n            .withWrap()\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._dir ? this._dir.value : 'ltr');\n        if (this._dir) {\n            this._dir.change\n                .pipe(takeUntil(this._destroyed))\n                .subscribe((/**\n             * @param {?} dir\n             * @return {?}\n             */\n            dir => this._keyManager.withHorizontalOrientation(dir)));\n        }\n        this._keyManager.tabOut.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._allowFocusEscape();\n        }));\n        // When the list changes, re-subscribe\n        this.chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this.disabled) {\n                // Since this happens after the content has been\n                // checked, we need to defer it to the next tick.\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._syncChipsState();\n                }));\n            }\n            this._resetChips();\n            // Reset chips selected/deselected status\n            this._initializeSelection();\n            // Check to see if we need to update our tab index\n            this._updateTabIndex();\n            // Check to see if we have a destroyed chip and need to refocus\n            this._updateFocusForDestroyedChips();\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple, undefined, false);\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n            if (this.ngControl.disabled !== this._disabled) {\n                this.disabled = !!this.ngControl.disabled;\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this.stateChanges.complete();\n        this._dropSubscriptions();\n    }\n    /**\n     * Associates an HTML input element with this chip list.\n     * @param {?} inputElement\n     * @return {?}\n     */\n    registerInput(inputElement) {\n        this._chipInput = inputElement;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) { this._ariaDescribedby = ids.join(' '); }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        if (this.chips) {\n            this._setSelectionByValue(value, false);\n        }\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} event\n     * @return {?}\n     */\n    onContainerClick(event) {\n        if (!this._originatesFromChip(event)) {\n            this.focus();\n        }\n    }\n    /**\n     * Focuses the first non-disabled chip in this chip list, or the associated input when there\n     * are no eligible chips.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        if (this.disabled) {\n            return;\n        }\n        // TODO: ARIA says this should focus the first `selected` chip if any are selected.\n        // Focus on first element if there's no chipInput inside chip-list\n        if (this._chipInput && this._chipInput.focused) {\n            // do nothing\n        }\n        else if (this.chips.length > 0) {\n            this._keyManager.setFirstItemActive();\n            this.stateChanges.next();\n        }\n        else {\n            this._focusInput(options);\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Attempt to focus an input if we have one.\n     * @param {?=} options\n     * @return {?}\n     */\n    _focusInput(options) {\n        if (this._chipInput) {\n            this._chipInput.focus(options);\n        }\n    }\n    /**\n     * Pass events to the keyboard manager. Available here for tests.\n     * @param {?} event\n     * @return {?}\n     */\n    _keydown(event) {\n        /** @type {?} */\n        const target = (/** @type {?} */ (event.target));\n        // If they are on an empty input and hit backspace, focus the last chip\n        if (event.keyCode === BACKSPACE && this._isInputEmpty(target)) {\n            this._keyManager.setLastItemActive();\n            event.preventDefault();\n        }\n        else if (target && target.classList.contains('mat-chip')) {\n            if (event.keyCode === HOME) {\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n            }\n            else if (event.keyCode === END) {\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n            }\n            else {\n                this._keyManager.onKeydown(event);\n            }\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Check the tab index as you should not be allowed to focus an empty list.\n     * @protected\n     * @return {?}\n     */\n    _updateTabIndex() {\n        // If we have 0 chips, we should not allow keyboard focus\n        this._tabIndex = this._userTabIndex || (this.chips.length === 0 ? -1 : 0);\n    }\n    /**\n     * If the amount of chips changed, we need to update the\n     * key manager state and focus the next closest chip.\n     * @protected\n     * @return {?}\n     */\n    _updateFocusForDestroyedChips() {\n        // Move focus to the closest chip. If no other chips remain, focus the chip-list itself.\n        if (this._lastDestroyedChipIndex != null) {\n            if (this.chips.length) {\n                /** @type {?} */\n                const newChipIndex = Math.min(this._lastDestroyedChipIndex, this.chips.length - 1);\n                this._keyManager.setActiveItem(newChipIndex);\n            }\n            else {\n                this.focus();\n            }\n        }\n        this._lastDestroyedChipIndex = null;\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     *\n     * @private\n     * @param {?} index The index to be checked.\n     * @return {?} True if the index is valid for our list of chips.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this.chips.length;\n    }\n    /**\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _isInputEmpty(element) {\n        if (element && element.nodeName.toLowerCase() === 'input') {\n            /** @type {?} */\n            let input = (/** @type {?} */ (element));\n            return !input.value;\n        }\n        return false;\n    }\n    /**\n     * @param {?} value\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    _setSelectionByValue(value, isUserInput = true) {\n        this._clearSelection();\n        this.chips.forEach((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip.deselect()));\n        if (Array.isArray(value)) {\n            value.forEach((/**\n             * @param {?} currentValue\n             * @return {?}\n             */\n            currentValue => this._selectValue(currentValue, isUserInput)));\n            this._sortValues();\n        }\n        else {\n            /** @type {?} */\n            const correspondingChip = this._selectValue(value, isUserInput);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what chip the user interacted with last.\n            if (correspondingChip) {\n                if (isUserInput) {\n                    this._keyManager.setActiveItem(correspondingChip);\n                }\n            }\n        }\n    }\n    /**\n     * Finds and selects the chip based on its value.\n     * @private\n     * @param {?} value\n     * @param {?=} isUserInput\n     * @return {?} Chip that has the corresponding value.\n     */\n    _selectValue(value, isUserInput = true) {\n        /** @type {?} */\n        const correspondingChip = this.chips.find((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => {\n            return chip.value != null && this._compareWith(chip.value, value);\n        }));\n        if (correspondingChip) {\n            isUserInput ? correspondingChip.selectViaInteraction() : correspondingChip.select();\n            this._selectionModel.select(correspondingChip);\n        }\n        return correspondingChip;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            if (this.ngControl || this._value) {\n                this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value, false);\n                this.stateChanges.next();\n            }\n        }));\n    }\n    /**\n     * Deselects every chip in the list.\n     * @private\n     * @param {?=} skip Chip that should not be deselected.\n     * @return {?}\n     */\n    _clearSelection(skip) {\n        this._selectionModel.clear();\n        this.chips.forEach((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => {\n            if (chip !== skip) {\n                chip.deselect();\n            }\n        }));\n        this.stateChanges.next();\n    }\n    /**\n     * Sorts the model values, ensuring that they keep the same\n     * order that they have in the panel.\n     * @private\n     * @return {?}\n     */\n    _sortValues() {\n        if (this._multiple) {\n            this._selectionModel.clear();\n            this.chips.forEach((/**\n             * @param {?} chip\n             * @return {?}\n             */\n            chip => {\n                if (chip.selected) {\n                    this._selectionModel.select(chip);\n                }\n            }));\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Emits change event to set the model value.\n     * @private\n     * @param {?=} fallbackValue\n     * @return {?}\n     */\n    _propagateChanges(fallbackValue) {\n        /** @type {?} */\n        let valueToEmit = null;\n        if (Array.isArray(this.selected)) {\n            valueToEmit = this.selected.map((/**\n             * @param {?} chip\n             * @return {?}\n             */\n            chip => chip.value));\n        }\n        else {\n            valueToEmit = this.selected ? this.selected.value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.change.emit(new MatChipListChange(this, valueToEmit));\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * When blurred, mark the field as touched when focus moved outside the chip list.\n     * @return {?}\n     */\n    _blur() {\n        if (!this._hasFocusedChip()) {\n            this._keyManager.setActiveItem(-1);\n        }\n        if (!this.disabled) {\n            if (this._chipInput) {\n                // If there's a chip input, we should check whether the focus moved to chip input.\n                // If the focus is not moved to chip input, mark the field as touched. If the focus moved\n                // to chip input, do nothing.\n                // Timeout is needed to wait for the focus() event trigger on chip input.\n                setTimeout((/**\n                 * @return {?}\n                 */\n                () => {\n                    if (!this.focused) {\n                        this._markAsTouched();\n                    }\n                }));\n            }\n            else {\n                // If there's no chip input, then mark the field as touched.\n                this._markAsTouched();\n            }\n        }\n    }\n    /**\n     * Mark the field as touched\n     * @return {?}\n     */\n    _markAsTouched() {\n        this._onTouched();\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /**\n     * Removes the `tabindex` from the chip list and resets it back afterwards, allowing the\n     * user to tab out of it. This prevents the list from capturing focus and redirecting\n     * it back to the first chip, creating a focus trap, if it user tries to tab away.\n     * @return {?}\n     */\n    _allowFocusEscape() {\n        if (this._tabIndex !== -1) {\n            this._tabIndex = -1;\n            setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                this._tabIndex = this._userTabIndex || 0;\n                this._changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _resetChips() {\n        this._dropSubscriptions();\n        this._listenToChipsFocus();\n        this._listenToChipsSelection();\n        this._listenToChipsRemoved();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _dropSubscriptions() {\n        if (this._chipFocusSubscription) {\n            this._chipFocusSubscription.unsubscribe();\n            this._chipFocusSubscription = null;\n        }\n        if (this._chipBlurSubscription) {\n            this._chipBlurSubscription.unsubscribe();\n            this._chipBlurSubscription = null;\n        }\n        if (this._chipSelectionSubscription) {\n            this._chipSelectionSubscription.unsubscribe();\n            this._chipSelectionSubscription = null;\n        }\n        if (this._chipRemoveSubscription) {\n            this._chipRemoveSubscription.unsubscribe();\n            this._chipRemoveSubscription = null;\n        }\n    }\n    /**\n     * Listens to user-generated selection events on each chip.\n     * @private\n     * @return {?}\n     */\n    _listenToChipsSelection() {\n        this._chipSelectionSubscription = this.chipSelectionChanges.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            event.source.selected\n                ? this._selectionModel.select(event.source)\n                : this._selectionModel.deselect(event.source);\n            // For single selection chip list, make sure the deselected value is unselected.\n            if (!this.multiple) {\n                this.chips.forEach((/**\n                 * @param {?} chip\n                 * @return {?}\n                 */\n                chip => {\n                    if (!this._selectionModel.isSelected(chip) && chip.selected) {\n                        chip.deselect();\n                    }\n                }));\n            }\n            if (event.isUserInput) {\n                this._propagateChanges();\n            }\n        }));\n    }\n    /**\n     * Listens to user-generated selection events on each chip.\n     * @private\n     * @return {?}\n     */\n    _listenToChipsFocus() {\n        this._chipFocusSubscription = this.chipFocusChanges.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            /** @type {?} */\n            let chipIndex = this.chips.toArray().indexOf(event.chip);\n            if (this._isValidIndex(chipIndex)) {\n                this._keyManager.updateActiveItem(chipIndex);\n            }\n            this.stateChanges.next();\n        }));\n        this._chipBlurSubscription = this.chipBlurChanges.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._blur();\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _listenToChipsRemoved() {\n        this._chipRemoveSubscription = this.chipRemoveChanges.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            /** @type {?} */\n            const chip = event.chip;\n            /** @type {?} */\n            const chipIndex = this.chips.toArray().indexOf(event.chip);\n            // In case the chip that will be removed is currently focused, we temporarily store\n            // the index in order to be able to determine an appropriate sibling chip that will\n            // receive focus.\n            if (this._isValidIndex(chipIndex) && chip._hasFocus) {\n                this._lastDestroyedChipIndex = chipIndex;\n            }\n        }));\n    }\n    /**\n     * Checks whether an event comes from inside a chip element.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _originatesFromChip(event) {\n        /** @type {?} */\n        let currentElement = (/** @type {?} */ (event.target));\n        while (currentElement && currentElement !== this._elementRef.nativeElement) {\n            if (currentElement.classList.contains('mat-chip')) {\n                return true;\n            }\n            currentElement = currentElement.parentElement;\n        }\n        return false;\n    }\n    /**\n     * Checks whether any of the chips is focused.\n     * @private\n     * @return {?}\n     */\n    _hasFocusedChip() {\n        return this.chips.some((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip._hasFocus));\n    }\n    /**\n     * Syncs the list's state with the individual chips.\n     * @private\n     * @return {?}\n     */\n    _syncChipsState() {\n        if (this.chips) {\n            this.chips.forEach((/**\n             * @param {?} chip\n             * @return {?}\n             */\n            chip => {\n                chip._chipListDisabled = this._disabled;\n                chip._chipListMultiple = this.multiple;\n            }));\n        }\n    }\n}\nMatChipList.ɵfac = function MatChipList_Factory(t) { return new (t || MatChipList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.NgControl, 10)); };\nMatChipList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatChipList, selectors: [[\"mat-chip-list\"]], contentQueries: function MatChipList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatChip, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chips = _t);\n    } }, hostAttrs: [1, \"mat-chip-list\"], hostVars: 15, hostBindings: function MatChipList_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatChipList_focus_HostBindingHandler() { return ctx.focus(); })(\"blur\", function MatChipList_blur_HostBindingHandler() { return ctx._blur(); })(\"keydown\", function MatChipList_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx._uid);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : ctx._tabIndex)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-required\", ctx.role ? ctx.required : null)(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-multiselectable\", ctx.multiple)(\"role\", ctx.role)(\"aria-orientation\", ctx.ariaOrientation);\n        ɵngcc0.ɵɵclassProp(\"mat-chip-list-disabled\", ctx.disabled)(\"mat-chip-list-invalid\", ctx.errorState)(\"mat-chip-list-required\", ctx.required);\n    } }, inputs: { ariaOrientation: [\"aria-orientation\", \"ariaOrientation\"], multiple: \"multiple\", compareWith: \"compareWith\", value: \"value\", required: \"required\", placeholder: \"placeholder\", disabled: \"disabled\", selectable: \"selectable\", tabIndex: \"tabIndex\", errorStateMatcher: \"errorStateMatcher\" }, outputs: { change: \"change\", valueChange: \"valueChange\" }, exportAs: [\"matChipList\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MatFormFieldControl, useExisting: MatChipList }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-chip-list-wrapper\"]], template: function MatChipList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\".mat-chip{position:relative;box-sizing:border-box;-webkit-tap-highlight-color:transparent;transform:translateZ(0);border:none;-webkit-appearance:none;-moz-appearance:none}.mat-standard-chip{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:inline-flex;padding:7px 12px;border-radius:16px;align-items:center;cursor:default;min-height:32px;height:1px}._mat-animation-noopable.mat-standard-chip{transition:none;animation:none}.mat-standard-chip .mat-chip-remove.mat-icon{width:18px;height:18px}.mat-standard-chip::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;opacity:0;content:\\\"\\\";pointer-events:none;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-standard-chip:hover::after{opacity:.12}.mat-standard-chip:focus{outline:none}.mat-standard-chip:focus::after{opacity:.16}.cdk-high-contrast-active .mat-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-standard-chip:focus{outline:dotted 2px}.mat-standard-chip.mat-chip-disabled::after{opacity:0}.mat-standard-chip.mat-chip-disabled .mat-chip-remove,.mat-standard-chip.mat-chip-disabled .mat-chip-trailing-icon{cursor:default}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar,.mat-standard-chip.mat-chip-with-avatar{padding-top:0;padding-bottom:0}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-right:8px;padding-left:0}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-left:8px;padding-right:0}.mat-standard-chip.mat-chip-with-trailing-icon{padding-top:7px;padding-bottom:7px;padding-right:8px;padding-left:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon{padding-left:8px;padding-right:12px}.mat-standard-chip.mat-chip-with-avatar{padding-left:0;padding-right:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-avatar{padding-right:0;padding-left:12px}.mat-standard-chip .mat-chip-avatar{width:24px;height:24px;margin-right:8px;margin-left:4px}[dir=rtl] .mat-standard-chip .mat-chip-avatar{margin-left:8px;margin-right:4px}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{width:18px;height:18px;cursor:pointer}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{margin-left:8px;margin-right:0}[dir=rtl] .mat-standard-chip .mat-chip-remove,[dir=rtl] .mat-standard-chip .mat-chip-trailing-icon{margin-right:8px;margin-left:0}.mat-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit;overflow:hidden}.mat-chip-list-wrapper{display:flex;flex-direction:row;flex-wrap:wrap;align-items:center;margin:-4px}.mat-chip-list-wrapper input.mat-input-element,.mat-chip-list-wrapper .mat-standard-chip{margin:4px}.mat-chip-list-stacked .mat-chip-list-wrapper{flex-direction:column;align-items:flex-start}.mat-chip-list-stacked .mat-chip-list-wrapper .mat-standard-chip{width:100%}.mat-chip-avatar{border-radius:50%;justify-content:center;align-items:center;display:flex;overflow:hidden;object-fit:cover}input.mat-chip-input{width:150px;margin:4px;flex:1 0 150px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatChipList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: ErrorStateMatcher },\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] }\n];\nMatChipList.propDecorators = {\n    errorStateMatcher: [{ type: Input }],\n    multiple: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    value: [{ type: Input }],\n    required: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    disabled: [{ type: Input }],\n    ariaOrientation: [{ type: Input, args: ['aria-orientation',] }],\n    selectable: [{ type: Input }],\n    tabIndex: [{ type: Input }],\n    change: [{ type: Output }],\n    valueChange: [{ type: Output }],\n    chips: [{ type: ContentChildren, args: [MatChip, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-chip-list',\n                template: `<div class=\"mat-chip-list-wrapper\"><ng-content></ng-content></div>`,\n                exportAs: 'matChipList',\n                host: {\n                    '[attr.tabindex]': 'disabled ? null : _tabIndex',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-required]': 'role ? required : null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.role]': 'role',\n                    '[class.mat-chip-list-disabled]': 'disabled',\n                    '[class.mat-chip-list-invalid]': 'errorState',\n                    '[class.mat-chip-list-required]': 'required',\n                    '[attr.aria-orientation]': 'ariaOrientation',\n                    'class': 'mat-chip-list',\n                    '(focus)': 'focus()',\n                    '(blur)': '_blur()',\n                    '(keydown)': '_keydown($event)',\n                    '[id]': '_uid'\n                },\n                providers: [{ provide: MatFormFieldControl, useExisting: MatChipList }],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-chip{position:relative;box-sizing:border-box;-webkit-tap-highlight-color:transparent;transform:translateZ(0);border:none;-webkit-appearance:none;-moz-appearance:none}.mat-standard-chip{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:inline-flex;padding:7px 12px;border-radius:16px;align-items:center;cursor:default;min-height:32px;height:1px}._mat-animation-noopable.mat-standard-chip{transition:none;animation:none}.mat-standard-chip .mat-chip-remove.mat-icon{width:18px;height:18px}.mat-standard-chip::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;opacity:0;content:\\\"\\\";pointer-events:none;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-standard-chip:hover::after{opacity:.12}.mat-standard-chip:focus{outline:none}.mat-standard-chip:focus::after{opacity:.16}.cdk-high-contrast-active .mat-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-standard-chip:focus{outline:dotted 2px}.mat-standard-chip.mat-chip-disabled::after{opacity:0}.mat-standard-chip.mat-chip-disabled .mat-chip-remove,.mat-standard-chip.mat-chip-disabled .mat-chip-trailing-icon{cursor:default}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar,.mat-standard-chip.mat-chip-with-avatar{padding-top:0;padding-bottom:0}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-right:8px;padding-left:0}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-left:8px;padding-right:0}.mat-standard-chip.mat-chip-with-trailing-icon{padding-top:7px;padding-bottom:7px;padding-right:8px;padding-left:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon{padding-left:8px;padding-right:12px}.mat-standard-chip.mat-chip-with-avatar{padding-left:0;padding-right:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-avatar{padding-right:0;padding-left:12px}.mat-standard-chip .mat-chip-avatar{width:24px;height:24px;margin-right:8px;margin-left:4px}[dir=rtl] .mat-standard-chip .mat-chip-avatar{margin-left:8px;margin-right:4px}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{width:18px;height:18px;cursor:pointer}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{margin-left:8px;margin-right:0}[dir=rtl] .mat-standard-chip .mat-chip-remove,[dir=rtl] .mat-standard-chip .mat-chip-trailing-icon{margin-right:8px;margin-left:0}.mat-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit;overflow:hidden}.mat-chip-list-wrapper{display:flex;flex-direction:row;flex-wrap:wrap;align-items:center;margin:-4px}.mat-chip-list-wrapper input.mat-input-element,.mat-chip-list-wrapper .mat-standard-chip{margin:4px}.mat-chip-list-stacked .mat-chip-list-wrapper{flex-direction:column;align-items:flex-start}.mat-chip-list-stacked .mat-chip-list-wrapper .mat-standard-chip{width:100%}.mat-chip-avatar{border-radius:50%;justify-content:center;align-items:center;display:flex;overflow:hidden;object-fit:cover}input.mat-chip-input{width:150px;margin:4px;flex:1 0 150px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.ErrorStateMatcher }, { type: ɵngcc3.NgControl, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }]; }, { ariaOrientation: [{\n            type: Input,\n            args: ['aria-orientation']\n        }], change: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], multiple: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], selectable: [{\n            type: Input\n        }], tabIndex: [{\n            type: Input\n        }], errorStateMatcher: [{\n            type: Input\n        }], chips: [{\n            type: ContentChildren,\n            args: [MatChip, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatChipList.ngAcceptInputType_multiple;\n    /** @type {?} */\n    MatChipList.ngAcceptInputType_required;\n    /** @type {?} */\n    MatChipList.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatChipList.ngAcceptInputType_selectable;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChipList.prototype.controlType;\n    /**\n     * When a chip is destroyed, we store the index of the destroyed chip until the chips\n     * query list notifies about the update. This is necessary because we cannot determine an\n     * appropriate chip that should receive focus until the array of chips updated completely.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._lastDestroyedChipIndex;\n    /**\n     * Subject that emits when the component has been destroyed.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._destroyed;\n    /**\n     * Subscription to focus changes in the chips.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._chipFocusSubscription;\n    /**\n     * Subscription to blur changes in the chips.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._chipBlurSubscription;\n    /**\n     * Subscription to selection changes in chips.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._chipSelectionSubscription;\n    /**\n     * Subscription to remove changes in chips.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._chipRemoveSubscription;\n    /**\n     * The chip input to add more chips\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._chipInput;\n    /**\n     * Uid of the chip list\n     * @type {?}\n     */\n    MatChipList.prototype._uid;\n    /**\n     * The aria-describedby attribute on the chip list for improved a11y.\n     * @type {?}\n     */\n    MatChipList.prototype._ariaDescribedby;\n    /**\n     * Tab index for the chip list.\n     * @type {?}\n     */\n    MatChipList.prototype._tabIndex;\n    /**\n     * User defined tab index.\n     * When it is not null, use user defined tab index. Otherwise use _tabIndex\n     * @type {?}\n     */\n    MatChipList.prototype._userTabIndex;\n    /**\n     * The FocusKeyManager which handles focus.\n     * @type {?}\n     */\n    MatChipList.prototype._keyManager;\n    /**\n     * Function when touched\n     * @type {?}\n     */\n    MatChipList.prototype._onTouched;\n    /**\n     * Function when changed\n     * @type {?}\n     */\n    MatChipList.prototype._onChange;\n    /** @type {?} */\n    MatChipList.prototype._selectionModel;\n    /**\n     * An object used to control when error messages are shown.\n     * @type {?}\n     */\n    MatChipList.prototype.errorStateMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._multiple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._compareWith;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._value;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._required;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._placeholder;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._disabled;\n    /**\n     * Orientation of the chip list.\n     * @type {?}\n     */\n    MatChipList.prototype.ariaOrientation;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._selectable;\n    /**\n     * Event emitted when the selected chip list value has been changed by the user.\n     * @type {?}\n     */\n    MatChipList.prototype.change;\n    /**\n     * Event that emits whenever the raw value of the chip-list changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChipList.prototype.valueChange;\n    /**\n     * The chip components contained within this chip list.\n     * @type {?}\n     */\n    MatChipList.prototype.chips;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._dir;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChipList.prototype.ngControl;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chip-input.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Represents an input event on a `matChipInput`.\n * @record\n */\nfunction MatChipInputEvent() { }\nif (false) {\n    /**\n     * The native `<input>` element that the event is being fired for.\n     * @type {?}\n     */\n    MatChipInputEvent.prototype.input;\n    /**\n     * The value of the input.\n     * @type {?}\n     */\n    MatChipInputEvent.prototype.value;\n}\n// Increasing integer for generating unique ids.\n/** @type {?} */\nlet nextUniqueId$1 = 0;\n/**\n * Directive that adds chip-specific behaviors to an input element inside `<mat-form-field>`.\n * May be placed inside or outside of an `<mat-chip-list>`.\n */\nclass MatChipInput {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _defaultOptions\n     */\n    constructor(_elementRef, _defaultOptions) {\n        this._elementRef = _elementRef;\n        this._defaultOptions = _defaultOptions;\n        /**\n         * Whether the control is focused.\n         */\n        this.focused = false;\n        this._addOnBlur = false;\n        /**\n         * The list of key codes that will trigger a chipEnd event.\n         *\n         * Defaults to `[ENTER]`.\n         */\n        this.separatorKeyCodes = this._defaultOptions.separatorKeyCodes;\n        /**\n         * Emitted when a chip is to be added.\n         */\n        this.chipEnd = new EventEmitter();\n        /**\n         * The input's placeholder text.\n         */\n        this.placeholder = '';\n        /**\n         * Unique id for the input.\n         */\n        this.id = `mat-chip-list-input-${nextUniqueId$1++}`;\n        this._disabled = false;\n        this._inputElement = (/** @type {?} */ (this._elementRef.nativeElement));\n    }\n    /**\n     * Register input for chip list\n     * @param {?} value\n     * @return {?}\n     */\n    set chipList(value) {\n        if (value) {\n            this._chipList = value;\n            this._chipList.registerInput(this);\n        }\n    }\n    /**\n     * Whether or not the chipEnd event will be emitted when the input is blurred.\n     * @return {?}\n     */\n    get addOnBlur() { return this._addOnBlur; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set addOnBlur(value) { this._addOnBlur = coerceBooleanProperty(value); }\n    /**\n     * Whether the input is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled || (this._chipList && this._chipList.disabled); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    /**\n     * Whether the input is empty.\n     * @return {?}\n     */\n    get empty() { return !this._inputElement.value; }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._chipList.stateChanges.next();\n    }\n    /**\n     * Utility method to make host definition/tests more clear.\n     * @param {?=} event\n     * @return {?}\n     */\n    _keydown(event) {\n        // Allow the user's focus to escape when they're tabbing forward. Note that we don't\n        // want to do this when going backwards, because focus should go back to the first chip.\n        if (event && event.keyCode === TAB && !hasModifierKey(event, 'shiftKey')) {\n            this._chipList._allowFocusEscape();\n        }\n        this._emitChipEnd(event);\n    }\n    /**\n     * Checks to see if the blur should emit the (chipEnd) event.\n     * @return {?}\n     */\n    _blur() {\n        if (this.addOnBlur) {\n            this._emitChipEnd();\n        }\n        this.focused = false;\n        // Blur the chip list if it is not focused\n        if (!this._chipList.focused) {\n            this._chipList._blur();\n        }\n        this._chipList.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    _focus() {\n        this.focused = true;\n        this._chipList.stateChanges.next();\n    }\n    /**\n     * Checks to see if the (chipEnd) event needs to be emitted.\n     * @param {?=} event\n     * @return {?}\n     */\n    _emitChipEnd(event) {\n        if (!this._inputElement.value && !!event) {\n            this._chipList._keydown(event);\n        }\n        if (!event || this._isSeparatorKey(event)) {\n            this.chipEnd.emit({ input: this._inputElement, value: this._inputElement.value });\n            if (event) {\n                event.preventDefault();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onInput() {\n        // Let chip list know whenever the value changes.\n        this._chipList.stateChanges.next();\n    }\n    /**\n     * Focuses the input.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._inputElement.focus(options);\n    }\n    /**\n     * Checks whether a keycode is one of the configured separators.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _isSeparatorKey(event) {\n        if (hasModifierKey(event)) {\n            return false;\n        }\n        /** @type {?} */\n        const separators = this.separatorKeyCodes;\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        return Array.isArray(separators) ? separators.indexOf(keyCode) > -1 : separators.has(keyCode);\n    }\n}\nMatChipInput.ɵfac = function MatChipInput_Factory(t) { return new (t || MatChipInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_CHIPS_DEFAULT_OPTIONS)); };\nMatChipInput.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipInput, selectors: [[\"input\", \"matChipInputFor\", \"\"]], hostAttrs: [1, \"mat-chip-input\", \"mat-input-element\"], hostVars: 5, hostBindings: function MatChipInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatChipInput_keydown_HostBindingHandler($event) { return ctx._keydown($event); })(\"blur\", function MatChipInput_blur_HostBindingHandler() { return ctx._blur(); })(\"focus\", function MatChipInput_focus_HostBindingHandler() { return ctx._focus(); })(\"input\", function MatChipInput_input_HostBindingHandler() { return ctx._onInput(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx.disabled || null)(\"placeholder\", ctx.placeholder || null)(\"aria-invalid\", ctx._chipList && ctx._chipList.ngControl ? ctx._chipList.ngControl.invalid : null)(\"aria-required\", ctx._chipList && ctx._chipList.required || null);\n    } }, inputs: { separatorKeyCodes: [\"matChipInputSeparatorKeyCodes\", \"separatorKeyCodes\"], placeholder: \"placeholder\", id: \"id\", chipList: [\"matChipInputFor\", \"chipList\"], addOnBlur: [\"matChipInputAddOnBlur\", \"addOnBlur\"], disabled: \"disabled\" }, outputs: { chipEnd: \"matChipInputTokenEnd\" }, exportAs: [\"matChipInput\", \"matChipInputFor\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nMatChipInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_CHIPS_DEFAULT_OPTIONS,] }] }\n];\nMatChipInput.propDecorators = {\n    chipList: [{ type: Input, args: ['matChipInputFor',] }],\n    addOnBlur: [{ type: Input, args: ['matChipInputAddOnBlur',] }],\n    separatorKeyCodes: [{ type: Input, args: ['matChipInputSeparatorKeyCodes',] }],\n    chipEnd: [{ type: Output, args: ['matChipInputTokenEnd',] }],\n    placeholder: [{ type: Input }],\n    id: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipInput, [{\n        type: Directive,\n        args: [{\n                selector: 'input[matChipInputFor]',\n                exportAs: 'matChipInput, matChipInputFor',\n                host: {\n                    'class': 'mat-chip-input mat-input-element',\n                    '(keydown)': '_keydown($event)',\n                    '(blur)': '_blur()',\n                    '(focus)': '_focus()',\n                    '(input)': '_onInput()',\n                    '[id]': 'id',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.placeholder]': 'placeholder || null',\n                    '[attr.aria-invalid]': '_chipList && _chipList.ngControl ? _chipList.ngControl.invalid : null',\n                    '[attr.aria-required]': '_chipList && _chipList.required || null'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_CHIPS_DEFAULT_OPTIONS]\n            }] }]; }, { separatorKeyCodes: [{\n            type: Input,\n            args: ['matChipInputSeparatorKeyCodes']\n        }], chipEnd: [{\n            type: Output,\n            args: ['matChipInputTokenEnd']\n        }], placeholder: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], chipList: [{\n            type: Input,\n            args: ['matChipInputFor']\n        }], addOnBlur: [{\n            type: Input,\n            args: ['matChipInputAddOnBlur']\n        }], disabled: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatChipInput.ngAcceptInputType_addOnBlur;\n    /** @type {?} */\n    MatChipInput.ngAcceptInputType_disabled;\n    /**\n     * Whether the control is focused.\n     * @type {?}\n     */\n    MatChipInput.prototype.focused;\n    /** @type {?} */\n    MatChipInput.prototype._chipList;\n    /** @type {?} */\n    MatChipInput.prototype._addOnBlur;\n    /**\n     * The list of key codes that will trigger a chipEnd event.\n     *\n     * Defaults to `[ENTER]`.\n     * @type {?}\n     */\n    MatChipInput.prototype.separatorKeyCodes;\n    /**\n     * Emitted when a chip is to be added.\n     * @type {?}\n     */\n    MatChipInput.prototype.chipEnd;\n    /**\n     * The input's placeholder text.\n     * @type {?}\n     */\n    MatChipInput.prototype.placeholder;\n    /**\n     * Unique id for the input.\n     * @type {?}\n     */\n    MatChipInput.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipInput.prototype._disabled;\n    /**\n     * The native input element to which this directive is attached.\n     * @type {?}\n     * @protected\n     */\n    MatChipInput.prototype._inputElement;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipInput.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipInput.prototype._defaultOptions;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chips-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst CHIP_DECLARATIONS = [\n    MatChipList,\n    MatChip,\n    MatChipInput,\n    MatChipRemove,\n    MatChipAvatar,\n    MatChipTrailingIcon,\n];\nconst ɵ0 = ({\n    separatorKeyCodes: [ENTER]\n});\nclass MatChipsModule {\n}\nMatChipsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatChipsModule });\nMatChipsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatChipsModule_Factory(t) { return new (t || MatChipsModule)(); }, providers: [\n        ErrorStateMatcher,\n        {\n            provide: MAT_CHIPS_DEFAULT_OPTIONS,\n            useValue: ( /** @type {?} */(ɵ0))\n        }\n    ] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatChipsModule, { declarations: [MatChipList,\n        MatChip,\n        MatChipInput,\n        MatChipRemove,\n        MatChipAvatar,\n        MatChipTrailingIcon], exports: [MatChipList,\n        MatChip,\n        MatChipInput,\n        MatChipRemove,\n        MatChipAvatar,\n        MatChipTrailingIcon] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipsModule, [{\n        type: NgModule,\n        args: [{\n                exports: CHIP_DECLARATIONS,\n                declarations: CHIP_DECLARATIONS,\n                providers: [\n                    ErrorStateMatcher,\n                    {\n                        provide: MAT_CHIPS_DEFAULT_OPTIONS,\n                        useValue: ( /** @type {?} */(ɵ0))\n                    }\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHIPS_DEFAULT_OPTIONS, MatChip, MatChipAvatar, MatChipInput, MatChipList, MatChipListChange, MatChipRemove, MatChipSelectionChange, MatChipTrailingIcon, MatChipsModule };\n\n//# sourceMappingURL=chips.js.map","import { A11yModule } from '@angular/cdk/a11y';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { ComponentPortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Injectable, ɵɵdefineInjectable, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, NgZone, Input, Output, ChangeDetectorRef, Optional, Inject, ViewChild, forwardRef, InjectionToken, ViewContainerRef, Directive, Attribute, ContentChild, NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { MAT_DATE_FORMATS, DateAdapter, mixinColor } from '@angular/material/core';\nimport { Subject, Subscription, merge, of } from 'rxjs';\nimport { SPACE, ENTER, PAGE_DOWN, PAGE_UP, END, HOME, DOWN_ARROW, UP_ARROW, RIGHT_ARROW, LEFT_ARROW, ESCAPE } from '@angular/cdk/keycodes';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { take, startWith, filter } from 'rxjs/operators';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, Validators } from '@angular/forms';\nimport { MatFormField, MAT_FORM_FIELD } from '@angular/material/form-field';\nimport { MAT_INPUT_VALUE_ACCESSOR } from '@angular/material/input';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/datepicker-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @param {?} provider\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/material/button';\nimport * as ɵngcc5 from '@angular/cdk/a11y';\nimport * as ɵngcc6 from '@angular/cdk/portal';\nimport * as ɵngcc7 from '@angular/material/dialog';\nimport * as ɵngcc8 from '@angular/cdk/overlay';\nimport * as ɵngcc9 from '@angular/material/form-field';\n\nconst _c0 = [\"mat-calendar-body\", \"\"];\nfunction MatCalendarBody_tr_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 2);\n    ɵngcc0.ɵɵelementStart(1, \"td\", 3);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"padding-top\", ctx_r0._cellPadding)(\"padding-bottom\", ctx_r0._cellPadding);\n    ɵngcc0.ɵɵattribute(\"colspan\", ctx_r0.numCols);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.label, \" \");\n} }\nfunction MatCalendarBody_tr_1_td_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 7);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵstyleProp(\"padding-top\", ctx_r4._cellPadding)(\"padding-bottom\", ctx_r4._cellPadding);\n    ɵngcc0.ɵɵattribute(\"colspan\", ctx_r4._firstRowOffset);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r4._firstRowOffset >= ctx_r4.labelMinRequiredCells ? ctx_r4.label : \"\", \" \");\n} }\nfunction MatCalendarBody_tr_1_td_2_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"td\", 8);\n    ɵngcc0.ɵɵlistener(\"click\", function MatCalendarBody_tr_1_td_2_Template_td_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r9); const item_r6 = ctx.$implicit; const ctx_r8 = ɵngcc0.ɵɵnextContext(2); return ctx_r8._cellClicked(item_r6); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 9);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r6 = ctx.$implicit;\n    const colIndex_r7 = ctx.index;\n    const rowIndex_r3 = ɵngcc0.ɵɵnextContext().index;\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r5._cellWidth)(\"padding-top\", ctx_r5._cellPadding)(\"padding-bottom\", ctx_r5._cellPadding);\n    ɵngcc0.ɵɵclassProp(\"mat-calendar-body-disabled\", !item_r6.enabled)(\"mat-calendar-body-active\", ctx_r5._isActiveCell(rowIndex_r3, colIndex_r7));\n    ɵngcc0.ɵɵproperty(\"ngClass\", item_r6.cssClasses)(\"tabindex\", ctx_r5._isActiveCell(rowIndex_r3, colIndex_r7) ? 0 : 0 - 1);\n    ɵngcc0.ɵɵattribute(\"aria-label\", item_r6.ariaLabel)(\"aria-disabled\", !item_r6.enabled || null)(\"aria-selected\", ctx_r5.selectedValue === item_r6.value);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"mat-calendar-body-selected\", ctx_r5.selectedValue === item_r6.value)(\"mat-calendar-body-today\", ctx_r5.todayValue === item_r6.value);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", item_r6.displayValue, \" \");\n} }\nfunction MatCalendarBody_tr_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 4);\n    ɵngcc0.ɵɵtemplate(1, MatCalendarBody_tr_1_td_1_Template, 2, 6, \"td\", 5);\n    ɵngcc0.ɵɵtemplate(2, MatCalendarBody_tr_1_td_2_Template, 3, 20, \"td\", 6);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const row_r2 = ctx.$implicit;\n    const rowIndex_r3 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", rowIndex_r3 === 0 && ctx_r1._firstRowOffset);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", row_r2);\n} }\nfunction MatMonthView_th_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 5);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const day_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵattribute(\"aria-label\", day_r1.long);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(day_r1.narrow);\n} }\nconst _c1 = [\"*\"];\nfunction MatCalendar_ng_template_0_Template(rf, ctx) { }\nfunction MatCalendar_mat_month_view_2_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-month-view\", 5);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_month_view_2_Template_mat_month_view_activeDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.activeDate = $event; })(\"selectedChange\", function MatCalendar_mat_month_view_2_Template_mat_month_view_selectedChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6._dateSelected($event); })(\"_userSelection\", function MatCalendar_mat_month_view_2_Template_mat_month_view__userSelection_0_listener() { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7._userSelected(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r1.activeDate)(\"selected\", ctx_r1.selected)(\"dateFilter\", ctx_r1.dateFilter)(\"maxDate\", ctx_r1.maxDate)(\"minDate\", ctx_r1.minDate)(\"dateClass\", ctx_r1.dateClass);\n} }\nfunction MatCalendar_mat_year_view_3_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-year-view\", 6);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_year_view_3_Template_mat_year_view_activeDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.activeDate = $event; })(\"monthSelected\", function MatCalendar_mat_year_view_3_Template_mat_year_view_monthSelected_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10._monthSelectedInYearView($event); })(\"selectedChange\", function MatCalendar_mat_year_view_3_Template_mat_year_view_selectedChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11._goToDateInView($event, \"month\"); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r2.activeDate)(\"selected\", ctx_r2.selected)(\"dateFilter\", ctx_r2.dateFilter)(\"maxDate\", ctx_r2.maxDate)(\"minDate\", ctx_r2.minDate);\n} }\nfunction MatCalendar_mat_multi_year_view_4_Template(rf, ctx) { if (rf & 1) {\n    const _r13 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-multi-year-view\", 7);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_activeDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r13); const ctx_r12 = ɵngcc0.ɵɵnextContext(); return ctx_r12.activeDate = $event; })(\"yearSelected\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_yearSelected_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r13); const ctx_r14 = ɵngcc0.ɵɵnextContext(); return ctx_r14._yearSelectedInMultiYearView($event); })(\"selectedChange\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_selectedChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r13); const ctx_r15 = ɵngcc0.ɵɵnextContext(); return ctx_r15._goToDateInView($event, \"year\"); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r3.activeDate)(\"selected\", ctx_r3.selected)(\"dateFilter\", ctx_r3.dateFilter)(\"maxDate\", ctx_r3.maxDate)(\"minDate\", ctx_r3.minDate);\n} }\nconst _c2 = [\"button\"];\nfunction MatDatepickerToggle__svg_svg_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(0, \"svg\", 3);\n    ɵngcc0.ɵɵelement(1, \"path\", 4);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c3 = [[[\"\", \"matDatepickerToggleIcon\", \"\"]]];\nconst _c4 = [\"[matDatepickerToggleIcon]\"];\nfunction createMissingDateImplError(provider) {\n    return Error(`MatDatepicker: No provider found for ${provider}. You must import one of the following ` +\n        `modules at your application root: MatNativeDateModule, MatMomentDateModule, or provide a ` +\n        `custom implementation.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/datepicker-intl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Datepicker data that requires internationalization.\n */\nclass MatDatepickerIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * A label for the calendar popup (used by screen readers).\n         */\n        this.calendarLabel = 'Calendar';\n        /**\n         * A label for the button used to open the calendar popup (used by screen readers).\n         */\n        this.openCalendarLabel = 'Open calendar';\n        /**\n         * A label for the previous month button (used by screen readers).\n         */\n        this.prevMonthLabel = 'Previous month';\n        /**\n         * A label for the next month button (used by screen readers).\n         */\n        this.nextMonthLabel = 'Next month';\n        /**\n         * A label for the previous year button (used by screen readers).\n         */\n        this.prevYearLabel = 'Previous year';\n        /**\n         * A label for the next year button (used by screen readers).\n         */\n        this.nextYearLabel = 'Next year';\n        /**\n         * A label for the previous multi-year button (used by screen readers).\n         */\n        this.prevMultiYearLabel = 'Previous 20 years';\n        /**\n         * A label for the next multi-year button (used by screen readers).\n         */\n        this.nextMultiYearLabel = 'Next 20 years';\n        /**\n         * A label for the 'switch to month view' button (used by screen readers).\n         */\n        this.switchToMonthViewLabel = 'Choose date';\n        /**\n         * A label for the 'switch to year view' button (used by screen readers).\n         */\n        this.switchToMultiYearViewLabel = 'Choose month and year';\n    }\n    /**\n     * Formats a range of years.\n     * @param {?} start\n     * @param {?} end\n     * @return {?}\n     */\n    formatYearRange(start, end) {\n        return `${start} \\u2013 ${end}`;\n    }\n}\nMatDatepickerIntl.ɵfac = function MatDatepickerIntl_Factory(t) { return new (t || MatDatepickerIntl)(); };\n/** @nocollapse */ MatDatepickerIntl.ɵprov = ɵɵdefineInjectable({ factory: function MatDatepickerIntl_Factory() { return new MatDatepickerIntl(); }, token: MatDatepickerIntl, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDatepickerIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * Stream that emits whenever the labels here are changed. Use this to notify\n     * components if the labels have changed after initialization.\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.changes;\n    /**\n     * A label for the calendar popup (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.calendarLabel;\n    /**\n     * A label for the button used to open the calendar popup (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.openCalendarLabel;\n    /**\n     * A label for the previous month button (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.prevMonthLabel;\n    /**\n     * A label for the next month button (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.nextMonthLabel;\n    /**\n     * A label for the previous year button (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.prevYearLabel;\n    /**\n     * A label for the next year button (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.nextYearLabel;\n    /**\n     * A label for the previous multi-year button (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.prevMultiYearLabel;\n    /**\n     * A label for the next multi-year button (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.nextMultiYearLabel;\n    /**\n     * A label for the 'switch to month view' button (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.switchToMonthViewLabel;\n    /**\n     * A label for the 'switch to year view' button (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.switchToMultiYearViewLabel;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/calendar-body.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * \\@docs-private\n */\nclass MatCalendarCell {\n    /**\n     * @param {?} value\n     * @param {?} displayValue\n     * @param {?} ariaLabel\n     * @param {?} enabled\n     * @param {?=} cssClasses\n     */\n    constructor(value, displayValue, ariaLabel, enabled, cssClasses = {}) {\n        this.value = value;\n        this.displayValue = displayValue;\n        this.ariaLabel = ariaLabel;\n        this.enabled = enabled;\n        this.cssClasses = cssClasses;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatCalendarCell.prototype.value;\n    /** @type {?} */\n    MatCalendarCell.prototype.displayValue;\n    /** @type {?} */\n    MatCalendarCell.prototype.ariaLabel;\n    /** @type {?} */\n    MatCalendarCell.prototype.enabled;\n    /** @type {?} */\n    MatCalendarCell.prototype.cssClasses;\n}\n/**\n * An internal component used to display calendar data in a table.\n * \\@docs-private\n */\nclass MatCalendarBody {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     */\n    constructor(_elementRef, _ngZone) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /**\n         * The number of columns in the table.\n         */\n        this.numCols = 7;\n        /**\n         * The cell number of the active cell in the table.\n         */\n        this.activeCell = 0;\n        /**\n         * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n         * maintained even as the table resizes.\n         */\n        this.cellAspectRatio = 1;\n        /**\n         * Emits when a new value is selected.\n         */\n        this.selectedValueChange = new EventEmitter();\n    }\n    /**\n     * @param {?} cell\n     * @return {?}\n     */\n    _cellClicked(cell) {\n        if (cell.enabled) {\n            this.selectedValueChange.emit(cell.value);\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const columnChanges = changes['numCols'];\n        const { rows, numCols } = this;\n        if (changes['rows'] || columnChanges) {\n            this._firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n        }\n        if (changes['cellAspectRatio'] || columnChanges || !this._cellPadding) {\n            this._cellPadding = `${50 * this.cellAspectRatio / numCols}%`;\n        }\n        if (columnChanges || !this._cellWidth) {\n            this._cellWidth = `${100 / numCols}%`;\n        }\n    }\n    /**\n     * @param {?} rowIndex\n     * @param {?} colIndex\n     * @return {?}\n     */\n    _isActiveCell(rowIndex, colIndex) {\n        /** @type {?} */\n        let cellNumber = rowIndex * this.numCols + colIndex;\n        // Account for the fact that the first row may not have as many cells.\n        if (rowIndex) {\n            cellNumber -= this._firstRowOffset;\n        }\n        return cellNumber == this.activeCell;\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    _focusActiveCell() {\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.onStable.asObservable().pipe(take(1)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const activeCell = this._elementRef.nativeElement.querySelector('.mat-calendar-body-active');\n                if (activeCell) {\n                    activeCell.focus();\n                }\n            }));\n        }));\n    }\n}\nMatCalendarBody.ɵfac = function MatCalendarBody_Factory(t) { return new (t || MatCalendarBody)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatCalendarBody.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCalendarBody, selectors: [[\"\", \"mat-calendar-body\", \"\"]], hostAttrs: [\"role\", \"grid\", \"aria-readonly\", \"true\", 1, \"mat-calendar-body\"], inputs: { numCols: \"numCols\", activeCell: \"activeCell\", cellAspectRatio: \"cellAspectRatio\", label: \"label\", rows: \"rows\", todayValue: \"todayValue\", selectedValue: \"selectedValue\", labelMinRequiredCells: \"labelMinRequiredCells\" }, outputs: { selectedValueChange: \"selectedValueChange\" }, exportAs: [\"matCalendarBody\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], attrs: _c0, decls: 2, vars: 2, consts: [[\"aria-hidden\", \"true\", 4, \"ngIf\"], [\"role\", \"row\", 4, \"ngFor\", \"ngForOf\"], [\"aria-hidden\", \"true\"], [1, \"mat-calendar-body-label\"], [\"role\", \"row\"], [\"aria-hidden\", \"true\", \"class\", \"mat-calendar-body-label\", 3, \"paddingTop\", \"paddingBottom\", 4, \"ngIf\"], [\"role\", \"gridcell\", \"class\", \"mat-calendar-body-cell mat-focus-indicator\", 3, \"ngClass\", \"tabindex\", \"mat-calendar-body-disabled\", \"mat-calendar-body-active\", \"width\", \"paddingTop\", \"paddingBottom\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"aria-hidden\", \"true\", 1, \"mat-calendar-body-label\"], [\"role\", \"gridcell\", 1, \"mat-calendar-body-cell\", \"mat-focus-indicator\", 3, \"ngClass\", \"tabindex\", \"click\"], [1, \"mat-calendar-body-cell-content\"]], template: function MatCalendarBody_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatCalendarBody_tr_0_Template, 3, 6, \"tr\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatCalendarBody_tr_1_Template, 3, 2, \"tr\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._firstRowOffset < ctx.labelMinRequiredCells);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.rows);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc1.NgClass], styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.7142857143%;padding-right:4.7142857143%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:none;cursor:pointer}.mat-calendar-body-disabled{cursor:default}.mat-calendar-body-cell-content{position:absolute;top:5%;left:5%;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-high-contrast-active .cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){outline:dotted 2px}[dir=rtl] .mat-calendar-body-label{text-align:right}@media(hover: none){.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){background-color:transparent}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatCalendarBody.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone }\n];\nMatCalendarBody.propDecorators = {\n    label: [{ type: Input }],\n    rows: [{ type: Input }],\n    todayValue: [{ type: Input }],\n    selectedValue: [{ type: Input }],\n    labelMinRequiredCells: [{ type: Input }],\n    numCols: [{ type: Input }],\n    activeCell: [{ type: Input }],\n    cellAspectRatio: [{ type: Input }],\n    selectedValueChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCalendarBody, [{\n        type: Component,\n        args: [{\n                selector: '[mat-calendar-body]',\n                template: \"<!--\\n  If there's not enough space in the first row, create a separate label row. We mark this row as\\n  aria-hidden because we don't want it to be read out as one of the weeks in the month.\\n-->\\n<tr *ngIf=\\\"_firstRowOffset < labelMinRequiredCells\\\" aria-hidden=\\\"true\\\">\\n  <td class=\\\"mat-calendar-body-label\\\"\\n      [attr.colspan]=\\\"numCols\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n    {{label}}\\n  </td>\\n</tr>\\n\\n<!-- Create the first row separately so we can include a special spacer cell. -->\\n<tr *ngFor=\\\"let row of rows; let rowIndex = index\\\" role=\\\"row\\\">\\n  <!--\\n    We mark this cell as aria-hidden so it doesn't get read out as one of the days in the week.\\n    The aspect ratio of the table cells is maintained by setting the top and bottom padding as a\\n    percentage of the width (a variant of the trick described here:\\n    https://www.w3schools.com/howto/howto_css_aspect_ratio.asp).\\n  -->\\n  <td *ngIf=\\\"rowIndex === 0 && _firstRowOffset\\\"\\n      aria-hidden=\\\"true\\\"\\n      class=\\\"mat-calendar-body-label\\\"\\n      [attr.colspan]=\\\"_firstRowOffset\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n    {{_firstRowOffset >= labelMinRequiredCells ? label : ''}}\\n  </td>\\n  <td *ngFor=\\\"let item of row; let colIndex = index\\\"\\n      role=\\\"gridcell\\\"\\n      class=\\\"mat-calendar-body-cell mat-focus-indicator\\\"\\n      [ngClass]=\\\"item.cssClasses\\\"\\n      [tabindex]=\\\"_isActiveCell(rowIndex, colIndex) ? 0 : -1\\\"\\n      [class.mat-calendar-body-disabled]=\\\"!item.enabled\\\"\\n      [class.mat-calendar-body-active]=\\\"_isActiveCell(rowIndex, colIndex)\\\"\\n      [attr.aria-label]=\\\"item.ariaLabel\\\"\\n      [attr.aria-disabled]=\\\"!item.enabled || null\\\"\\n      [attr.aria-selected]=\\\"selectedValue === item.value\\\"\\n      (click)=\\\"_cellClicked(item)\\\"\\n      [style.width]=\\\"_cellWidth\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n      <div class=\\\"mat-calendar-body-cell-content\\\"\\n        [class.mat-calendar-body-selected]=\\\"selectedValue === item.value\\\"\\n        [class.mat-calendar-body-today]=\\\"todayValue === item.value\\\">\\n        {{item.displayValue}}\\n      </div>\\n  </td>\\n</tr>\\n\",\n                host: {\n                    'class': 'mat-calendar-body',\n                    'role': 'grid',\n                    'aria-readonly': 'true'\n                },\n                exportAs: 'matCalendarBody',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.7142857143%;padding-right:4.7142857143%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:none;cursor:pointer}.mat-calendar-body-disabled{cursor:default}.mat-calendar-body-cell-content{position:absolute;top:5%;left:5%;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-high-contrast-active .cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){outline:dotted 2px}[dir=rtl] .mat-calendar-body-label{text-align:right}@media(hover: none){.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){background-color:transparent}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, { numCols: [{\n            type: Input\n        }], activeCell: [{\n            type: Input\n        }], cellAspectRatio: [{\n            type: Input\n        }], selectedValueChange: [{\n            type: Output\n        }], label: [{\n            type: Input\n        }], rows: [{\n            type: Input\n        }], todayValue: [{\n            type: Input\n        }], selectedValue: [{\n            type: Input\n        }], labelMinRequiredCells: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * The label for the table. (e.g. \"Jan 2017\").\n     * @type {?}\n     */\n    MatCalendarBody.prototype.label;\n    /**\n     * The cells to display in the table.\n     * @type {?}\n     */\n    MatCalendarBody.prototype.rows;\n    /**\n     * The value in the table that corresponds to today.\n     * @type {?}\n     */\n    MatCalendarBody.prototype.todayValue;\n    /**\n     * The value in the table that is currently selected.\n     * @type {?}\n     */\n    MatCalendarBody.prototype.selectedValue;\n    /**\n     * The minimum number of free cells needed to fit the label in the first row.\n     * @type {?}\n     */\n    MatCalendarBody.prototype.labelMinRequiredCells;\n    /**\n     * The number of columns in the table.\n     * @type {?}\n     */\n    MatCalendarBody.prototype.numCols;\n    /**\n     * The cell number of the active cell in the table.\n     * @type {?}\n     */\n    MatCalendarBody.prototype.activeCell;\n    /**\n     * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n     * maintained even as the table resizes.\n     * @type {?}\n     */\n    MatCalendarBody.prototype.cellAspectRatio;\n    /**\n     * Emits when a new value is selected.\n     * @type {?}\n     */\n    MatCalendarBody.prototype.selectedValueChange;\n    /**\n     * The number of blank cells to put at the beginning for the first row.\n     * @type {?}\n     */\n    MatCalendarBody.prototype._firstRowOffset;\n    /**\n     * Padding for the individual date cells.\n     * @type {?}\n     */\n    MatCalendarBody.prototype._cellPadding;\n    /**\n     * Width of an individual cell.\n     * @type {?}\n     */\n    MatCalendarBody.prototype._cellWidth;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendarBody.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendarBody.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/month-view.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst DAYS_PER_WEEK = 7;\n/**\n * An internal component used to display a single month in the datepicker.\n * \\@docs-private\n * @template D\n */\nclass MatMonthView {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _dateFormats\n     * @param {?} _dateAdapter\n     * @param {?=} _dir\n     */\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateFormats = _dateFormats;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._rerenderSubscription = Subscription.EMPTY;\n        /**\n         * Emits when a new date is selected.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits when any date is selected.\n         */\n        this._userSelection = new EventEmitter();\n        /**\n         * Emits when any date is activated.\n         */\n        this.activeDateChange = new EventEmitter();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /**\n     * The date to display in this month view (everything other than the month and year is ignored).\n     * @return {?}\n     */\n    get activeDate() { return this._activeDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set activeDate(value) {\n        /** @type {?} */\n        const oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (!this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n            this._init();\n        }\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._selectedDate = this._getDateInCurrentMonth(this._selected);\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get minDate() { return this._minDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minDate(value) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get maxDate() { return this._maxDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxDate(value) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._rerenderSubscription = this._dateAdapter.localeChanges\n            .pipe(startWith(null))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._init()));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n    }\n    /**\n     * Handles when a new date is selected.\n     * @param {?} date\n     * @return {?}\n     */\n    _dateSelected(date) {\n        if (this._selectedDate != date) {\n            /** @type {?} */\n            const selectedYear = this._dateAdapter.getYear(this.activeDate);\n            /** @type {?} */\n            const selectedMonth = this._dateAdapter.getMonth(this.activeDate);\n            /** @type {?} */\n            const selectedDate = this._dateAdapter.createDate(selectedYear, selectedMonth, date);\n            this.selectedChange.emit(selectedDate);\n        }\n        this._userSelection.emit();\n    }\n    /**\n     * Handles keydown events on the calendar body when calendar is in month view.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleCalendarBodyKeydown(event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        /** @type {?} */\n        const oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 1 - this._dateAdapter.getDate(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, (this._dateAdapter.getNumDaysInMonth(this._activeDate) -\n                    this._dateAdapter.getDate(this._activeDate)));\n                break;\n            case PAGE_UP:\n                this.activeDate = event.altKey ?\n                    this._dateAdapter.addCalendarYears(this._activeDate, -1) :\n                    this._dateAdapter.addCalendarMonths(this._activeDate, -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate = event.altKey ?\n                    this._dateAdapter.addCalendarYears(this._activeDate, 1) :\n                    this._dateAdapter.addCalendarMonths(this._activeDate, 1);\n                break;\n            case ENTER:\n            case SPACE:\n                if (!this.dateFilter || this.dateFilter(this._activeDate)) {\n                    this._dateSelected(this._dateAdapter.getDate(this._activeDate));\n                    this._userSelection.emit();\n                    // Prevent unexpected default actions such as form submission.\n                    event.preventDefault();\n                }\n                return;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /**\n     * Initializes this month view.\n     * @return {?}\n     */\n    _init() {\n        this._selectedDate = this._getDateInCurrentMonth(this.selected);\n        this._todayDate = this._getDateInCurrentMonth(this._dateAdapter.today());\n        this._monthLabel =\n            this._dateAdapter.getMonthNames('short')[this._dateAdapter.getMonth(this.activeDate)]\n                .toLocaleUpperCase();\n        /** @type {?} */\n        let firstOfMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), 1);\n        this._firstWeekOffset =\n            (DAYS_PER_WEEK + this._dateAdapter.getDayOfWeek(firstOfMonth) -\n                this._dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n        this._initWeekdays();\n        this._createWeekCells();\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /**\n     * Initializes the weekdays.\n     * @private\n     * @return {?}\n     */\n    _initWeekdays() {\n        /** @type {?} */\n        const firstDayOfWeek = this._dateAdapter.getFirstDayOfWeek();\n        /** @type {?} */\n        const narrowWeekdays = this._dateAdapter.getDayOfWeekNames('narrow');\n        /** @type {?} */\n        const longWeekdays = this._dateAdapter.getDayOfWeekNames('long');\n        // Rotate the labels for days of the week based on the configured first day of the week.\n        /** @type {?} */\n        let weekdays = longWeekdays.map((/**\n         * @param {?} long\n         * @param {?} i\n         * @return {?}\n         */\n        (long, i) => {\n            return { long, narrow: narrowWeekdays[i] };\n        }));\n        this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n    }\n    /**\n     * Creates MatCalendarCells for the dates in this month.\n     * @private\n     * @return {?}\n     */\n    _createWeekCells() {\n        /** @type {?} */\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(this.activeDate);\n        /** @type {?} */\n        const dateNames = this._dateAdapter.getDateNames();\n        this._weeks = [[]];\n        for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {\n            if (cell == DAYS_PER_WEEK) {\n                this._weeks.push([]);\n                cell = 0;\n            }\n            /** @type {?} */\n            const date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), i + 1);\n            /** @type {?} */\n            const enabled = this._shouldEnableDate(date);\n            /** @type {?} */\n            const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.dateA11yLabel);\n            /** @type {?} */\n            const cellClasses = this.dateClass ? this.dateClass(date) : undefined;\n            this._weeks[this._weeks.length - 1]\n                .push(new MatCalendarCell(i + 1, dateNames[i], ariaLabel, enabled, cellClasses));\n        }\n    }\n    /**\n     * Date filter for the month\n     * @private\n     * @param {?} date\n     * @return {?}\n     */\n    _shouldEnableDate(date) {\n        return !!date &&\n            (!this.minDate || this._dateAdapter.compareDate(date, this.minDate) >= 0) &&\n            (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate) <= 0) &&\n            (!this.dateFilter || this.dateFilter(date));\n    }\n    /**\n     * Gets the date in this month that the given Date falls on.\n     * Returns null if the given Date is in another month.\n     * @private\n     * @param {?} date\n     * @return {?}\n     */\n    _getDateInCurrentMonth(date) {\n        return date && this._hasSameMonthAndYear(date, this.activeDate) ?\n            this._dateAdapter.getDate(date) : null;\n    }\n    /**\n     * Checks whether the 2 dates are non-null and fall within the same month of the same year.\n     * @private\n     * @param {?} d1\n     * @param {?} d2\n     * @return {?}\n     */\n    _hasSameMonthAndYear(d1, d2) {\n        return !!(d1 && d2 && this._dateAdapter.getMonth(d1) == this._dateAdapter.getMonth(d2) &&\n            this._dateAdapter.getYear(d1) == this._dateAdapter.getYear(d2));\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Determines whether the user has the RTL layout direction.\n     * @private\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n}\nMatMonthView.ɵfac = function MatMonthView_Factory(t) { return new (t || MatMonthView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nMatMonthView.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatMonthView, selectors: [[\"mat-month-view\"]], viewQuery: function MatMonthView_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendarBody, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    } }, inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\", dateClass: \"dateClass\" }, outputs: { selectedChange: \"selectedChange\", _userSelection: \"_userSelection\", activeDateChange: \"activeDateChange\" }, exportAs: [\"matMonthView\"], decls: 7, vars: 7, consts: [[\"role\", \"presentation\", 1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [\"scope\", \"col\", 4, \"ngFor\", \"ngForOf\"], [\"colspan\", \"7\", \"aria-hidden\", \"true\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"label\", \"rows\", \"todayValue\", \"selectedValue\", \"labelMinRequiredCells\", \"activeCell\", \"selectedValueChange\", \"keydown\"], [\"scope\", \"col\"]], template: function MatMonthView_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"thead\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"tr\");\n        ɵngcc0.ɵɵtemplate(3, MatMonthView_th_3_Template, 2, 2, \"th\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"tr\");\n        ɵngcc0.ɵɵelement(5, \"th\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"tbody\", 4);\n        ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatMonthView_Template_tbody_selectedValueChange_6_listener($event) { return ctx._dateSelected($event); })(\"keydown\", function MatMonthView_Template_tbody_keydown_6_listener($event) { return ctx._handleCalendarBodyKeydown($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._weekdays);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"label\", ctx._monthLabel)(\"rows\", ctx._weeks)(\"todayValue\", ctx._todayDate)(\"selectedValue\", ctx._selectedDate)(\"labelMinRequiredCells\", 3)(\"activeCell\", ctx._dateAdapter.getDate(ctx.activeDate) - 1);\n    } }, directives: [ɵngcc1.NgForOf, MatCalendarBody], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatMonthView.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatMonthView.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    _userSelection: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMonthView, [{\n        type: Component,\n        args: [{\n                selector: 'mat-month-view',\n                template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\">\\n  <thead class=\\\"mat-calendar-table-header\\\">\\n    <tr>\\n      <th scope=\\\"col\\\" *ngFor=\\\"let day of _weekdays\\\" [attr.aria-label]=\\\"day.long\\\">{{day.narrow}}</th>\\n    </tr>\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"7\\\" aria-hidden=\\\"true\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [label]=\\\"_monthLabel\\\"\\n         [rows]=\\\"_weeks\\\"\\n         [todayValue]=\\\"_todayDate!\\\"\\n         [selectedValue]=\\\"_selectedDate!\\\"\\n         [labelMinRequiredCells]=\\\"3\\\"\\n         [activeCell]=\\\"_dateAdapter.getDate(activeDate) - 1\\\"\\n         (selectedValueChange)=\\\"_dateSelected($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\",\n                exportAs: 'matMonthView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { selectedChange: [{\n            type: Output\n        }], _userSelection: [{\n            type: Output\n        }], activeDateChange: [{\n            type: Output\n        }], activeDate: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }], _matCalendarBody: [{\n            type: ViewChild,\n            args: [MatCalendarBody]\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMonthView.prototype._rerenderSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMonthView.prototype._activeDate;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMonthView.prototype._selected;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMonthView.prototype._minDate;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMonthView.prototype._maxDate;\n    /**\n     * Function used to filter which dates are selectable.\n     * @type {?}\n     */\n    MatMonthView.prototype.dateFilter;\n    /**\n     * Function that can be used to add custom CSS classes to dates.\n     * @type {?}\n     */\n    MatMonthView.prototype.dateClass;\n    /**\n     * Emits when a new date is selected.\n     * @type {?}\n     */\n    MatMonthView.prototype.selectedChange;\n    /**\n     * Emits when any date is selected.\n     * @type {?}\n     */\n    MatMonthView.prototype._userSelection;\n    /**\n     * Emits when any date is activated.\n     * @type {?}\n     */\n    MatMonthView.prototype.activeDateChange;\n    /**\n     * The body of calendar table\n     * @type {?}\n     */\n    MatMonthView.prototype._matCalendarBody;\n    /**\n     * The label for this month (e.g. \"January 2017\").\n     * @type {?}\n     */\n    MatMonthView.prototype._monthLabel;\n    /**\n     * Grid of calendar cells representing the dates of the month.\n     * @type {?}\n     */\n    MatMonthView.prototype._weeks;\n    /**\n     * The number of blank cells in the first row before the 1st of the month.\n     * @type {?}\n     */\n    MatMonthView.prototype._firstWeekOffset;\n    /**\n     * The date of the month that the currently selected Date falls on.\n     * Null if the currently selected Date is in another month.\n     * @type {?}\n     */\n    MatMonthView.prototype._selectedDate;\n    /**\n     * The date of the month that today falls on. Null if today is in another month.\n     * @type {?}\n     */\n    MatMonthView.prototype._todayDate;\n    /**\n     * The names of the weekdays.\n     * @type {?}\n     */\n    MatMonthView.prototype._weekdays;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMonthView.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMonthView.prototype._dateFormats;\n    /** @type {?} */\n    MatMonthView.prototype._dateAdapter;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMonthView.prototype._dir;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/multi-year-view.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst yearsPerPage = 24;\n/** @type {?} */\nconst yearsPerRow = 4;\n/**\n * An internal component used to display a year selector in the datepicker.\n * \\@docs-private\n * @template D\n */\nclass MatMultiYearView {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _dateAdapter\n     * @param {?=} _dir\n     */\n    constructor(_changeDetectorRef, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._rerenderSubscription = Subscription.EMPTY;\n        /**\n         * Emits when a new year is selected.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the selected year. This doesn't imply a change on the selected date\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits when any date is activated.\n         */\n        this.activeDateChange = new EventEmitter();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /**\n     * The date to display in this multi-year view (everything other than the year is ignored).\n     * @return {?}\n     */\n    get activeDate() { return this._activeDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set activeDate(value) {\n        /** @type {?} */\n        let oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (!isSameMultiYearView(this._dateAdapter, oldActiveDate, this._activeDate, this.minDate, this.maxDate)) {\n            this._init();\n        }\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._selectedYear = this._selected && this._dateAdapter.getYear(this._selected);\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get minDate() { return this._minDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minDate(value) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get maxDate() { return this._maxDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxDate(value) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._rerenderSubscription = this._dateAdapter.localeChanges\n            .pipe(startWith(null))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._init()));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n    }\n    /**\n     * Initializes this multi-year view.\n     * @return {?}\n     */\n    _init() {\n        this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());\n        // We want a range years such that we maximize the number of\n        // enabled dates visible at once. This prevents issues where the minimum year\n        // is the last item of a page OR the maximum year is the first item of a page.\n        // The offset from the active year to the \"slot\" for the starting year is the\n        // *actual* first rendered year in the multi-year view.\n        /** @type {?} */\n        const activeYear = this._dateAdapter.getYear(this._activeDate);\n        /** @type {?} */\n        const minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n        this._years = [];\n        for (let i = 0, row = []; i < yearsPerPage; i++) {\n            row.push(minYearOfPage + i);\n            if (row.length == yearsPerRow) {\n                this._years.push(row.map((/**\n                 * @param {?} year\n                 * @return {?}\n                 */\n                year => this._createCellForYear(year))));\n                row = [];\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Handles when a new year is selected.\n     * @param {?} year\n     * @return {?}\n     */\n    _yearSelected(year) {\n        this.yearSelected.emit(this._dateAdapter.createDate(year, 0, 1));\n        /** @type {?} */\n        let month = this._dateAdapter.getMonth(this.activeDate);\n        /** @type {?} */\n        let daysInMonth = this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(year, month, 1));\n        this.selectedChange.emit(this._dateAdapter.createDate(year, month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n    /**\n     * Handles keydown events on the calendar body when calendar is in multi-year view.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleCalendarBodyKeydown(event) {\n        /** @type {?} */\n        const oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerPage - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate) - 1);\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n                break;\n            case ENTER:\n            case SPACE:\n                this._yearSelected(this._dateAdapter.getYear(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /**\n     * @return {?}\n     */\n    _getActiveCell() {\n        return getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /**\n     * Creates an MatCalendarCell for the given year.\n     * @private\n     * @param {?} year\n     * @return {?}\n     */\n    _createCellForYear(year) {\n        /** @type {?} */\n        let yearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(year, 0, 1));\n        return new MatCalendarCell(year, yearName, yearName, this._shouldEnableYear(year));\n    }\n    /**\n     * Whether the given year is enabled.\n     * @private\n     * @param {?} year\n     * @return {?}\n     */\n    _shouldEnableYear(year) {\n        // disable if the year is greater than maxDate lower than minDate\n        if (year === undefined || year === null ||\n            (this.maxDate && year > this._dateAdapter.getYear(this.maxDate)) ||\n            (this.minDate && year < this._dateAdapter.getYear(this.minDate))) {\n            return false;\n        }\n        // enable if it reaches here and there's no filter defined\n        if (!this.dateFilter) {\n            return true;\n        }\n        /** @type {?} */\n        const firstOfYear = this._dateAdapter.createDate(year, 0, 1);\n        // If any date in the year is enabled count the year as enabled.\n        for (let date = firstOfYear; this._dateAdapter.getYear(date) == year; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Determines whether the user has the RTL layout direction.\n     * @private\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n}\nMatMultiYearView.ɵfac = function MatMultiYearView_Factory(t) { return new (t || MatMultiYearView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nMatMultiYearView.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatMultiYearView, selectors: [[\"mat-multi-year-view\"]], viewQuery: function MatMultiYearView_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendarBody, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    } }, inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\" }, outputs: { selectedChange: \"selectedChange\", yearSelected: \"yearSelected\", activeDateChange: \"activeDateChange\" }, exportAs: [\"matMultiYearView\"], decls: 5, vars: 6, consts: [[\"role\", \"presentation\", 1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [\"colspan\", \"4\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"rows\", \"todayValue\", \"selectedValue\", \"numCols\", \"cellAspectRatio\", \"activeCell\", \"selectedValueChange\", \"keydown\"]], template: function MatMultiYearView_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"thead\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"tr\");\n        ɵngcc0.ɵɵelement(3, \"th\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"tbody\", 3);\n        ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatMultiYearView_Template_tbody_selectedValueChange_4_listener($event) { return ctx._yearSelected($event); })(\"keydown\", function MatMultiYearView_Template_tbody_keydown_4_listener($event) { return ctx._handleCalendarBodyKeydown($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"rows\", ctx._years)(\"todayValue\", ctx._todayYear)(\"selectedValue\", ctx._selectedYear)(\"numCols\", 4)(\"cellAspectRatio\", 4 / 7)(\"activeCell\", ctx._getActiveCell());\n    } }, directives: [MatCalendarBody], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatMultiYearView.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatMultiYearView.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    yearSelected: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMultiYearView, [{\n        type: Component,\n        args: [{\n                selector: 'mat-multi-year-view',\n                template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\">\\n  <thead class=\\\"mat-calendar-table-header\\\">\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [rows]=\\\"_years\\\"\\n         [todayValue]=\\\"_todayYear\\\"\\n         [selectedValue]=\\\"_selectedYear!\\\"\\n         [numCols]=\\\"4\\\"\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\n         [activeCell]=\\\"_getActiveCell()\\\"\\n         (selectedValueChange)=\\\"_yearSelected($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\",\n                exportAs: 'matMultiYearView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { selectedChange: [{\n            type: Output\n        }], yearSelected: [{\n            type: Output\n        }], activeDateChange: [{\n            type: Output\n        }], activeDate: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], _matCalendarBody: [{\n            type: ViewChild,\n            args: [MatCalendarBody]\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMultiYearView.prototype._rerenderSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMultiYearView.prototype._activeDate;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMultiYearView.prototype._selected;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMultiYearView.prototype._minDate;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMultiYearView.prototype._maxDate;\n    /**\n     * A function used to filter which dates are selectable.\n     * @type {?}\n     */\n    MatMultiYearView.prototype.dateFilter;\n    /**\n     * Emits when a new year is selected.\n     * @type {?}\n     */\n    MatMultiYearView.prototype.selectedChange;\n    /**\n     * Emits the selected year. This doesn't imply a change on the selected date\n     * @type {?}\n     */\n    MatMultiYearView.prototype.yearSelected;\n    /**\n     * Emits when any date is activated.\n     * @type {?}\n     */\n    MatMultiYearView.prototype.activeDateChange;\n    /**\n     * The body of calendar table\n     * @type {?}\n     */\n    MatMultiYearView.prototype._matCalendarBody;\n    /**\n     * Grid of calendar cells representing the currently displayed years.\n     * @type {?}\n     */\n    MatMultiYearView.prototype._years;\n    /**\n     * The year that today falls on.\n     * @type {?}\n     */\n    MatMultiYearView.prototype._todayYear;\n    /**\n     * The year of the selected date. Null if the selected date is null.\n     * @type {?}\n     */\n    MatMultiYearView.prototype._selectedYear;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMultiYearView.prototype._changeDetectorRef;\n    /** @type {?} */\n    MatMultiYearView.prototype._dateAdapter;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMultiYearView.prototype._dir;\n}\n/**\n * @template D\n * @param {?} dateAdapter\n * @param {?} date1\n * @param {?} date2\n * @param {?} minDate\n * @param {?} maxDate\n * @return {?}\n */\nfunction isSameMultiYearView(dateAdapter, date1, date2, minDate, maxDate) {\n    /** @type {?} */\n    const year1 = dateAdapter.getYear(date1);\n    /** @type {?} */\n    const year2 = dateAdapter.getYear(date2);\n    /** @type {?} */\n    const startingYear = getStartingYear(dateAdapter, minDate, maxDate);\n    return Math.floor((year1 - startingYear) / yearsPerPage) ===\n        Math.floor((year2 - startingYear) / yearsPerPage);\n}\n/**\n * When the multi-year view is first opened, the active year will be in view.\n * So we compute how many years are between the active year and the *slot* where our\n * \"startingYear\" will render when paged into view.\n * @template D\n * @param {?} dateAdapter\n * @param {?} activeDate\n * @param {?} minDate\n * @param {?} maxDate\n * @return {?}\n */\nfunction getActiveOffset(dateAdapter, activeDate, minDate, maxDate) {\n    /** @type {?} */\n    const activeYear = dateAdapter.getYear(activeDate);\n    return euclideanModulo((activeYear - getStartingYear(dateAdapter, minDate, maxDate)), yearsPerPage);\n}\n/**\n * We pick a \"starting\" year such that either the maximum year would be at the end\n * or the minimum year would be at the beginning of a page.\n * @template D\n * @param {?} dateAdapter\n * @param {?} minDate\n * @param {?} maxDate\n * @return {?}\n */\nfunction getStartingYear(dateAdapter, minDate, maxDate) {\n    /** @type {?} */\n    let startingYear = 0;\n    if (maxDate) {\n        /** @type {?} */\n        const maxYear = dateAdapter.getYear(maxDate);\n        startingYear = maxYear - yearsPerPage + 1;\n    }\n    else if (minDate) {\n        startingYear = dateAdapter.getYear(minDate);\n    }\n    return startingYear;\n}\n/**\n * Gets remainder that is non-negative, even if first number is negative\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction euclideanModulo(a, b) {\n    return (a % b + b) % b;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/year-view.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An internal component used to display a single year in the datepicker.\n * \\@docs-private\n * @template D\n */\nclass MatYearView {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _dateFormats\n     * @param {?} _dateAdapter\n     * @param {?=} _dir\n     */\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateFormats = _dateFormats;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._rerenderSubscription = Subscription.EMPTY;\n        /**\n         * Emits when a new month is selected.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the selected month. This doesn't imply a change on the selected date\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when any date is activated.\n         */\n        this.activeDateChange = new EventEmitter();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /**\n     * The date to display in this year view (everything other than the year is ignored).\n     * @return {?}\n     */\n    get activeDate() { return this._activeDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set activeDate(value) {\n        /** @type {?} */\n        let oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (this._dateAdapter.getYear(oldActiveDate) !== this._dateAdapter.getYear(this._activeDate)) {\n            this._init();\n        }\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._selectedMonth = this._getMonthInCurrentYear(this._selected);\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get minDate() { return this._minDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minDate(value) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get maxDate() { return this._maxDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxDate(value) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._rerenderSubscription = this._dateAdapter.localeChanges\n            .pipe(startWith(null))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._init()));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n    }\n    /**\n     * Handles when a new month is selected.\n     * @param {?} month\n     * @return {?}\n     */\n    _monthSelected(month) {\n        /** @type {?} */\n        const normalizedDate = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n        this.monthSelected.emit(normalizedDate);\n        /** @type {?} */\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(normalizedDate);\n        this.selectedChange.emit(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n    /**\n     * Handles keydown events on the calendar body when calendar is in year view.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleCalendarBodyKeydown(event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        /** @type {?} */\n        const oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -4);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 4);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 11 - this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\n                break;\n            case ENTER:\n            case SPACE:\n                this._monthSelected(this._dateAdapter.getMonth(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /**\n     * Initializes this year view.\n     * @return {?}\n     */\n    _init() {\n        this._selectedMonth = this._getMonthInCurrentYear(this.selected);\n        this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today());\n        this._yearLabel = this._dateAdapter.getYearName(this.activeDate);\n        /** @type {?} */\n        let monthNames = this._dateAdapter.getMonthNames('short');\n        // First row of months only contains 5 elements so we can fit the year label on the same row.\n        this._months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map((/**\n         * @param {?} row\n         * @return {?}\n         */\n        row => row.map((/**\n         * @param {?} month\n         * @return {?}\n         */\n        month => this._createCellForMonth(month, monthNames[month])))));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /**\n     * Gets the month in this year that the given Date falls on.\n     * Returns null if the given Date is in another year.\n     * @private\n     * @param {?} date\n     * @return {?}\n     */\n    _getMonthInCurrentYear(date) {\n        return date && this._dateAdapter.getYear(date) == this._dateAdapter.getYear(this.activeDate) ?\n            this._dateAdapter.getMonth(date) : null;\n    }\n    /**\n     * Creates an MatCalendarCell for the given month.\n     * @private\n     * @param {?} month\n     * @param {?} monthName\n     * @return {?}\n     */\n    _createCellForMonth(month, monthName) {\n        /** @type {?} */\n        let ariaLabel = this._dateAdapter.format(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1), this._dateFormats.display.monthYearA11yLabel);\n        return new MatCalendarCell(month, monthName.toLocaleUpperCase(), ariaLabel, this._shouldEnableMonth(month));\n    }\n    /**\n     * Whether the given month is enabled.\n     * @private\n     * @param {?} month\n     * @return {?}\n     */\n    _shouldEnableMonth(month) {\n        /** @type {?} */\n        const activeYear = this._dateAdapter.getYear(this.activeDate);\n        if (month === undefined || month === null ||\n            this._isYearAndMonthAfterMaxDate(activeYear, month) ||\n            this._isYearAndMonthBeforeMinDate(activeYear, month)) {\n            return false;\n        }\n        if (!this.dateFilter) {\n            return true;\n        }\n        /** @type {?} */\n        const firstOfMonth = this._dateAdapter.createDate(activeYear, month, 1);\n        // If any date in the month is enabled count the month as enabled.\n        for (let date = firstOfMonth; this._dateAdapter.getMonth(date) == month; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Tests whether the combination month/year is after this.maxDate, considering\n     * just the month and year of this.maxDate\n     * @private\n     * @param {?} year\n     * @param {?} month\n     * @return {?}\n     */\n    _isYearAndMonthAfterMaxDate(year, month) {\n        if (this.maxDate) {\n            /** @type {?} */\n            const maxYear = this._dateAdapter.getYear(this.maxDate);\n            /** @type {?} */\n            const maxMonth = this._dateAdapter.getMonth(this.maxDate);\n            return year > maxYear || (year === maxYear && month > maxMonth);\n        }\n        return false;\n    }\n    /**\n     * Tests whether the combination month/year is before this.minDate, considering\n     * just the month and year of this.minDate\n     * @private\n     * @param {?} year\n     * @param {?} month\n     * @return {?}\n     */\n    _isYearAndMonthBeforeMinDate(year, month) {\n        if (this.minDate) {\n            /** @type {?} */\n            const minYear = this._dateAdapter.getYear(this.minDate);\n            /** @type {?} */\n            const minMonth = this._dateAdapter.getMonth(this.minDate);\n            return year < minYear || (year === minYear && month < minMonth);\n        }\n        return false;\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Determines whether the user has the RTL layout direction.\n     * @private\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n}\nMatYearView.ɵfac = function MatYearView_Factory(t) { return new (t || MatYearView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nMatYearView.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatYearView, selectors: [[\"mat-year-view\"]], viewQuery: function MatYearView_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendarBody, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    } }, inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\" }, outputs: { selectedChange: \"selectedChange\", monthSelected: \"monthSelected\", activeDateChange: \"activeDateChange\" }, exportAs: [\"matYearView\"], decls: 5, vars: 8, consts: [[\"role\", \"presentation\", 1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [\"colspan\", \"4\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"label\", \"rows\", \"todayValue\", \"selectedValue\", \"labelMinRequiredCells\", \"numCols\", \"cellAspectRatio\", \"activeCell\", \"selectedValueChange\", \"keydown\"]], template: function MatYearView_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"thead\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"tr\");\n        ɵngcc0.ɵɵelement(3, \"th\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"tbody\", 3);\n        ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatYearView_Template_tbody_selectedValueChange_4_listener($event) { return ctx._monthSelected($event); })(\"keydown\", function MatYearView_Template_tbody_keydown_4_listener($event) { return ctx._handleCalendarBodyKeydown($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"label\", ctx._yearLabel)(\"rows\", ctx._months)(\"todayValue\", ctx._todayMonth)(\"selectedValue\", ctx._selectedMonth)(\"labelMinRequiredCells\", 2)(\"numCols\", 4)(\"cellAspectRatio\", 4 / 7)(\"activeCell\", ctx._dateAdapter.getMonth(ctx.activeDate));\n    } }, directives: [MatCalendarBody], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatYearView.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatYearView.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatYearView, [{\n        type: Component,\n        args: [{\n                selector: 'mat-year-view',\n                template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\">\\n  <thead class=\\\"mat-calendar-table-header\\\">\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [label]=\\\"_yearLabel\\\"\\n         [rows]=\\\"_months\\\"\\n         [todayValue]=\\\"_todayMonth!\\\"\\n         [selectedValue]=\\\"_selectedMonth!\\\"\\n         [labelMinRequiredCells]=\\\"2\\\"\\n         [numCols]=\\\"4\\\"\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\n         [activeCell]=\\\"_dateAdapter.getMonth(activeDate)\\\"\\n         (selectedValueChange)=\\\"_monthSelected($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\",\n                exportAs: 'matYearView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { selectedChange: [{\n            type: Output\n        }], monthSelected: [{\n            type: Output\n        }], activeDateChange: [{\n            type: Output\n        }], activeDate: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], _matCalendarBody: [{\n            type: ViewChild,\n            args: [MatCalendarBody]\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatYearView.prototype._rerenderSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatYearView.prototype._activeDate;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatYearView.prototype._selected;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatYearView.prototype._minDate;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatYearView.prototype._maxDate;\n    /**\n     * A function used to filter which dates are selectable.\n     * @type {?}\n     */\n    MatYearView.prototype.dateFilter;\n    /**\n     * Emits when a new month is selected.\n     * @type {?}\n     */\n    MatYearView.prototype.selectedChange;\n    /**\n     * Emits the selected month. This doesn't imply a change on the selected date\n     * @type {?}\n     */\n    MatYearView.prototype.monthSelected;\n    /**\n     * Emits when any date is activated.\n     * @type {?}\n     */\n    MatYearView.prototype.activeDateChange;\n    /**\n     * The body of calendar table\n     * @type {?}\n     */\n    MatYearView.prototype._matCalendarBody;\n    /**\n     * Grid of calendar cells representing the months of the year.\n     * @type {?}\n     */\n    MatYearView.prototype._months;\n    /**\n     * The label for this year (e.g. \"2017\").\n     * @type {?}\n     */\n    MatYearView.prototype._yearLabel;\n    /**\n     * The month in this year that today falls on. Null if today is in a different year.\n     * @type {?}\n     */\n    MatYearView.prototype._todayMonth;\n    /**\n     * The month in this year that the selected Date falls on.\n     * Null if the selected Date is in a different year.\n     * @type {?}\n     */\n    MatYearView.prototype._selectedMonth;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatYearView.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatYearView.prototype._dateFormats;\n    /** @type {?} */\n    MatYearView.prototype._dateAdapter;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatYearView.prototype._dir;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/calendar.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default header for MatCalendar\n * @template D\n */\nclass MatCalendarHeader {\n    /**\n     * @param {?} _intl\n     * @param {?} calendar\n     * @param {?} _dateAdapter\n     * @param {?} _dateFormats\n     * @param {?} changeDetectorRef\n     */\n    constructor(_intl, calendar, _dateAdapter, _dateFormats, changeDetectorRef) {\n        this._intl = _intl;\n        this.calendar = calendar;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this.calendar.stateChanges.subscribe((/**\n         * @return {?}\n         */\n        () => changeDetectorRef.markForCheck()));\n    }\n    /**\n     * The label for the current calendar view.\n     * @return {?}\n     */\n    get periodButtonText() {\n        if (this.calendar.currentView == 'month') {\n            return this._dateAdapter\n                .format(this.calendar.activeDate, this._dateFormats.display.monthYearLabel)\n                .toLocaleUpperCase();\n        }\n        if (this.calendar.currentView == 'year') {\n            return this._dateAdapter.getYearName(this.calendar.activeDate);\n        }\n        // The offset from the active year to the \"slot\" for the starting year is the\n        // *actual* first rendered year in the multi-year view, and the last year is\n        // just yearsPerPage - 1 away.\n        /** @type {?} */\n        const activeYear = this._dateAdapter.getYear(this.calendar.activeDate);\n        /** @type {?} */\n        const minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.calendar.activeDate, this.calendar.minDate, this.calendar.maxDate);\n        /** @type {?} */\n        const maxYearOfPage = minYearOfPage + yearsPerPage - 1;\n        /** @type {?} */\n        const minYearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(minYearOfPage, 0, 1));\n        /** @type {?} */\n        const maxYearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(maxYearOfPage, 0, 1));\n        return this._intl.formatYearRange(minYearName, maxYearName);\n    }\n    /**\n     * @return {?}\n     */\n    get periodButtonLabel() {\n        return this.calendar.currentView == 'month' ?\n            this._intl.switchToMultiYearViewLabel : this._intl.switchToMonthViewLabel;\n    }\n    /**\n     * The label for the previous button.\n     * @return {?}\n     */\n    get prevButtonLabel() {\n        return {\n            'month': this._intl.prevMonthLabel,\n            'year': this._intl.prevYearLabel,\n            'multi-year': this._intl.prevMultiYearLabel\n        }[this.calendar.currentView];\n    }\n    /**\n     * The label for the next button.\n     * @return {?}\n     */\n    get nextButtonLabel() {\n        return {\n            'month': this._intl.nextMonthLabel,\n            'year': this._intl.nextYearLabel,\n            'multi-year': this._intl.nextMultiYearLabel\n        }[this.calendar.currentView];\n    }\n    /**\n     * Handles user clicks on the period label.\n     * @return {?}\n     */\n    currentPeriodClicked() {\n        this.calendar.currentView = this.calendar.currentView == 'month' ? 'multi-year' : 'month';\n    }\n    /**\n     * Handles user clicks on the previous button.\n     * @return {?}\n     */\n    previousClicked() {\n        this.calendar.activeDate = this.calendar.currentView == 'month' ?\n            this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) :\n            this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? -1 : -yearsPerPage);\n    }\n    /**\n     * Handles user clicks on the next button.\n     * @return {?}\n     */\n    nextClicked() {\n        this.calendar.activeDate = this.calendar.currentView == 'month' ?\n            this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) :\n            this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? 1 : yearsPerPage);\n    }\n    /**\n     * Whether the previous period button is enabled.\n     * @return {?}\n     */\n    previousEnabled() {\n        if (!this.calendar.minDate) {\n            return true;\n        }\n        return !this.calendar.minDate ||\n            !this._isSameView(this.calendar.activeDate, this.calendar.minDate);\n    }\n    /**\n     * Whether the next period button is enabled.\n     * @return {?}\n     */\n    nextEnabled() {\n        return !this.calendar.maxDate ||\n            !this._isSameView(this.calendar.activeDate, this.calendar.maxDate);\n    }\n    /**\n     * Whether the two dates represent the same view in the current view mode (month or year).\n     * @private\n     * @param {?} date1\n     * @param {?} date2\n     * @return {?}\n     */\n    _isSameView(date1, date2) {\n        if (this.calendar.currentView == 'month') {\n            return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2) &&\n                this._dateAdapter.getMonth(date1) == this._dateAdapter.getMonth(date2);\n        }\n        if (this.calendar.currentView == 'year') {\n            return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2);\n        }\n        // Otherwise we are in 'multi-year' view.\n        return isSameMultiYearView(this._dateAdapter, date1, date2, this.calendar.minDate, this.calendar.maxDate);\n    }\n}\nMatCalendarHeader.ɵfac = function MatCalendarHeader_Factory(t) { return new (t || MatCalendarHeader)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatCalendar))), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatCalendarHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCalendarHeader, selectors: [[\"mat-calendar-header\"]], exportAs: [\"matCalendarHeader\"], ngContentSelectors: _c1, decls: 9, vars: 8, consts: [[1, \"mat-calendar-header\"], [1, \"mat-calendar-controls\"], [\"mat-button\", \"\", \"type\", \"button\", \"cdkAriaLive\", \"polite\", 1, \"mat-calendar-period-button\", 3, \"click\"], [1, \"mat-calendar-arrow\"], [1, \"mat-calendar-spacer\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-calendar-previous-button\", 3, \"disabled\", \"click\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-calendar-next-button\", 3, \"disabled\", \"click\"]], template: function MatCalendarHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"button\", 2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_2_listener() { return ctx.currentPeriodClicked(); });\n        ɵngcc0.ɵɵtext(3);\n        ɵngcc0.ɵɵelement(4, \"div\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(5, \"div\", 4);\n        ɵngcc0.ɵɵprojection(6);\n        ɵngcc0.ɵɵelementStart(7, \"button\", 5);\n        ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_7_listener() { return ctx.previousClicked(); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(8, \"button\", 6);\n        ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_8_listener() { return ctx.nextClicked(); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.periodButtonLabel);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.periodButtonText, \" \");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"mat-calendar-invert\", ctx.calendar.currentView != \"month\");\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"disabled\", !ctx.previousEnabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.prevButtonLabel);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"disabled\", !ctx.nextEnabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.nextButtonLabel);\n    } }, directives: [ɵngcc4.MatButton, ɵngcc5.CdkAriaLive], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatCalendarHeader.ctorParameters = () => [\n    { type: MatDatepickerIntl },\n    { type: MatCalendar, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatCalendar)),] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: ChangeDetectorRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCalendarHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-calendar-header',\n                template: \"<div class=\\\"mat-calendar-header\\\">\\n  <div class=\\\"mat-calendar-controls\\\">\\n    <button mat-button type=\\\"button\\\" class=\\\"mat-calendar-period-button\\\"\\n            (click)=\\\"currentPeriodClicked()\\\" [attr.aria-label]=\\\"periodButtonLabel\\\"\\n            cdkAriaLive=\\\"polite\\\">\\n      {{periodButtonText}}\\n      <div class=\\\"mat-calendar-arrow\\\"\\n           [class.mat-calendar-invert]=\\\"calendar.currentView != 'month'\\\"></div>\\n    </button>\\n\\n    <div class=\\\"mat-calendar-spacer\\\"></div>\\n\\n    <ng-content></ng-content>\\n\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-previous-button\\\"\\n            [disabled]=\\\"!previousEnabled()\\\" (click)=\\\"previousClicked()\\\"\\n            [attr.aria-label]=\\\"prevButtonLabel\\\">\\n    </button>\\n\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-next-button\\\"\\n            [disabled]=\\\"!nextEnabled()\\\" (click)=\\\"nextClicked()\\\"\\n            [attr.aria-label]=\\\"nextButtonLabel\\\">\\n    </button>\\n  </div>\\n</div>\\n\",\n                exportAs: 'matCalendarHeader',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: MatDatepickerIntl }, { type: MatCalendar, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatCalendar))]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendarHeader.prototype._intl;\n    /** @type {?} */\n    MatCalendarHeader.prototype.calendar;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendarHeader.prototype._dateAdapter;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendarHeader.prototype._dateFormats;\n}\n/**\n * A calendar that is used as part of the datepicker.\n * \\@docs-private\n * @template D\n */\nclass MatCalendar {\n    /**\n     * @param {?} _intl\n     * @param {?} _dateAdapter\n     * @param {?} _dateFormats\n     * @param {?} _changeDetectorRef\n     */\n    constructor(_intl, _dateAdapter, _dateFormats, _changeDetectorRef) {\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Used for scheduling that focus should be moved to the active cell on the next tick.\n         * We need to schedule it, rather than do it immediately, because we have to wait\n         * for Angular to re-evaluate the view children.\n         */\n        this._moveFocusOnNextTick = false;\n        /**\n         * Whether the calendar should be started in month or year view.\n         */\n        this.startView = 'month';\n        /**\n         * Emits when the currently selected date changes.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the year chosen in multiyear view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits the month chosen in year view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when any date is selected.\n         */\n        this._userSelection = new EventEmitter();\n        /**\n         * Emits whenever there is a state change that the header may need to respond to.\n         */\n        this.stateChanges = new Subject();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        this._intlChanges = _intl.changes.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            _changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * A date representing the period (month or year) to start the calendar in.\n     * @return {?}\n     */\n    get startAt() { return this._startAt; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set startAt(value) {\n        this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get minDate() { return this._minDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minDate(value) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get maxDate() { return this._maxDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxDate(value) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The current active date. This determines which time period is shown and which date is\n     * highlighted when using keyboard navigation.\n     * @return {?}\n     */\n    get activeDate() { return this._clampedActiveDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set activeDate(value) {\n        this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);\n        this.stateChanges.next();\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Whether the calendar is in month view.\n     * @return {?}\n     */\n    get currentView() { return this._currentView; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set currentView(value) {\n        this._currentView = value;\n        this._moveFocusOnNextTick = true;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._calendarHeaderPortal = new ComponentPortal(this.headerComponent || MatCalendarHeader);\n        this.activeDate = this.startAt || this._dateAdapter.today();\n        // Assign to the private property since we don't want to move focus on init.\n        this._currentView = this.startView;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewChecked() {\n        if (this._moveFocusOnNextTick) {\n            this._moveFocusOnNextTick = false;\n            this.focusActiveCell();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n        this.stateChanges.complete();\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const change = changes['minDate'] || changes['maxDate'] || changes['dateFilter'];\n        if (change && !change.firstChange) {\n            /** @type {?} */\n            const view = this._getCurrentViewComponent();\n            if (view) {\n                // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n                // passed down to the view via data bindings which won't be up-to-date when we call `_init`.\n                this._changeDetectorRef.detectChanges();\n                view._init();\n            }\n        }\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    focusActiveCell() {\n        this._getCurrentViewComponent()._focusActiveCell();\n    }\n    /**\n     * Updates today's date after an update of the active date\n     * @return {?}\n     */\n    updateTodaysDate() {\n        /** @type {?} */\n        const currentView = this.currentView;\n        /** @type {?} */\n        let view;\n        if (currentView === 'month') {\n            view = this.monthView;\n        }\n        else if (currentView === 'year') {\n            view = this.yearView;\n        }\n        else {\n            view = this.multiYearView;\n        }\n        view._init();\n    }\n    /**\n     * Handles date selection in the month view.\n     * @param {?} date\n     * @return {?}\n     */\n    _dateSelected(date) {\n        if (date && !this._dateAdapter.sameDate(date, this.selected)) {\n            this.selectedChange.emit(date);\n        }\n    }\n    /**\n     * Handles year selection in the multiyear view.\n     * @param {?} normalizedYear\n     * @return {?}\n     */\n    _yearSelectedInMultiYearView(normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    }\n    /**\n     * Handles month selection in the year view.\n     * @param {?} normalizedMonth\n     * @return {?}\n     */\n    _monthSelectedInYearView(normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n    /**\n     * @return {?}\n     */\n    _userSelected() {\n        this._userSelection.emit();\n    }\n    /**\n     * Handles year/month selection in the multi-year/year views.\n     * @param {?} date\n     * @param {?} view\n     * @return {?}\n     */\n    _goToDateInView(date, view) {\n        this.activeDate = date;\n        this.currentView = view;\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Returns the component instance that corresponds to the current calendar view.\n     * @private\n     * @return {?}\n     */\n    _getCurrentViewComponent() {\n        return this.monthView || this.yearView || this.multiYearView;\n    }\n}\nMatCalendar.ɵfac = function MatCalendar_Factory(t) { return new (t || MatCalendar)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatCalendar.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCalendar, selectors: [[\"mat-calendar\"]], viewQuery: function MatCalendar_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatMonthView, true);\n        ɵngcc0.ɵɵviewQuery(MatYearView, true);\n        ɵngcc0.ɵɵviewQuery(MatMultiYearView, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.monthView = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.yearView = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.multiYearView = _t.first);\n    } }, hostAttrs: [1, \"mat-calendar\"], inputs: { startView: \"startView\", startAt: \"startAt\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", headerComponent: \"headerComponent\", dateFilter: \"dateFilter\", dateClass: \"dateClass\" }, outputs: { selectedChange: \"selectedChange\", yearSelected: \"yearSelected\", monthSelected: \"monthSelected\", _userSelection: \"_userSelection\" }, exportAs: [\"matCalendar\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 5, vars: 5, consts: [[3, \"cdkPortalOutlet\"], [\"cdkMonitorSubtreeFocus\", \"\", \"tabindex\", \"-1\", 1, \"mat-calendar-content\", 3, \"ngSwitch\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"selectedChange\", \"_userSelection\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"monthSelected\", \"selectedChange\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"yearSelected\", \"selectedChange\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"selectedChange\", \"_userSelection\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"monthSelected\", \"selectedChange\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"yearSelected\", \"selectedChange\"]], template: function MatCalendar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatCalendar_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatCalendar_mat_month_view_2_Template, 1, 6, \"mat-month-view\", 2);\n        ɵngcc0.ɵɵtemplate(3, MatCalendar_mat_year_view_3_Template, 1, 5, \"mat-year-view\", 3);\n        ɵngcc0.ɵɵtemplate(4, MatCalendar_mat_multi_year_view_4_Template, 1, 5, \"mat-multi-year-view\", 4);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._calendarHeaderPortal);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.currentView);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"month\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"year\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"multi-year\");\n    } }, directives: [ɵngcc6.CdkPortalOutlet, ɵngcc5.CdkMonitorFocus, ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, MatMonthView,\n        MatYearView,\n        MatMultiYearView], styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;margin:5% calc(33% / 7 - 16px)}.mat-calendar-controls .mat-icon-button:hover .mat-button-focus-overlay{opacity:.04}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top-width:5px;border-top-style:solid;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.mat-calendar-previous-button,.mat-calendar-next-button{position:relative}.mat-calendar-previous-button::after,.mat-calendar-next-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:\\\"\\\";position:absolute;top:0;left:-8px;right:-8px;height:1px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatCalendar.ctorParameters = () => [\n    { type: MatDatepickerIntl },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: ChangeDetectorRef }\n];\nMatCalendar.propDecorators = {\n    headerComponent: [{ type: Input }],\n    startAt: [{ type: Input }],\n    startView: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    yearSelected: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    _userSelection: [{ type: Output }],\n    monthView: [{ type: ViewChild, args: [MatMonthView,] }],\n    yearView: [{ type: ViewChild, args: [MatYearView,] }],\n    multiYearView: [{ type: ViewChild, args: [MatMultiYearView,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCalendar, [{\n        type: Component,\n        args: [{\n                selector: 'mat-calendar',\n                template: \"\\n<ng-template [cdkPortalOutlet]=\\\"_calendarHeaderPortal\\\"></ng-template>\\n\\n<div class=\\\"mat-calendar-content\\\" [ngSwitch]=\\\"currentView\\\" cdkMonitorSubtreeFocus tabindex=\\\"-1\\\">\\n  <mat-month-view\\n      *ngSwitchCase=\\\"'month'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      (selectedChange)=\\\"_dateSelected($event)\\\"\\n      (_userSelection)=\\\"_userSelected()\\\">\\n  </mat-month-view>\\n\\n  <mat-year-view\\n      *ngSwitchCase=\\\"'year'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      (monthSelected)=\\\"_monthSelectedInYearView($event)\\\"\\n      (selectedChange)=\\\"_goToDateInView($event, 'month')\\\">\\n  </mat-year-view>\\n\\n  <mat-multi-year-view\\n      *ngSwitchCase=\\\"'multi-year'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      (yearSelected)=\\\"_yearSelectedInMultiYearView($event)\\\"\\n      (selectedChange)=\\\"_goToDateInView($event, 'year')\\\">\\n  </mat-multi-year-view>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-calendar'\n                },\n                exportAs: 'matCalendar',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;margin:5% calc(33% / 7 - 16px)}.mat-calendar-controls .mat-icon-button:hover .mat-button-focus-overlay{opacity:.04}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top-width:5px;border-top-style:solid;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.mat-calendar-previous-button,.mat-calendar-next-button{position:relative}.mat-calendar-previous-button::after,.mat-calendar-next-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:\\\"\\\";position:absolute;top:0;left:-8px;right:-8px;height:1px}\\n\"]\n            }]\n    }], function () { return [{ type: MatDatepickerIntl }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { startView: [{\n            type: Input\n        }], selectedChange: [{\n            type: Output\n        }], yearSelected: [{\n            type: Output\n        }], monthSelected: [{\n            type: Output\n        }], _userSelection: [{\n            type: Output\n        }], startAt: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], headerComponent: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }], monthView: [{\n            type: ViewChild,\n            args: [MatMonthView]\n        }], yearView: [{\n            type: ViewChild,\n            args: [MatYearView]\n        }], multiYearView: [{\n            type: ViewChild,\n            args: [MatMultiYearView]\n        }] }); })();\nif (false) {\n    /**\n     * An input indicating the type of the header component, if set.\n     * @type {?}\n     */\n    MatCalendar.prototype.headerComponent;\n    /**\n     * A portal containing the header component type for this calendar.\n     * @type {?}\n     */\n    MatCalendar.prototype._calendarHeaderPortal;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._intlChanges;\n    /**\n     * Used for scheduling that focus should be moved to the active cell on the next tick.\n     * We need to schedule it, rather than do it immediately, because we have to wait\n     * for Angular to re-evaluate the view children.\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._moveFocusOnNextTick;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._startAt;\n    /**\n     * Whether the calendar should be started in month or year view.\n     * @type {?}\n     */\n    MatCalendar.prototype.startView;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._selected;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._minDate;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._maxDate;\n    /**\n     * Function used to filter which dates are selectable.\n     * @type {?}\n     */\n    MatCalendar.prototype.dateFilter;\n    /**\n     * Function that can be used to add custom CSS classes to dates.\n     * @type {?}\n     */\n    MatCalendar.prototype.dateClass;\n    /**\n     * Emits when the currently selected date changes.\n     * @type {?}\n     */\n    MatCalendar.prototype.selectedChange;\n    /**\n     * Emits the year chosen in multiyear view.\n     * This doesn't imply a change on the selected date.\n     * @type {?}\n     */\n    MatCalendar.prototype.yearSelected;\n    /**\n     * Emits the month chosen in year view.\n     * This doesn't imply a change on the selected date.\n     * @type {?}\n     */\n    MatCalendar.prototype.monthSelected;\n    /**\n     * Emits when any date is selected.\n     * @type {?}\n     */\n    MatCalendar.prototype._userSelection;\n    /**\n     * Reference to the current month view component.\n     * @type {?}\n     */\n    MatCalendar.prototype.monthView;\n    /**\n     * Reference to the current year view component.\n     * @type {?}\n     */\n    MatCalendar.prototype.yearView;\n    /**\n     * Reference to the current multi-year view component.\n     * @type {?}\n     */\n    MatCalendar.prototype.multiYearView;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._clampedActiveDate;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._currentView;\n    /**\n     * Emits whenever there is a state change that the header may need to respond to.\n     * @type {?}\n     */\n    MatCalendar.prototype.stateChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._dateAdapter;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._dateFormats;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._changeDetectorRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/datepicker-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material datepicker.\n * \\@docs-private\n * @type {?}\n */\nconst matDatepickerAnimations = {\n    /**\n     * Transforms the height of the datepicker's calendar.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(1, 0.8)'\n        })),\n        transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n            opacity: 1,\n            transform: 'scale(1, 1)'\n        }))),\n        transition('* => void', animate('100ms linear', style({ opacity: 0 })))\n    ]),\n    /**\n     * Fades in the content of the calendar.\n     */\n    fadeInCalendar: trigger('fadeInCalendar', [\n        state('void', style({ opacity: 0 })),\n        state('enter', style({ opacity: 1 })),\n        // TODO(crisbeto): this animation should be removed since it isn't quite on spec, but we\n        // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n        transition('void => *', animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/datepicker.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate a unique ID for each datepicker instance.\n * @type {?}\n */\nlet datepickerUid = 0;\n/**\n * Injection token that determines the scroll handling while the calendar is open.\n * @type {?}\n */\nconst MAT_DATEPICKER_SCROLL_STRATEGY = new InjectionToken('mat-datepicker-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_DATEPICKER_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY,\n};\n// Boilerplate for applying mixins to MatDatepickerContent.\n/**\n * \\@docs-private\n */\nclass MatDatepickerContentBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatDatepickerContentBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatDatepickerContentMixinBase = mixinColor(MatDatepickerContentBase);\n/**\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\n * MatCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * \\@docs-private\n * @template D\n */\nclass MatDatepickerContent extends _MatDatepickerContentMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?=} _changeDetectorRef\n     */\n    constructor(elementRef, _changeDetectorRef) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Current state of the animation.\n         */\n        this._animationState = 'enter';\n        /**\n         * Emits when an animation has finished.\n         */\n        this._animationDone = new Subject();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this._calendar.focusActiveCell();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._animationDone.complete();\n    }\n    /**\n     * @return {?}\n     */\n    _startExitAnimation() {\n        this._animationState = 'void';\n        // @breaking-change 11.0.0 Remove null check for `_changeDetectorRef`.\n        if (this._changeDetectorRef) {\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n}\nMatDatepickerContent.ɵfac = function MatDatepickerContent_Factory(t) { return new (t || MatDatepickerContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatDatepickerContent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDatepickerContent, selectors: [[\"mat-datepicker-content\"]], viewQuery: function MatDatepickerContent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendar, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._calendar = _t.first);\n    } }, hostAttrs: [1, \"mat-datepicker-content\"], hostVars: 3, hostBindings: function MatDatepickerContent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵcomponentHostSyntheticListener(\"@transformPanel.done\", function MatDatepickerContent_animation_transformPanel_done_HostBindingHandler() { return ctx._animationDone.next(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵupdateSyntheticHostBinding(\"@transformPanel\", ctx._animationState);\n        ɵngcc0.ɵɵclassProp(\"mat-datepicker-content-touch\", ctx.datepicker.touchUi);\n    } }, inputs: { color: \"color\" }, exportAs: [\"matDatepickerContent\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 11, consts: [[\"cdkTrapFocus\", \"\", 3, \"id\", \"ngClass\", \"startAt\", \"startView\", \"minDate\", \"maxDate\", \"dateFilter\", \"headerComponent\", \"selected\", \"dateClass\", \"selectedChange\", \"yearSelected\", \"monthSelected\", \"_userSelection\"]], template: function MatDatepickerContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"mat-calendar\", 0);\n        ɵngcc0.ɵɵlistener(\"selectedChange\", function MatDatepickerContent_Template_mat_calendar_selectedChange_0_listener($event) { return ctx.datepicker.select($event); })(\"yearSelected\", function MatDatepickerContent_Template_mat_calendar_yearSelected_0_listener($event) { return ctx.datepicker._selectYear($event); })(\"monthSelected\", function MatDatepickerContent_Template_mat_calendar_monthSelected_0_listener($event) { return ctx.datepicker._selectMonth($event); })(\"_userSelection\", function MatDatepickerContent_Template_mat_calendar__userSelection_0_listener() { return ctx.datepicker.close(); });\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"id\", ctx.datepicker.id)(\"ngClass\", ctx.datepicker.panelClass)(\"startAt\", ctx.datepicker.startAt)(\"startView\", ctx.datepicker.startView)(\"minDate\", ctx.datepicker._minDate)(\"maxDate\", ctx.datepicker._maxDate)(\"dateFilter\", ctx.datepicker._dateFilter)(\"headerComponent\", ctx.datepicker.calendarHeaderComponent)(\"selected\", ctx.datepicker._selected)(\"dateClass\", ctx.datepicker.dateClass)(\"@fadeInCalendar\", \"enter\");\n    } }, directives: [MatCalendar, ɵngcc5.CdkTrapFocus, ɵngcc1.NgClass], styles: [\".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content-touch{display:block;max-height:80vh;overflow:auto;margin:-24px}.mat-datepicker-content-touch .mat-calendar{min-width:250px;min-height:312px;max-width:750px;max-height:788px}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-calendar{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-calendar{width:80vw;height:100vw}}\\n\"], encapsulation: 2, data: { animation: [\n            matDatepickerAnimations.transformPanel,\n            matDatepickerAnimations.fadeInCalendar,\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatDatepickerContent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef }\n];\nMatDatepickerContent.propDecorators = {\n    _calendar: [{ type: ViewChild, args: [MatCalendar,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDatepickerContent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-datepicker-content',\n                template: \"<mat-calendar cdkTrapFocus\\n    [id]=\\\"datepicker.id\\\"\\n    [ngClass]=\\\"datepicker.panelClass\\\"\\n    [startAt]=\\\"datepicker.startAt\\\"\\n    [startView]=\\\"datepicker.startView\\\"\\n    [minDate]=\\\"datepicker._minDate\\\"\\n    [maxDate]=\\\"datepicker._maxDate\\\"\\n    [dateFilter]=\\\"datepicker._dateFilter\\\"\\n    [headerComponent]=\\\"datepicker.calendarHeaderComponent\\\"\\n    [selected]=\\\"datepicker._selected\\\"\\n    [dateClass]=\\\"datepicker.dateClass\\\"\\n    [@fadeInCalendar]=\\\"'enter'\\\"\\n    (selectedChange)=\\\"datepicker.select($event)\\\"\\n    (yearSelected)=\\\"datepicker._selectYear($event)\\\"\\n    (monthSelected)=\\\"datepicker._selectMonth($event)\\\"\\n    (_userSelection)=\\\"datepicker.close()\\\">\\n</mat-calendar>\\n\",\n                host: {\n                    'class': 'mat-datepicker-content',\n                    '[@transformPanel]': '_animationState',\n                    '(@transformPanel.done)': '_animationDone.next()',\n                    '[class.mat-datepicker-content-touch]': 'datepicker.touchUi'\n                },\n                animations: [\n                    matDatepickerAnimations.transformPanel,\n                    matDatepickerAnimations.fadeInCalendar,\n                ],\n                exportAs: 'matDatepickerContent',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['color'],\n                styles: [\".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content-touch{display:block;max-height:80vh;overflow:auto;margin:-24px}.mat-datepicker-content-touch .mat-calendar{min-width:250px;min-height:312px;max-width:750px;max-height:788px}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-calendar{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-calendar{width:80vw;height:100vw}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _calendar: [{\n            type: ViewChild,\n            args: [MatCalendar]\n        }] }); })();\nif (false) {\n    /**\n     * Reference to the internal calendar component.\n     * @type {?}\n     */\n    MatDatepickerContent.prototype._calendar;\n    /**\n     * Reference to the datepicker that created the overlay.\n     * @type {?}\n     */\n    MatDatepickerContent.prototype.datepicker;\n    /**\n     * Whether the datepicker is above or below the input.\n     * @type {?}\n     */\n    MatDatepickerContent.prototype._isAbove;\n    /**\n     * Current state of the animation.\n     * @type {?}\n     */\n    MatDatepickerContent.prototype._animationState;\n    /**\n     * Emits when an animation has finished.\n     * @type {?}\n     */\n    MatDatepickerContent.prototype._animationDone;\n    /**\n     * @deprecated `_changeDetectorRef` parameter to become required.\n     * \\@breaking-change 11.0.0\n     * @type {?}\n     * @private\n     */\n    MatDatepickerContent.prototype._changeDetectorRef;\n}\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/**\n * Component responsible for managing the datepicker popup/dialog.\n * @template D\n */\nclass MatDatepicker {\n    /**\n     * @param {?} _dialog\n     * @param {?} _overlay\n     * @param {?} _ngZone\n     * @param {?} _viewContainerRef\n     * @param {?} scrollStrategy\n     * @param {?} _dateAdapter\n     * @param {?} _dir\n     * @param {?} _document\n     */\n    constructor(_dialog, _overlay, _ngZone, _viewContainerRef, scrollStrategy, _dateAdapter, _dir, _document) {\n        this._dialog = _dialog;\n        this._overlay = _overlay;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._document = _document;\n        /**\n         * The view that the calendar should start in.\n         */\n        this.startView = 'month';\n        this._touchUi = false;\n        /**\n         * Emits selected year in multiyear view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits selected month in year view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when the datepicker has been opened.\n         */\n        this.openedStream = new EventEmitter();\n        /**\n         * Emits when the datepicker has been closed.\n         */\n        this.closedStream = new EventEmitter();\n        this._opened = false;\n        /**\n         * The id for the datepicker calendar.\n         */\n        this.id = `mat-datepicker-${datepickerUid++}`;\n        this._validSelected = null;\n        /**\n         * The element that was focused before the datepicker was opened.\n         */\n        this._focusedElementBeforeOpen = null;\n        /**\n         * Subscription to value changes in the associated input element.\n         */\n        this._inputSubscription = Subscription.EMPTY;\n        /**\n         * Emits when the datepicker is disabled.\n         */\n        this._disabledChange = new Subject();\n        /**\n         * Emits new selected date when selected date changes.\n         */\n        this._selectedChanged = new Subject();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * The date to open the calendar to initially.\n     * @return {?}\n     */\n    get startAt() {\n        // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n        // selected value is.\n        return this._startAt || (this._datepickerInput ? this._datepickerInput.value : null);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set startAt(value) {\n        this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * Color palette to use on the datepicker's calendar.\n     * @return {?}\n     */\n    get color() {\n        return this._color ||\n            (this._datepickerInput ? this._datepickerInput._getThemePalette() : undefined);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set color(value) {\n        this._color = value;\n    }\n    /**\n     * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\n     * than a popup and elements have more padding to allow for bigger touch targets.\n     * @return {?}\n     */\n    get touchUi() { return this._touchUi; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set touchUi(value) {\n        this._touchUi = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the datepicker pop-up should be disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled === undefined && this._datepickerInput ?\n            this._datepickerInput.disabled : !!this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._disabledChange.next(newValue);\n        }\n    }\n    /**\n     * Whether the calendar is open.\n     * @return {?}\n     */\n    get opened() { return this._opened; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set opened(value) { value ? this.open() : this.close(); }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get _selected() { return this._validSelected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set _selected(value) { this._validSelected = value; }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get _minDate() {\n        return this._datepickerInput && this._datepickerInput.min;\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get _maxDate() {\n        return this._datepickerInput && this._datepickerInput.max;\n    }\n    /**\n     * @return {?}\n     */\n    get _dateFilter() {\n        return this._datepickerInput && this._datepickerInput._dateFilter;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyPopup();\n        this.close();\n        this._inputSubscription.unsubscribe();\n        this._disabledChange.complete();\n    }\n    /**\n     * Selects the given date\n     * @param {?} date\n     * @return {?}\n     */\n    select(date) {\n        /** @type {?} */\n        let oldValue = this._selected;\n        this._selected = date;\n        if (!this._dateAdapter.sameDate(oldValue, this._selected)) {\n            this._selectedChanged.next(date);\n        }\n    }\n    /**\n     * Emits the selected year in multiyear view\n     * @param {?} normalizedYear\n     * @return {?}\n     */\n    _selectYear(normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    }\n    /**\n     * Emits selected month in year view\n     * @param {?} normalizedMonth\n     * @return {?}\n     */\n    _selectMonth(normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n    /**\n     * Register an input with this datepicker.\n     * @param {?} input The datepicker input to register with this datepicker.\n     * @return {?}\n     */\n    _registerInput(input) {\n        if (this._datepickerInput) {\n            throw Error('A MatDatepicker can only be associated with a single input.');\n        }\n        this._datepickerInput = input;\n        this._inputSubscription =\n            this._datepickerInput._valueChange.subscribe((/**\n             * @param {?} value\n             * @return {?}\n             */\n            (value) => this._selected = value));\n    }\n    /**\n     * Open the calendar.\n     * @return {?}\n     */\n    open() {\n        if (this._opened || this.disabled) {\n            return;\n        }\n        if (!this._datepickerInput) {\n            throw Error('Attempted to open an MatDatepicker with no associated input.');\n        }\n        if (this._document) {\n            this._focusedElementBeforeOpen = this._document.activeElement;\n        }\n        this.touchUi ? this._openAsDialog() : this._openAsPopup();\n        this._opened = true;\n        this.openedStream.emit();\n    }\n    /**\n     * Close the calendar.\n     * @return {?}\n     */\n    close() {\n        if (!this._opened) {\n            return;\n        }\n        if (this._popupComponentRef && this._popupRef) {\n            /** @type {?} */\n            const instance = this._popupComponentRef.instance;\n            instance._startExitAnimation();\n            instance._animationDone.pipe(take(1)).subscribe((/**\n             * @return {?}\n             */\n            () => this._destroyPopup()));\n        }\n        if (this._dialogRef) {\n            this._dialogRef.close();\n            this._dialogRef = null;\n        }\n        /** @type {?} */\n        const completeClose = (/**\n         * @return {?}\n         */\n        () => {\n            // The `_opened` could've been reset already if\n            // we got two events in quick succession.\n            if (this._opened) {\n                this._opened = false;\n                this.closedStream.emit();\n                this._focusedElementBeforeOpen = null;\n            }\n        });\n        if (this._focusedElementBeforeOpen &&\n            typeof this._focusedElementBeforeOpen.focus === 'function') {\n            // Because IE moves focus asynchronously, we can't count on it being restored before we've\n            // marked the datepicker as closed. If the event fires out of sequence and the element that\n            // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n            // able to close the calendar at all. We work around it by making the logic, that marks\n            // the datepicker as closed, async as well.\n            this._focusedElementBeforeOpen.focus();\n            setTimeout(completeClose);\n        }\n        else {\n            completeClose();\n        }\n    }\n    /**\n     * Open the calendar as a dialog.\n     * @private\n     * @return {?}\n     */\n    _openAsDialog() {\n        // Usually this would be handled by `open` which ensures that we can only have one overlay\n        // open at a time, however since we reset the variables in async handlers some overlays\n        // may slip through if the user opens and closes multiple times in quick succession (e.g.\n        // by holding down the enter key).\n        if (this._dialogRef) {\n            this._dialogRef.close();\n        }\n        this._dialogRef = this._dialog.open(MatDatepickerContent, {\n            direction: this._dir ? this._dir.value : 'ltr',\n            viewContainerRef: this._viewContainerRef,\n            panelClass: 'mat-datepicker-dialog',\n            // These values are all the same as the defaults, but we set them explicitly so that the\n            // datepicker dialog behaves consistently even if the user changed the defaults.\n            hasBackdrop: true,\n            disableClose: false,\n            width: '',\n            height: '',\n            minWidth: '',\n            minHeight: '',\n            maxWidth: '80vw',\n            maxHeight: '',\n            position: {},\n            autoFocus: true,\n            // `MatDialog` has focus restoration built in, however we want to disable it since the\n            // datepicker also has focus restoration for dropdown mode. We want to do this, in order\n            // to ensure that the timing is consistent between dropdown and dialog modes since `MatDialog`\n            // restores focus when the animation is finished, but the datepicker does it immediately.\n            // Furthermore, this avoids any conflicts where the datepicker consumer might move focus\n            // inside the `closed` event which is dispatched immediately.\n            restoreFocus: false\n        });\n        this._dialogRef.afterClosed().subscribe((/**\n         * @return {?}\n         */\n        () => this.close()));\n        this._dialogRef.componentInstance.datepicker = this;\n        this._dialogRef.componentInstance.color = this.color;\n    }\n    /**\n     * Open the calendar as a popup.\n     * @private\n     * @return {?}\n     */\n    _openAsPopup() {\n        /** @type {?} */\n        const portal = new ComponentPortal(MatDatepickerContent, this._viewContainerRef);\n        this._destroyPopup();\n        this._createPopup();\n        /** @type {?} */\n        const ref = this._popupComponentRef = (/** @type {?} */ (this._popupRef)).attach(portal);\n        ref.instance.datepicker = this;\n        ref.instance.color = this.color;\n        // Update the position once the calendar has rendered.\n        this._ngZone.onStable.asObservable().pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            (/** @type {?} */ (this._popupRef)).updatePosition();\n        }));\n    }\n    /**\n     * Create the popup.\n     * @private\n     * @return {?}\n     */\n    _createPopup() {\n        /** @type {?} */\n        const overlayConfig = new OverlayConfig({\n            positionStrategy: this._createPopupPositionStrategy(),\n            hasBackdrop: true,\n            backdropClass: 'mat-overlay-transparent-backdrop',\n            direction: this._dir,\n            scrollStrategy: this._scrollStrategy(),\n            panelClass: 'mat-datepicker-popup',\n        });\n        this._popupRef = this._overlay.create(overlayConfig);\n        this._popupRef.overlayElement.setAttribute('role', 'dialog');\n        merge(this._popupRef.backdropClick(), this._popupRef.detachments(), this._popupRef.keydownEvents().pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            // Closing on alt + up is only valid when there's an input associated with the datepicker.\n            return event.keyCode === ESCAPE ||\n                (this._datepickerInput && event.altKey && event.keyCode === UP_ARROW);\n        })))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (event) {\n                event.preventDefault();\n            }\n            this.close();\n        }));\n    }\n    /**\n     * Destroys the current popup overlay.\n     * @private\n     * @return {?}\n     */\n    _destroyPopup() {\n        if (this._popupRef) {\n            this._popupRef.dispose();\n            this._popupRef = this._popupComponentRef = null;\n        }\n    }\n    /**\n     * Create the popup PositionStrategy.\n     * @private\n     * @return {?}\n     */\n    _createPopupPositionStrategy() {\n        return this._overlay.position()\n            .flexibleConnectedTo(this._datepickerInput.getConnectedOverlayOrigin())\n            .withTransformOriginOn('.mat-datepicker-content')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8)\n            .withLockedPosition()\n            .withPositions([\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'top'\n            },\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'bottom'\n            },\n            {\n                originX: 'end',\n                originY: 'bottom',\n                overlayX: 'end',\n                overlayY: 'top'\n            },\n            {\n                originX: 'end',\n                originY: 'top',\n                overlayX: 'end',\n                overlayY: 'bottom'\n            }\n        ]);\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n}\nMatDatepicker.ɵfac = function MatDatepicker_Factory(t) { return new (t || MatDatepicker)(ɵngcc0.ɵɵdirectiveInject(ɵngcc7.MatDialog), ɵngcc0.ɵɵdirectiveInject(ɵngcc8.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATEPICKER_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nMatDatepicker.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDatepicker, selectors: [[\"mat-datepicker\"]], inputs: { startView: \"startView\", startAt: \"startAt\", color: \"color\", touchUi: \"touchUi\", disabled: \"disabled\", opened: \"opened\", calendarHeaderComponent: \"calendarHeaderComponent\", panelClass: \"panelClass\", dateClass: \"dateClass\" }, outputs: { yearSelected: \"yearSelected\", monthSelected: \"monthSelected\", openedStream: \"opened\", closedStream: \"closed\" }, exportAs: [\"matDatepicker\"], decls: 0, vars: 0, template: function MatDatepicker_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatDatepicker.ctorParameters = () => [\n    { type: MatDialog },\n    { type: Overlay },\n    { type: NgZone },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DATEPICKER_SCROLL_STRATEGY,] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nMatDatepicker.propDecorators = {\n    calendarHeaderComponent: [{ type: Input }],\n    startAt: [{ type: Input }],\n    startView: [{ type: Input }],\n    color: [{ type: Input }],\n    touchUi: [{ type: Input }],\n    disabled: [{ type: Input }],\n    yearSelected: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    panelClass: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    openedStream: [{ type: Output, args: ['opened',] }],\n    closedStream: [{ type: Output, args: ['closed',] }],\n    opened: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDatepicker, [{\n        type: Component,\n        args: [{\n                selector: 'mat-datepicker',\n                template: '',\n                exportAs: 'matDatepicker',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc7.MatDialog }, { type: ɵngcc8.Overlay }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DATEPICKER_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { startView: [{\n            type: Input\n        }], yearSelected: [{\n            type: Output\n        }], monthSelected: [{\n            type: Output\n        }], openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], startAt: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], touchUi: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], opened: [{\n            type: Input\n        }], calendarHeaderComponent: [{\n            type: Input\n        }], panelClass: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDatepicker.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatDatepicker.ngAcceptInputType_touchUi;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._scrollStrategy;\n    /**\n     * An input indicating the type of the custom header component for the calendar, if set.\n     * @type {?}\n     */\n    MatDatepicker.prototype.calendarHeaderComponent;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._startAt;\n    /**\n     * The view that the calendar should start in.\n     * @type {?}\n     */\n    MatDatepicker.prototype.startView;\n    /** @type {?} */\n    MatDatepicker.prototype._color;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._touchUi;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._disabled;\n    /**\n     * Emits selected year in multiyear view.\n     * This doesn't imply a change on the selected date.\n     * @type {?}\n     */\n    MatDatepicker.prototype.yearSelected;\n    /**\n     * Emits selected month in year view.\n     * This doesn't imply a change on the selected date.\n     * @type {?}\n     */\n    MatDatepicker.prototype.monthSelected;\n    /**\n     * Classes to be passed to the date picker panel. Supports the same syntax as `ngClass`.\n     * @type {?}\n     */\n    MatDatepicker.prototype.panelClass;\n    /**\n     * Function that can be used to add custom CSS classes to dates.\n     * @type {?}\n     */\n    MatDatepicker.prototype.dateClass;\n    /**\n     * Emits when the datepicker has been opened.\n     * @type {?}\n     */\n    MatDatepicker.prototype.openedStream;\n    /**\n     * Emits when the datepicker has been closed.\n     * @type {?}\n     */\n    MatDatepicker.prototype.closedStream;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._opened;\n    /**\n     * The id for the datepicker calendar.\n     * @type {?}\n     */\n    MatDatepicker.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._validSelected;\n    /**\n     * A reference to the overlay when the calendar is opened as a popup.\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._popupRef;\n    /**\n     * A reference to the dialog when the calendar is opened as a dialog.\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._dialogRef;\n    /**\n     * Reference to the component instantiated in popup mode.\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._popupComponentRef;\n    /**\n     * The element that was focused before the datepicker was opened.\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._focusedElementBeforeOpen;\n    /**\n     * Subscription to value changes in the associated input element.\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._inputSubscription;\n    /**\n     * The input element this datepicker is associated with.\n     * @type {?}\n     */\n    MatDatepicker.prototype._datepickerInput;\n    /**\n     * Emits when the datepicker is disabled.\n     * @type {?}\n     */\n    MatDatepicker.prototype._disabledChange;\n    /**\n     * Emits new selected date when selected date changes.\n     * @type {?}\n     */\n    MatDatepicker.prototype._selectedChanged;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._dialog;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._viewContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._dateAdapter;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._document;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/datepicker-input.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DATEPICKER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatDatepickerInput)),\n    multi: true\n};\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DATEPICKER_VALIDATORS = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatDatepickerInput)),\n    multi: true\n};\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use MatDatepickerInputEvent instead.\n * @template D\n */\nclass MatDatepickerInputEvent {\n    /**\n     * @param {?} target\n     * @param {?} targetElement\n     */\n    constructor(target, targetElement) {\n        this.target = target;\n        this.targetElement = targetElement;\n        this.value = this.target.value;\n    }\n}\nif (false) {\n    /**\n     * The new value for the target datepicker input.\n     * @type {?}\n     */\n    MatDatepickerInputEvent.prototype.value;\n    /**\n     * Reference to the datepicker input component that emitted the event.\n     * @type {?}\n     */\n    MatDatepickerInputEvent.prototype.target;\n    /**\n     * Reference to the native input element associated with the datepicker input.\n     * @type {?}\n     */\n    MatDatepickerInputEvent.prototype.targetElement;\n}\n/**\n * Directive used to connect an input to a MatDatepicker.\n * @template D\n */\nclass MatDatepickerInput {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _dateAdapter\n     * @param {?} _dateFormats\n     * @param {?} _formField\n     */\n    constructor(_elementRef, _dateAdapter, _dateFormats, _formField) {\n        this._elementRef = _elementRef;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this._formField = _formField;\n        /**\n         * Emits when a `change` event is fired on this `<input>`.\n         */\n        this.dateChange = new EventEmitter();\n        /**\n         * Emits when an `input` event is fired on this `<input>`.\n         */\n        this.dateInput = new EventEmitter();\n        /**\n         * Emits when the value changes (either due to user input or programmatic change).\n         */\n        this._valueChange = new EventEmitter();\n        /**\n         * Emits when the disabled state has changed\n         */\n        this._disabledChange = new EventEmitter();\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this._cvaOnChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this._validatorOnChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this._datepickerSubscription = Subscription.EMPTY;\n        this._localeSubscription = Subscription.EMPTY;\n        /**\n         * The form control validator for whether the input parses.\n         */\n        this._parseValidator = (/**\n         * @return {?}\n         */\n        () => {\n            return this._lastValueValid ?\n                null : { 'matDatepickerParse': { 'text': this._elementRef.nativeElement.value } };\n        });\n        /**\n         * The form control validator for the min date.\n         */\n        this._minValidator = (/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            /** @type {?} */\n            const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            return (!this.min || !controlValue ||\n                this._dateAdapter.compareDate(this.min, controlValue) <= 0) ?\n                null : { 'matDatepickerMin': { 'min': this.min, 'actual': controlValue } };\n        });\n        /**\n         * The form control validator for the max date.\n         */\n        this._maxValidator = (/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            /** @type {?} */\n            const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            return (!this.max || !controlValue ||\n                this._dateAdapter.compareDate(this.max, controlValue) >= 0) ?\n                null : { 'matDatepickerMax': { 'max': this.max, 'actual': controlValue } };\n        });\n        /**\n         * The form control validator for the date filter.\n         */\n        this._filterValidator = (/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            /** @type {?} */\n            const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            return !this._dateFilter || !controlValue || this._dateFilter(controlValue) ?\n                null : { 'matDatepickerFilter': true };\n        });\n        /**\n         * The combined form control validator for this input.\n         */\n        this._validator = Validators.compose([this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator]);\n        /**\n         * Whether the last value set on the input was valid.\n         */\n        this._lastValueValid = false;\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        // Update the displayed date when the locale changes.\n        this._localeSubscription = _dateAdapter.localeChanges.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.value = this.value;\n        }));\n    }\n    /**\n     * The datepicker that this input is associated with.\n     * @param {?} value\n     * @return {?}\n     */\n    set matDatepicker(value) {\n        if (!value) {\n            return;\n        }\n        this._datepicker = value;\n        this._datepicker._registerInput(this);\n        this._datepickerSubscription.unsubscribe();\n        this._datepickerSubscription = this._datepicker._selectedChanged.subscribe((/**\n         * @param {?} selected\n         * @return {?}\n         */\n        (selected) => {\n            this.value = selected;\n            this._cvaOnChange(selected);\n            this._onTouched();\n            this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n            this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n        }));\n    }\n    /**\n     * Function that can be used to filter out dates within the datepicker.\n     * @param {?} value\n     * @return {?}\n     */\n    set matDatepickerFilter(value) {\n        this._dateFilter = value;\n        this._validatorOnChange();\n    }\n    /**\n     * The value of the input.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        value = this._dateAdapter.deserialize(value);\n        this._lastValueValid = !value || this._dateAdapter.isValid(value);\n        value = this._getValidDateOrNull(value);\n        /** @type {?} */\n        const oldDate = this.value;\n        this._value = value;\n        this._formatValue(value);\n        if (!this._dateAdapter.sameDate(oldDate, value)) {\n            this._valueChange.emit(value);\n        }\n    }\n    /**\n     * The minimum valid date.\n     * @return {?}\n     */\n    get min() { return this._min; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set min(value) {\n        this._min = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._validatorOnChange();\n    }\n    /**\n     * The maximum valid date.\n     * @return {?}\n     */\n    get max() { return this._max; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set max(value) {\n        this._max = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._validatorOnChange();\n    }\n    /**\n     * Whether the datepicker-input is disabled.\n     * @return {?}\n     */\n    get disabled() { return !!this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        if (this._disabled !== newValue) {\n            this._disabled = newValue;\n            this._disabledChange.emit(newValue);\n        }\n        // We need to null check the `blur` method, because it's undefined during SSR.\n        // In Ivy static bindings are invoked earlier, before the element is attached to the DOM.\n        // This can cause an error to be thrown in some browsers (IE/Edge) which assert that the\n        // element has been inserted.\n        if (newValue && this._isInitialized && element.blur) {\n            // Normally, native input elements automatically blur if they turn disabled. This behavior\n            // is problematic, because it would mean that it triggers another change detection cycle,\n            // which then causes a changed after checked error if the input element was focused before.\n            element.blur();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this._isInitialized = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._datepickerSubscription.unsubscribe();\n        this._localeSubscription.unsubscribe();\n        this._valueChange.complete();\n        this._disabledChange.complete();\n    }\n    /**\n     * \\@docs-private\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnValidatorChange(fn) {\n        this._validatorOnChange = fn;\n    }\n    /**\n     * \\@docs-private\n     * @param {?} c\n     * @return {?}\n     */\n    validate(c) {\n        return this._validator ? this._validator(c) : null;\n    }\n    /**\n     * @deprecated\n     * \\@breaking-change 8.0.0 Use `getConnectedOverlayOrigin` instead\n     * @return {?}\n     */\n    getPopupConnectionElementRef() {\n        return this.getConnectedOverlayOrigin();\n    }\n    /**\n     * Gets the element that the datepicker popup should be connected to.\n     * @return {?} The element to connect the popup to.\n     */\n    getConnectedOverlayOrigin() {\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._cvaOnChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onKeydown(event) {\n        /** @type {?} */\n        const isAltDownArrow = event.altKey && event.keyCode === DOWN_ARROW;\n        if (this._datepicker && isAltDownArrow && !this._elementRef.nativeElement.readOnly) {\n            this._datepicker.open();\n            event.preventDefault();\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    _onInput(value) {\n        /** @type {?} */\n        const lastValueWasValid = this._lastValueValid;\n        /** @type {?} */\n        let date = this._dateAdapter.parse(value, this._dateFormats.parse.dateInput);\n        this._lastValueValid = !date || this._dateAdapter.isValid(date);\n        date = this._getValidDateOrNull(date);\n        if (!this._dateAdapter.sameDate(date, this._value)) {\n            this._value = date;\n            this._cvaOnChange(date);\n            this._valueChange.emit(date);\n            this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n        }\n        else if (lastValueWasValid !== this._lastValueValid) {\n            this._validatorOnChange();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onChange() {\n        this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n    }\n    /**\n     * Returns the palette used by the input's form field, if any.\n     * @return {?}\n     */\n    _getThemePalette() {\n        return this._formField ? this._formField.color : undefined;\n    }\n    /**\n     * Handles blur events on the input.\n     * @return {?}\n     */\n    _onBlur() {\n        // Reformat the input only if we have a valid value.\n        if (this.value) {\n            this._formatValue(this.value);\n        }\n        this._onTouched();\n    }\n    /**\n     * Formats a value and sets it on the input element.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _formatValue(value) {\n        this._elementRef.nativeElement.value =\n            value ? this._dateAdapter.format(value, this._dateFormats.display.dateInput) : '';\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n}\nMatDatepickerInput.ɵfac = function MatDatepickerInput_Factory(t) { return new (t || MatDatepickerInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8)); };\nMatDatepickerInput.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDatepickerInput, selectors: [[\"input\", \"matDatepicker\", \"\"]], hostVars: 5, hostBindings: function MatDatepickerInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function MatDatepickerInput_input_HostBindingHandler($event) { return ctx._onInput($event.target.value); })(\"change\", function MatDatepickerInput_change_HostBindingHandler() { return ctx._onChange(); })(\"blur\", function MatDatepickerInput_blur_HostBindingHandler() { return ctx._onBlur(); })(\"keydown\", function MatDatepickerInput_keydown_HostBindingHandler($event) { return ctx._onKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"aria-haspopup\", ctx._datepicker ? \"dialog\" : null)(\"aria-owns\", (ctx._datepicker == null ? null : ctx._datepicker.opened) && ctx._datepicker.id || null)(\"min\", ctx.min ? ctx._dateAdapter.toIso8601(ctx.min) : null)(\"max\", ctx.max ? ctx._dateAdapter.toIso8601(ctx.max) : null);\n    } }, inputs: { value: \"value\", matDatepicker: \"matDatepicker\", matDatepickerFilter: \"matDatepickerFilter\", min: \"min\", max: \"max\", disabled: \"disabled\" }, outputs: { dateChange: \"dateChange\", dateInput: \"dateInput\" }, exportAs: [\"matDatepickerInput\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            MAT_DATEPICKER_VALUE_ACCESSOR,\n            MAT_DATEPICKER_VALIDATORS,\n            { provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput },\n        ])] });\n/** @nocollapse */\nMatDatepickerInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }] }\n];\nMatDatepickerInput.propDecorators = {\n    matDatepicker: [{ type: Input }],\n    matDatepickerFilter: [{ type: Input }],\n    value: [{ type: Input }],\n    min: [{ type: Input }],\n    max: [{ type: Input }],\n    disabled: [{ type: Input }],\n    dateChange: [{ type: Output }],\n    dateInput: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDatepickerInput, [{\n        type: Directive,\n        args: [{\n                selector: 'input[matDatepicker]',\n                providers: [\n                    MAT_DATEPICKER_VALUE_ACCESSOR,\n                    MAT_DATEPICKER_VALIDATORS,\n                    { provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput },\n                ],\n                host: {\n                    '[attr.aria-haspopup]': '_datepicker ? \"dialog\" : null',\n                    '[attr.aria-owns]': '(_datepicker?.opened && _datepicker.id) || null',\n                    '[attr.min]': 'min ? _dateAdapter.toIso8601(min) : null',\n                    '[attr.max]': 'max ? _dateAdapter.toIso8601(max) : null',\n                    '[disabled]': 'disabled',\n                    '(input)': '_onInput($event.target.value)',\n                    '(change)': '_onChange()',\n                    '(blur)': '_onBlur()',\n                    '(keydown)': '_onKeydown($event)'\n                },\n                exportAs: 'matDatepickerInput'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc9.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }] }]; }, { dateChange: [{\n            type: Output\n        }], dateInput: [{\n            type: Output\n        }], value: [{\n            type: Input\n        }], matDatepicker: [{\n            type: Input\n        }], matDatepickerFilter: [{\n            type: Input\n        }], min: [{\n            type: Input\n        }], max: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDatepickerInput.ngAcceptInputType_value;\n    /** @type {?} */\n    MatDatepickerInput.ngAcceptInputType_disabled;\n    /**\n     * Whether the component has been initialized.\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._isInitialized;\n    /** @type {?} */\n    MatDatepickerInput.prototype._datepicker;\n    /** @type {?} */\n    MatDatepickerInput.prototype._dateFilter;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._value;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._min;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._max;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._disabled;\n    /**\n     * Emits when a `change` event is fired on this `<input>`.\n     * @type {?}\n     */\n    MatDatepickerInput.prototype.dateChange;\n    /**\n     * Emits when an `input` event is fired on this `<input>`.\n     * @type {?}\n     */\n    MatDatepickerInput.prototype.dateInput;\n    /**\n     * Emits when the value changes (either due to user input or programmatic change).\n     * @type {?}\n     */\n    MatDatepickerInput.prototype._valueChange;\n    /**\n     * Emits when the disabled state has changed\n     * @type {?}\n     */\n    MatDatepickerInput.prototype._disabledChange;\n    /** @type {?} */\n    MatDatepickerInput.prototype._onTouched;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._cvaOnChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._validatorOnChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._datepickerSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._localeSubscription;\n    /**\n     * The form control validator for whether the input parses.\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._parseValidator;\n    /**\n     * The form control validator for the min date.\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._minValidator;\n    /**\n     * The form control validator for the max date.\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._maxValidator;\n    /**\n     * The form control validator for the date filter.\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._filterValidator;\n    /**\n     * The combined form control validator for this input.\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._validator;\n    /**\n     * Whether the last value set on the input was valid.\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._lastValueValid;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._elementRef;\n    /** @type {?} */\n    MatDatepickerInput.prototype._dateAdapter;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._dateFormats;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._formField;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/datepicker-toggle.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Can be used to override the icon of a `matDatepickerToggle`.\n */\nclass MatDatepickerToggleIcon {\n}\nMatDatepickerToggleIcon.ɵfac = function MatDatepickerToggleIcon_Factory(t) { return new (t || MatDatepickerToggleIcon)(); };\nMatDatepickerToggleIcon.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDatepickerToggleIcon, selectors: [[\"\", \"matDatepickerToggleIcon\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDatepickerToggleIcon, [{\n        type: Directive,\n        args: [{\n                selector: '[matDatepickerToggleIcon]'\n            }]\n    }], null, null); })();\n/**\n * @template D\n */\nclass MatDatepickerToggle {\n    /**\n     * @param {?} _intl\n     * @param {?} _changeDetectorRef\n     * @param {?} defaultTabIndex\n     */\n    constructor(_intl, _changeDetectorRef, defaultTabIndex) {\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._stateChanges = Subscription.EMPTY;\n        /** @type {?} */\n        const parsedTabIndex = Number(defaultTabIndex);\n        this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\n    }\n    /**\n     * Whether the toggle button is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        if (this._disabled === undefined && this.datepicker) {\n            return this.datepicker.disabled;\n        }\n        return !!this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes['datepicker']) {\n            this._watchStateChanges();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.unsubscribe();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._watchStateChanges();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _open(event) {\n        if (this.datepicker && !this.disabled) {\n            this.datepicker.open();\n            event.stopPropagation();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _watchStateChanges() {\n        /** @type {?} */\n        const datepickerDisabled = this.datepicker ? this.datepicker._disabledChange : of();\n        /** @type {?} */\n        const inputDisabled = this.datepicker && this.datepicker._datepickerInput ?\n            this.datepicker._datepickerInput._disabledChange : of();\n        /** @type {?} */\n        const datepickerToggled = this.datepicker ?\n            merge(this.datepicker.openedStream, this.datepicker.closedStream) :\n            of();\n        this._stateChanges.unsubscribe();\n        this._stateChanges = merge(this._intl.changes, datepickerDisabled, inputDisabled, datepickerToggled).subscribe((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n    }\n}\nMatDatepickerToggle.ɵfac = function MatDatepickerToggle_Factory(t) { return new (t || MatDatepickerToggle)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex')); };\nMatDatepickerToggle.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDatepickerToggle, selectors: [[\"mat-datepicker-toggle\"]], contentQueries: function MatDatepickerToggle_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDatepickerToggleIcon, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._customIcon = _t.first);\n    } }, viewQuery: function MatDatepickerToggle_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._button = _t.first);\n    } }, hostAttrs: [1, \"mat-datepicker-toggle\"], hostVars: 7, hostBindings: function MatDatepickerToggle_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatDatepickerToggle_focus_HostBindingHandler() { return ctx._button.focus(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : 0 - 1);\n        ɵngcc0.ɵɵclassProp(\"mat-datepicker-toggle-active\", ctx.datepicker && ctx.datepicker.opened)(\"mat-accent\", ctx.datepicker && ctx.datepicker.color === \"accent\")(\"mat-warn\", ctx.datepicker && ctx.datepicker.color === \"warn\");\n    } }, inputs: { tabIndex: \"tabIndex\", disabled: \"disabled\", datepicker: [\"for\", \"datepicker\"], disableRipple: \"disableRipple\" }, exportAs: [\"matDatepickerToggle\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c4, decls: 4, vars: 6, consts: [[\"mat-icon-button\", \"\", \"type\", \"button\", 3, \"disabled\", \"disableRipple\", \"click\"], [\"button\", \"\"], [\"class\", \"mat-datepicker-toggle-default-icon\", \"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"fill\", \"currentColor\", \"focusable\", \"false\", 4, \"ngIf\"], [\"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"fill\", \"currentColor\", \"focusable\", \"false\", 1, \"mat-datepicker-toggle-default-icon\"], [\"d\", \"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\"]], template: function MatDatepickerToggle_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵelementStart(0, \"button\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatDatepickerToggle_Template_button_click_0_listener($event) { return ctx._open($event); });\n        ɵngcc0.ɵɵtemplate(2, MatDatepickerToggle__svg_svg_2_Template, 2, 0, \"svg\", 2);\n        ɵngcc0.ɵɵprojection(3);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled)(\"disableRipple\", ctx.disableRipple);\n        ɵngcc0.ɵɵattribute(\"aria-haspopup\", ctx.datepicker ? \"dialog\" : null)(\"aria-label\", ctx._intl.openCalendarLabel)(\"tabindex\", ctx.disabled ? 0 - 1 : ctx.tabIndex);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._customIcon);\n    } }, directives: [ɵngcc4.MatButton, ɵngcc1.NgIf], styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatDatepickerToggle.ctorParameters = () => [\n    { type: MatDatepickerIntl },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\n];\nMatDatepickerToggle.propDecorators = {\n    datepicker: [{ type: Input, args: ['for',] }],\n    tabIndex: [{ type: Input }],\n    disabled: [{ type: Input }],\n    disableRipple: [{ type: Input }],\n    _customIcon: [{ type: ContentChild, args: [MatDatepickerToggleIcon,] }],\n    _button: [{ type: ViewChild, args: ['button',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDatepickerToggle, [{\n        type: Component,\n        args: [{\n                selector: 'mat-datepicker-toggle',\n                template: \"<button\\n  #button\\n  mat-icon-button\\n  type=\\\"button\\\"\\n  [attr.aria-haspopup]=\\\"datepicker ? 'dialog' : null\\\"\\n  [attr.aria-label]=\\\"_intl.openCalendarLabel\\\"\\n  [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\\n  [disabled]=\\\"disabled\\\"\\n  [disableRipple]=\\\"disableRipple\\\"\\n  (click)=\\\"_open($event)\\\">\\n\\n  <svg\\n    *ngIf=\\\"!_customIcon\\\"\\n    class=\\\"mat-datepicker-toggle-default-icon\\\"\\n    viewBox=\\\"0 0 24 24\\\"\\n    width=\\\"24px\\\"\\n    height=\\\"24px\\\"\\n    fill=\\\"currentColor\\\"\\n    focusable=\\\"false\\\">\\n    <path d=\\\"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\\\"/>\\n  </svg>\\n\\n  <ng-content select=\\\"[matDatepickerToggleIcon]\\\"></ng-content>\\n</button>\\n\",\n                host: {\n                    'class': 'mat-datepicker-toggle',\n                    // Always set the tabindex to -1 so that it doesn't overlap with any custom tabindex the\n                    // consumer may have provided, while still being able to receive focus.\n                    '[attr.tabindex]': 'disabled ? null : -1',\n                    '[class.mat-datepicker-toggle-active]': 'datepicker && datepicker.opened',\n                    '[class.mat-accent]': 'datepicker && datepicker.color === \"accent\"',\n                    '[class.mat-warn]': 'datepicker && datepicker.color === \"warn\"',\n                    '(focus)': '_button.focus()'\n                },\n                exportAs: 'matDatepickerToggle',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}\\n\"]\n            }]\n    }], function () { return [{ type: MatDatepickerIntl }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }]; }, { tabIndex: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], datepicker: [{\n            type: Input,\n            args: ['for']\n        }], disableRipple: [{\n            type: Input\n        }], _customIcon: [{\n            type: ContentChild,\n            args: [MatDatepickerToggleIcon]\n        }], _button: [{\n            type: ViewChild,\n            args: ['button']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDatepickerToggle.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerToggle.prototype._stateChanges;\n    /**\n     * Datepicker instance that the button will toggle.\n     * @type {?}\n     */\n    MatDatepickerToggle.prototype.datepicker;\n    /**\n     * Tabindex for the toggle.\n     * @type {?}\n     */\n    MatDatepickerToggle.prototype.tabIndex;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerToggle.prototype._disabled;\n    /**\n     * Whether ripples on the toggle should be disabled.\n     * @type {?}\n     */\n    MatDatepickerToggle.prototype.disableRipple;\n    /**\n     * Custom icon set by the consumer.\n     * @type {?}\n     */\n    MatDatepickerToggle.prototype._customIcon;\n    /**\n     * Underlying button element.\n     * @type {?}\n     */\n    MatDatepickerToggle.prototype._button;\n    /** @type {?} */\n    MatDatepickerToggle.prototype._intl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerToggle.prototype._changeDetectorRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/datepicker-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatDatepickerModule {\n}\nMatDatepickerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatDatepickerModule });\nMatDatepickerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatDatepickerModule_Factory(t) { return new (t || MatDatepickerModule)(); }, providers: [\n        MatDatepickerIntl,\n        MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER,\n    ], imports: [[\n            CommonModule,\n            MatButtonModule,\n            MatDialogModule,\n            OverlayModule,\n            A11yModule,\n            PortalModule,\n        ],\n        CdkScrollableModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDatepickerModule, { declarations: function () { return [MatCalendar,\n        MatCalendarBody,\n        MatDatepicker,\n        MatDatepickerContent,\n        MatDatepickerInput,\n        MatDatepickerToggle,\n        MatDatepickerToggleIcon,\n        MatMonthView,\n        MatYearView,\n        MatMultiYearView,\n        MatCalendarHeader]; }, imports: function () { return [CommonModule,\n        MatButtonModule,\n        MatDialogModule,\n        OverlayModule,\n        A11yModule,\n        PortalModule]; }, exports: function () { return [CdkScrollableModule,\n        MatCalendar,\n        MatCalendarBody,\n        MatDatepicker,\n        MatDatepickerContent,\n        MatDatepickerInput,\n        MatDatepickerToggle,\n        MatDatepickerToggleIcon,\n        MatMonthView,\n        MatYearView,\n        MatMultiYearView,\n        MatCalendarHeader]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDatepickerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatButtonModule,\n                    MatDialogModule,\n                    OverlayModule,\n                    A11yModule,\n                    PortalModule,\n                ],\n                exports: [\n                    CdkScrollableModule,\n                    MatCalendar,\n                    MatCalendarBody,\n                    MatDatepicker,\n                    MatDatepickerContent,\n                    MatDatepickerInput,\n                    MatDatepickerToggle,\n                    MatDatepickerToggleIcon,\n                    MatMonthView,\n                    MatYearView,\n                    MatMultiYearView,\n                    MatCalendarHeader,\n                ],\n                declarations: [\n                    MatCalendar,\n                    MatCalendarBody,\n                    MatDatepicker,\n                    MatDatepickerContent,\n                    MatDatepickerInput,\n                    MatDatepickerToggle,\n                    MatDatepickerToggleIcon,\n                    MatMonthView,\n                    MatYearView,\n                    MatMultiYearView,\n                    MatCalendarHeader,\n                ],\n                providers: [\n                    MatDatepickerIntl,\n                    MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER,\n                ],\n                entryComponents: [\n                    MatDatepickerContent,\n                    MatCalendarHeader,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DATEPICKER_SCROLL_STRATEGY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_DATEPICKER_VALIDATORS, MAT_DATEPICKER_VALUE_ACCESSOR, MatCalendar, MatCalendarBody, MatCalendarCell, MatCalendarHeader, MatDatepicker, MatDatepickerContent, MatDatepickerInput, MatDatepickerInputEvent, MatDatepickerIntl, MatDatepickerModule, MatDatepickerToggle, MatDatepickerToggleIcon, MatMonthView, MatMultiYearView, MatYearView, matDatepickerAnimations, yearsPerPage, yearsPerRow };\n\n//# sourceMappingURL=datepicker.js.map","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/divider/divider.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nclass MatDivider {\n    constructor() {\n        this._vertical = false;\n        this._inset = false;\n    }\n    /**\n     * Whether the divider is vertically aligned.\n     * @return {?}\n     */\n    get vertical() { return this._vertical; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set vertical(value) { this._vertical = coerceBooleanProperty(value); }\n    /**\n     * Whether the divider is an inset divider.\n     * @return {?}\n     */\n    get inset() { return this._inset; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set inset(value) { this._inset = coerceBooleanProperty(value); }\n}\nMatDivider.ɵfac = function MatDivider_Factory(t) { return new (t || MatDivider)(); };\nMatDivider.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDivider, selectors: [[\"mat-divider\"]], hostAttrs: [\"role\", \"separator\", 1, \"mat-divider\"], hostVars: 7, hostBindings: function MatDivider_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n        ɵngcc0.ɵɵclassProp(\"mat-divider-vertical\", ctx.vertical)(\"mat-divider-horizontal\", !ctx.vertical)(\"mat-divider-inset\", ctx.inset);\n    } }, inputs: { vertical: \"vertical\", inset: \"inset\" }, decls: 0, vars: 0, template: function MatDivider_Template(rf, ctx) { }, styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatDivider.propDecorators = {\n    vertical: [{ type: Input }],\n    inset: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDivider, [{\n        type: Component,\n        args: [{\n                selector: 'mat-divider',\n                host: {\n                    'role': 'separator',\n                    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                    '[class.mat-divider-vertical]': 'vertical',\n                    '[class.mat-divider-horizontal]': '!vertical',\n                    '[class.mat-divider-inset]': 'inset',\n                    'class': 'mat-divider'\n                },\n                template: '',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"]\n            }]\n    }], function () { return []; }, { vertical: [{\n            type: Input\n        }], inset: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDivider.ngAcceptInputType_vertical;\n    /** @type {?} */\n    MatDivider.ngAcceptInputType_inset;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDivider.prototype._vertical;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDivider.prototype._inset;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/divider/divider-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatDividerModule {\n}\nMatDividerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatDividerModule });\nMatDividerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatDividerModule_Factory(t) { return new (t || MatDividerModule)(); }, imports: [[MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDividerModule, { declarations: function () { return [MatDivider]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatDivider,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDividerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatDivider, MatCommonModule],\n                declarations: [MatDivider]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/divider/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatDivider, MatDividerModule };\n\n//# sourceMappingURL=divider.js.map","import { CdkAccordionItem, CdkAccordion, CdkAccordionModule } from '@angular/cdk/accordion';\nimport { TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, TemplateRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, SkipSelf, Inject, ChangeDetectorRef, ViewContainerRef, Input, Output, ContentChild, ViewChild, Host, ElementRef, QueryList, ContentChildren, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { FocusMonitor, FocusKeyManager } from '@angular/cdk/a11y';\nimport { ENTER, hasModifierKey, SPACE, HOME, END } from '@angular/cdk/keycodes';\nimport { distinctUntilChanged, startWith, filter, take } from 'rxjs/operators';\nimport { Subject, Subscription, EMPTY, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate, group, query, animateChild } from '@angular/animations';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/accordion-base.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base interface for a `MatAccordion`.\n * \\@docs-private\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nimport * as ɵngcc2 from '@angular/cdk/portal';\nimport * as ɵngcc3 from '@angular/cdk/a11y';\nimport * as ɵngcc4 from '@angular/common';\n\nconst _c0 = [\"body\"];\nfunction MatExpansionPanel_ng_template_5_Template(rf, ctx) { }\nconst _c1 = [[[\"mat-expansion-panel-header\"]], \"*\", [[\"mat-action-row\"]]];\nconst _c2 = [\"mat-expansion-panel-header\", \"*\", \"mat-action-row\"];\nconst _c3 = function (a0, a1) { return { collapsedHeight: a0, expandedHeight: a1 }; };\nconst _c4 = function (a0, a1) { return { value: a0, params: a1 }; };\nfunction MatExpansionPanelHeader_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 2);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@indicatorRotate\", ctx_r0._getExpandedState());\n} }\nconst _c5 = [[[\"mat-panel-title\"]], [[\"mat-panel-description\"]], \"*\"];\nconst _c6 = [\"mat-panel-title\", \"mat-panel-description\", \"*\"];\nfunction MatAccordionBase() { }\nif (false) {\n    /**\n     * Whether the expansion indicator should be hidden.\n     * @type {?}\n     */\n    MatAccordionBase.prototype.hideToggle;\n    /**\n     * Display mode used for all expansion panels in the accordion.\n     * @type {?}\n     */\n    MatAccordionBase.prototype.displayMode;\n    /**\n     * The position of the expansion indicator.\n     * @type {?}\n     */\n    MatAccordionBase.prototype.togglePosition;\n    /**\n     * Handles keyboard events coming in from the panel headers.\n     * @type {?}\n     */\n    MatAccordionBase.prototype._handleHeaderKeydown;\n    /**\n     * Handles focus events on the panel headers.\n     * @type {?}\n     */\n    MatAccordionBase.prototype._handleHeaderFocus;\n}\n/**\n * Token used to provide a `MatAccordion` to `MatExpansionPanel`.\n * Used primarily to avoid circular imports between `MatAccordion` and `MatExpansionPanel`.\n * @type {?}\n */\nconst MAT_ACCORDION = new InjectionToken('MAT_ACCORDION');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/expansion-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time and timing curve for expansion panel animations.\n * @type {?}\n */\nconst EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n/**\n * Animations used by the Material expansion panel.\n *\n * A bug in angular animation's `state` when ViewContainers are moved using ViewContainerRef.move()\n * causes the animation state of moved components to become `void` upon exit, and not update again\n * upon reentry into the DOM.  This can lead a to situation for the expansion panel where the state\n * of the panel is `expanded` or `collapsed` but the animation state is `void`.\n *\n * To correctly handle animating to the next state, we animate between `void` and `collapsed` which\n * are defined to have the same styles. Since angular animates from the current styles to the\n * destination state's style definition, in situations where we are moving from `void`'s styles to\n * `collapsed` this acts a noop since no style values change.\n *\n * In the case where angular's animation state is out of sync with the expansion panel's state, the\n * expansion panel being `expanded` and angular animations being `void`, the animation from the\n * `expanded`'s effective styles (though in a `void` animation state) to the collapsed state will\n * occur as expected.\n *\n * Angular Bug: https://github.com/angular/angular/issues/18847\n *\n * \\@docs-private\n * @type {?}\n */\nconst matExpansionAnimations = {\n    /**\n     * Animation that rotates the indicator arrow.\n     */\n    indicatorRotate: trigger('indicatorRotate', [\n        state('collapsed, void', style({ transform: 'rotate(0deg)' })),\n        state('expanded', style({ transform: 'rotate(180deg)' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ]),\n    /**\n     * Animation that expands and collapses the panel header height.\n     */\n    expansionHeaderHeight: trigger('expansionHeight', [\n        state('collapsed, void', style({\n            height: '{{collapsedHeight}}',\n        }), {\n            params: { collapsedHeight: '48px' },\n        }),\n        state('expanded', style({\n            height: '{{expandedHeight}}'\n        }), {\n            params: { expandedHeight: '64px' }\n        }),\n        transition('expanded <=> collapsed, void => collapsed', group([\n            query('@indicatorRotate', animateChild(), { optional: true }),\n            animate(EXPANSION_PANEL_ANIMATION_TIMING),\n        ])),\n    ]),\n    /**\n     * Animation that expands and collapses the panel content.\n     */\n    bodyExpansion: trigger('bodyExpansion', [\n        state('collapsed, void', style({ height: '0px', visibility: 'hidden' })),\n        state('expanded', style({ height: '*', visibility: 'visible' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/expansion-panel-content.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Expansion panel content that will be rendered lazily\n * after the panel is opened for the first time.\n */\nclass MatExpansionPanelContent {\n    /**\n     * @param {?} _template\n     */\n    constructor(_template) {\n        this._template = _template;\n    }\n}\nMatExpansionPanelContent.ɵfac = function MatExpansionPanelContent_Factory(t) { return new (t || MatExpansionPanelContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatExpansionPanelContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelContent, selectors: [[\"ng-template\", \"matExpansionPanelContent\", \"\"]] });\n/** @nocollapse */\nMatExpansionPanelContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelContent, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matExpansionPanelContent]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatExpansionPanelContent.prototype._template;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/expansion-panel.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Counter for generating unique element ids.\n * @type {?}\n */\nlet uniqueId = 0;\n/**\n * Object that can be used to override the default options\n * for all of the expansion panels in a module.\n * @record\n */\nfunction MatExpansionPanelDefaultOptions() { }\nif (false) {\n    /**\n     * Height of the header while the panel is expanded.\n     * @type {?}\n     */\n    MatExpansionPanelDefaultOptions.prototype.expandedHeight;\n    /**\n     * Height of the header while the panel is collapsed.\n     * @type {?}\n     */\n    MatExpansionPanelDefaultOptions.prototype.collapsedHeight;\n    /**\n     * Whether the toggle indicator should be hidden.\n     * @type {?}\n     */\n    MatExpansionPanelDefaultOptions.prototype.hideToggle;\n}\n/**\n * Injection token that can be used to configure the defalt\n * options for the expansion panel component.\n * @type {?}\n */\nconst MAT_EXPANSION_PANEL_DEFAULT_OPTIONS = new InjectionToken('MAT_EXPANSION_PANEL_DEFAULT_OPTIONS');\nconst ɵ0 = undefined;\n/**\n * `<mat-expansion-panel>`\n *\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the MatAccordion directive attached.\n */\nclass MatExpansionPanel extends CdkAccordionItem {\n    /**\n     * @param {?} accordion\n     * @param {?} _changeDetectorRef\n     * @param {?} _uniqueSelectionDispatcher\n     * @param {?} _viewContainerRef\n     * @param {?} _document\n     * @param {?} _animationMode\n     * @param {?=} defaultOptions\n     */\n    constructor(accordion, _changeDetectorRef, _uniqueSelectionDispatcher, _viewContainerRef, _document, _animationMode, defaultOptions) {\n        super(accordion, _changeDetectorRef, _uniqueSelectionDispatcher);\n        this._viewContainerRef = _viewContainerRef;\n        this._animationMode = _animationMode;\n        this._hideToggle = false;\n        /**\n         * An event emitted after the body's expansion animation happens.\n         */\n        this.afterExpand = new EventEmitter();\n        /**\n         * An event emitted after the body's collapse animation happens.\n         */\n        this.afterCollapse = new EventEmitter();\n        /**\n         * Stream that emits for changes in `\\@Input` properties.\n         */\n        this._inputChanges = new Subject();\n        /**\n         * ID for the associated header element. Used for a11y labelling.\n         */\n        this._headerId = `mat-expansion-panel-header-${uniqueId++}`;\n        /**\n         * Stream of body animation done events.\n         */\n        this._bodyAnimationDone = new Subject();\n        this.accordion = accordion;\n        this._document = _document;\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._bodyAnimationDone.pipe(distinctUntilChanged((/**\n         * @param {?} x\n         * @param {?} y\n         * @return {?}\n         */\n        (x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (event.fromState !== 'void') {\n                if (event.toState === 'expanded') {\n                    this.afterExpand.emit();\n                }\n                else if (event.toState === 'collapsed') {\n                    this.afterCollapse.emit();\n                }\n            }\n        }));\n        if (defaultOptions) {\n            this.hideToggle = defaultOptions.hideToggle;\n        }\n    }\n    /**\n     * Whether the toggle indicator should be hidden.\n     * @return {?}\n     */\n    get hideToggle() {\n        return this._hideToggle || (this.accordion && this.accordion.hideToggle);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hideToggle(value) {\n        this._hideToggle = coerceBooleanProperty(value);\n    }\n    /**\n     * The position of the expansion indicator.\n     * @return {?}\n     */\n    get togglePosition() {\n        return this._togglePosition || (this.accordion && this.accordion.togglePosition);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set togglePosition(value) {\n        this._togglePosition = value;\n    }\n    /**\n     * Determines whether the expansion panel should have spacing between it and its siblings.\n     * @return {?}\n     */\n    _hasSpacing() {\n        if (this.accordion) {\n            return this.expanded && this.accordion.displayMode === 'default';\n        }\n        return false;\n    }\n    /**\n     * Gets the expanded state string.\n     * @return {?}\n     */\n    _getExpandedState() {\n        return this.expanded ? 'expanded' : 'collapsed';\n    }\n    /**\n     * Toggles the expanded state of the expansion panel.\n     * @return {?}\n     */\n    toggle() {\n        this.expanded = !this.expanded;\n    }\n    /**\n     * Sets the expanded state of the expansion panel to false.\n     * @return {?}\n     */\n    close() {\n        this.expanded = false;\n    }\n    /**\n     * Sets the expanded state of the expansion panel to true.\n     * @return {?}\n     */\n    open() {\n        this.expanded = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        if (this._lazyContent) {\n            // Render the content as soon as the panel becomes open.\n            this.opened.pipe(startWith((/** @type {?} */ (null))), filter((/**\n             * @return {?}\n             */\n            () => this.expanded && !this._portal)), take(1)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n            }));\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        this._inputChanges.next(changes);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._bodyAnimationDone.complete();\n        this._inputChanges.complete();\n    }\n    /**\n     * Checks whether the expansion panel's content contains the currently-focused element.\n     * @return {?}\n     */\n    _containsFocus() {\n        if (this._body) {\n            /** @type {?} */\n            const focusedElement = this._document.activeElement;\n            /** @type {?} */\n            const bodyElement = this._body.nativeElement;\n            return focusedElement === bodyElement || bodyElement.contains(focusedElement);\n        }\n        return false;\n    }\n}\nMatExpansionPanel.ɵfac = function MatExpansionPanel_Factory(t) { return new (t || MatExpansionPanel)(ɵngcc0.ɵɵdirectiveInject(MAT_ACCORDION, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8)); };\nMatExpansionPanel.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatExpansionPanel, selectors: [[\"mat-expansion-panel\"]], contentQueries: function MatExpansionPanel_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelContent, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lazyContent = _t.first);\n    } }, viewQuery: function MatExpansionPanel_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._body = _t.first);\n    } }, hostAttrs: [1, \"mat-expansion-panel\"], hostVars: 6, hostBindings: function MatExpansionPanel_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx.expanded)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-expansion-panel-spacing\", ctx._hasSpacing());\n    } }, inputs: { disabled: \"disabled\", expanded: \"expanded\", hideToggle: \"hideToggle\", togglePosition: \"togglePosition\" }, outputs: { opened: \"opened\", closed: \"closed\", expandedChange: \"expandedChange\", afterExpand: \"afterExpand\", afterCollapse: \"afterCollapse\" }, exportAs: [\"matExpansionPanel\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n            // to the same accordion.\n            { provide: MAT_ACCORDION, useValue: ɵ0 },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c2, decls: 7, vars: 4, consts: [[\"role\", \"region\", 1, \"mat-expansion-panel-content\", 3, \"id\"], [\"body\", \"\"], [1, \"mat-expansion-panel-body\"], [3, \"cdkPortalOutlet\"]], template: function MatExpansionPanel_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@bodyExpansion.done\", function MatExpansionPanel_Template_div_animation_bodyExpansion_done_1_listener($event) { return ctx._bodyAnimationDone.next($event); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵprojection(4, 1);\n        ɵngcc0.ɵɵtemplate(5, MatExpansionPanel_ng_template_5_Template, 0, 0, \"ng-template\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(6, 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"@bodyExpansion\", ctx._getExpandedState())(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx._headerId);\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._portal);\n    } }, directives: [ɵngcc2.CdkPortalOutlet], styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button-base,.mat-action-row button.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button-base,[dir=rtl] .mat-action-row button.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"], encapsulation: 2, data: { animation: [matExpansionAnimations.bodyExpansion] }, changeDetection: 0 });\n/** @nocollapse */\nMatExpansionPanel.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: SkipSelf }, { type: Inject, args: [MAT_ACCORDION,] }] },\n    { type: ChangeDetectorRef },\n    { type: UniqueSelectionDispatcher },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS,] }, { type: Optional }] }\n];\nMatExpansionPanel.propDecorators = {\n    hideToggle: [{ type: Input }],\n    togglePosition: [{ type: Input }],\n    afterExpand: [{ type: Output }],\n    afterCollapse: [{ type: Output }],\n    _lazyContent: [{ type: ContentChild, args: [MatExpansionPanelContent,] }],\n    _body: [{ type: ViewChild, args: ['body',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanel, [{\n        type: Component,\n        args: [{\n                selector: 'mat-expansion-panel',\n                exportAs: 'matExpansionPanel',\n                template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content>\\n<div class=\\\"mat-expansion-panel-content\\\"\\n     role=\\\"region\\\"\\n     [@bodyExpansion]=\\\"_getExpandedState()\\\"\\n     (@bodyExpansion.done)=\\\"_bodyAnimationDone.next($event)\\\"\\n     [attr.aria-labelledby]=\\\"_headerId\\\"\\n     [id]=\\\"id\\\"\\n     #body>\\n  <div class=\\\"mat-expansion-panel-body\\\">\\n    <ng-content></ng-content>\\n    <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n  </div>\\n  <ng-content select=\\\"mat-action-row\\\"></ng-content>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled', 'expanded'],\n                outputs: ['opened', 'closed', 'expandedChange'],\n                animations: [matExpansionAnimations.bodyExpansion],\n                providers: [\n                    // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n                    // to the same accordion.\n                    { provide: MAT_ACCORDION, useValue: ɵ0 },\n                ],\n                host: {\n                    'class': 'mat-expansion-panel',\n                    '[class.mat-expanded]': 'expanded',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[class.mat-expansion-panel-spacing]': '_hasSpacing()'\n                },\n                styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button-base,.mat-action-row button.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button-base,[dir=rtl] .mat-action-row button.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"]\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }, {\n                type: Inject,\n                args: [MAT_ACCORDION]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.UniqueSelectionDispatcher }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n            }, {\n                type: Optional\n            }] }]; }, { afterExpand: [{\n            type: Output\n        }], afterCollapse: [{\n            type: Output\n        }], hideToggle: [{\n            type: Input\n        }], togglePosition: [{\n            type: Input\n        }], _lazyContent: [{\n            type: ContentChild,\n            args: [MatExpansionPanelContent]\n        }], _body: [{\n            type: ViewChild,\n            args: ['body']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatExpansionPanel.ngAcceptInputType_hideToggle;\n    /** @type {?} */\n    MatExpansionPanel.ngAcceptInputType_expanded;\n    /** @type {?} */\n    MatExpansionPanel.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanel.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanel.prototype._hideToggle;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanel.prototype._togglePosition;\n    /**\n     * An event emitted after the body's expansion animation happens.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype.afterExpand;\n    /**\n     * An event emitted after the body's collapse animation happens.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype.afterCollapse;\n    /**\n     * Stream that emits for changes in `\\@Input` properties.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype._inputChanges;\n    /**\n     * Optionally defined accordion the expansion panel belongs to.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype.accordion;\n    /**\n     * Content that will be rendered lazily.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype._lazyContent;\n    /**\n     * Element containing the panel's user-provided content.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype._body;\n    /**\n     * Portal holding the user's content.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype._portal;\n    /**\n     * ID for the associated header element. Used for a11y labelling.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype._headerId;\n    /**\n     * Stream of body animation done events.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype._bodyAnimationDone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanel.prototype._viewContainerRef;\n    /** @type {?} */\n    MatExpansionPanel.prototype._animationMode;\n}\nclass MatExpansionPanelActionRow {\n}\nMatExpansionPanelActionRow.ɵfac = function MatExpansionPanelActionRow_Factory(t) { return new (t || MatExpansionPanelActionRow)(); };\nMatExpansionPanelActionRow.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelActionRow, selectors: [[\"mat-action-row\"]], hostAttrs: [1, \"mat-action-row\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelActionRow, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-action-row',\n                host: {\n                    class: 'mat-action-row'\n                }\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/expansion-panel-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * `<mat-expansion-panel-header>`\n *\n * This component corresponds to the header element of an `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelHeader {\n    /**\n     * @param {?} panel\n     * @param {?} _element\n     * @param {?} _focusMonitor\n     * @param {?} _changeDetectorRef\n     * @param {?=} defaultOptions\n     */\n    constructor(panel, _element, _focusMonitor, _changeDetectorRef, defaultOptions) {\n        this.panel = panel;\n        this._element = _element;\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parentChangeSubscription = Subscription.EMPTY;\n        /**\n         * Whether Angular animations in the panel header should be disabled.\n         */\n        this._animationsDisabled = true;\n        /** @type {?} */\n        const accordionHideToggleChange = panel.accordion ?\n            panel.accordion._stateChanges.pipe(filter((/**\n             * @param {?} changes\n             * @return {?}\n             */\n            changes => !!(changes['hideToggle'] || changes['togglePosition'])))) :\n            EMPTY;\n        // Since the toggle state depends on an @Input on the panel, we\n        // need to subscribe and trigger change detection manually.\n        this._parentChangeSubscription =\n            merge(panel.opened, panel.closed, accordionHideToggleChange, panel._inputChanges.pipe(filter((/**\n             * @param {?} changes\n             * @return {?}\n             */\n            changes => {\n                return !!(changes['hideToggle'] ||\n                    changes['disabled'] ||\n                    changes['togglePosition']);\n            }))))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._changeDetectorRef.markForCheck()));\n        // Avoids focus being lost if the panel contained the focused element and was closed.\n        panel.closed\n            .pipe(filter((/**\n         * @return {?}\n         */\n        () => panel._containsFocus())))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => _focusMonitor.focusVia(_element, 'program')));\n        _focusMonitor.monitor(_element).subscribe((/**\n         * @param {?} origin\n         * @return {?}\n         */\n        origin => {\n            if (origin && panel.accordion) {\n                panel.accordion._handleHeaderFocus(this);\n            }\n        }));\n        if (defaultOptions) {\n            this.expandedHeight = defaultOptions.expandedHeight;\n            this.collapsedHeight = defaultOptions.collapsedHeight;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _animationStarted() {\n        // Currently the `expansionHeight` animation has a `void => collapsed` transition which is\n        // there to work around a bug in Angular (see #13088), however this introduces a different\n        // issue. The new transition will cause the header to animate in on init (see #16067), if the\n        // consumer has set a header height that is different from the default one. We work around it\n        // by disabling animations on the header and re-enabling them after the first animation has run.\n        // Note that Angular dispatches animation events even if animations are disabled. Ideally this\n        // wouldn't be necessary if we remove the `void => collapsed` transition, but we have to wait\n        // for https://github.com/angular/angular/issues/18847 to be resolved.\n        this._animationsDisabled = false;\n    }\n    /**\n     * Whether the associated panel is disabled. Implemented as a part of `FocusableOption`.\n     * \\@docs-private\n     * @return {?}\n     */\n    get disabled() {\n        return this.panel.disabled;\n    }\n    /**\n     * Toggles the expanded state of the panel.\n     * @return {?}\n     */\n    _toggle() {\n        if (!this.disabled) {\n            this.panel.toggle();\n        }\n    }\n    /**\n     * Gets whether the panel is expanded.\n     * @return {?}\n     */\n    _isExpanded() {\n        return this.panel.expanded;\n    }\n    /**\n     * Gets the expanded state string of the panel.\n     * @return {?}\n     */\n    _getExpandedState() {\n        return this.panel._getExpandedState();\n    }\n    /**\n     * Gets the panel id.\n     * @return {?}\n     */\n    _getPanelId() {\n        return this.panel.id;\n    }\n    /**\n     * Gets the toggle position for the header.\n     * @return {?}\n     */\n    _getTogglePosition() {\n        return this.panel.togglePosition;\n    }\n    /**\n     * Gets whether the expand indicator should be shown.\n     * @return {?}\n     */\n    _showToggle() {\n        return !this.panel.hideToggle && !this.panel.disabled;\n    }\n    /**\n     * Handle keydown event calling to toggle() if appropriate.\n     * @param {?} event\n     * @return {?}\n     */\n    _keydown(event) {\n        switch (event.keyCode) {\n            // Toggle for space and enter keys.\n            case SPACE:\n            case ENTER:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this._toggle();\n                }\n                break;\n            default:\n                if (this.panel.accordion) {\n                    this.panel.accordion._handleHeaderKeydown(event);\n                }\n                return;\n        }\n    }\n    /**\n     * Focuses the panel header. Implemented as a part of `FocusableOption`.\n     * \\@docs-private\n     * @param {?=} origin Origin of the action that triggered the focus.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(origin = 'program', options) {\n        this._focusMonitor.focusVia(this._element, origin, options);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._parentChangeSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._element);\n    }\n}\nMatExpansionPanelHeader.ɵfac = function MatExpansionPanelHeader_Factory(t) { return new (t || MatExpansionPanelHeader)(ɵngcc0.ɵɵdirectiveInject(MatExpansionPanel, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8)); };\nMatExpansionPanelHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatExpansionPanelHeader, selectors: [[\"mat-expansion-panel-header\"]], hostAttrs: [\"role\", \"button\", 1, \"mat-expansion-panel-header\", \"mat-focus-indicator\"], hostVars: 19, hostBindings: function MatExpansionPanelHeader_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵcomponentHostSyntheticListener(\"@expansionHeight.start\", function MatExpansionPanelHeader_animation_expansionHeight_start_HostBindingHandler() { return ctx._animationStarted(); });\n        ɵngcc0.ɵɵlistener(\"click\", function MatExpansionPanelHeader_click_HostBindingHandler() { return ctx._toggle(); })(\"keydown\", function MatExpansionPanelHeader_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.panel._headerId)(\"tabindex\", ctx.disabled ? 0 - 1 : 0)(\"aria-controls\", ctx._getPanelId())(\"aria-expanded\", ctx._isExpanded())(\"aria-disabled\", ctx.panel.disabled);\n        ɵngcc0.ɵɵupdateSyntheticHostBinding(\"@.disabled\", ctx._animationsDisabled)(\"@expansionHeight\", ɵngcc0.ɵɵpureFunction2(16, _c4, ctx._getExpandedState(), ɵngcc0.ɵɵpureFunction2(13, _c3, ctx.collapsedHeight, ctx.expandedHeight)));\n        ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx._isExpanded())(\"mat-expansion-toggle-indicator-after\", ctx._getTogglePosition() === \"after\")(\"mat-expansion-toggle-indicator-before\", ctx._getTogglePosition() === \"before\");\n    } }, inputs: { expandedHeight: \"expandedHeight\", collapsedHeight: \"collapsedHeight\" }, ngContentSelectors: _c6, decls: 5, vars: 1, consts: [[1, \"mat-content\"], [\"class\", \"mat-expansion-indicator\", 4, \"ngIf\"], [1, \"mat-expansion-indicator\"]], template: function MatExpansionPanelHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c5);\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(4, MatExpansionPanelHeader_span_4_Template, 1, 1, \"span\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._showToggle());\n    } }, directives: [ɵngcc4.NgIf], styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;position:relative}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\\n\"], encapsulation: 2, data: { animation: [\n            matExpansionAnimations.indicatorRotate,\n            matExpansionAnimations.expansionHeaderHeight\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatExpansionPanelHeader.ctorParameters = () => [\n    { type: MatExpansionPanel, decorators: [{ type: Host }] },\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS,] }, { type: Optional }] }\n];\nMatExpansionPanelHeader.propDecorators = {\n    expandedHeight: [{ type: Input }],\n    collapsedHeight: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-expansion-panel-header',\n                template: \"<span class=\\\"mat-content\\\">\\n  <ng-content select=\\\"mat-panel-title\\\"></ng-content>\\n  <ng-content select=\\\"mat-panel-description\\\"></ng-content>\\n  <ng-content></ng-content>\\n</span>\\n<span [@indicatorRotate]=\\\"_getExpandedState()\\\" *ngIf=\\\"_showToggle()\\\"\\n      class=\\\"mat-expansion-indicator\\\"></span>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                animations: [\n                    matExpansionAnimations.indicatorRotate,\n                    matExpansionAnimations.expansionHeaderHeight\n                ],\n                host: {\n                    'class': 'mat-expansion-panel-header mat-focus-indicator',\n                    'role': 'button',\n                    '[attr.id]': 'panel._headerId',\n                    '[attr.tabindex]': 'disabled ? -1 : 0',\n                    '[attr.aria-controls]': '_getPanelId()',\n                    '[attr.aria-expanded]': '_isExpanded()',\n                    '[attr.aria-disabled]': 'panel.disabled',\n                    '[class.mat-expanded]': '_isExpanded()',\n                    '[class.mat-expansion-toggle-indicator-after]': `_getTogglePosition() === 'after'`,\n                    '[class.mat-expansion-toggle-indicator-before]': `_getTogglePosition() === 'before'`,\n                    '(click)': '_toggle()',\n                    '(keydown)': '_keydown($event)',\n                    '[@.disabled]': '_animationsDisabled',\n                    '(@expansionHeight.start)': '_animationStarted()',\n                    '[@expansionHeight]': `{\n        value: _getExpandedState(),\n        params: {\n          collapsedHeight: collapsedHeight,\n          expandedHeight: expandedHeight\n        }\n    }`\n                },\n                styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;position:relative}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\\n\"]\n            }]\n    }], function () { return [{ type: MatExpansionPanel, decorators: [{\n                type: Host\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n            }, {\n                type: Optional\n            }] }]; }, { expandedHeight: [{\n            type: Input\n        }], collapsedHeight: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanelHeader.prototype._parentChangeSubscription;\n    /**\n     * Whether Angular animations in the panel header should be disabled.\n     * @type {?}\n     */\n    MatExpansionPanelHeader.prototype._animationsDisabled;\n    /**\n     * Height of the header while the panel is expanded.\n     * @type {?}\n     */\n    MatExpansionPanelHeader.prototype.expandedHeight;\n    /**\n     * Height of the header while the panel is collapsed.\n     * @type {?}\n     */\n    MatExpansionPanelHeader.prototype.collapsedHeight;\n    /** @type {?} */\n    MatExpansionPanelHeader.prototype.panel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanelHeader.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanelHeader.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanelHeader.prototype._changeDetectorRef;\n}\n/**\n * `<mat-panel-description>`\n *\n * This directive is to be used inside of the MatExpansionPanelHeader component.\n */\nclass MatExpansionPanelDescription {\n}\nMatExpansionPanelDescription.ɵfac = function MatExpansionPanelDescription_Factory(t) { return new (t || MatExpansionPanelDescription)(); };\nMatExpansionPanelDescription.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelDescription, selectors: [[\"mat-panel-description\"]], hostAttrs: [1, \"mat-expansion-panel-header-description\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelDescription, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-panel-description',\n                host: {\n                    class: 'mat-expansion-panel-header-description'\n                }\n            }]\n    }], null, null); })();\n/**\n * `<mat-panel-title>`\n *\n * This directive is to be used inside of the MatExpansionPanelHeader component.\n */\nclass MatExpansionPanelTitle {\n}\nMatExpansionPanelTitle.ɵfac = function MatExpansionPanelTitle_Factory(t) { return new (t || MatExpansionPanelTitle)(); };\nMatExpansionPanelTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelTitle, selectors: [[\"mat-panel-title\"]], hostAttrs: [1, \"mat-expansion-panel-header-title\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelTitle, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-panel-title',\n                host: {\n                    class: 'mat-expansion-panel-header-title'\n                }\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/accordion.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive for a Material Design Accordion.\n */\nclass MatAccordion extends CdkAccordion {\n    constructor() {\n        super(...arguments);\n        /**\n         * Headers belonging to this accordion.\n         */\n        this._ownHeaders = new QueryList();\n        this._hideToggle = false;\n        /**\n         * Display mode used for all expansion panels in the accordion. Currently two display\n         * modes exist:\n         *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n         *     panel at a different elevation from the rest of the accordion.\n         *  flat - no spacing is placed around expanded panels, showing all panels at the same\n         *     elevation.\n         */\n        this.displayMode = 'default';\n        /**\n         * The position of the expansion indicator.\n         */\n        this.togglePosition = 'after';\n    }\n    /**\n     * Whether the expansion indicator should be hidden.\n     * @return {?}\n     */\n    get hideToggle() { return this._hideToggle; }\n    /**\n     * @param {?} show\n     * @return {?}\n     */\n    set hideToggle(show) { this._hideToggle = coerceBooleanProperty(show); }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._headers.changes\n            .pipe(startWith(this._headers))\n            .subscribe((/**\n         * @param {?} headers\n         * @return {?}\n         */\n        (headers) => {\n            this._ownHeaders.reset(headers.filter((/**\n             * @param {?} header\n             * @return {?}\n             */\n            header => header.panel.accordion === this)));\n            this._ownHeaders.notifyOnChanges();\n        }));\n        this._keyManager = new FocusKeyManager(this._ownHeaders).withWrap();\n    }\n    /**\n     * Handles keyboard events coming in from the panel headers.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleHeaderKeydown(event) {\n        const { keyCode } = event;\n        /** @type {?} */\n        const manager = this._keyManager;\n        if (keyCode === HOME) {\n            if (!hasModifierKey(event)) {\n                manager.setFirstItemActive();\n                event.preventDefault();\n            }\n        }\n        else if (keyCode === END) {\n            if (!hasModifierKey(event)) {\n                manager.setLastItemActive();\n                event.preventDefault();\n            }\n        }\n        else {\n            this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * @param {?} header\n     * @return {?}\n     */\n    _handleHeaderFocus(header) {\n        this._keyManager.updateActiveItem(header);\n    }\n}\nMatAccordion.ɵfac = function MatAccordion_Factory(t) { return ɵMatAccordion_BaseFactory(t || MatAccordion); };\nMatAccordion.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAccordion, selectors: [[\"mat-accordion\"]], contentQueries: function MatAccordion_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelHeader, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headers = _t);\n    } }, hostAttrs: [1, \"mat-accordion\"], hostVars: 2, hostBindings: function MatAccordion_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-accordion-multi\", ctx.multi);\n    } }, inputs: { multi: \"multi\", displayMode: \"displayMode\", togglePosition: \"togglePosition\", hideToggle: \"hideToggle\" }, exportAs: [\"matAccordion\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_ACCORDION,\n                useExisting: MatAccordion\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatAccordion.propDecorators = {\n    _headers: [{ type: ContentChildren, args: [MatExpansionPanelHeader, { descendants: true },] }],\n    hideToggle: [{ type: Input }],\n    displayMode: [{ type: Input }],\n    togglePosition: [{ type: Input }]\n};\nconst ɵMatAccordion_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatAccordion);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAccordion, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-accordion',\n                exportAs: 'matAccordion',\n                inputs: ['multi'],\n                providers: [{\n                        provide: MAT_ACCORDION,\n                        useExisting: MatAccordion\n                    }],\n                host: {\n                    class: 'mat-accordion',\n                    // Class binding which is only used by the test harness as there is no other\n                    // way for the harness to detect if multiple panel support is enabled.\n                    '[class.mat-accordion-multi]': 'this.multi'\n                }\n            }]\n    }], null, { displayMode: [{\n            type: Input\n        }], togglePosition: [{\n            type: Input\n        }], hideToggle: [{\n            type: Input\n        }], _headers: [{\n            type: ContentChildren,\n            args: [MatExpansionPanelHeader, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatAccordion.ngAcceptInputType_hideToggle;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAccordion.prototype._keyManager;\n    /**\n     * Headers belonging to this accordion.\n     * @type {?}\n     * @private\n     */\n    MatAccordion.prototype._ownHeaders;\n    /**\n     * All headers inside the accordion. Includes headers inside nested accordions.\n     * @type {?}\n     */\n    MatAccordion.prototype._headers;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAccordion.prototype._hideToggle;\n    /**\n     * Display mode used for all expansion panels in the accordion. Currently two display\n     * modes exist:\n     *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n     *     panel at a different elevation from the rest of the accordion.\n     *  flat - no spacing is placed around expanded panels, showing all panels at the same\n     *     elevation.\n     * @type {?}\n     */\n    MatAccordion.prototype.displayMode;\n    /**\n     * The position of the expansion indicator.\n     * @type {?}\n     */\n    MatAccordion.prototype.togglePosition;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/expansion-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatExpansionModule {\n}\nMatExpansionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatExpansionModule });\nMatExpansionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatExpansionModule_Factory(t) { return new (t || MatExpansionModule)(); }, imports: [[CommonModule, CdkAccordionModule, PortalModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatExpansionModule, { declarations: function () { return [MatAccordion,\n        MatExpansionPanel,\n        MatExpansionPanelActionRow,\n        MatExpansionPanelHeader,\n        MatExpansionPanelTitle,\n        MatExpansionPanelDescription,\n        MatExpansionPanelContent]; }, imports: function () { return [CommonModule, CdkAccordionModule, PortalModule]; }, exports: function () { return [MatAccordion,\n        MatExpansionPanel,\n        MatExpansionPanelActionRow,\n        MatExpansionPanelHeader,\n        MatExpansionPanelTitle,\n        MatExpansionPanelDescription,\n        MatExpansionPanelContent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, CdkAccordionModule, PortalModule],\n                exports: [\n                    MatAccordion,\n                    MatExpansionPanel,\n                    MatExpansionPanelActionRow,\n                    MatExpansionPanelHeader,\n                    MatExpansionPanelTitle,\n                    MatExpansionPanelDescription,\n                    MatExpansionPanelContent,\n                ],\n                declarations: [\n                    MatAccordion,\n                    MatExpansionPanel,\n                    MatExpansionPanelActionRow,\n                    MatExpansionPanelHeader,\n                    MatExpansionPanelTitle,\n                    MatExpansionPanelDescription,\n                    MatExpansionPanelContent,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { EXPANSION_PANEL_ANIMATION_TIMING, MAT_ACCORDION, MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, MatAccordion, MatExpansionModule, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelContent, MatExpansionPanelDescription, MatExpansionPanelHeader, MatExpansionPanelTitle, matExpansionAnimations };\n\n//# sourceMappingURL=expansion.js.map","import { ObserversModule } from '@angular/cdk/observers';\nimport { CommonModule } from '@angular/common';\nimport { Directive, Input, InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Inject, NgZone, ViewChild, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MAT_LABEL_GLOBAL_OPTIONS, MatCommonModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, merge, fromEvent } from 'rxjs';\nimport { startWith, takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/error.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/observers';\n\nconst _c0 = [\"underline\"];\nconst _c1 = [\"connectionContainer\"];\nconst _c2 = [\"inputContainer\"];\nconst _c3 = [\"label\"];\nfunction MatFormField_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14);\n    ɵngcc0.ɵɵelement(2, \"div\", 15);\n    ɵngcc0.ɵɵelement(3, \"div\", 16);\n    ɵngcc0.ɵɵelement(4, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 18);\n    ɵngcc0.ɵɵelement(6, \"div\", 15);\n    ɵngcc0.ɵɵelement(7, \"div\", 16);\n    ɵngcc0.ɵɵelement(8, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} }\nfunction MatFormField_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵprojection(1, 1);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementStart(2, \"span\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r10._control.placeholder);\n} }\nfunction MatFormField_label_9_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 3, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatFormField_label_9_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 23);\n    ɵngcc0.ɵɵtext(1, \" *\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_Template(rf, ctx) { if (rf & 1) {\n    const _r14 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"label\", 20, 21);\n    ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatFormField_label_9_Template_label_cdkObserveContent_0_listener() { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.updateOutlineGap(); });\n    ɵngcc0.ɵɵtemplate(2, MatFormField_label_9_ng_container_2_Template, 4, 1, \"ng-container\", 12);\n    ɵngcc0.ɵɵtemplate(3, MatFormField_label_9_3_Template, 1, 0, undefined, 12);\n    ɵngcc0.ɵɵtemplate(4, MatFormField_label_9_span_4_Template, 2, 0, \"span\", 22);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat)(\"mat-form-field-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat)(\"mat-accent\", ctx_r4.color == \"accent\")(\"mat-warn\", ctx_r4.color == \"warn\");\n    ɵngcc0.ɵɵproperty(\"cdkObserveContentDisabled\", ctx_r4.appearance != \"outline\")(\"id\", ctx_r4._labelId)(\"ngSwitch\", ctx_r4._hasLabel());\n    ɵngcc0.ɵɵattribute(\"for\", ctx_r4._control.id)(\"aria-owns\", ctx_r4._control.id);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r4.hideRequiredMarker && ctx_r4._control.required && !ctx_r4._control.disabled);\n} }\nfunction MatFormField_div_10_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 24);\n    ɵngcc0.ɵɵprojection(1, 4);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_div_11_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 25, 26);\n    ɵngcc0.ɵɵelement(2, \"span\", 27);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassProp(\"mat-accent\", ctx_r6.color == \"accent\")(\"mat-warn\", ctx_r6.color == \"warn\");\n} }\nfunction MatFormField_div_13_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵprojection(1, 5);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r7._subscriptAnimationState);\n} }\nfunction MatFormField_div_14_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 31);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r16 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r16._hintLabelId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r16.hintLabel);\n} }\nfunction MatFormField_div_14_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵtemplate(1, MatFormField_div_14_div_1_Template, 2, 2, \"div\", 29);\n    ɵngcc0.ɵɵprojection(2, 6);\n    ɵngcc0.ɵɵelement(3, \"div\", 30);\n    ɵngcc0.ɵɵprojection(4, 7);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r8._subscriptAnimationState);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r8.hintLabel);\n} }\nconst _c4 = [\"*\", [[\"\", \"matPrefix\", \"\"]], [[\"mat-placeholder\"]], [[\"mat-label\"]], [[\"\", \"matSuffix\", \"\"]], [[\"mat-error\"]], [[\"mat-hint\", 3, \"align\", \"end\"]], [[\"mat-hint\", \"align\", \"end\"]]];\nconst _c5 = [\"*\", \"[matPrefix]\", \"mat-placeholder\", \"mat-label\", \"[matSuffix]\", \"mat-error\", \"mat-hint:not([align='end'])\", \"mat-hint[align='end']\"];\nlet nextUniqueId = 0;\n/**\n * Single error message to be shown underneath the form field.\n */\nclass MatError {\n    constructor() {\n        this.id = `mat-error-${nextUniqueId++}`;\n    }\n}\nMatError.ɵfac = function MatError_Factory(t) { return new (t || MatError)(); };\nMatError.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatError, selectors: [[\"mat-error\"]], hostAttrs: [\"role\", \"alert\", 1, \"mat-error\"], hostVars: 1, hostBindings: function MatError_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id);\n    } }, inputs: { id: \"id\" } });\nMatError.propDecorators = {\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatError, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-error',\n                host: {\n                    'class': 'mat-error',\n                    'role': 'alert',\n                    '[attr.id]': 'id'\n                }\n            }]\n    }], function () { return []; }, { id: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatError.prototype.id;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the MatFormField.\n * \\@docs-private\n * @type {?}\n */\nconst matFormFieldAnimations = {\n    /**\n     * Animation that transitions the form field's error and hint messages.\n     */\n    transitionMessages: trigger('transitionMessages', [\n        // TODO(mmalerba): Use angular animations for label animation as well.\n        state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n        transition('void => enter', [\n            style({ opacity: 0, transform: 'translateY(-100%)' }),\n            animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-control.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An interface which allows a control to work inside of a `MatFormField`.\n * @abstract\n * @template T\n */\nclass MatFormFieldControl {\n}\nMatFormFieldControl.ɵfac = function MatFormFieldControl_Factory(t) { return new (t || MatFormFieldControl)(); };\nMatFormFieldControl.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFormFieldControl });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormFieldControl, [{\n        type: Directive\n    }], null, null); })();\nif (false) {\n    /**\n     * The value of the control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.value;\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MatFormField`\n     * needs to run change detection.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.stateChanges;\n    /**\n     * The element ID for this control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.id;\n    /**\n     * The placeholder for this control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.placeholder;\n    /**\n     * Gets the NgControl for this control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.ngControl;\n    /**\n     * Whether the control is focused.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.focused;\n    /**\n     * Whether the control is empty.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.empty;\n    /**\n     * Whether the `MatFormField` label should try to float.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.shouldLabelFloat;\n    /**\n     * Whether the control is required.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.required;\n    /**\n     * Whether the control is disabled.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.disabled;\n    /**\n     * Whether the control is in an error state.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.errorState;\n    /**\n     * An optional name for the control type that can be used to distinguish `mat-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mat-form-field-type-{{controlType}}` to its root element.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.controlType;\n    /**\n     * Whether the input is currently in an autofilled state. If property is not present on the\n     * control it is assumed to be false.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.autofilled;\n    /**\n     * Sets the list of element IDs that currently describe this control.\n     * @abstract\n     * @param {?} ids\n     * @return {?}\n     */\n    MatFormFieldControl.prototype.setDescribedByIds = function (ids) { };\n    /**\n     * Handles a click on the control's container.\n     * @abstract\n     * @param {?} event\n     * @return {?}\n     */\n    MatFormFieldControl.prototype.onContainerClick = function (event) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/**\n * \\@docs-private\n * @param {?} align\n * @return {?}\n */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/hint.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId$1 = 0;\n/**\n * Hint text to be shown underneath the form field control.\n */\nclass MatHint {\n    constructor() {\n        /**\n         * Whether to align the hint label at the start or end of the line.\n         */\n        this.align = 'start';\n        /**\n         * Unique ID for the hint. Used for the aria-describedby on the form field control.\n         */\n        this.id = `mat-hint-${nextUniqueId$1++}`;\n    }\n}\nMatHint.ɵfac = function MatHint_Factory(t) { return new (t || MatHint)(); };\nMatHint.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHint, selectors: [[\"mat-hint\"]], hostAttrs: [1, \"mat-hint\"], hostVars: 4, hostBindings: function MatHint_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"align\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-right\", ctx.align == \"end\");\n    } }, inputs: { align: \"align\", id: \"id\" } });\nMatHint.propDecorators = {\n    align: [{ type: Input }],\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHint, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-hint',\n                host: {\n                    'class': 'mat-hint',\n                    '[class.mat-right]': 'align == \"end\"',\n                    '[attr.id]': 'id',\n                    // Remove align attribute to prevent it from interfering with layout.\n                    '[attr.align]': 'null'\n                }\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Whether to align the hint label at the start or end of the line.\n     * @type {?}\n     */\n    MatHint.prototype.align;\n    /**\n     * Unique ID for the hint. Used for the aria-describedby on the form field control.\n     * @type {?}\n     */\n    MatHint.prototype.id;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/label.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The floating label for a `mat-form-field`.\n */\nclass MatLabel {\n}\nMatLabel.ɵfac = function MatLabel_Factory(t) { return new (t || MatLabel)(); };\nMatLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatLabel, selectors: [[\"mat-label\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatLabel, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-label'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/placeholder.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * \\@breaking-change 8.0.0\n */\nclass MatPlaceholder {\n}\nMatPlaceholder.ɵfac = function MatPlaceholder_Factory(t) { return new (t || MatPlaceholder)(); };\nMatPlaceholder.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPlaceholder, selectors: [[\"mat-placeholder\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPlaceholder, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-placeholder'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/prefix.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Prefix to be placed in front of the form field.\n */\nclass MatPrefix {\n}\nMatPrefix.ɵfac = function MatPrefix_Factory(t) { return new (t || MatPrefix)(); };\nMatPrefix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPrefix, selectors: [[\"\", \"matPrefix\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPrefix, [{\n        type: Directive,\n        args: [{\n                selector: '[matPrefix]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/suffix.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Suffix to be placed at the end of the form field.\n */\nclass MatSuffix {\n}\nMatSuffix.ɵfac = function MatSuffix_Factory(t) { return new (t || MatSuffix)(); };\nMatSuffix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSuffix, selectors: [[\"\", \"matSuffix\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSuffix, [{\n        type: Directive,\n        args: [{\n                selector: '[matSuffix]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId$2 = 0;\n/** @type {?} */\nconst floatingLabelScale = 0.75;\n/** @type {?} */\nconst outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * \\@docs-private\n */\nclass MatFormFieldBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatFormFieldBase.prototype._elementRef;\n}\n/**\n * Base class to which we're applying the form field mixins.\n * \\@docs-private\n * @type {?}\n */\nconst _MatFormFieldMixinBase = mixinColor(MatFormFieldBase, 'primary');\n/**\n * Represents the default options for the form field that can be configured\n * using the `MAT_FORM_FIELD_DEFAULT_OPTIONS` injection token.\n * @record\n */\nfunction MatFormFieldDefaultOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    MatFormFieldDefaultOptions.prototype.appearance;\n    /** @type {?|undefined} */\n    MatFormFieldDefaultOptions.prototype.hideRequiredMarker;\n    /**\n     * Whether the label for form-fields should by default float `always`,\n     * `never`, or `auto` (only when necessary).\n     * @type {?|undefined}\n     */\n    MatFormFieldDefaultOptions.prototype.floatLabel;\n}\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n * @type {?}\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Injection token that can be used to inject an instances of `MatFormField`. It serves\n * as alternative token to the actual `MatFormField` class which would cause unnecessary\n * retention of the `MatFormField` class and its component metadata.\n * @type {?}\n */\nconst MAT_FORM_FIELD = new InjectionToken('MatFormField');\n/**\n * Container for form controls that applies Material Design styling and behavior.\n */\nclass MatFormField extends _MatFormFieldMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} labelOptions\n     * @param {?} _dir\n     * @param {?} _defaults\n     * @param {?} _platform\n     * @param {?} _ngZone\n     * @param {?} _animationMode\n     */\n    constructor(_elementRef, _changeDetectorRef, labelOptions, _dir, _defaults, _platform, _ngZone, _animationMode) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._defaults = _defaults;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the outline gap needs to be calculated\n         * immediately on the next change detection run.\n         */\n        this._outlineGapCalculationNeededImmediately = false;\n        /**\n         * Whether the outline gap needs to be calculated next time the zone has stabilized.\n         */\n        this._outlineGapCalculationNeededOnStable = false;\n        this._destroyed = new Subject();\n        /**\n         * Override for the logic that disables the label animation in certain cases.\n         */\n        this._showAlwaysAnimate = false;\n        /**\n         * State of the mat-hint and mat-error animations.\n         */\n        this._subscriptAnimationState = '';\n        this._hintLabel = '';\n        // Unique id for the hint label.\n        this._hintLabelId = `mat-hint-${nextUniqueId$2++}`;\n        // Unique id for the internal form field label.\n        this._labelId = `mat-form-field-label-${nextUniqueId$2++}`;\n        this._labelOptions = labelOptions ? labelOptions : {};\n        this.floatLabel = this._getDefaultFloatLabelState();\n        this._animationsEnabled = _animationMode !== 'NoopAnimations';\n        // Set the default through here so we invoke the setter on the first run.\n        this.appearance = (_defaults && _defaults.appearance) ? _defaults.appearance : 'legacy';\n        this._hideRequiredMarker = (_defaults && _defaults.hideRequiredMarker != null) ?\n            _defaults.hideRequiredMarker : false;\n    }\n    /**\n     * The form-field appearance style.\n     * @return {?}\n     */\n    get appearance() { return this._appearance; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set appearance(value) {\n        /** @type {?} */\n        const oldValue = this._appearance;\n        this._appearance = value || (this._defaults && this._defaults.appearance) || 'legacy';\n        if (this._appearance === 'outline' && oldValue !== value) {\n            this._outlineGapCalculationNeededOnStable = true;\n        }\n    }\n    /**\n     * Whether the required marker should be hidden.\n     * @return {?}\n     */\n    get hideRequiredMarker() { return this._hideRequiredMarker; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hideRequiredMarker(value) {\n        this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the floating label should always float or not.\n     * @return {?}\n     */\n    get _shouldAlwaysFloat() {\n        return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n    }\n    /**\n     * Whether the label can float or not.\n     * @return {?}\n     */\n    get _canLabelFloat() { return this.floatLabel !== 'never'; }\n    /**\n     * Text for the form field hint.\n     * @return {?}\n     */\n    get hintLabel() { return this._hintLabel; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hintLabel(value) {\n        this._hintLabel = value;\n        this._processHints();\n    }\n    /**\n     * Whether the label should always float, never float or float as the user types.\n     *\n     * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n     * way to make the floating label emulate the behavior of a standard input placeholder. However\n     * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n     * appearances the `never` option has been disabled in favor of just using the placeholder.\n     * @return {?}\n     */\n    get floatLabel() {\n        return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set floatLabel(value) {\n        if (value !== this._floatLabel) {\n            this._floatLabel = value || this._getDefaultFloatLabelState();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get _control() {\n        // TODO(crisbeto): we need this workaround in order to support both Ivy and ViewEngine.\n        //  We should clean this up once Ivy is the default renderer.\n        return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set _control(value) {\n        this._explicitFormFieldControl = value;\n    }\n    /**\n     * @return {?}\n     */\n    get _labelChild() {\n        return this._labelChildNonStatic || this._labelChildStatic;\n    }\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     * @return {?}\n     */\n    getConnectedOverlayOrigin() {\n        return this._connectionContainerRef || this._elementRef;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._validateControlChild();\n        /** @type {?} */\n        const control = this._control;\n        if (control.controlType) {\n            this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n        }\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        control.stateChanges.pipe(startWith((/** @type {?} */ (null)))).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._validatePlaceholders();\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Run change detection if the value changes.\n        if (control.ngControl && control.ngControl.valueChanges) {\n            control.ngControl.valueChanges\n                .pipe(takeUntil(this._destroyed))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._changeDetectorRef.markForCheck()));\n        }\n        // Note that we have to run outside of the `NgZone` explicitly,\n        // in order to avoid throwing users into an infinite loop\n        // if `zone-patch-rxjs` is included.\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.onStable.asObservable().pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                if (this._outlineGapCalculationNeededOnStable) {\n                    this.updateOutlineGap();\n                }\n            }));\n        }));\n        // Run change detection and update the outline if the suffix or prefix changes.\n        merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._outlineGapCalculationNeededOnStable = true;\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Re-validate when the number of hints changes.\n        this._hintChildren.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._processHints();\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Update the aria-described by when the number of errors changes.\n        this._errorChildren.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        }));\n        if (this._dir) {\n            this._dir.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                if (typeof requestAnimationFrame === 'function') {\n                    this._ngZone.runOutsideAngular((/**\n                     * @return {?}\n                     */\n                    () => {\n                        requestAnimationFrame((/**\n                         * @return {?}\n                         */\n                        () => this.updateOutlineGap()));\n                    }));\n                }\n                else {\n                    this.updateOutlineGap();\n                }\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        this._validateControlChild();\n        if (this._outlineGapCalculationNeededImmediately) {\n            this.updateOutlineGap();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._subscriptAnimationState = 'enter';\n        this._changeDetectorRef.detectChanges();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Determines whether a class from the NgControl should be forwarded to the host element.\n     * @param {?} prop\n     * @return {?}\n     */\n    _shouldForward(prop) {\n        /** @type {?} */\n        const ngControl = this._control ? this._control.ngControl : null;\n        return ngControl && ngControl[prop];\n    }\n    /**\n     * @return {?}\n     */\n    _hasPlaceholder() {\n        return !!(this._control && this._control.placeholder || this._placeholderChild);\n    }\n    /**\n     * @return {?}\n     */\n    _hasLabel() {\n        return !!this._labelChild;\n    }\n    /**\n     * @return {?}\n     */\n    _shouldLabelFloat() {\n        return this._canLabelFloat && (this._control.shouldLabelFloat || this._shouldAlwaysFloat);\n    }\n    /**\n     * @return {?}\n     */\n    _hideControlPlaceholder() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this.appearance === 'legacy' && !this._hasLabel() ||\n            this._hasLabel() && !this._shouldLabelFloat();\n    }\n    /**\n     * @return {?}\n     */\n    _hasFloatingLabel() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this._hasLabel() || this.appearance === 'legacy' && this._hasPlaceholder();\n    }\n    /**\n     * Determines whether to display hints or errors.\n     * @return {?}\n     */\n    _getDisplayedMessages() {\n        return (this._errorChildren && this._errorChildren.length > 0 &&\n            this._control.errorState) ? 'error' : 'hint';\n    }\n    /**\n     * Animates the placeholder up and locks it in position.\n     * @return {?}\n     */\n    _animateAndLockLabel() {\n        if (this._hasFloatingLabel() && this._canLabelFloat) {\n            // If animations are disabled, we shouldn't go in here,\n            // because the `transitionend` will never fire.\n            if (this._animationsEnabled && this._label) {\n                this._showAlwaysAnimate = true;\n                fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._showAlwaysAnimate = false;\n                }));\n            }\n            this.floatLabel = 'always';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     * @private\n     * @return {?}\n     */\n    _validatePlaceholders() {\n        if (this._control.placeholder && this._placeholderChild) {\n            throw getMatFormFieldPlaceholderConflictError();\n        }\n    }\n    /**\n     * Does any extra processing that is required when handling the hints.\n     * @private\n     * @return {?}\n     */\n    _processHints() {\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     * @private\n     * @return {?}\n     */\n    _validateHints() {\n        if (this._hintChildren) {\n            /** @type {?} */\n            let startHint;\n            /** @type {?} */\n            let endHint;\n            this._hintChildren.forEach((/**\n             * @param {?} hint\n             * @return {?}\n             */\n            (hint) => {\n                if (hint.align === 'start') {\n                    if (startHint || this.hintLabel) {\n                        throw getMatFormFieldDuplicatedHintError('start');\n                    }\n                    startHint = hint;\n                }\n                else if (hint.align === 'end') {\n                    if (endHint) {\n                        throw getMatFormFieldDuplicatedHintError('end');\n                    }\n                    endHint = hint;\n                }\n            }));\n        }\n    }\n    /**\n     * Gets the default float label state.\n     * @private\n     * @return {?}\n     */\n    _getDefaultFloatLabelState() {\n        return (this._defaults && this._defaults.floatLabel) || this._labelOptions.float || 'auto';\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     * @private\n     * @return {?}\n     */\n    _syncDescribedByIds() {\n        if (this._control) {\n            /** @type {?} */\n            let ids = [];\n            if (this._getDisplayedMessages() === 'hint') {\n                /** @type {?} */\n                const startHint = this._hintChildren ?\n                    this._hintChildren.find((/**\n                     * @param {?} hint\n                     * @return {?}\n                     */\n                    hint => hint.align === 'start')) : null;\n                /** @type {?} */\n                const endHint = this._hintChildren ?\n                    this._hintChildren.find((/**\n                     * @param {?} hint\n                     * @return {?}\n                     */\n                    hint => hint.align === 'end')) : null;\n                if (startHint) {\n                    ids.push(startHint.id);\n                }\n                else if (this._hintLabel) {\n                    ids.push(this._hintLabelId);\n                }\n                if (endHint) {\n                    ids.push(endHint.id);\n                }\n            }\n            else if (this._errorChildren) {\n                ids = this._errorChildren.map((/**\n                 * @param {?} error\n                 * @return {?}\n                 */\n                error => error.id));\n            }\n            this._control.setDescribedByIds(ids);\n        }\n    }\n    /**\n     * Throws an error if the form field's control is missing.\n     * @protected\n     * @return {?}\n     */\n    _validateControlChild() {\n        if (!this._control) {\n            throw getMatFormFieldMissingControlError();\n        }\n    }\n    /**\n     * Updates the width and position of the gap in the outline. Only relevant for the outline\n     * appearance.\n     * @return {?}\n     */\n    updateOutlineGap() {\n        /** @type {?} */\n        const labelEl = this._label ? this._label.nativeElement : null;\n        if (this.appearance !== 'outline' || !labelEl || !labelEl.children.length ||\n            !labelEl.textContent.trim()) {\n            return;\n        }\n        if (!this._platform.isBrowser) {\n            // getBoundingClientRect isn't available on the server.\n            return;\n        }\n        // If the element is not present in the DOM, the outline gap will need to be calculated\n        // the next time it is checked and in the DOM.\n        if (!this._isAttachedToDOM()) {\n            this._outlineGapCalculationNeededImmediately = true;\n            return;\n        }\n        /** @type {?} */\n        let startWidth = 0;\n        /** @type {?} */\n        let gapWidth = 0;\n        /** @type {?} */\n        const container = this._connectionContainerRef.nativeElement;\n        /** @type {?} */\n        const startEls = container.querySelectorAll('.mat-form-field-outline-start');\n        /** @type {?} */\n        const gapEls = container.querySelectorAll('.mat-form-field-outline-gap');\n        if (this._label && this._label.nativeElement.children.length) {\n            /** @type {?} */\n            const containerRect = container.getBoundingClientRect();\n            // If the container's width and height are zero, it means that the element is\n            // invisible and we can't calculate the outline gap. Mark the element as needing\n            // to be checked the next time the zone stabilizes. We can't do this immediately\n            // on the next change detection, because even if the element becomes visible,\n            // the `ClientRect` won't be reclaculated immediately. We reset the\n            // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n            if (containerRect.width === 0 && containerRect.height === 0) {\n                this._outlineGapCalculationNeededOnStable = true;\n                this._outlineGapCalculationNeededImmediately = false;\n                return;\n            }\n            /** @type {?} */\n            const containerStart = this._getStartEnd(containerRect);\n            /** @type {?} */\n            const labelStart = this._getStartEnd(labelEl.children[0].getBoundingClientRect());\n            /** @type {?} */\n            let labelWidth = 0;\n            for (const child of labelEl.children) {\n                labelWidth += child.offsetWidth;\n            }\n            startWidth = Math.abs(labelStart - containerStart) - outlineGapPadding;\n            gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n        }\n        for (let i = 0; i < startEls.length; i++) {\n            startEls[i].style.width = `${startWidth}px`;\n        }\n        for (let i = 0; i < gapEls.length; i++) {\n            gapEls[i].style.width = `${gapWidth}px`;\n        }\n        this._outlineGapCalculationNeededOnStable =\n            this._outlineGapCalculationNeededImmediately = false;\n    }\n    /**\n     * Gets the start end of the rect considering the current directionality.\n     * @private\n     * @param {?} rect\n     * @return {?}\n     */\n    _getStartEnd(rect) {\n        return (this._dir && this._dir.value === 'rtl') ? rect.right : rect.left;\n    }\n    /**\n     * Checks whether the form field is attached to the DOM.\n     * @private\n     * @return {?}\n     */\n    _isAttachedToDOM() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        if (element.getRootNode) {\n            /** @type {?} */\n            const rootNode = element.getRootNode();\n            // If the element is inside the DOM the root node will be either the document\n            // or the closest shadow root, otherwise it'll be the element itself.\n            return rootNode && rootNode !== element;\n        }\n        // Otherwise fall back to checking if it's in the document. This doesn't account for\n        // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n        return (/** @type {?} */ (document.documentElement)).contains(element);\n    }\n}\nMatFormField.ɵfac = function MatFormField_Factory(t) { return new (t || MatFormField)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_LABEL_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatFormField.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatFormField, selectors: [[\"mat-form-field\"]], contentQueries: function MatFormField_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPlaceholder, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatError, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatHint, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPrefix, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSuffix, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderChild = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._errorChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._hintChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._prefixChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._suffixChildren = _t);\n    } }, viewQuery: function MatFormField_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.underlineRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._connectionContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._label = _t.first);\n    } }, hostAttrs: [1, \"mat-form-field\"], hostVars: 44, hostBindings: function MatFormField_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-form-field-appearance-standard\", ctx.appearance == \"standard\")(\"mat-form-field-appearance-fill\", ctx.appearance == \"fill\")(\"mat-form-field-appearance-outline\", ctx.appearance == \"outline\")(\"mat-form-field-appearance-legacy\", ctx.appearance == \"legacy\")(\"mat-form-field-invalid\", ctx._control.errorState)(\"mat-form-field-can-float\", ctx._canLabelFloat)(\"mat-form-field-should-float\", ctx._shouldLabelFloat())(\"mat-form-field-has-label\", ctx._hasFloatingLabel())(\"mat-form-field-hide-placeholder\", ctx._hideControlPlaceholder())(\"mat-form-field-disabled\", ctx._control.disabled)(\"mat-form-field-autofilled\", ctx._control.autofilled)(\"mat-focused\", ctx._control.focused)(\"mat-accent\", ctx.color == \"accent\")(\"mat-warn\", ctx.color == \"warn\")(\"ng-untouched\", ctx._shouldForward(\"untouched\"))(\"ng-touched\", ctx._shouldForward(\"touched\"))(\"ng-pristine\", ctx._shouldForward(\"pristine\"))(\"ng-dirty\", ctx._shouldForward(\"dirty\"))(\"ng-valid\", ctx._shouldForward(\"valid\"))(\"ng-invalid\", ctx._shouldForward(\"invalid\"))(\"ng-pending\", ctx._shouldForward(\"pending\"))(\"_mat-animation-noopable\", !ctx._animationsEnabled);\n    } }, inputs: { color: \"color\", floatLabel: \"floatLabel\", appearance: \"appearance\", hideRequiredMarker: \"hideRequiredMarker\", hintLabel: \"hintLabel\" }, exportAs: [\"matFormField\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c5, decls: 15, vars: 8, consts: [[1, \"mat-form-field-wrapper\"], [1, \"mat-form-field-flex\", 3, \"click\"], [\"connectionContainer\", \"\"], [4, \"ngIf\"], [\"class\", \"mat-form-field-prefix\", 4, \"ngIf\"], [1, \"mat-form-field-infix\"], [\"inputContainer\", \"\"], [1, \"mat-form-field-label-wrapper\"], [\"class\", \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"mat-empty\", \"mat-form-field-empty\", \"mat-accent\", \"mat-warn\", \"ngSwitch\", \"cdkObserveContent\", 4, \"ngIf\"], [\"class\", \"mat-form-field-suffix\", 4, \"ngIf\"], [\"class\", \"mat-form-field-underline\", 4, \"ngIf\"], [1, \"mat-form-field-subscript-wrapper\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"class\", \"mat-form-field-hint-wrapper\", 4, \"ngSwitchCase\"], [1, \"mat-form-field-outline\"], [1, \"mat-form-field-outline-start\"], [1, \"mat-form-field-outline-gap\"], [1, \"mat-form-field-outline-end\"], [1, \"mat-form-field-outline\", \"mat-form-field-outline-thick\"], [1, \"mat-form-field-prefix\"], [1, \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"ngSwitch\", \"cdkObserveContent\"], [\"label\", \"\"], [\"class\", \"mat-placeholder-required mat-form-field-required-marker\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"aria-hidden\", \"true\", 1, \"mat-placeholder-required\", \"mat-form-field-required-marker\"], [1, \"mat-form-field-suffix\"], [1, \"mat-form-field-underline\"], [\"underline\", \"\"], [1, \"mat-form-field-ripple\"], [1, \"mat-form-field-hint-wrapper\"], [\"class\", \"mat-hint\", 3, \"id\", 4, \"ngIf\"], [1, \"mat-form-field-hint-spacer\"], [1, \"mat-hint\", 3, \"id\"]], template: function MatFormField_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1, 2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatFormField_Template_div_click_1_listener($event) { return ctx._control.onContainerClick && ctx._control.onContainerClick($event); });\n        ɵngcc0.ɵɵtemplate(3, MatFormField_ng_container_3_Template, 9, 0, \"ng-container\", 3);\n        ɵngcc0.ɵɵtemplate(4, MatFormField_div_4_Template, 2, 0, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵprojection(7);\n        ɵngcc0.ɵɵelementStart(8, \"span\", 7);\n        ɵngcc0.ɵɵtemplate(9, MatFormField_label_9_Template, 5, 16, \"label\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(10, MatFormField_div_10_Template, 2, 0, \"div\", 9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(11, MatFormField_div_11_Template, 3, 4, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(12, \"div\", 11);\n        ɵngcc0.ɵɵtemplate(13, MatFormField_div_13_Template, 2, 1, \"div\", 12);\n        ɵngcc0.ɵɵtemplate(14, MatFormField_div_14_Template, 5, 2, \"div\", 13);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance == \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._prefixChildren.length);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._hasFloatingLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._suffixChildren.length);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance != \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx._getDisplayedMessages());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"hint\");\n    } }, directives: [ɵngcc3.NgIf, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc4.CdkObserveContent], styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"], encapsulation: 2, data: { animation: [matFormFieldAnimations.transitionMessages] }, changeDetection: 0 });\n/** @nocollapse */\nMatFormField.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_LABEL_GLOBAL_OPTIONS,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD_DEFAULT_OPTIONS,] }] },\n    { type: Platform },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatFormField.propDecorators = {\n    appearance: [{ type: Input }],\n    hideRequiredMarker: [{ type: Input }],\n    hintLabel: [{ type: Input }],\n    floatLabel: [{ type: Input }],\n    underlineRef: [{ type: ViewChild, args: ['underline',] }],\n    _connectionContainerRef: [{ type: ViewChild, args: ['connectionContainer', { static: true },] }],\n    _inputContainerRef: [{ type: ViewChild, args: ['inputContainer',] }],\n    _label: [{ type: ViewChild, args: ['label',] }],\n    _controlNonStatic: [{ type: ContentChild, args: [MatFormFieldControl,] }],\n    _controlStatic: [{ type: ContentChild, args: [MatFormFieldControl, { static: true },] }],\n    _labelChildNonStatic: [{ type: ContentChild, args: [MatLabel,] }],\n    _labelChildStatic: [{ type: ContentChild, args: [MatLabel, { static: true },] }],\n    _placeholderChild: [{ type: ContentChild, args: [MatPlaceholder,] }],\n    _errorChildren: [{ type: ContentChildren, args: [MatError, { descendants: true },] }],\n    _hintChildren: [{ type: ContentChildren, args: [MatHint, { descendants: true },] }],\n    _prefixChildren: [{ type: ContentChildren, args: [MatPrefix, { descendants: true },] }],\n    _suffixChildren: [{ type: ContentChildren, args: [MatSuffix, { descendants: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormField, [{\n        type: Component,\n        args: [{\n                selector: 'mat-form-field',\n                exportAs: 'matFormField',\n                template: \"<div class=\\\"mat-form-field-wrapper\\\">\\n  <div class=\\\"mat-form-field-flex\\\" #connectionContainer\\n       (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\">\\n\\n    <!-- Outline used for outline appearance. -->\\n    <ng-container *ngIf=\\\"appearance == 'outline'\\\">\\n      <div class=\\\"mat-form-field-outline\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n      <div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <div class=\\\"mat-form-field-prefix\\\" *ngIf=\\\"_prefixChildren.length\\\">\\n      <ng-content select=\\\"[matPrefix]\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-infix\\\" #inputContainer>\\n      <ng-content></ng-content>\\n\\n      <span class=\\\"mat-form-field-label-wrapper\\\">\\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\\n             read if it comes before the control in the DOM. -->\\n        <label class=\\\"mat-form-field-label\\\"\\n               (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n               [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\"\\n               [id]=\\\"_labelId\\\"\\n               [attr.for]=\\\"_control.id\\\"\\n               [attr.aria-owns]=\\\"_control.id\\\"\\n               [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\"\\n               [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\"\\n               [class.mat-accent]=\\\"color == 'accent'\\\"\\n               [class.mat-warn]=\\\"color == 'warn'\\\"\\n               #label\\n               *ngIf=\\\"_hasFloatingLabel()\\\"\\n               [ngSwitch]=\\\"_hasLabel()\\\">\\n\\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\\n          <ng-container *ngSwitchCase=\\\"false\\\">\\n            <ng-content select=\\\"mat-placeholder\\\"></ng-content>\\n            <span>{{_control.placeholder}}</span>\\n          </ng-container>\\n\\n          <ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n\\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\\n          <span\\n            class=\\\"mat-placeholder-required mat-form-field-required-marker\\\"\\n            aria-hidden=\\\"true\\\"\\n            *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span>\\n        </label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n      <ng-content select=\\\"[matSuffix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Underline used for legacy, standard, and box appearances. -->\\n  <div class=\\\"mat-form-field-underline\\\" #underline\\n       *ngIf=\\\"appearance != 'outline'\\\">\\n    <span class=\\\"mat-form-field-ripple\\\"\\n          [class.mat-accent]=\\\"color == 'accent'\\\"\\n          [class.mat-warn]=\\\"color == 'warn'\\\"></span>\\n  </div>\\n\\n  <div class=\\\"mat-form-field-subscript-wrapper\\\"\\n       [ngSwitch]=\\\"_getDisplayedMessages()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <ng-content select=\\\"mat-error\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\"\\n      [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\\n      <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\\n      <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n      <div class=\\\"mat-form-field-hint-spacer\\\"></div>\\n      <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\",\n                animations: [matFormFieldAnimations.transitionMessages],\n                host: {\n                    'class': 'mat-form-field',\n                    '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n                    '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n                    '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n                    '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n                    '[class.mat-form-field-invalid]': '_control.errorState',\n                    '[class.mat-form-field-can-float]': '_canLabelFloat',\n                    '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n                    '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n                    '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n                    '[class.mat-form-field-disabled]': '_control.disabled',\n                    '[class.mat-form-field-autofilled]': '_control.autofilled',\n                    '[class.mat-focused]': '_control.focused',\n                    '[class.mat-accent]': 'color == \"accent\"',\n                    '[class.mat-warn]': 'color == \"warn\"',\n                    '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                    '[class.ng-touched]': '_shouldForward(\"touched\")',\n                    '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                    '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                    '[class.ng-valid]': '_shouldForward(\"valid\")',\n                    '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                    '[class.ng-pending]': '_shouldForward(\"pending\")',\n                    '[class._mat-animation-noopable]': '!_animationsEnabled'\n                },\n                inputs: ['color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [\n                    { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n                ],\n                styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_LABEL_GLOBAL_OPTIONS]\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]\n            }] }, { type: ɵngcc2.Platform }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { floatLabel: [{\n            type: Input\n        }], appearance: [{\n            type: Input\n        }], hideRequiredMarker: [{\n            type: Input\n        }], hintLabel: [{\n            type: Input\n        }], underlineRef: [{\n            type: ViewChild,\n            args: ['underline']\n        }], _connectionContainerRef: [{\n            type: ViewChild,\n            args: ['connectionContainer', { static: true }]\n        }], _inputContainerRef: [{\n            type: ViewChild,\n            args: ['inputContainer']\n        }], _label: [{\n            type: ViewChild,\n            args: ['label']\n        }], _controlNonStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl]\n        }], _controlStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl, { static: true }]\n        }], _labelChildNonStatic: [{\n            type: ContentChild,\n            args: [MatLabel]\n        }], _labelChildStatic: [{\n            type: ContentChild,\n            args: [MatLabel, { static: true }]\n        }], _placeholderChild: [{\n            type: ContentChild,\n            args: [MatPlaceholder]\n        }], _errorChildren: [{\n            type: ContentChildren,\n            args: [MatError, { descendants: true }]\n        }], _hintChildren: [{\n            type: ContentChildren,\n            args: [MatHint, { descendants: true }]\n        }], _prefixChildren: [{\n            type: ContentChildren,\n            args: [MatPrefix, { descendants: true }]\n        }], _suffixChildren: [{\n            type: ContentChildren,\n            args: [MatSuffix, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatFormField.ngAcceptInputType_hideRequiredMarker;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._labelOptions;\n    /**\n     * Whether the outline gap needs to be calculated\n     * immediately on the next change detection run.\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._outlineGapCalculationNeededImmediately;\n    /**\n     * Whether the outline gap needs to be calculated next time the zone has stabilized.\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._outlineGapCalculationNeededOnStable;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._destroyed;\n    /** @type {?} */\n    MatFormField.prototype._appearance;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._hideRequiredMarker;\n    /**\n     * Override for the logic that disables the label animation in certain cases.\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._showAlwaysAnimate;\n    /**\n     * State of the mat-hint and mat-error animations.\n     * @type {?}\n     */\n    MatFormField.prototype._subscriptAnimationState;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._hintLabel;\n    /** @type {?} */\n    MatFormField.prototype._hintLabelId;\n    /** @type {?} */\n    MatFormField.prototype._labelId;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._floatLabel;\n    /**\n     * Whether the Angular animations are enabled.\n     * @type {?}\n     */\n    MatFormField.prototype._animationsEnabled;\n    /**\n     * @deprecated\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     */\n    MatFormField.prototype.underlineRef;\n    /** @type {?} */\n    MatFormField.prototype._connectionContainerRef;\n    /** @type {?} */\n    MatFormField.prototype._inputContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._label;\n    /** @type {?} */\n    MatFormField.prototype._controlNonStatic;\n    /** @type {?} */\n    MatFormField.prototype._controlStatic;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._explicitFormFieldControl;\n    /** @type {?} */\n    MatFormField.prototype._labelChildNonStatic;\n    /** @type {?} */\n    MatFormField.prototype._labelChildStatic;\n    /** @type {?} */\n    MatFormField.prototype._placeholderChild;\n    /** @type {?} */\n    MatFormField.prototype._errorChildren;\n    /** @type {?} */\n    MatFormField.prototype._hintChildren;\n    /** @type {?} */\n    MatFormField.prototype._prefixChildren;\n    /** @type {?} */\n    MatFormField.prototype._suffixChildren;\n    /** @type {?} */\n    MatFormField.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._defaults;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatFormFieldModule {\n}\nMatFormFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatFormFieldModule });\nMatFormFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatFormFieldModule_Factory(t) { return new (t || MatFormFieldModule)(); }, imports: [[\n            CommonModule,\n            MatCommonModule,\n            ObserversModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatFormFieldModule, { declarations: function () { return [MatError,\n        MatFormField,\n        MatHint,\n        MatLabel,\n        MatPlaceholder,\n        MatPrefix,\n        MatSuffix]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        ObserversModule]; }, exports: function () { return [MatCommonModule,\n        MatError,\n        MatFormField,\n        MatHint,\n        MatLabel,\n        MatPlaceholder,\n        MatPrefix,\n        MatSuffix]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ],\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    MatCommonModule,\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_FORM_FIELD, MAT_FORM_FIELD_DEFAULT_OPTIONS, MatError, MatFormField, MatFormFieldControl, MatFormFieldModule, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError, matFormFieldAnimations };\n\n//# sourceMappingURL=form-field.js.map","import { InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Optional, Inject, Input, ContentChildren, Directive, NgModule } from '@angular/core';\nimport { setLines, MatLine, MatLineModule, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Directionality } from '@angular/cdk/bidi';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/grid-list/grid-list-base.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token used to provide a grid list to a tile and to avoid circular imports.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\n\nconst _c0 = [\"*\"];\nconst _c1 = [[[\"\", \"mat-grid-avatar\", \"\"], [\"\", \"matGridAvatar\", \"\"]], [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], \"*\"];\nconst _c2 = [\"[mat-grid-avatar], [matGridAvatar]\", \"[mat-line], [matLine]\", \"*\"];\nconst MAT_GRID_LIST = new InjectionToken('MAT_GRID_LIST');\n/**\n * Base interface for a `MatGridList`.\n * \\@docs-private\n * @record\n */\nfunction MatGridListBase() { }\nif (false) {\n    /** @type {?} */\n    MatGridListBase.prototype.cols;\n    /** @type {?} */\n    MatGridListBase.prototype.gutterSize;\n    /** @type {?} */\n    MatGridListBase.prototype.rowHeight;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/grid-list/grid-tile.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatGridTile {\n    /**\n     * @param {?} _element\n     * @param {?=} _gridList\n     */\n    constructor(_element, _gridList) {\n        this._element = _element;\n        this._gridList = _gridList;\n        this._rowspan = 1;\n        this._colspan = 1;\n    }\n    /**\n     * Amount of rows that the grid tile takes up.\n     * @return {?}\n     */\n    get rowspan() { return this._rowspan; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set rowspan(value) { this._rowspan = Math.round(coerceNumberProperty(value)); }\n    /**\n     * Amount of columns that the grid tile takes up.\n     * @return {?}\n     */\n    get colspan() { return this._colspan; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set colspan(value) { this._colspan = Math.round(coerceNumberProperty(value)); }\n    /**\n     * Sets the style of the grid-tile element.  Needs to be set manually to avoid\n     * \"Changed after checked\" errors that would occur with HostBinding.\n     * @param {?} property\n     * @param {?} value\n     * @return {?}\n     */\n    _setStyle(property, value) {\n        ((/** @type {?} */ (this._element.nativeElement.style)))[property] = value;\n    }\n}\nMatGridTile.ɵfac = function MatGridTile_Factory(t) { return new (t || MatGridTile)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_GRID_LIST, 8)); };\nMatGridTile.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatGridTile, selectors: [[\"mat-grid-tile\"]], hostAttrs: [1, \"mat-grid-tile\"], hostVars: 2, hostBindings: function MatGridTile_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"rowspan\", ctx.rowspan)(\"colspan\", ctx.colspan);\n    } }, inputs: { rowspan: \"rowspan\", colspan: \"colspan\" }, exportAs: [\"matGridTile\"], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-figure\"]], template: function MatGridTile_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"figure\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatGridTile.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_GRID_LIST,] }] }\n];\nMatGridTile.propDecorators = {\n    rowspan: [{ type: Input }],\n    colspan: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridTile, [{\n        type: Component,\n        args: [{\n                selector: 'mat-grid-tile',\n                exportAs: 'matGridTile',\n                host: {\n                    'class': 'mat-grid-tile',\n                    // Ensures that the \"rowspan\" and \"colspan\" input value is reflected in\n                    // the DOM. This is needed for the grid-tile harness.\n                    '[attr.rowspan]': 'rowspan',\n                    '[attr.colspan]': 'colspan'\n                },\n                template: \"<!-- TODO(kara): Revisit why this is a figure.-->\\n<figure class=\\\"mat-figure\\\">\\n  <ng-content></ng-content>\\n</figure>\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_GRID_LIST]\n            }] }]; }, { rowspan: [{\n            type: Input\n        }], colspan: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatGridTile.ngAcceptInputType_rowspan;\n    /** @type {?} */\n    MatGridTile.ngAcceptInputType_colspan;\n    /** @type {?} */\n    MatGridTile.prototype._rowspan;\n    /** @type {?} */\n    MatGridTile.prototype._colspan;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatGridTile.prototype._element;\n    /** @type {?} */\n    MatGridTile.prototype._gridList;\n}\nclass MatGridTileText {\n    /**\n     * @param {?} _element\n     */\n    constructor(_element) {\n        this._element = _element;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n}\nMatGridTileText.ɵfac = function MatGridTileText_Factory(t) { return new (t || MatGridTileText)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatGridTileText.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatGridTileText, selectors: [[\"mat-grid-tile-header\"], [\"mat-grid-tile-footer\"]], contentQueries: function MatGridTileText_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    } }, ngContentSelectors: _c2, decls: 4, vars: 0, consts: [[1, \"mat-grid-list-text\"]], template: function MatGridTileText_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatGridTileText.ctorParameters = () => [\n    { type: ElementRef }\n];\nMatGridTileText.propDecorators = {\n    _lines: [{ type: ContentChildren, args: [MatLine, { descendants: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridTileText, [{\n        type: Component,\n        args: [{\n                selector: 'mat-grid-tile-header, mat-grid-tile-footer',\n                template: \"<ng-content select=\\\"[mat-grid-avatar], [matGridAvatar]\\\"></ng-content>\\n<div class=\\\"mat-grid-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n<ng-content></ng-content>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { _lines: [{\n            type: ContentChildren,\n            args: [MatLine, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatGridTileText.prototype._lines;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatGridTileText.prototype._element;\n}\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatGridAvatarCssMatStyler {\n}\nMatGridAvatarCssMatStyler.ɵfac = function MatGridAvatarCssMatStyler_Factory(t) { return new (t || MatGridAvatarCssMatStyler)(); };\nMatGridAvatarCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatGridAvatarCssMatStyler, selectors: [[\"\", \"mat-grid-avatar\", \"\"], [\"\", \"matGridAvatar\", \"\"]], hostAttrs: [1, \"mat-grid-avatar\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridAvatarCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-grid-avatar], [matGridAvatar]',\n                host: { 'class': 'mat-grid-avatar' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatGridTileHeaderCssMatStyler {\n}\nMatGridTileHeaderCssMatStyler.ɵfac = function MatGridTileHeaderCssMatStyler_Factory(t) { return new (t || MatGridTileHeaderCssMatStyler)(); };\nMatGridTileHeaderCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatGridTileHeaderCssMatStyler, selectors: [[\"mat-grid-tile-header\"]], hostAttrs: [1, \"mat-grid-tile-header\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridTileHeaderCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-grid-tile-header',\n                host: { 'class': 'mat-grid-tile-header' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatGridTileFooterCssMatStyler {\n}\nMatGridTileFooterCssMatStyler.ɵfac = function MatGridTileFooterCssMatStyler_Factory(t) { return new (t || MatGridTileFooterCssMatStyler)(); };\nMatGridTileFooterCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatGridTileFooterCssMatStyler, selectors: [[\"mat-grid-tile-footer\"]], hostAttrs: [1, \"mat-grid-tile-footer\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridTileFooterCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-grid-tile-footer',\n                host: { 'class': 'mat-grid-tile-footer' }\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/grid-list/tile-coordinator.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Interface describing a tile.\n * \\@docs-private\n * @record\n */\nfunction Tile() { }\nif (false) {\n    /**\n     * Amount of rows that the tile takes up.\n     * @type {?}\n     */\n    Tile.prototype.rowspan;\n    /**\n     * Amount of columns that the tile takes up.\n     * @type {?}\n     */\n    Tile.prototype.colspan;\n}\n/**\n * Class for determining, from a list of tiles, the (row, col) position of each of those tiles\n * in the grid. This is necessary (rather than just rendering the tiles in normal document flow)\n * because the tiles can have a rowspan.\n *\n * The positioning algorithm greedily places each tile as soon as it encounters a gap in the grid\n * large enough to accommodate it so that the tiles still render in the same order in which they\n * are given.\n *\n * The basis of the algorithm is the use of an array to track the already placed tiles. Each\n * element of the array corresponds to a column, and the value indicates how many cells in that\n * column are already occupied; zero indicates an empty cell. Moving \"down\" to the next row\n * decrements each value in the tracking array (indicating that the column is one cell closer to\n * being free).\n *\n * \\@docs-private\n */\nclass TileCoordinator {\n    constructor() {\n        /**\n         * Index at which the search for the next gap will start.\n         */\n        this.columnIndex = 0;\n        /**\n         * The current row index.\n         */\n        this.rowIndex = 0;\n    }\n    /**\n     * Gets the total number of rows occupied by tiles\n     * @return {?}\n     */\n    get rowCount() { return this.rowIndex + 1; }\n    /**\n     * Gets the total span of rows occupied by tiles.\n     * Ex: A list with 1 row that contains a tile with rowspan 2 will have a total rowspan of 2.\n     * @return {?}\n     */\n    get rowspan() {\n        /** @type {?} */\n        const lastRowMax = Math.max(...this.tracker);\n        // if any of the tiles has a rowspan that pushes it beyond the total row count,\n        // add the difference to the rowcount\n        return lastRowMax > 1 ? this.rowCount + lastRowMax - 1 : this.rowCount;\n    }\n    /**\n     * Updates the tile positions.\n     * @param {?} numColumns Amount of columns in the grid.\n     * @param {?} tiles Tiles to be positioned.\n     * @return {?}\n     */\n    update(numColumns, tiles) {\n        this.columnIndex = 0;\n        this.rowIndex = 0;\n        this.tracker = new Array(numColumns);\n        this.tracker.fill(0, 0, this.tracker.length);\n        this.positions = tiles.map((/**\n         * @param {?} tile\n         * @return {?}\n         */\n        tile => this._trackTile(tile)));\n    }\n    /**\n     * Calculates the row and col position of a tile.\n     * @private\n     * @param {?} tile\n     * @return {?}\n     */\n    _trackTile(tile) {\n        // Find a gap large enough for this tile.\n        /** @type {?} */\n        const gapStartIndex = this._findMatchingGap(tile.colspan);\n        // Place tile in the resulting gap.\n        this._markTilePosition(gapStartIndex, tile);\n        // The next time we look for a gap, the search will start at columnIndex, which should be\n        // immediately after the tile that has just been placed.\n        this.columnIndex = gapStartIndex + tile.colspan;\n        return new TilePosition(this.rowIndex, gapStartIndex);\n    }\n    /**\n     * Finds the next available space large enough to fit the tile.\n     * @private\n     * @param {?} tileCols\n     * @return {?}\n     */\n    _findMatchingGap(tileCols) {\n        if (tileCols > this.tracker.length) {\n            throw Error(`mat-grid-list: tile with colspan ${tileCols} is wider than ` +\n                `grid with cols=\"${this.tracker.length}\".`);\n        }\n        // Start index is inclusive, end index is exclusive.\n        /** @type {?} */\n        let gapStartIndex = -1;\n        /** @type {?} */\n        let gapEndIndex = -1;\n        // Look for a gap large enough to fit the given tile. Empty spaces are marked with a zero.\n        do {\n            // If we've reached the end of the row, go to the next row.\n            if (this.columnIndex + tileCols > this.tracker.length) {\n                this._nextRow();\n                gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n                gapEndIndex = this._findGapEndIndex(gapStartIndex);\n                continue;\n            }\n            gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n            // If there are no more empty spaces in this row at all, move on to the next row.\n            if (gapStartIndex == -1) {\n                this._nextRow();\n                gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n                gapEndIndex = this._findGapEndIndex(gapStartIndex);\n                continue;\n            }\n            gapEndIndex = this._findGapEndIndex(gapStartIndex);\n            // If a gap large enough isn't found, we want to start looking immediately after the current\n            // gap on the next iteration.\n            this.columnIndex = gapStartIndex + 1;\n            // Continue iterating until we find a gap wide enough for this tile. Since gapEndIndex is\n            // exclusive, gapEndIndex is 0 means we didn't find a gap and should continue.\n        } while ((gapEndIndex - gapStartIndex < tileCols) || (gapEndIndex == 0));\n        // If we still didn't manage to find a gap, ensure that the index is\n        // at least zero so the tile doesn't get pulled out of the grid.\n        return Math.max(gapStartIndex, 0);\n    }\n    /**\n     * Move \"down\" to the next row.\n     * @private\n     * @return {?}\n     */\n    _nextRow() {\n        this.columnIndex = 0;\n        this.rowIndex++;\n        // Decrement all spaces by one to reflect moving down one row.\n        for (let i = 0; i < this.tracker.length; i++) {\n            this.tracker[i] = Math.max(0, this.tracker[i] - 1);\n        }\n    }\n    /**\n     * Finds the end index (exclusive) of a gap given the index from which to start looking.\n     * The gap ends when a non-zero value is found.\n     * @private\n     * @param {?} gapStartIndex\n     * @return {?}\n     */\n    _findGapEndIndex(gapStartIndex) {\n        for (let i = gapStartIndex + 1; i < this.tracker.length; i++) {\n            if (this.tracker[i] != 0) {\n                return i;\n            }\n        }\n        // The gap ends with the end of the row.\n        return this.tracker.length;\n    }\n    /**\n     * Update the tile tracker to account for the given tile in the given space.\n     * @private\n     * @param {?} start\n     * @param {?} tile\n     * @return {?}\n     */\n    _markTilePosition(start, tile) {\n        for (let i = 0; i < tile.colspan; i++) {\n            this.tracker[start + i] = tile.rowspan;\n        }\n    }\n}\nif (false) {\n    /**\n     * Tracking array (see class description).\n     * @type {?}\n     */\n    TileCoordinator.prototype.tracker;\n    /**\n     * Index at which the search for the next gap will start.\n     * @type {?}\n     */\n    TileCoordinator.prototype.columnIndex;\n    /**\n     * The current row index.\n     * @type {?}\n     */\n    TileCoordinator.prototype.rowIndex;\n    /**\n     * The computed (row, col) position of each tile (the output).\n     * @type {?}\n     */\n    TileCoordinator.prototype.positions;\n}\n/**\n * Simple data structure for tile position (row, col).\n * \\@docs-private\n */\nclass TilePosition {\n    /**\n     * @param {?} row\n     * @param {?} col\n     */\n    constructor(row, col) {\n        this.row = row;\n        this.col = col;\n    }\n}\nif (false) {\n    /** @type {?} */\n    TilePosition.prototype.row;\n    /** @type {?} */\n    TilePosition.prototype.col;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/grid-list/tile-styler.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * RegExp that can be used to check whether a value will\n * be allowed inside a CSS `calc()` expression.\n * @type {?}\n */\nconst cssCalcAllowedValue = /^-?\\d+((\\.\\d+)?[A-Za-z%$]?)+$/;\n/**\n * Sets the style properties for an individual tile, given the position calculated by the\n * Tile Coordinator.\n * \\@docs-private\n * @abstract\n */\nclass TileStyler {\n    constructor() {\n        this._rows = 0;\n        this._rowspan = 0;\n    }\n    /**\n     * Adds grid-list layout info once it is available. Cannot be processed in the constructor\n     * because these properties haven't been calculated by that point.\n     *\n     * @param {?} gutterSize Size of the grid's gutter.\n     * @param {?} tracker Instance of the TileCoordinator.\n     * @param {?} cols Amount of columns in the grid.\n     * @param {?} direction Layout direction of the grid.\n     * @return {?}\n     */\n    init(gutterSize, tracker, cols, direction) {\n        this._gutterSize = normalizeUnits(gutterSize);\n        this._rows = tracker.rowCount;\n        this._rowspan = tracker.rowspan;\n        this._cols = cols;\n        this._direction = direction;\n    }\n    /**\n     * Computes the amount of space a single 1x1 tile would take up (width or height).\n     * Used as a basis for other calculations.\n     * @param {?} sizePercent Percent of the total grid-list space that one 1x1 tile would take up.\n     * @param {?} gutterFraction Fraction of the gutter size taken up by one 1x1 tile.\n     * @return {?} The size of a 1x1 tile as an expression that can be evaluated via CSS calc().\n     */\n    getBaseTileSize(sizePercent, gutterFraction) {\n        // Take the base size percent (as would be if evenly dividing the size between cells),\n        // and then subtracting the size of one gutter. However, since there are no gutters on the\n        // edges, each tile only uses a fraction (gutterShare = numGutters / numCells) of the gutter\n        // size. (Imagine having one gutter per tile, and then breaking up the extra gutter on the\n        // edge evenly among the cells).\n        return `(${sizePercent}% - (${this._gutterSize} * ${gutterFraction}))`;\n    }\n    /**\n     * Gets The horizontal or vertical position of a tile, e.g., the 'top' or 'left' property value.\n     * @param {?} baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @param {?} offset Number of tiles that have already been rendered in the row/column.\n     * @return {?} Position of the tile as a CSS calc() expression.\n     */\n    getTilePosition(baseSize, offset) {\n        // The position comes the size of a 1x1 tile plus gutter for each previous tile in the\n        // row/column (offset).\n        return offset === 0 ? '0' : calc(`(${baseSize} + ${this._gutterSize}) * ${offset}`);\n    }\n    /**\n     * Gets the actual size of a tile, e.g., width or height, taking rowspan or colspan into account.\n     * @param {?} baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @param {?} span The tile's rowspan or colspan.\n     * @return {?} Size of the tile as a CSS calc() expression.\n     */\n    getTileSize(baseSize, span) {\n        return `(${baseSize} * ${span}) + (${span - 1} * ${this._gutterSize})`;\n    }\n    /**\n     * Sets the style properties to be applied to a tile for the given row and column index.\n     * @param {?} tile Tile to which to apply the styling.\n     * @param {?} rowIndex Index of the tile's row.\n     * @param {?} colIndex Index of the tile's column.\n     * @return {?}\n     */\n    setStyle(tile, rowIndex, colIndex) {\n        // Percent of the available horizontal space that one column takes up.\n        /** @type {?} */\n        let percentWidthPerTile = 100 / this._cols;\n        // Fraction of the vertical gutter size that each column takes up.\n        // For example, if there are 5 columns, each column uses 4/5 = 0.8 times the gutter width.\n        /** @type {?} */\n        let gutterWidthFractionPerTile = (this._cols - 1) / this._cols;\n        this.setColStyles(tile, colIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n        this.setRowStyles(tile, rowIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n    }\n    /**\n     * Sets the horizontal placement of the tile in the list.\n     * @param {?} tile\n     * @param {?} colIndex\n     * @param {?} percentWidth\n     * @param {?} gutterWidth\n     * @return {?}\n     */\n    setColStyles(tile, colIndex, percentWidth, gutterWidth) {\n        // Base horizontal size of a column.\n        /** @type {?} */\n        let baseTileWidth = this.getBaseTileSize(percentWidth, gutterWidth);\n        // The width and horizontal position of each tile is always calculated the same way, but the\n        // height and vertical position depends on the rowMode.\n        /** @type {?} */\n        let side = this._direction === 'rtl' ? 'right' : 'left';\n        tile._setStyle(side, this.getTilePosition(baseTileWidth, colIndex));\n        tile._setStyle('width', calc(this.getTileSize(baseTileWidth, tile.colspan)));\n    }\n    /**\n     * Calculates the total size taken up by gutters across one axis of a list.\n     * @return {?}\n     */\n    getGutterSpan() {\n        return `${this._gutterSize} * (${this._rowspan} - 1)`;\n    }\n    /**\n     * Calculates the total size taken up by tiles across one axis of a list.\n     * @param {?} tileHeight Height of the tile.\n     * @return {?}\n     */\n    getTileSpan(tileHeight) {\n        return `${this._rowspan} * ${this.getTileSize(tileHeight, 1)}`;\n    }\n    /**\n     * Calculates the computed height and returns the correct style property to set.\n     * This method can be implemented by each type of TileStyler.\n     * \\@docs-private\n     * @return {?}\n     */\n    getComputedHeight() { return null; }\n}\nif (false) {\n    /** @type {?} */\n    TileStyler.prototype._gutterSize;\n    /** @type {?} */\n    TileStyler.prototype._rows;\n    /** @type {?} */\n    TileStyler.prototype._rowspan;\n    /** @type {?} */\n    TileStyler.prototype._cols;\n    /** @type {?} */\n    TileStyler.prototype._direction;\n    /**\n     * Sets the vertical placement of the tile in the list.\n     * This method will be implemented by each type of TileStyler.\n     * \\@docs-private\n     * @abstract\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @param {?} percentWidth\n     * @param {?} gutterWidth\n     * @return {?}\n     */\n    TileStyler.prototype.setRowStyles = function (tile, rowIndex, percentWidth, gutterWidth) { };\n    /**\n     * Called when the tile styler is swapped out with a different one. To be used for cleanup.\n     * \\@docs-private\n     * @abstract\n     * @param {?} list Grid list that the styler was attached to.\n     * @return {?}\n     */\n    TileStyler.prototype.reset = function (list) { };\n}\n/**\n * This type of styler is instantiated when the user passes in a fixed row height.\n * Example `<mat-grid-list cols=\"3\" rowHeight=\"100px\">`\n * \\@docs-private\n */\nclass FixedTileStyler extends TileStyler {\n    /**\n     * @param {?} fixedRowHeight\n     */\n    constructor(fixedRowHeight) {\n        super();\n        this.fixedRowHeight = fixedRowHeight;\n    }\n    /**\n     * @param {?} gutterSize\n     * @param {?} tracker\n     * @param {?} cols\n     * @param {?} direction\n     * @return {?}\n     */\n    init(gutterSize, tracker, cols, direction) {\n        super.init(gutterSize, tracker, cols, direction);\n        this.fixedRowHeight = normalizeUnits(this.fixedRowHeight);\n        if (!cssCalcAllowedValue.test(this.fixedRowHeight)) {\n            throw Error(`Invalid value \"${this.fixedRowHeight}\" set as rowHeight.`);\n        }\n    }\n    /**\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @return {?}\n     */\n    setRowStyles(tile, rowIndex) {\n        tile._setStyle('top', this.getTilePosition(this.fixedRowHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(this.fixedRowHeight, tile.rowspan)));\n    }\n    /**\n     * @return {?}\n     */\n    getComputedHeight() {\n        return [\n            'height', calc(`${this.getTileSpan(this.fixedRowHeight)} + ${this.getGutterSpan()}`)\n        ];\n    }\n    /**\n     * @param {?} list\n     * @return {?}\n     */\n    reset(list) {\n        list._setListStyle(['height', null]);\n        if (list._tiles) {\n            list._tiles.forEach((/**\n             * @param {?} tile\n             * @return {?}\n             */\n            tile => {\n                tile._setStyle('top', null);\n                tile._setStyle('height', null);\n            }));\n        }\n    }\n}\nif (false) {\n    /** @type {?} */\n    FixedTileStyler.prototype.fixedRowHeight;\n}\n/**\n * This type of styler is instantiated when the user passes in a width:height ratio\n * for the row height.  Example `<mat-grid-list cols=\"3\" rowHeight=\"3:1\">`\n * \\@docs-private\n */\nclass RatioTileStyler extends TileStyler {\n    /**\n     * @param {?} value\n     */\n    constructor(value) {\n        super();\n        this._parseRatio(value);\n    }\n    /**\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @param {?} percentWidth\n     * @param {?} gutterWidth\n     * @return {?}\n     */\n    setRowStyles(tile, rowIndex, percentWidth, gutterWidth) {\n        /** @type {?} */\n        let percentHeightPerTile = percentWidth / this.rowHeightRatio;\n        this.baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterWidth);\n        // Use padding-top and margin-top to maintain the given aspect ratio, as\n        // a percentage-based value for these properties is applied versus the *width* of the\n        // containing block. See http://www.w3.org/TR/CSS2/box.html#margin-properties\n        tile._setStyle('marginTop', this.getTilePosition(this.baseTileHeight, rowIndex));\n        tile._setStyle('paddingTop', calc(this.getTileSize(this.baseTileHeight, tile.rowspan)));\n    }\n    /**\n     * @return {?}\n     */\n    getComputedHeight() {\n        return [\n            'paddingBottom', calc(`${this.getTileSpan(this.baseTileHeight)} + ${this.getGutterSpan()}`)\n        ];\n    }\n    /**\n     * @param {?} list\n     * @return {?}\n     */\n    reset(list) {\n        list._setListStyle(['paddingBottom', null]);\n        list._tiles.forEach((/**\n         * @param {?} tile\n         * @return {?}\n         */\n        tile => {\n            tile._setStyle('marginTop', null);\n            tile._setStyle('paddingTop', null);\n        }));\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _parseRatio(value) {\n        /** @type {?} */\n        const ratioParts = value.split(':');\n        if (ratioParts.length !== 2) {\n            throw Error(`mat-grid-list: invalid ratio given for row-height: \"${value}\"`);\n        }\n        this.rowHeightRatio = parseFloat(ratioParts[0]) / parseFloat(ratioParts[1]);\n    }\n}\nif (false) {\n    /**\n     * Ratio width:height given by user to determine row height.\n     * @type {?}\n     */\n    RatioTileStyler.prototype.rowHeightRatio;\n    /** @type {?} */\n    RatioTileStyler.prototype.baseTileHeight;\n}\n/**\n * This type of styler is instantiated when the user selects a \"fit\" row height mode.\n * In other words, the row height will reflect the total height of the container divided\n * by the number of rows.  Example `<mat-grid-list cols=\"3\" rowHeight=\"fit\">`\n *\n * \\@docs-private\n */\nclass FitTileStyler extends TileStyler {\n    /**\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @return {?}\n     */\n    setRowStyles(tile, rowIndex) {\n        // Percent of the available vertical space that one row takes up.\n        /** @type {?} */\n        let percentHeightPerTile = 100 / this._rowspan;\n        // Fraction of the horizontal gutter size that each column takes up.\n        /** @type {?} */\n        let gutterHeightPerTile = (this._rows - 1) / this._rows;\n        // Base vertical size of a column.\n        /** @type {?} */\n        let baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterHeightPerTile);\n        tile._setStyle('top', this.getTilePosition(baseTileHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(baseTileHeight, tile.rowspan)));\n    }\n    /**\n     * @param {?} list\n     * @return {?}\n     */\n    reset(list) {\n        if (list._tiles) {\n            list._tiles.forEach((/**\n             * @param {?} tile\n             * @return {?}\n             */\n            tile => {\n                tile._setStyle('top', null);\n                tile._setStyle('height', null);\n            }));\n        }\n    }\n}\n/**\n * Wraps a CSS string in a calc function\n * @param {?} exp\n * @return {?}\n */\nfunction calc(exp) {\n    return `calc(${exp})`;\n}\n/**\n * Appends pixels to a CSS string if no units are given.\n * @param {?} value\n * @return {?}\n */\nfunction normalizeUnits(value) {\n    return value.match(/([A-Za-z%]+)$/) ? value : `${value}px`;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/grid-list/grid-list.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO(kara): Conditional (responsive) column count / row size.\n// TODO(kara): Re-layout on window resize / media change (debounced).\n// TODO(kara): gridTileHeader and gridTileFooter.\n/** @type {?} */\nconst MAT_FIT_MODE = 'fit';\nclass MatGridList {\n    /**\n     * @param {?} _element\n     * @param {?} _dir\n     */\n    constructor(_element, _dir) {\n        this._element = _element;\n        this._dir = _dir;\n        /**\n         * The amount of space between tiles. This will be something like '5px' or '2em'.\n         */\n        this._gutter = '1px';\n    }\n    /**\n     * Amount of columns in the grid list.\n     * @return {?}\n     */\n    get cols() { return this._cols; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set cols(value) {\n        this._cols = Math.max(1, Math.round(coerceNumberProperty(value)));\n    }\n    /**\n     * Size of the grid list's gutter in pixels.\n     * @return {?}\n     */\n    get gutterSize() { return this._gutter; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set gutterSize(value) { this._gutter = `${value == null ? '' : value}`; }\n    /**\n     * Set internal representation of row height from the user-provided value.\n     * @return {?}\n     */\n    get rowHeight() { return this._rowHeight; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set rowHeight(value) {\n        /** @type {?} */\n        const newValue = `${value == null ? '' : value}`;\n        if (newValue !== this._rowHeight) {\n            this._rowHeight = newValue;\n            this._setTileStyler(this._rowHeight);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._checkCols();\n        this._checkRowHeight();\n    }\n    /**\n     * The layout calculation is fairly cheap if nothing changes, so there's little cost\n     * to run it frequently.\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        this._layoutTiles();\n    }\n    /**\n     * Throw a friendly error if cols property is missing\n     * @private\n     * @return {?}\n     */\n    _checkCols() {\n        if (!this.cols) {\n            throw Error(`mat-grid-list: must pass in number of columns. ` +\n                `Example: <mat-grid-list cols=\"3\">`);\n        }\n    }\n    /**\n     * Default to equal width:height if rowHeight property is missing\n     * @private\n     * @return {?}\n     */\n    _checkRowHeight() {\n        if (!this._rowHeight) {\n            this._setTileStyler('1:1');\n        }\n    }\n    /**\n     * Creates correct Tile Styler subtype based on rowHeight passed in by user\n     * @private\n     * @param {?} rowHeight\n     * @return {?}\n     */\n    _setTileStyler(rowHeight) {\n        if (this._tileStyler) {\n            this._tileStyler.reset(this);\n        }\n        if (rowHeight === MAT_FIT_MODE) {\n            this._tileStyler = new FitTileStyler();\n        }\n        else if (rowHeight && rowHeight.indexOf(':') > -1) {\n            this._tileStyler = new RatioTileStyler(rowHeight);\n        }\n        else {\n            this._tileStyler = new FixedTileStyler(rowHeight);\n        }\n    }\n    /**\n     * Computes and applies the size and position for all children grid tiles.\n     * @private\n     * @return {?}\n     */\n    _layoutTiles() {\n        if (!this._tileCoordinator) {\n            this._tileCoordinator = new TileCoordinator();\n        }\n        /** @type {?} */\n        const tracker = this._tileCoordinator;\n        /** @type {?} */\n        const tiles = this._tiles.filter((/**\n         * @param {?} tile\n         * @return {?}\n         */\n        tile => !tile._gridList || tile._gridList === this));\n        /** @type {?} */\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._tileCoordinator.update(this.cols, tiles);\n        this._tileStyler.init(this.gutterSize, tracker, this.cols, direction);\n        tiles.forEach((/**\n         * @param {?} tile\n         * @param {?} index\n         * @return {?}\n         */\n        (tile, index) => {\n            /** @type {?} */\n            const pos = tracker.positions[index];\n            this._tileStyler.setStyle(tile, pos.row, pos.col);\n        }));\n        this._setListStyle(this._tileStyler.getComputedHeight());\n    }\n    /**\n     * Sets style on the main grid-list element, given the style name and value.\n     * @param {?} style\n     * @return {?}\n     */\n    _setListStyle(style) {\n        if (style) {\n            ((/** @type {?} */ (this._element.nativeElement.style)))[style[0]] = style[1];\n        }\n    }\n}\nMatGridList.ɵfac = function MatGridList_Factory(t) { return new (t || MatGridList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8)); };\nMatGridList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatGridList, selectors: [[\"mat-grid-list\"]], contentQueries: function MatGridList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatGridTile, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tiles = _t);\n    } }, hostAttrs: [1, \"mat-grid-list\"], hostVars: 1, hostBindings: function MatGridList_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"cols\", ctx.cols);\n    } }, inputs: { cols: \"cols\", gutterSize: \"gutterSize\", rowHeight: \"rowHeight\" }, exportAs: [\"matGridList\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_GRID_LIST,\n                useExisting: MatGridList\n            }])], ngContentSelectors: _c0, decls: 2, vars: 0, template: function MatGridList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatGridList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatGridList.propDecorators = {\n    _tiles: [{ type: ContentChildren, args: [MatGridTile, { descendants: true },] }],\n    cols: [{ type: Input }],\n    gutterSize: [{ type: Input }],\n    rowHeight: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-grid-list',\n                exportAs: 'matGridList',\n                template: \"<div>\\n  <ng-content></ng-content>\\n</div>\",\n                host: {\n                    'class': 'mat-grid-list',\n                    // Ensures that the \"cols\" input value is reflected in the DOM. This is\n                    // needed for the grid-list harness.\n                    '[attr.cols]': 'cols'\n                },\n                providers: [{\n                        provide: MAT_GRID_LIST,\n                        useExisting: MatGridList\n                    }],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { cols: [{\n            type: Input\n        }], gutterSize: [{\n            type: Input\n        }], rowHeight: [{\n            type: Input\n        }], _tiles: [{\n            type: ContentChildren,\n            args: [MatGridTile, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatGridList.ngAcceptInputType_cols;\n    /**\n     * Number of columns being rendered.\n     * @type {?}\n     * @private\n     */\n    MatGridList.prototype._cols;\n    /**\n     * Used for determiningthe position of each tile in the grid.\n     * @type {?}\n     * @private\n     */\n    MatGridList.prototype._tileCoordinator;\n    /**\n     * Row height value passed in by user. This can be one of three types:\n     * - Number value (ex: \"100px\"):  sets a fixed row height to that value\n     * - Ratio value (ex: \"4:3\"): sets the row height based on width:height ratio\n     * - \"Fit\" mode (ex: \"fit\"): sets the row height to total height divided by number of rows\n     * @type {?}\n     * @private\n     */\n    MatGridList.prototype._rowHeight;\n    /**\n     * The amount of space between tiles. This will be something like '5px' or '2em'.\n     * @type {?}\n     * @private\n     */\n    MatGridList.prototype._gutter;\n    /**\n     * Sets position and size styles for a tile\n     * @type {?}\n     * @private\n     */\n    MatGridList.prototype._tileStyler;\n    /**\n     * Query list of tiles that are being rendered.\n     * @type {?}\n     */\n    MatGridList.prototype._tiles;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatGridList.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatGridList.prototype._dir;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/grid-list/grid-list-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatGridListModule {\n}\nMatGridListModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatGridListModule });\nMatGridListModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatGridListModule_Factory(t) { return new (t || MatGridListModule)(); }, imports: [[MatLineModule, MatCommonModule],\n        MatLineModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatGridListModule, { declarations: function () { return [MatGridList,\n        MatGridTile,\n        MatGridTileText,\n        MatGridTileHeaderCssMatStyler,\n        MatGridTileFooterCssMatStyler,\n        MatGridAvatarCssMatStyler]; }, imports: function () { return [MatLineModule, MatCommonModule]; }, exports: function () { return [MatGridList,\n        MatGridTile,\n        MatGridTileText,\n        MatLineModule,\n        MatCommonModule,\n        MatGridTileHeaderCssMatStyler,\n        MatGridTileFooterCssMatStyler,\n        MatGridAvatarCssMatStyler]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridListModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatLineModule, MatCommonModule],\n                exports: [\n                    MatGridList,\n                    MatGridTile,\n                    MatGridTileText,\n                    MatLineModule,\n                    MatCommonModule,\n                    MatGridTileHeaderCssMatStyler,\n                    MatGridTileFooterCssMatStyler,\n                    MatGridAvatarCssMatStyler\n                ],\n                declarations: [\n                    MatGridList,\n                    MatGridTile,\n                    MatGridTileText,\n                    MatGridTileHeaderCssMatStyler,\n                    MatGridTileFooterCssMatStyler,\n                    MatGridAvatarCssMatStyler\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/grid-list/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatGridAvatarCssMatStyler, MatGridList, MatGridListModule, MatGridTile, MatGridTileFooterCssMatStyler, MatGridTileHeaderCssMatStyler, MatGridTileText, TileCoordinator as ɵTileCoordinator, MAT_GRID_LIST as ɵangular_material_src_material_grid_list_grid_list_a };\n\n//# sourceMappingURL=grid-list.js.map","import { SecurityContext, Injectable, Optional, Inject, ErrorHandler, ɵɵdefineInjectable, ɵɵinject, SkipSelf, InjectionToken, inject, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Attribute, Input, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { DOCUMENT } from '@angular/common';\nimport { of, throwError, forkJoin, Subscription } from 'rxjs';\nimport { tap, map, catchError, finalize, share, take } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/icon/icon-registry.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Returns an exception to be thrown in the case when attempting to\n * load an icon with a name that cannot be found.\n * \\@docs-private\n * @param {?} iconName\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common/http';\nimport * as ɵngcc2 from '@angular/platform-browser';\n\nconst _c0 = [\"*\"];\nfunction getMatIconNameNotFoundError(iconName) {\n    return Error(`Unable to find icon with the name \"${iconName}\"`);\n}\n/**\n * Returns an exception to be thrown when the consumer attempts to use\n * `<mat-icon>` without including \\@angular/common/http.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatIconNoHttpProviderError() {\n    return Error('Could not find HttpClient provider for use with Angular Material icons. ' +\n        'Please include the HttpClientModule from @angular/common/http in your ' +\n        'app imports.');\n}\n/**\n * Returns an exception to be thrown when a URL couldn't be sanitized.\n * \\@docs-private\n * @param {?} url URL that was attempted to be sanitized.\n * @return {?}\n */\nfunction getMatIconFailedToSanitizeUrlError(url) {\n    return Error(`The URL provided to MatIconRegistry was not trusted as a resource URL ` +\n        `via Angular's DomSanitizer. Attempted URL was \"${url}\".`);\n}\n/**\n * Returns an exception to be thrown when a HTML string couldn't be sanitized.\n * \\@docs-private\n * @param {?} literal HTML that was attempted to be sanitized.\n * @return {?}\n */\nfunction getMatIconFailedToSanitizeLiteralError(literal) {\n    return Error(`The literal provided to MatIconRegistry was not trusted as safe HTML by ` +\n        `Angular's DomSanitizer. Attempted literal was \"${literal}\".`);\n}\n/**\n * Options that can be used to configure how an icon or the icons in an icon set are presented.\n * @record\n */\nfunction IconOptions() { }\nif (false) {\n    /**\n     * View box to set on the icon.\n     * @type {?|undefined}\n     */\n    IconOptions.prototype.viewBox;\n}\n/**\n * Configuration for an icon, including the URL and possibly the cached SVG element.\n * \\@docs-private\n */\nclass SvgIconConfig {\n    /**\n     * @param {?} data\n     * @param {?=} options\n     */\n    constructor(data, options) {\n        this.options = options;\n        // Note that we can't use `instanceof SVGElement` here,\n        // because it'll break during server-side rendering.\n        if (!!((/** @type {?} */ (data))).nodeName) {\n            this.svgElement = (/** @type {?} */ (data));\n        }\n        else {\n            this.url = (/** @type {?} */ (data));\n        }\n    }\n}\nif (false) {\n    /** @type {?} */\n    SvgIconConfig.prototype.url;\n    /** @type {?} */\n    SvgIconConfig.prototype.svgElement;\n    /** @type {?} */\n    SvgIconConfig.prototype.options;\n}\n/**\n * Service to register and display icons used by the `<mat-icon>` component.\n * - Registers icon URLs by namespace and name.\n * - Registers icon set URLs by namespace.\n * - Registers aliases for CSS classes, for use with icon fonts.\n * - Loads icons from URLs and extracts individual icons from icon sets.\n */\nclass MatIconRegistry {\n    /**\n     * @param {?} _httpClient\n     * @param {?} _sanitizer\n     * @param {?} document\n     * @param {?=} _errorHandler\n     */\n    constructor(_httpClient, _sanitizer, document, _errorHandler) {\n        this._httpClient = _httpClient;\n        this._sanitizer = _sanitizer;\n        this._errorHandler = _errorHandler;\n        /**\n         * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\n         */\n        this._svgIconConfigs = new Map();\n        /**\n         * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\n         * Multiple icon sets can be registered under the same namespace.\n         */\n        this._iconSetConfigs = new Map();\n        /**\n         * Cache for icons loaded by direct URLs.\n         */\n        this._cachedIconsByUrl = new Map();\n        /**\n         * In-progress icon fetches. Used to coalesce multiple requests to the same URL.\n         */\n        this._inProgressUrlFetches = new Map();\n        /**\n         * Map from font identifiers to their CSS class names. Used for icon fonts.\n         */\n        this._fontCssClassesByAlias = new Map();\n        /**\n         * The CSS class to apply when an `<mat-icon>` component has no icon name, url, or font specified.\n         * The default 'material-icons' value assumes that the material icon font has been loaded as\n         * described at http://google.github.io/material-design-icons/#icon-font-for-the-web\n         */\n        this._defaultFontSetClass = 'material-icons';\n        this._document = document;\n    }\n    /**\n     * Registers an icon by URL in the default namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} url\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIcon(iconName, url, options) {\n        return (/** @type {?} */ (this)).addSvgIconInNamespace('', iconName, url, options);\n    }\n    /**\n     * Registers an icon using an HTML string in the default namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} literal SVG source of the icon.\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconLiteral(iconName, literal, options) {\n        return (/** @type {?} */ (this)).addSvgIconLiteralInNamespace('', iconName, literal, options);\n    }\n    /**\n     * Registers an icon by URL in the specified namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which the icon should be registered.\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} url\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconInNamespace(namespace, iconName, url, options) {\n        return (/** @type {?} */ (this))._addSvgIconConfig(namespace, iconName, new SvgIconConfig(url, options));\n    }\n    /**\n     * Registers an icon using an HTML string in the specified namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which the icon should be registered.\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} literal SVG source of the icon.\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconLiteralInNamespace(namespace, iconName, literal, options) {\n        /** @type {?} */\n        const sanitizedLiteral = (/** @type {?} */ (this))._sanitizer.sanitize(SecurityContext.HTML, literal);\n        if (!sanitizedLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        /** @type {?} */\n        const svgElement = (/** @type {?} */ (this))._createSvgElementForSingleIcon(sanitizedLiteral, options);\n        return (/** @type {?} */ (this))._addSvgIconConfig(namespace, iconName, new SvgIconConfig(svgElement, options));\n    }\n    /**\n     * Registers an icon set by URL in the default namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} url\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconSet(url, options) {\n        return (/** @type {?} */ (this)).addSvgIconSetInNamespace('', url, options);\n    }\n    /**\n     * Registers an icon set using an HTML string in the default namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} literal SVG source of the icon set.\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconSetLiteral(literal, options) {\n        return (/** @type {?} */ (this)).addSvgIconSetLiteralInNamespace('', literal, options);\n    }\n    /**\n     * Registers an icon set by URL in the specified namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which to register the icon set.\n     * @param {?} url\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconSetInNamespace(namespace, url, options) {\n        return (/** @type {?} */ (this))._addSvgIconSetConfig(namespace, new SvgIconConfig(url, options));\n    }\n    /**\n     * Registers an icon set using an HTML string in the specified namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which to register the icon set.\n     * @param {?} literal SVG source of the icon set.\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconSetLiteralInNamespace(namespace, literal, options) {\n        /** @type {?} */\n        const sanitizedLiteral = (/** @type {?} */ (this))._sanitizer.sanitize(SecurityContext.HTML, literal);\n        if (!sanitizedLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        /** @type {?} */\n        const svgElement = (/** @type {?} */ (this))._svgElementFromString(sanitizedLiteral);\n        return (/** @type {?} */ (this))._addSvgIconSetConfig(namespace, new SvgIconConfig(svgElement, options));\n    }\n    /**\n     * Defines an alias for a CSS class name to be used for icon fonts. Creating an matIcon\n     * component with the alias as the fontSet input will cause the class name to be applied\n     * to the `<mat-icon>` element.\n     *\n     * @template THIS\n     * @this {THIS}\n     * @param {?} alias Alias for the font.\n     * @param {?=} className Class name override to be used instead of the alias.\n     * @return {THIS}\n     */\n    registerFontClassAlias(alias, className = alias) {\n        (/** @type {?} */ (this))._fontCssClassesByAlias.set(alias, className);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Returns the CSS class name associated with the alias by a previous call to\n     * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.\n     * @param {?} alias\n     * @return {?}\n     */\n    classNameForFontAlias(alias) {\n        return this._fontCssClassesByAlias.get(alias) || alias;\n    }\n    /**\n     * Sets the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     *\n     * @template THIS\n     * @this {THIS}\n     * @param {?} className\n     * @return {THIS}\n     */\n    setDefaultFontSetClass(className) {\n        (/** @type {?} */ (this))._defaultFontSetClass = className;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Returns the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     * @return {?}\n     */\n    getDefaultFontSetClass() {\n        return this._defaultFontSetClass;\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) from the given URL.\n     * The response from the URL may be cached so this will not always cause an HTTP request, but\n     * the produced element will always be a new copy of the originally fetched icon. (That is,\n     * it will not contain any modifications made to elements previously returned).\n     *\n     * @param {?} safeUrl URL from which to fetch the SVG icon.\n     * @return {?}\n     */\n    getSvgIconFromUrl(safeUrl) {\n        /** @type {?} */\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        /** @type {?} */\n        const cachedIcon = this._cachedIconsByUrl.get(url);\n        if (cachedIcon) {\n            return of(cloneSvg(cachedIcon));\n        }\n        return this._loadSvgIconFromConfig(new SvgIconConfig(safeUrl)).pipe(tap((/**\n         * @param {?} svg\n         * @return {?}\n         */\n        svg => this._cachedIconsByUrl.set((/** @type {?} */ (url)), svg))), map((/**\n         * @param {?} svg\n         * @return {?}\n         */\n        svg => cloneSvg(svg))));\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) with the given name\n     * and namespace. The icon must have been previously registered with addIcon or addIconSet;\n     * if not, the Observable will throw an error.\n     *\n     * @param {?} name Name of the icon to be retrieved.\n     * @param {?=} namespace Namespace in which to look for the icon.\n     * @return {?}\n     */\n    getNamedSvgIcon(name, namespace = '') {\n        // Return (copy of) cached icon if possible.\n        /** @type {?} */\n        const key = iconKey(namespace, name);\n        /** @type {?} */\n        const config = this._svgIconConfigs.get(key);\n        if (config) {\n            return this._getSvgFromConfig(config);\n        }\n        // See if we have any icon sets registered for the namespace.\n        /** @type {?} */\n        const iconSetConfigs = this._iconSetConfigs.get(namespace);\n        if (iconSetConfigs) {\n            return this._getSvgFromIconSetConfigs(name, iconSetConfigs);\n        }\n        return throwError(getMatIconNameNotFoundError(key));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._svgIconConfigs.clear();\n        this._iconSetConfigs.clear();\n        this._cachedIconsByUrl.clear();\n    }\n    /**\n     * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.\n     * @private\n     * @param {?} config\n     * @return {?}\n     */\n    _getSvgFromConfig(config) {\n        if (config.svgElement) {\n            // We already have the SVG element for this icon, return a copy.\n            return of(cloneSvg(config.svgElement));\n        }\n        else {\n            // Fetch the icon from the config's URL, cache it, and return a copy.\n            return this._loadSvgIconFromConfig(config).pipe(tap((/**\n             * @param {?} svg\n             * @return {?}\n             */\n            svg => config.svgElement = svg)), map((/**\n             * @param {?} svg\n             * @return {?}\n             */\n            svg => cloneSvg(svg))));\n        }\n    }\n    /**\n     * Attempts to find an icon with the specified name in any of the SVG icon sets.\n     * First searches the available cached icons for a nested element with a matching name, and\n     * if found copies the element to a new `<svg>` element. If not found, fetches all icon sets\n     * that have not been cached, and searches again after all fetches are completed.\n     * The returned Observable produces the SVG element if possible, and throws\n     * an error if no icon with the specified name can be found.\n     * @private\n     * @param {?} name\n     * @param {?} iconSetConfigs\n     * @return {?}\n     */\n    _getSvgFromIconSetConfigs(name, iconSetConfigs) {\n        // For all the icon set SVG elements we've fetched, see if any contain an icon with the\n        // requested name.\n        /** @type {?} */\n        const namedIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n        if (namedIcon) {\n            // We could cache namedIcon in _svgIconConfigs, but since we have to make a copy every\n            // time anyway, there's probably not much advantage compared to just always extracting\n            // it from the icon set.\n            return of(namedIcon);\n        }\n        // Not found in any cached icon sets. If there are icon sets with URLs that we haven't\n        // fetched, fetch them now and look for iconName in the results.\n        /** @type {?} */\n        const iconSetFetchRequests = iconSetConfigs\n            .filter((/**\n         * @param {?} iconSetConfig\n         * @return {?}\n         */\n        iconSetConfig => !iconSetConfig.svgElement))\n            .map((/**\n         * @param {?} iconSetConfig\n         * @return {?}\n         */\n        iconSetConfig => {\n            return this._loadSvgIconSetFromConfig(iconSetConfig).pipe(catchError((/**\n             * @param {?} err\n             * @return {?}\n             */\n            (err) => {\n                /** @type {?} */\n                const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, iconSetConfig.url);\n                // Swallow errors fetching individual URLs so the\n                // combined Observable won't necessarily fail.\n                /** @type {?} */\n                const errorMessage = `Loading icon set URL: ${url} failed: ${err.message}`;\n                // @breaking-change 9.0.0 _errorHandler parameter to be made required\n                if (this._errorHandler) {\n                    this._errorHandler.handleError(new Error(errorMessage));\n                }\n                else {\n                    console.error(errorMessage);\n                }\n                return of(null);\n            })));\n        }));\n        // Fetch all the icon set URLs. When the requests complete, every IconSet should have a\n        // cached SVG element (unless the request failed), and we can check again for the icon.\n        return forkJoin(iconSetFetchRequests).pipe(map((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const foundIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n            if (!foundIcon) {\n                throw getMatIconNameNotFoundError(name);\n            }\n            return foundIcon;\n        })));\n    }\n    /**\n     * Searches the cached SVG elements for the given icon sets for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     * @private\n     * @param {?} iconName\n     * @param {?} iconSetConfigs\n     * @return {?}\n     */\n    _extractIconWithNameFromAnySet(iconName, iconSetConfigs) {\n        // Iterate backwards, so icon sets added later have precedence.\n        for (let i = iconSetConfigs.length - 1; i >= 0; i--) {\n            /** @type {?} */\n            const config = iconSetConfigs[i];\n            if (config.svgElement) {\n                /** @type {?} */\n                const foundIcon = this._extractSvgIconFromSet(config.svgElement, iconName, config.options);\n                if (foundIcon) {\n                    return foundIcon;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     * @private\n     * @param {?} config\n     * @return {?}\n     */\n    _loadSvgIconFromConfig(config) {\n        return this._fetchUrl(config.url)\n            .pipe(map((/**\n         * @param {?} svgText\n         * @return {?}\n         */\n        svgText => this._createSvgElementForSingleIcon(svgText, config.options))));\n    }\n    /**\n     * Loads the content of the icon set URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     * @private\n     * @param {?} config\n     * @return {?}\n     */\n    _loadSvgIconSetFromConfig(config) {\n        // If the SVG for this icon set has already been parsed, do nothing.\n        if (config.svgElement) {\n            return of(config.svgElement);\n        }\n        return this._fetchUrl(config.url).pipe(map((/**\n         * @param {?} svgText\n         * @return {?}\n         */\n        svgText => {\n            // It is possible that the icon set was parsed and cached by an earlier request, so parsing\n            // only needs to occur if the cache is yet unset.\n            if (!config.svgElement) {\n                config.svgElement = this._svgElementFromString(svgText);\n            }\n            return config.svgElement;\n        })));\n    }\n    /**\n     * Creates a DOM element from the given SVG string, and adds default attributes.\n     * @private\n     * @param {?} responseText\n     * @param {?=} options\n     * @return {?}\n     */\n    _createSvgElementForSingleIcon(responseText, options) {\n        /** @type {?} */\n        const svg = this._svgElementFromString(responseText);\n        this._setSvgAttributes(svg, options);\n        return svg;\n    }\n    /**\n     * Searches the cached element of the given SvgIconConfig for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     * @private\n     * @param {?} iconSet\n     * @param {?} iconName\n     * @param {?=} options\n     * @return {?}\n     */\n    _extractSvgIconFromSet(iconSet, iconName, options) {\n        // Use the `id=\"iconName\"` syntax in order to escape special\n        // characters in the ID (versus using the #iconName syntax).\n        /** @type {?} */\n        const iconSource = iconSet.querySelector(`[id=\"${iconName}\"]`);\n        if (!iconSource) {\n            return null;\n        }\n        // Clone the element and remove the ID to prevent multiple elements from being added\n        // to the page with the same ID.\n        /** @type {?} */\n        const iconElement = (/** @type {?} */ (iconSource.cloneNode(true)));\n        iconElement.removeAttribute('id');\n        // If the icon node is itself an <svg> node, clone and return it directly. If not, set it as\n        // the content of a new <svg> node.\n        if (iconElement.nodeName.toLowerCase() === 'svg') {\n            return this._setSvgAttributes((/** @type {?} */ (iconElement)), options);\n        }\n        // If the node is a <symbol>, it won't be rendered so we have to convert it into <svg>. Note\n        // that the same could be achieved by referring to it via <use href=\"#id\">, however the <use>\n        // tag is problematic on Firefox, because it needs to include the current page path.\n        if (iconElement.nodeName.toLowerCase() === 'symbol') {\n            return this._setSvgAttributes(this._toSvgElement(iconElement), options);\n        }\n        // createElement('SVG') doesn't work as expected; the DOM ends up with\n        // the correct nodes, but the SVG content doesn't render. Instead we\n        // have to create an empty SVG node using innerHTML and append its content.\n        // Elements created using DOMParser.parseFromString have the same problem.\n        // http://stackoverflow.com/questions/23003278/svg-innerhtml-in-firefox-can-not-display\n        /** @type {?} */\n        const svg = this._svgElementFromString('<svg></svg>');\n        // Clone the node so we don't remove it from the parent icon set element.\n        svg.appendChild(iconElement);\n        return this._setSvgAttributes(svg, options);\n    }\n    /**\n     * Creates a DOM element from the given SVG string.\n     * @private\n     * @param {?} str\n     * @return {?}\n     */\n    _svgElementFromString(str) {\n        /** @type {?} */\n        const div = this._document.createElement('DIV');\n        div.innerHTML = str;\n        /** @type {?} */\n        const svg = (/** @type {?} */ (div.querySelector('svg')));\n        if (!svg) {\n            throw Error('<svg> tag not found');\n        }\n        return svg;\n    }\n    /**\n     * Converts an element into an SVG node by cloning all of its children.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _toSvgElement(element) {\n        /** @type {?} */\n        const svg = this._svgElementFromString('<svg></svg>');\n        /** @type {?} */\n        const attributes = element.attributes;\n        // Copy over all the attributes from the `symbol` to the new SVG, except the id.\n        for (let i = 0; i < attributes.length; i++) {\n            const { name, value } = attributes[i];\n            if (name !== 'id') {\n                svg.setAttribute(name, value);\n            }\n        }\n        for (let i = 0; i < element.childNodes.length; i++) {\n            if (element.childNodes[i].nodeType === this._document.ELEMENT_NODE) {\n                svg.appendChild(element.childNodes[i].cloneNode(true));\n            }\n        }\n        return svg;\n    }\n    /**\n     * Sets the default attributes for an SVG element to be used as an icon.\n     * @private\n     * @param {?} svg\n     * @param {?=} options\n     * @return {?}\n     */\n    _setSvgAttributes(svg, options) {\n        svg.setAttribute('fit', '');\n        svg.setAttribute('height', '100%');\n        svg.setAttribute('width', '100%');\n        svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n        svg.setAttribute('focusable', 'false'); // Disable IE11 default behavior to make SVGs focusable.\n        if (options && options.viewBox) {\n            svg.setAttribute('viewBox', options.viewBox);\n        }\n        return svg;\n    }\n    /**\n     * Returns an Observable which produces the string contents of the given URL. Results may be\n     * cached, so future calls with the same URL may not cause another HTTP request.\n     * @private\n     * @param {?} safeUrl\n     * @return {?}\n     */\n    _fetchUrl(safeUrl) {\n        if (!this._httpClient) {\n            throw getMatIconNoHttpProviderError();\n        }\n        if (safeUrl == null) {\n            throw Error(`Cannot fetch icon from URL \"${safeUrl}\".`);\n        }\n        /** @type {?} */\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        // Store in-progress fetches to avoid sending a duplicate request for a URL when there is\n        // already a request in progress for that URL. It's necessary to call share() on the\n        // Observable returned by http.get() so that multiple subscribers don't cause multiple XHRs.\n        /** @type {?} */\n        const inProgressFetch = this._inProgressUrlFetches.get(url);\n        if (inProgressFetch) {\n            return inProgressFetch;\n        }\n        // TODO(jelbourn): for some reason, the `finalize` operator \"loses\" the generic type on the\n        // Observable. Figure out why and fix it.\n        /** @type {?} */\n        const req = this._httpClient.get(url, { responseType: 'text' }).pipe(finalize((/**\n         * @return {?}\n         */\n        () => this._inProgressUrlFetches.delete(url))), share());\n        this._inProgressUrlFetches.set(url, req);\n        return req;\n    }\n    /**\n     * Registers an icon config by name in the specified namespace.\n     * @private\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which to register the icon config.\n     * @param {?} iconName Name under which to register the config.\n     * @param {?} config Config to be registered.\n     * @return {THIS}\n     */\n    _addSvgIconConfig(namespace, iconName, config) {\n        (/** @type {?} */ (this))._svgIconConfigs.set(iconKey(namespace, iconName), config);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Registers an icon set config in the specified namespace.\n     * @private\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which to register the icon config.\n     * @param {?} config Config to be registered.\n     * @return {THIS}\n     */\n    _addSvgIconSetConfig(namespace, config) {\n        /** @type {?} */\n        const configNamespace = (/** @type {?} */ (this))._iconSetConfigs.get(namespace);\n        if (configNamespace) {\n            configNamespace.push(config);\n        }\n        else {\n            (/** @type {?} */ (this))._iconSetConfigs.set(namespace, [config]);\n        }\n        return (/** @type {?} */ (this));\n    }\n}\nMatIconRegistry.ɵfac = function MatIconRegistry_Factory(t) { return new (t || MatIconRegistry)(ɵngcc0.ɵɵinject(ɵngcc1.HttpClient, 8), ɵngcc0.ɵɵinject(ɵngcc2.DomSanitizer), ɵngcc0.ɵɵinject(DOCUMENT, 8), ɵngcc0.ɵɵinject(ɵngcc0.ErrorHandler, 8)); };\n/** @nocollapse */\nMatIconRegistry.ctorParameters = () => [\n    { type: HttpClient, decorators: [{ type: Optional }] },\n    { type: DomSanitizer },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: ErrorHandler, decorators: [{ type: Optional }] }\n];\n/** @nocollapse */ MatIconRegistry.ɵprov = ɵɵdefineInjectable({ factory: function MatIconRegistry_Factory() { return new MatIconRegistry(ɵɵinject(HttpClient, 8), ɵɵinject(DomSanitizer), ɵɵinject(DOCUMENT, 8), ɵɵinject(ErrorHandler, 8)); }, token: MatIconRegistry, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatIconRegistry, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.HttpClient, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.DomSanitizer }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.ErrorHandler, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._document;\n    /**\n     * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._svgIconConfigs;\n    /**\n     * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\n     * Multiple icon sets can be registered under the same namespace.\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._iconSetConfigs;\n    /**\n     * Cache for icons loaded by direct URLs.\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._cachedIconsByUrl;\n    /**\n     * In-progress icon fetches. Used to coalesce multiple requests to the same URL.\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._inProgressUrlFetches;\n    /**\n     * Map from font identifiers to their CSS class names. Used for icon fonts.\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._fontCssClassesByAlias;\n    /**\n     * The CSS class to apply when an `<mat-icon>` component has no icon name, url, or font specified.\n     * The default 'material-icons' value assumes that the material icon font has been loaded as\n     * described at http://google.github.io/material-design-icons/#icon-font-for-the-web\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._defaultFontSetClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._httpClient;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._sanitizer;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._errorHandler;\n}\n/**\n * \\@docs-private\n * @param {?} parentRegistry\n * @param {?} httpClient\n * @param {?} sanitizer\n * @param {?=} document\n * @param {?=} errorHandler\n * @return {?}\n */\nfunction ICON_REGISTRY_PROVIDER_FACTORY(parentRegistry, httpClient, sanitizer, document, errorHandler) {\n    return parentRegistry || new MatIconRegistry(httpClient, sanitizer, document, errorHandler);\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst ICON_REGISTRY_PROVIDER = {\n    // If there is already an MatIconRegistry available, use that. Otherwise, provide a new one.\n    provide: MatIconRegistry,\n    deps: [\n        [new Optional(), new SkipSelf(), MatIconRegistry],\n        [new Optional(), HttpClient],\n        DomSanitizer,\n        [new Optional(), ErrorHandler],\n        [new Optional(), (/** @type {?} */ (DOCUMENT))],\n    ],\n    useFactory: ICON_REGISTRY_PROVIDER_FACTORY,\n};\n/**\n * Clones an SVGElement while preserving type information.\n * @param {?} svg\n * @return {?}\n */\nfunction cloneSvg(svg) {\n    return (/** @type {?} */ (svg.cloneNode(true)));\n}\n/**\n * Returns the cache key to use for an icon namespace and name.\n * @param {?} namespace\n * @param {?} name\n * @return {?}\n */\nfunction iconKey(namespace, name) {\n    return namespace + ':' + name;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/icon/icon.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatIcon.\n/**\n * \\@docs-private\n */\nclass MatIconBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatIconBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatIconMixinBase = mixinColor(MatIconBase);\n/**\n * Injection token used to provide the current location to `MatIcon`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_ICON_LOCATION = new InjectionToken('mat-icon-location', {\n    providedIn: 'root',\n    factory: MAT_ICON_LOCATION_FACTORY\n});\n/**\n * Stubbed out location for `MatIcon`.\n * \\@docs-private\n * @record\n */\nfunction MatIconLocation() { }\nif (false) {\n    /** @type {?} */\n    MatIconLocation.prototype.getPathname;\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_ICON_LOCATION_FACTORY() {\n    /** @type {?} */\n    const _document = inject(DOCUMENT);\n    /** @type {?} */\n    const _location = _document ? _document.location : null;\n    return {\n        // Note that this needs to be a function, rather than a property, because Angular\n        // will only resolve it once, but we want the current path on each call.\n        getPathname: (/**\n         * @return {?}\n         */\n        () => _location ? (_location.pathname + _location.search) : '')\n    };\n}\n/**\n * SVG attributes that accept a FuncIRI (e.g. `url(<something>)`).\n * @type {?}\n */\nconst funcIriAttributes = [\n    'clip-path',\n    'color-profile',\n    'src',\n    'cursor',\n    'fill',\n    'filter',\n    'marker',\n    'marker-start',\n    'marker-mid',\n    'marker-end',\n    'mask',\n    'stroke'\n];\nconst ɵ0 = /**\n * @param {?} attr\n * @return {?}\n */\nattr => `[${attr}]`;\n/**\n * Selector that can be used to find all elements that are using a `FuncIRI`.\n * @type {?}\n */\nconst funcIriAttributeSelector = funcIriAttributes.map((ɵ0)).join(', ');\n/**\n * Regex that can be used to extract the id out of a FuncIRI.\n * @type {?}\n */\nconst funcIriPattern = /^url\\(['\"]?#(.*?)['\"]?\\)$/;\n/**\n * Component to display an icon. It can be used in the following ways:\n *\n * - Specify the svgIcon input to load an SVG icon from a URL previously registered with the\n *   addSvgIcon, addSvgIconInNamespace, addSvgIconSet, or addSvgIconSetInNamespace methods of\n *   MatIconRegistry. If the svgIcon value contains a colon it is assumed to be in the format\n *   \"[namespace]:[name]\", if not the value will be the name of an icon in the default namespace.\n *   Examples:\n *     `<mat-icon svgIcon=\"left-arrow\"></mat-icon>\n *     <mat-icon svgIcon=\"animals:cat\"></mat-icon>`\n *\n * - Use a font ligature as an icon by putting the ligature text in the content of the `<mat-icon>`\n *   component. By default the Material icons font is used as described at\n *   http://google.github.io/material-design-icons/#icon-font-for-the-web. You can specify an\n *   alternate font by setting the fontSet input to either the CSS class to apply to use the\n *   desired font, or to an alias previously registered with MatIconRegistry.registerFontClassAlias.\n *   Examples:\n *     `<mat-icon>home</mat-icon>\n *     <mat-icon fontSet=\"myfont\">sun</mat-icon>`\n *\n * - Specify a font glyph to be included via CSS rules by setting the fontSet input to specify the\n *   font, and the fontIcon input to specify the icon. Typically the fontIcon will specify a\n *   CSS class which causes the glyph to be displayed via a :before selector, as in\n *   https://fortawesome.github.io/Font-Awesome/examples/\n *   Example:\n *     `<mat-icon fontSet=\"fa\" fontIcon=\"alarm\"></mat-icon>`\n */\nclass MatIcon extends _MatIconMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _iconRegistry\n     * @param {?} ariaHidden\n     * @param {?=} _location\n     * @param {?=} _errorHandler\n     */\n    constructor(elementRef, _iconRegistry, ariaHidden, _location, _errorHandler) {\n        super(elementRef);\n        this._iconRegistry = _iconRegistry;\n        this._location = _location;\n        this._errorHandler = _errorHandler;\n        this._inline = false;\n        /**\n         * Subscription to the current in-progress SVG icon request.\n         */\n        this._currentIconFetch = Subscription.EMPTY;\n        // If the user has not explicitly set aria-hidden, mark the icon as hidden, as this is\n        // the right thing to do for the majority of icon use-cases.\n        if (!ariaHidden) {\n            elementRef.nativeElement.setAttribute('aria-hidden', 'true');\n        }\n    }\n    /**\n     * Whether the icon should be inlined, automatically sizing the icon to match the font size of\n     * the element the icon is contained in.\n     * @return {?}\n     */\n    get inline() {\n        return this._inline;\n    }\n    /**\n     * @param {?} inline\n     * @return {?}\n     */\n    set inline(inline) {\n        this._inline = coerceBooleanProperty(inline);\n    }\n    /**\n     * Font set that the icon is a part of.\n     * @return {?}\n     */\n    get fontSet() { return this._fontSet; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fontSet(value) {\n        this._fontSet = this._cleanupFontValue(value);\n    }\n    /**\n     * Name of an icon within a font set.\n     * @return {?}\n     */\n    get fontIcon() { return this._fontIcon; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fontIcon(value) {\n        this._fontIcon = this._cleanupFontValue(value);\n    }\n    /**\n     * Splits an svgIcon binding value into its icon set and icon name components.\n     * Returns a 2-element array of [(icon set), (icon name)].\n     * The separator for the two fields is ':'. If there is no separator, an empty\n     * string is returned for the icon set and the entire value is returned for\n     * the icon name. If the argument is falsy, returns an array of two empty strings.\n     * Throws an error if the name contains two or more ':' separators.\n     * Examples:\n     *   `'social:cake' -> ['social', 'cake']\n     *   'penguin' -> ['', 'penguin']\n     *   null -> ['', '']\n     *   'a:b:c' -> (throws Error)`\n     * @private\n     * @param {?} iconName\n     * @return {?}\n     */\n    _splitIconName(iconName) {\n        if (!iconName) {\n            return ['', ''];\n        }\n        /** @type {?} */\n        const parts = iconName.split(':');\n        switch (parts.length) {\n            case 1: return ['', parts[0]]; // Use default namespace.\n            case 2: return (/** @type {?} */ (parts));\n            default: throw Error(`Invalid icon name: \"${iconName}\"`);\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Only update the inline SVG icon if the inputs changed, to avoid unnecessary DOM operations.\n        /** @type {?} */\n        const svgIconChanges = changes['svgIcon'];\n        if (svgIconChanges) {\n            this._currentIconFetch.unsubscribe();\n            if (this.svgIcon) {\n                const [namespace, iconName] = this._splitIconName(this.svgIcon);\n                this._currentIconFetch = this._iconRegistry.getNamedSvgIcon(iconName, namespace)\n                    .pipe(take(1))\n                    .subscribe((/**\n                 * @param {?} svg\n                 * @return {?}\n                 */\n                svg => this._setSvgElement(svg)), (/**\n                 * @param {?} err\n                 * @return {?}\n                 */\n                (err) => {\n                    /** @type {?} */\n                    const errorMessage = `Error retrieving icon ${namespace}:${iconName}! ${err.message}`;\n                    // @breaking-change 9.0.0 _errorHandler parameter to be made required.\n                    if (this._errorHandler) {\n                        this._errorHandler.handleError(new Error(errorMessage));\n                    }\n                    else {\n                        console.error(errorMessage);\n                    }\n                }));\n            }\n            else if (svgIconChanges.previousValue) {\n                this._clearSvgElement();\n            }\n        }\n        if (this._usingFontIcon()) {\n            this._updateFontIconClasses();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        // Update font classes because ngOnChanges won't be called if none of the inputs are present,\n        // e.g. <mat-icon>arrow</mat-icon> In this case we need to add a CSS class for the default font.\n        if (this._usingFontIcon()) {\n            this._updateFontIconClasses();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewChecked() {\n        /** @type {?} */\n        const cachedElements = this._elementsWithExternalReferences;\n        if (cachedElements && this._location && cachedElements.size) {\n            /** @type {?} */\n            const newPath = this._location.getPathname();\n            // We need to check whether the URL has changed on each change detection since\n            // the browser doesn't have an API that will let us react on link clicks and\n            // we can't depend on the Angular router. The references need to be updated,\n            // because while most browsers don't care whether the URL is correct after\n            // the first render, Safari will break if the user navigates to a different\n            // page and the SVG isn't re-rendered.\n            if (newPath !== this._previousPath) {\n                this._previousPath = newPath;\n                this._prependPathToReferences(newPath);\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._currentIconFetch.unsubscribe();\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _usingFontIcon() {\n        return !this.svgIcon;\n    }\n    /**\n     * @private\n     * @param {?} svg\n     * @return {?}\n     */\n    _setSvgElement(svg) {\n        this._clearSvgElement();\n        // Workaround for IE11 and Edge ignoring `style` tags inside dynamically-created SVGs.\n        // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10898469/\n        // Do this before inserting the element into the DOM, in order to avoid a style recalculation.\n        /** @type {?} */\n        const styleTags = (/** @type {?} */ (svg.querySelectorAll('style')));\n        for (let i = 0; i < styleTags.length; i++) {\n            styleTags[i].textContent += ' ';\n        }\n        // Note: we do this fix here, rather than the icon registry, because the\n        // references have to point to the URL at the time that the icon was created.\n        if (this._location) {\n            /** @type {?} */\n            const path = this._location.getPathname();\n            this._previousPath = path;\n            this._cacheChildrenWithExternalReferences(svg);\n            this._prependPathToReferences(path);\n        }\n        this._elementRef.nativeElement.appendChild(svg);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _clearSvgElement() {\n        /** @type {?} */\n        const layoutElement = this._elementRef.nativeElement;\n        /** @type {?} */\n        let childCount = layoutElement.childNodes.length;\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n        // Remove existing non-element child nodes and SVGs, and add the new SVG element. Note that\n        // we can't use innerHTML, because IE will throw if the element has a data binding.\n        while (childCount--) {\n            /** @type {?} */\n            const child = layoutElement.childNodes[childCount];\n            // 1 corresponds to Node.ELEMENT_NODE. We remove all non-element nodes in order to get rid\n            // of any loose text nodes, as well as any SVG elements in order to remove any old icons.\n            if (child.nodeType !== 1 || child.nodeName.toLowerCase() === 'svg') {\n                layoutElement.removeChild(child);\n            }\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _updateFontIconClasses() {\n        if (!this._usingFontIcon()) {\n            return;\n        }\n        /** @type {?} */\n        const elem = this._elementRef.nativeElement;\n        /** @type {?} */\n        const fontSetClass = this.fontSet ?\n            this._iconRegistry.classNameForFontAlias(this.fontSet) :\n            this._iconRegistry.getDefaultFontSetClass();\n        if (fontSetClass != this._previousFontSetClass) {\n            if (this._previousFontSetClass) {\n                elem.classList.remove(this._previousFontSetClass);\n            }\n            if (fontSetClass) {\n                elem.classList.add(fontSetClass);\n            }\n            this._previousFontSetClass = fontSetClass;\n        }\n        if (this.fontIcon != this._previousFontIconClass) {\n            if (this._previousFontIconClass) {\n                elem.classList.remove(this._previousFontIconClass);\n            }\n            if (this.fontIcon) {\n                elem.classList.add(this.fontIcon);\n            }\n            this._previousFontIconClass = this.fontIcon;\n        }\n    }\n    /**\n     * Cleans up a value to be used as a fontIcon or fontSet.\n     * Since the value ends up being assigned as a CSS class, we\n     * have to trim the value and omit space-separated values.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _cleanupFontValue(value) {\n        return typeof value === 'string' ? value.trim().split(' ')[0] : value;\n    }\n    /**\n     * Prepends the current path to all elements that have an attribute pointing to a `FuncIRI`\n     * reference. This is required because WebKit browsers require references to be prefixed with\n     * the current path, if the page has a `base` tag.\n     * @private\n     * @param {?} path\n     * @return {?}\n     */\n    _prependPathToReferences(path) {\n        /** @type {?} */\n        const elements = this._elementsWithExternalReferences;\n        if (elements) {\n            elements.forEach((/**\n             * @param {?} attrs\n             * @param {?} element\n             * @return {?}\n             */\n            (attrs, element) => {\n                attrs.forEach((/**\n                 * @param {?} attr\n                 * @return {?}\n                 */\n                attr => {\n                    element.setAttribute(attr.name, `url('${path}#${attr.value}')`);\n                }));\n            }));\n        }\n    }\n    /**\n     * Caches the children of an SVG element that have `url()`\n     * references that we need to prefix with the current path.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _cacheChildrenWithExternalReferences(element) {\n        /** @type {?} */\n        const elementsWithFuncIri = element.querySelectorAll(funcIriAttributeSelector);\n        /** @type {?} */\n        const elements = this._elementsWithExternalReferences =\n            this._elementsWithExternalReferences || new Map();\n        for (let i = 0; i < elementsWithFuncIri.length; i++) {\n            funcIriAttributes.forEach((/**\n             * @param {?} attr\n             * @return {?}\n             */\n            attr => {\n                /** @type {?} */\n                const elementWithReference = elementsWithFuncIri[i];\n                /** @type {?} */\n                const value = elementWithReference.getAttribute(attr);\n                /** @type {?} */\n                const match = value ? value.match(funcIriPattern) : null;\n                if (match) {\n                    /** @type {?} */\n                    let attributes = elements.get(elementWithReference);\n                    if (!attributes) {\n                        attributes = [];\n                        elements.set(elementWithReference, attributes);\n                    }\n                    (/** @type {?} */ (attributes)).push({ name: attr, value: match[1] });\n                }\n            }));\n        }\n    }\n}\nMatIcon.ɵfac = function MatIcon_Factory(t) { return new (t || MatIcon)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MatIconRegistry), ɵngcc0.ɵɵinjectAttribute('aria-hidden'), ɵngcc0.ɵɵdirectiveInject(MAT_ICON_LOCATION, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ErrorHandler, 8)); };\nMatIcon.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatIcon, selectors: [[\"mat-icon\"]], hostAttrs: [\"role\", \"img\", 1, \"mat-icon\", \"notranslate\"], hostVars: 4, hostBindings: function MatIcon_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-icon-inline\", ctx.inline)(\"mat-icon-no-color\", ctx.color !== \"primary\" && ctx.color !== \"accent\" && ctx.color !== \"warn\");\n    } }, inputs: { color: \"color\", inline: \"inline\", fontSet: \"fontSet\", fontIcon: \"fontIcon\", svgIcon: \"svgIcon\" }, exportAs: [\"matIcon\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatIcon_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatIcon.ctorParameters = () => [\n    { type: ElementRef },\n    { type: MatIconRegistry },\n    { type: String, decorators: [{ type: Attribute, args: ['aria-hidden',] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_ICON_LOCATION,] }] },\n    { type: ErrorHandler, decorators: [{ type: Optional }] }\n];\nMatIcon.propDecorators = {\n    inline: [{ type: Input }],\n    svgIcon: [{ type: Input }],\n    fontSet: [{ type: Input }],\n    fontIcon: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatIcon, [{\n        type: Component,\n        args: [{\n                template: '<ng-content></ng-content>',\n                selector: 'mat-icon',\n                exportAs: 'matIcon',\n                inputs: ['color'],\n                host: {\n                    'role': 'img',\n                    'class': 'mat-icon notranslate',\n                    '[class.mat-icon-inline]': 'inline',\n                    '[class.mat-icon-no-color]': 'color !== \"primary\" && color !== \"accent\" && color !== \"warn\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: MatIconRegistry }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['aria-hidden']\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_ICON_LOCATION]\n            }] }, { type: ɵngcc0.ErrorHandler, decorators: [{\n                type: Optional\n            }] }]; }, { inline: [{\n            type: Input\n        }], fontSet: [{\n            type: Input\n        }], fontIcon: [{\n            type: Input\n        }], svgIcon: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatIcon.ngAcceptInputType_inline;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._inline;\n    /**\n     * Name of the icon in the SVG icon set.\n     * @type {?}\n     */\n    MatIcon.prototype.svgIcon;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._fontSet;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._fontIcon;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._previousFontSetClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._previousFontIconClass;\n    /**\n     * Keeps track of the current page path.\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._previousPath;\n    /**\n     * Keeps track of the elements and attributes that we've prefixed with the current path.\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._elementsWithExternalReferences;\n    /**\n     * Subscription to the current in-progress SVG icon request.\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._currentIconFetch;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._iconRegistry;\n    /**\n     * @deprecated `location` parameter to be made required.\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._location;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._errorHandler;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/icon/icon-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatIconModule {\n}\nMatIconModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatIconModule });\nMatIconModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatIconModule_Factory(t) { return new (t || MatIconModule)(); }, imports: [[MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatIconModule, { declarations: function () { return [MatIcon]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatIcon,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatIconModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatIcon, MatCommonModule],\n                declarations: [MatIcon]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/icon/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ICON_REGISTRY_PROVIDER, ICON_REGISTRY_PROVIDER_FACTORY, MAT_ICON_LOCATION, MAT_ICON_LOCATION_FACTORY, MatIcon, MatIconModule, MatIconRegistry, getMatIconFailedToSanitizeLiteralError, getMatIconFailedToSanitizeUrlError, getMatIconNameNotFoundError, getMatIconNoHttpProviderError };\n\n//# sourceMappingURL=icon.js.map","import { CdkTextareaAutosize, AutofillMonitor, TextFieldModule } from '@angular/cdk/text-field';\nimport { Directive, Input, InjectionToken, ElementRef, Optional, Self, Inject, NgZone, HostListener, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { getSupportedInputTypes, Platform } from '@angular/cdk/platform';\nimport { NgControl, NgForm, FormGroupDirective } from '@angular/forms';\nimport { mixinErrorState, ErrorStateMatcher } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/autosize.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive to automatically resize a textarea to fit its content.\n * @deprecated Use `cdkTextareaAutosize` from `\\@angular/cdk/text-field` instead.\n * \\@breaking-change 8.0.0\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/forms';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/text-field';\nclass MatTextareaAutosize extends CdkTextareaAutosize {\n    /**\n     * @return {?}\n     */\n    get matAutosizeMinRows() { return this.minRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matAutosizeMinRows(value) { this.minRows = value; }\n    /**\n     * @return {?}\n     */\n    get matAutosizeMaxRows() { return this.maxRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matAutosizeMaxRows(value) { this.maxRows = value; }\n    /**\n     * @return {?}\n     */\n    get matAutosize() { return this.enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matAutosize(value) { this.enabled = value; }\n    /**\n     * @return {?}\n     */\n    get matTextareaAutosize() { return this.enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matTextareaAutosize(value) { this.enabled = value; }\n}\nMatTextareaAutosize.ɵfac = function MatTextareaAutosize_Factory(t) { return ɵMatTextareaAutosize_BaseFactory(t || MatTextareaAutosize); };\nMatTextareaAutosize.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTextareaAutosize, selectors: [[\"textarea\", \"mat-autosize\", \"\"], [\"textarea\", \"matTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\", \"mat-autosize\"], inputs: { cdkAutosizeMinRows: \"cdkAutosizeMinRows\", cdkAutosizeMaxRows: \"cdkAutosizeMaxRows\", matAutosizeMinRows: \"matAutosizeMinRows\", matAutosizeMaxRows: \"matAutosizeMaxRows\", matAutosize: [\"mat-autosize\", \"matAutosize\"], matTextareaAutosize: \"matTextareaAutosize\" }, exportAs: [\"matTextareaAutosize\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTextareaAutosize.propDecorators = {\n    matAutosizeMinRows: [{ type: Input }],\n    matAutosizeMaxRows: [{ type: Input }],\n    matAutosize: [{ type: Input, args: ['mat-autosize',] }],\n    matTextareaAutosize: [{ type: Input }]\n};\nconst ɵMatTextareaAutosize_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTextareaAutosize);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[mat-autosize], textarea[matTextareaAutosize]',\n                exportAs: 'matTextareaAutosize',\n                inputs: ['cdkAutosizeMinRows', 'cdkAutosizeMaxRows'],\n                host: {\n                    'class': 'cdk-textarea-autosize mat-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], null, { matAutosizeMinRows: [{\n            type: Input\n        }], matAutosizeMaxRows: [{\n            type: Input\n        }], matAutosize: [{\n            type: Input,\n            args: ['mat-autosize']\n        }], matTextareaAutosize: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @param {?} type\n * @return {?}\n */\nfunction getMatInputUnsupportedTypeError(type) {\n    return Error(`Input type \"${type}\" isn't supported by matInput.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input-value-accessor.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\n * value to them.\n * @type {?}\n */\nconst MAT_INPUT_VALUE_ACCESSOR = new InjectionToken('MAT_INPUT_VALUE_ACCESSOR');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\n/** @type {?} */\nconst MAT_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\n/** @type {?} */\nlet nextUniqueId = 0;\n// Boilerplate for applying mixins to MatInput.\n/**\n * \\@docs-private\n */\nclass MatInputBase {\n    /**\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} ngControl\n     */\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatInputBase.prototype._defaultErrorStateMatcher;\n    /** @type {?} */\n    MatInputBase.prototype._parentForm;\n    /** @type {?} */\n    MatInputBase.prototype._parentFormGroup;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInputBase.prototype.ngControl;\n}\n/** @type {?} */\nconst _MatInputMixinBase = mixinErrorState(MatInputBase);\n/**\n * Directive that allows a native input to work inside a `MatFormField`.\n */\nclass MatInput extends _MatInputMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _platform\n     * @param {?} ngControl\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} inputValueAccessor\n     * @param {?} _autofillMonitor\n     * @param {?} ngZone\n     */\n    constructor(_elementRef, _platform, ngControl, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, inputValueAccessor, _autofillMonitor, ngZone) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this.ngControl = ngControl;\n        this._autofillMonitor = _autofillMonitor;\n        this._uid = `mat-input-${nextUniqueId++}`;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.focused = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.stateChanges = new Subject();\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.controlType = 'mat-input';\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.autofilled = false;\n        this._disabled = false;\n        this._required = false;\n        this._type = 'text';\n        this._readonly = false;\n        this._neverEmptyInputTypes = [\n            'date',\n            'datetime',\n            'datetime-local',\n            'month',\n            'time',\n            'week'\n        ].filter((/**\n         * @param {?} t\n         * @return {?}\n         */\n        t => getSupportedInputTypes().has(t)));\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        /** @type {?} */\n        const nodeName = element.nodeName.toLowerCase();\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || element;\n        this._previousNativeValue = this.value;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n        // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n        // exists on iOS, we only bother to install the listener on iOS.\n        if (_platform.IOS) {\n            ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                _elementRef.nativeElement.addEventListener('keyup', (/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                (event) => {\n                    /** @type {?} */\n                    let el = (/** @type {?} */ (event.target));\n                    if (!el.value && !el.selectionStart && !el.selectionEnd) {\n                        // Note: Just setting `0, 0` doesn't fix the issue. Setting\n                        // `1, 1` fixes it for the first time that you type text and\n                        // then hold delete. Toggling to `1, 1` and then back to\n                        // `0, 0` seems to completely fix it.\n                        el.setSelectionRange(1, 1);\n                        el.setSelectionRange(0, 0);\n                    }\n                }));\n            }));\n        }\n        this._isServer = !this._platform.isBrowser;\n        this._isNativeSelect = nodeName === 'select';\n        this._isTextarea = nodeName === 'textarea';\n        if (this._isNativeSelect) {\n            this.controlType = ((/** @type {?} */ (element))).multiple ? 'mat-native-select-multiple' :\n                'mat-native-select';\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get disabled() {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n        return this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get id() { return this._id; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set id(value) { this._id = value || this._uid; }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /**\n     * Input type of the element.\n     * @return {?}\n     */\n    get type() { return this._type; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set type(value) {\n        this._type = value || 'text';\n        this._validateType();\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (!this._isTextarea && getSupportedInputTypes().has(this._type)) {\n            ((/** @type {?} */ (this._elementRef.nativeElement))).type = this._type;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get value() { return this._inputValueAccessor.value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Whether the element is readonly.\n     * @return {?}\n     */\n    get readonly() { return this._readonly; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set readonly(value) { this._readonly = coerceBooleanProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                this.autofilled = event.isAutofilled;\n                this.stateChanges.next();\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    }\n    /**\n     * Focuses the input.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    /**\n     * Callback for the cases where the focused state of the input changes.\n     * @param {?} isFocused\n     * @return {?}\n     */\n    // tslint:disable:no-host-decorator-in-concrete\n    // tslint:enable:no-host-decorator-in-concrete\n    _focusChanged(isFocused) {\n        if (isFocused !== this.focused && (!this.readonly || !isFocused)) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @return {?}\n     */\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n    /**\n     * Does some manual dirty checking on the native input `value` property.\n     * @protected\n     * @return {?}\n     */\n    _dirtyCheckNativeValue() {\n        /** @type {?} */\n        const newValue = this._elementRef.nativeElement.value;\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Make sure the input is a supported type.\n     * @protected\n     * @return {?}\n     */\n    _validateType() {\n        if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n            throw getMatInputUnsupportedTypeError(this._type);\n        }\n    }\n    /**\n     * Checks whether the input type is one of the types that are never empty.\n     * @protected\n     * @return {?}\n     */\n    _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n    /**\n     * Checks whether the input is invalid based on the native validation.\n     * @protected\n     * @return {?}\n     */\n    _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        /** @type {?} */\n        let validity = ((/** @type {?} */ (this._elementRef.nativeElement))).validity;\n        return validity && validity.badInput;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get empty() {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput() &&\n            !this.autofilled;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() {\n        if (this._isNativeSelect) {\n            // For a single-selection `<select>`, the label should float when the selected option has\n            // a non-empty display value. For a `<select multiple>`, the label *always* floats to avoid\n            // overlapping the label with the options.\n            /** @type {?} */\n            const selectElement = (/** @type {?} */ (this._elementRef.nativeElement));\n            /** @type {?} */\n            const firstOption = selectElement.options[0];\n            // On most browsers the `selectedIndex` will always be 0, however on IE and Edge it'll be\n            // -1 if the `value` is set to something, that isn't in the list of options, at a later point.\n            return this.focused || selectElement.multiple || !this.empty ||\n                !!(selectElement.selectedIndex > -1 && firstOption && firstOption.label);\n        }\n        else {\n            return this.focused || !this.empty;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    onContainerClick() {\n        // Do not re-focus the input element if the element is already focused. Otherwise it can happen\n        // that someone clicks on a time input and the cursor resets to the \"hours\" field while the\n        // \"minutes\" field was actually clicked. See: https://github.com/angular/components/issues/12849\n        if (!this.focused) {\n            this.focus();\n        }\n    }\n}\nMatInput.ɵfac = function MatInput_Factory(t) { return new (t || MatInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgControl, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(MAT_INPUT_VALUE_ACCESSOR, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AutofillMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatInput.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatInput, selectors: [[\"input\", \"matInput\", \"\"], [\"textarea\", \"matInput\", \"\"], [\"select\", \"matNativeControl\", \"\"], [\"input\", \"matNativeControl\", \"\"], [\"textarea\", \"matNativeControl\", \"\"]], hostAttrs: [1, \"mat-input-element\", \"mat-form-field-autofill-control\"], hostVars: 10, hostBindings: function MatInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatInput_focus_HostBindingHandler() { return ctx._focusChanged(true); })(\"blur\", function MatInput_blur_HostBindingHandler() { return ctx._focusChanged(false); })(\"input\", function MatInput_input_HostBindingHandler() { return ctx._onInput(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled)(\"required\", ctx.required);\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"placeholder\", ctx.placeholder)(\"readonly\", ctx.readonly && !ctx._isNativeSelect || null)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-invalid\", ctx.errorState)(\"aria-required\", ctx.required.toString());\n        ɵngcc0.ɵɵclassProp(\"mat-input-server\", ctx._isServer);\n    } }, inputs: { id: \"id\", disabled: \"disabled\", required: \"required\", type: \"type\", value: \"value\", readonly: \"readonly\", placeholder: \"placeholder\", errorStateMatcher: \"errorStateMatcher\" }, exportAs: [\"matInput\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MatFormFieldControl, useExisting: MatInput }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nMatInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: ErrorStateMatcher },\n    { type: undefined, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [MAT_INPUT_VALUE_ACCESSOR,] }] },\n    { type: AutofillMonitor },\n    { type: NgZone }\n];\nMatInput.propDecorators = {\n    disabled: [{ type: Input }],\n    id: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    type: [{ type: Input }],\n    errorStateMatcher: [{ type: Input }],\n    value: [{ type: Input }],\n    readonly: [{ type: Input }],\n    _focusChanged: [{ type: HostListener, args: ['focus', ['true'],] }, { type: HostListener, args: ['blur', ['false'],] }],\n    _onInput: [{ type: HostListener, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInput, [{\n        type: Directive,\n        args: [{\n                selector: `input[matInput], textarea[matInput], select[matNativeControl],\n      input[matNativeControl], textarea[matNativeControl]`,\n                exportAs: 'matInput',\n                host: {\n                    /**\n                     * \\@breaking-change 8.0.0 remove .mat-form-field-autofill-control in favor of AutofillMonitor.\n                     */\n                    'class': 'mat-input-element mat-form-field-autofill-control',\n                    '[class.mat-input-server]': '_isServer',\n                    // Native input properties that are overwritten by Angular inputs need to be synced with\n                    // the native input element. Otherwise property bindings for those don't work.\n                    '[attr.id]': 'id',\n                    '[attr.placeholder]': 'placeholder',\n                    '[disabled]': 'disabled',\n                    '[required]': 'required',\n                    '[attr.readonly]': 'readonly && !_isNativeSelect || null',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-required]': 'required.toString()'\n                },\n                providers: [{ provide: MatFormFieldControl, useExisting: MatInput }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc2.NgControl, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc2.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.ErrorStateMatcher }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [MAT_INPUT_VALUE_ACCESSOR]\n            }] }, { type: ɵngcc4.AutofillMonitor }, { type: ɵngcc0.NgZone }]; }, { id: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], type: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], readonly: [{\n            type: Input\n        }], _focusChanged: [{\n            type: HostListener,\n            args: ['focus', ['true']]\n        }, {\n            type: HostListener,\n            args: ['blur', ['false']]\n        }], _onInput: [{\n            type: HostListener,\n            args: ['input']\n        }], placeholder: [{\n            type: Input\n        }], errorStateMatcher: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatInput.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatInput.ngAcceptInputType_readonly;\n    /** @type {?} */\n    MatInput.ngAcceptInputType_required;\n    /** @type {?} */\n    MatInput.ngAcceptInputType_value;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._uid;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._previousNativeValue;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInput.prototype._inputValueAccessor;\n    /**\n     * The aria-describedby attribute on the input for improved a11y.\n     * @type {?}\n     */\n    MatInput.prototype._ariaDescribedby;\n    /**\n     * Whether the component is being rendered on the server.\n     * @type {?}\n     */\n    MatInput.prototype._isServer;\n    /**\n     * Whether the component is a native html select.\n     * @type {?}\n     */\n    MatInput.prototype._isNativeSelect;\n    /**\n     * Whether the component is a textarea.\n     * @type {?}\n     */\n    MatInput.prototype._isTextarea;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.focused;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.stateChanges;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.controlType;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.autofilled;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._disabled;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._id;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.placeholder;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._required;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._type;\n    /**\n     * An object used to control when error messages are shown.\n     * @type {?}\n     */\n    MatInput.prototype.errorStateMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInput.prototype._readonly;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._neverEmptyInputTypes;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._platform;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.ngControl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInput.prototype._autofillMonitor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatInputModule {\n}\nMatInputModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatInputModule });\nMatInputModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatInputModule_Factory(t) { return new (t || MatInputModule)(); }, providers: [ErrorStateMatcher], imports: [[\n            TextFieldModule,\n            MatFormFieldModule,\n        ],\n        TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatInputModule, { declarations: function () { return [MatInput,\n        MatTextareaAutosize]; }, imports: function () { return [TextFieldModule,\n        MatFormFieldModule]; }, exports: function () { return [TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule,\n        MatInput,\n        MatTextareaAutosize]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInputModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [MatInput, MatTextareaAutosize],\n                imports: [\n                    TextFieldModule,\n                    MatFormFieldModule,\n                ],\n                exports: [\n                    TextFieldModule,\n                    // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n                    // be used together with `MatFormField`.\n                    MatFormFieldModule,\n                    MatInput,\n                    MatTextareaAutosize,\n                ],\n                providers: [ErrorStateMatcher]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_INPUT_VALUE_ACCESSOR, MatInput, MatInputModule, MatTextareaAutosize, getMatInputUnsupportedTypeError };\n\n//# sourceMappingURL=input.js.map","import { CommonModule } from '@angular/common';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Directive, ChangeDetectorRef, Optional, ContentChildren, ContentChild, Input, forwardRef, Inject, ViewChild, EventEmitter, isDevMode, Attribute, Output, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinDisableRipple, setLines, MatLine, MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\nimport { takeUntil, startWith } from 'rxjs/operators';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { hasModifierKey, A, END, HOME, ENTER, SPACE, UP_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDividerModule } from '@angular/material/divider';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/list/list.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatList.\n/**\n * \\@docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/material/core';\nimport * as ɵngcc2 from '@angular/common';\n\nconst _c0 = [\"*\"];\nconst _c1 = [[[\"\", \"mat-list-avatar\", \"\"], [\"\", \"mat-list-icon\", \"\"], [\"\", \"matListAvatar\", \"\"], [\"\", \"matListIcon\", \"\"]], [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], \"*\"];\nconst _c2 = [\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\", \"[mat-line], [matLine]\", \"*\"];\nconst _c3 = [\"text\"];\nfunction MatListOption_mat_pseudo_checkbox_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"mat-pseudo-checkbox\", 5);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"state\", ctx_r0.selected ? \"checked\" : \"unchecked\")(\"disabled\", ctx_r0.disabled);\n} }\nconst _c4 = [\"*\", [[\"\", \"mat-list-avatar\", \"\"], [\"\", \"mat-list-icon\", \"\"], [\"\", \"matListAvatar\", \"\"], [\"\", \"matListIcon\", \"\"]]];\nconst _c5 = [\"*\", \"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\"];\nclass MatListBase {\n}\n/** @type {?} */\nconst _MatListMixinBase = mixinDisabled(mixinDisableRipple(MatListBase));\n// Boilerplate for applying mixins to MatListItem.\n/**\n * \\@docs-private\n */\nclass MatListItemBase {\n}\n/** @type {?} */\nconst _MatListItemMixinBase = mixinDisableRipple(MatListItemBase);\nclass MatNavList extends _MatListMixinBase {\n    constructor() {\n        super(...arguments);\n        /**\n         * Emits when the state of the list changes.\n         */\n        this._stateChanges = new Subject();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatNavList.ɵfac = function MatNavList_Factory(t) { return ɵMatNavList_BaseFactory(t || MatNavList); };\nMatNavList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatNavList, selectors: [[\"mat-nav-list\"]], hostAttrs: [\"role\", \"navigation\", 1, \"mat-nav-list\", \"mat-list-base\"], inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, exportAs: [\"matNavList\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatNavList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"], encapsulation: 2, changeDetection: 0 });\nconst ɵMatNavList_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatNavList);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatNavList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-nav-list',\n                exportAs: 'matNavList',\n                host: {\n                    'role': 'navigation',\n                    'class': 'mat-nav-list mat-list-base'\n                },\n                template: \"<ng-content></ng-content>\\n\\n\",\n                inputs: ['disableRipple', 'disabled'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n            }]\n    }], null, null); })();\nif (false) {\n    /** @type {?} */\n    MatNavList.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatNavList.ngAcceptInputType_disabled;\n    /**\n     * Emits when the state of the list changes.\n     * @type {?}\n     */\n    MatNavList.prototype._stateChanges;\n}\nclass MatList extends _MatListMixinBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        super();\n        this._elementRef = _elementRef;\n        /**\n         * Emits when the state of the list changes.\n         */\n        this._stateChanges = new Subject();\n        if (this._getListType() === 'action-list') {\n            _elementRef.nativeElement.classList.add('mat-action-list');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _getListType() {\n        /** @type {?} */\n        const nodeName = this._elementRef.nativeElement.nodeName.toLowerCase();\n        if (nodeName === 'mat-list') {\n            return 'list';\n        }\n        if (nodeName === 'mat-action-list') {\n            return 'action-list';\n        }\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatList.ɵfac = function MatList_Factory(t) { return new (t || MatList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatList, selectors: [[\"mat-list\"], [\"mat-action-list\"]], hostAttrs: [1, \"mat-list\", \"mat-list-base\"], inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, exportAs: [\"matList\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatList.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-list, mat-action-list',\n                exportAs: 'matList',\n                template: \"<ng-content></ng-content>\\n\\n\",\n                host: {\n                    'class': 'mat-list mat-list-base'\n                },\n                inputs: ['disableRipple', 'disabled'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatList.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatList.ngAcceptInputType_disabled;\n    /**\n     * Emits when the state of the list changes.\n     * @type {?}\n     */\n    MatList.prototype._stateChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatList.prototype._elementRef;\n}\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListAvatarCssMatStyler {\n}\nMatListAvatarCssMatStyler.ɵfac = function MatListAvatarCssMatStyler_Factory(t) { return new (t || MatListAvatarCssMatStyler)(); };\nMatListAvatarCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatListAvatarCssMatStyler, selectors: [[\"\", \"mat-list-avatar\", \"\"], [\"\", \"matListAvatar\", \"\"]], hostAttrs: [1, \"mat-list-avatar\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListAvatarCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-list-avatar], [matListAvatar]',\n                host: { 'class': 'mat-list-avatar' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListIconCssMatStyler {\n}\nMatListIconCssMatStyler.ɵfac = function MatListIconCssMatStyler_Factory(t) { return new (t || MatListIconCssMatStyler)(); };\nMatListIconCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatListIconCssMatStyler, selectors: [[\"\", \"mat-list-icon\", \"\"], [\"\", \"matListIcon\", \"\"]], hostAttrs: [1, \"mat-list-icon\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListIconCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-list-icon], [matListIcon]',\n                host: { 'class': 'mat-list-icon' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListSubheaderCssMatStyler {\n}\nMatListSubheaderCssMatStyler.ɵfac = function MatListSubheaderCssMatStyler_Factory(t) { return new (t || MatListSubheaderCssMatStyler)(); };\nMatListSubheaderCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatListSubheaderCssMatStyler, selectors: [[\"\", \"mat-subheader\", \"\"], [\"\", \"matSubheader\", \"\"]], hostAttrs: [1, \"mat-subheader\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListSubheaderCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-subheader], [matSubheader]',\n                host: { 'class': 'mat-subheader' }\n            }]\n    }], null, null); })();\n/**\n * An item within a Material Design list.\n */\nclass MatListItem extends _MatListItemMixinBase {\n    /**\n     * @param {?} _element\n     * @param {?} _changeDetectorRef\n     * @param {?=} navList\n     * @param {?=} list\n     */\n    constructor(_element, _changeDetectorRef, navList, list) {\n        super();\n        this._element = _element;\n        this._isInteractiveList = false;\n        this._destroyed = new Subject();\n        this._disabled = false;\n        this._isInteractiveList = !!(navList || (list && list._getListType() === 'action-list'));\n        this._list = navList || list;\n        // If no type attributed is specified for <button>, set it to \"button\".\n        // If a type attribute is already specified, do nothing.\n        /** @type {?} */\n        const element = this._getHostElement();\n        if (element.nodeName.toLowerCase() === 'button' && !element.hasAttribute('type')) {\n            element.setAttribute('type', 'button');\n        }\n        if (this._list) {\n            // React to changes in the state of the parent list since\n            // some of the item's properties depend on it (e.g. `disableRipple`).\n            this._list._stateChanges.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                _changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * Whether the option is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled || !!(this._list && this._list.disabled); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Whether this list item should show a ripple effect when clicked.\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return !this._isInteractiveList || this.disableRipple ||\n            !!(this._list && this._list.disableRipple);\n    }\n    /**\n     * Retrieves the DOM element of the component host.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n}\nMatListItem.ɵfac = function MatListItem_Factory(t) { return new (t || MatListItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MatNavList, 8), ɵngcc0.ɵɵdirectiveInject(MatList, 8)); };\nMatListItem.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatListItem, selectors: [[\"mat-list-item\"], [\"a\", \"mat-list-item\", \"\"], [\"button\", \"mat-list-item\", \"\"]], contentQueries: function MatListItem_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListAvatarCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListIconCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    } }, hostAttrs: [1, \"mat-list-item\", \"mat-focus-indicator\"], hostVars: 6, hostBindings: function MatListItem_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-disabled\", ctx.disabled)(\"mat-list-item-avatar\", ctx._avatar || ctx._icon)(\"mat-list-item-with-avatar\", ctx._avatar || ctx._icon);\n    } }, inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, exportAs: [\"matListItem\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 6, vars: 2, consts: [[1, \"mat-list-item-content\"], [\"mat-ripple\", \"\", 1, \"mat-list-item-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-list-text\"]], template: function MatListItem_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelement(1, \"div\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵprojection(4, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(5, 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx._isRippleDisabled());\n    } }, directives: [ɵngcc1.MatRipple], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatListItem.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatNavList, decorators: [{ type: Optional }] },\n    { type: MatList, decorators: [{ type: Optional }] }\n];\nMatListItem.propDecorators = {\n    _lines: [{ type: ContentChildren, args: [MatLine, { descendants: true },] }],\n    _avatar: [{ type: ContentChild, args: [MatListAvatarCssMatStyler,] }],\n    _icon: [{ type: ContentChild, args: [MatListIconCssMatStyler,] }],\n    disabled: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListItem, [{\n        type: Component,\n        args: [{\n                selector: 'mat-list-item, a[mat-list-item], button[mat-list-item]',\n                exportAs: 'matListItem',\n                host: {\n                    'class': 'mat-list-item mat-focus-indicator',\n                    '[class.mat-list-item-disabled]': 'disabled',\n                    // @breaking-change 8.0.0 Remove `mat-list-item-avatar` in favor of `mat-list-item-with-avatar`.\n                    '[class.mat-list-item-avatar]': '_avatar || _icon',\n                    '[class.mat-list-item-with-avatar]': '_avatar || _icon'\n                },\n                inputs: ['disableRipple'],\n                template: \"<div class=\\\"mat-list-item-content\\\">\\n  <div class=\\\"mat-list-item-ripple\\\" mat-ripple\\n       [matRippleTrigger]=\\\"_getHostElement()\\\"\\n       [matRippleDisabled]=\\\"_isRippleDisabled()\\\">\\n  </div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n  <div class=\\\"mat-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n\\n  <ng-content></ng-content>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatNavList, decorators: [{\n                type: Optional\n            }] }, { type: MatList, decorators: [{\n                type: Optional\n            }] }]; }, { disabled: [{\n            type: Input\n        }], _lines: [{\n            type: ContentChildren,\n            args: [MatLine, { descendants: true }]\n        }], _avatar: [{\n            type: ContentChild,\n            args: [MatListAvatarCssMatStyler]\n        }], _icon: [{\n            type: ContentChild,\n            args: [MatListIconCssMatStyler]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatListItem.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatListItem.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._isInteractiveList;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._list;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._destroyed;\n    /** @type {?} */\n    MatListItem.prototype._lines;\n    /** @type {?} */\n    MatListItem.prototype._avatar;\n    /** @type {?} */\n    MatListItem.prototype._icon;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._element;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/list/selection-list.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n */\nclass MatSelectionListBase {\n}\n/** @type {?} */\nconst _MatSelectionListMixinBase = mixinDisableRipple(MatSelectionListBase);\n/**\n * \\@docs-private\n */\nclass MatListOptionBase {\n}\n/** @type {?} */\nconst _MatListOptionMixinBase = mixinDisableRipple(MatListOptionBase);\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SELECTION_LIST_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatSelectionList)),\n    multi: true\n};\n/**\n * Change event that is being fired whenever the selected state of an option changes.\n */\nclass MatSelectionListChange {\n    /**\n     * @param {?} source\n     * @param {?} option\n     */\n    constructor(source, option) {\n        this.source = source;\n        this.option = option;\n    }\n}\nif (false) {\n    /**\n     * Reference to the selection list that emitted the event.\n     * @type {?}\n     */\n    MatSelectionListChange.prototype.source;\n    /**\n     * Reference to the option that has been changed.\n     * @type {?}\n     */\n    MatSelectionListChange.prototype.option;\n}\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\nclass MatListOption extends _MatListOptionMixinBase {\n    /**\n     * @param {?} _element\n     * @param {?} _changeDetector\n     * @param {?} selectionList\n     */\n    constructor(_element, _changeDetector, selectionList) {\n        super();\n        this._element = _element;\n        this._changeDetector = _changeDetector;\n        this.selectionList = selectionList;\n        this._selected = false;\n        this._disabled = false;\n        this._hasFocus = false;\n        /**\n         * Whether the label should appear before or after the checkbox. Defaults to 'after'\n         */\n        this.checkboxPosition = 'after';\n        /**\n         * This is set to true after the first OnChanges cycle so we don't clear the value of `selected`\n         * in the first cycle.\n         */\n        this._inputsInitialized = false;\n    }\n    /**\n     * Theme color of the list option. This sets the color of the checkbox.\n     * @return {?}\n     */\n    get color() { return this._color || this.selectionList.color; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set color(newValue) { this._color = newValue; }\n    /**\n     * Value of the option\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        if (this.selected && newValue !== this.value && this._inputsInitialized) {\n            this.selected = false;\n        }\n        this._value = newValue;\n    }\n    /**\n     * Whether the option is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled || (this.selectionList && this.selectionList.disabled); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n    /**\n     * Whether the option is selected.\n     * @return {?}\n     */\n    get selected() { return this.selectionList.selectedOptions.isSelected(this); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        /** @type {?} */\n        const isSelected = coerceBooleanProperty(value);\n        if (isSelected !== this._selected) {\n            this._setSelected(isSelected);\n            this.selectionList._reportValueChange();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        /** @type {?} */\n        const list = this.selectionList;\n        if (list._value && list._value.some((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => list.compareWith(value, this._value)))) {\n            this._setSelected(true);\n        }\n        /** @type {?} */\n        const wasSelected = this._selected;\n        // List options that are selected at initialization can't be reported properly to the form\n        // control. This is because it takes some time until the selection-list knows about all\n        // available options. Also it can happen that the ControlValueAccessor has an initial value\n        // that should be used instead. Deferring the value change report to the next tick ensures\n        // that the form control value is not being overwritten.\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            if (this._selected || wasSelected) {\n                this.selected = true;\n                this._changeDetector.markForCheck();\n            }\n        }));\n        this._inputsInitialized = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                this.selected = false;\n            }));\n        }\n        /** @type {?} */\n        const hadFocus = this._hasFocus;\n        /** @type {?} */\n        const newActiveItem = this.selectionList._removeOptionFromList(this);\n        // Only move focus if this option was focused at the time it was destroyed.\n        if (hadFocus && newActiveItem) {\n            newActiveItem.focus();\n        }\n    }\n    /**\n     * Toggles the selection state of the option.\n     * @return {?}\n     */\n    toggle() {\n        this.selected = !this.selected;\n    }\n    /**\n     * Allows for programmatic focusing of the option.\n     * @return {?}\n     */\n    focus() {\n        this._element.nativeElement.focus();\n    }\n    /**\n     * Returns the list item's text label. Implemented as a part of the FocusKeyManager.\n     * \\@docs-private\n     * @return {?}\n     */\n    getLabel() {\n        return this._text ? (this._text.nativeElement.textContent || '') : '';\n    }\n    /**\n     * Whether this list item should show a ripple effect when clicked.\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return this.disabled || this.disableRipple || this.selectionList.disableRipple;\n    }\n    /**\n     * @return {?}\n     */\n    _handleClick() {\n        if (!this.disabled && (this.selectionList.multiple || !this.selected)) {\n            this.toggle();\n            // Emit a change event if the selected state of the option changed through user interaction.\n            this.selectionList._emitChangeEvent(this);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _handleFocus() {\n        this.selectionList._setFocusedOption(this);\n        this._hasFocus = true;\n    }\n    /**\n     * @return {?}\n     */\n    _handleBlur() {\n        this.selectionList._onTouched();\n        this._hasFocus = false;\n    }\n    /**\n     * Retrieves the DOM element of the component host.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    /**\n     * Sets the selected state of the option. Returns whether the value has changed.\n     * @param {?} selected\n     * @return {?}\n     */\n    _setSelected(selected) {\n        if (selected === this._selected) {\n            return false;\n        }\n        this._selected = selected;\n        if (selected) {\n            this.selectionList.selectedOptions.select(this);\n        }\n        else {\n            this.selectionList.selectedOptions.deselect(this);\n        }\n        this._changeDetector.markForCheck();\n        return true;\n    }\n    /**\n     * Notifies Angular that the option needs to be checked in the next change detection run. Mainly\n     * used to trigger an update of the list option if the disabled state of the selection list\n     * changed.\n     * @return {?}\n     */\n    _markForCheck() {\n        this._changeDetector.markForCheck();\n    }\n}\nMatListOption.ɵfac = function MatListOption_Factory(t) { return new (t || MatListOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatSelectionList)))); };\nMatListOption.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatListOption, selectors: [[\"mat-list-option\"]], contentQueries: function MatListOption_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListAvatarCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListIconCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    } }, viewQuery: function MatListOption_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._text = _t.first);\n    } }, hostAttrs: [\"role\", \"option\", 1, \"mat-list-item\", \"mat-list-option\", \"mat-focus-indicator\"], hostVars: 15, hostBindings: function MatListOption_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatListOption_focus_HostBindingHandler() { return ctx._handleFocus(); })(\"blur\", function MatListOption_blur_HostBindingHandler() { return ctx._handleBlur(); })(\"click\", function MatListOption_click_HostBindingHandler() { return ctx._handleClick(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-selected\", ctx.selected)(\"aria-disabled\", ctx.disabled)(\"tabindex\", 0 - 1);\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-disabled\", ctx.disabled)(\"mat-list-item-with-avatar\", ctx._avatar || ctx._icon)(\"mat-primary\", ctx.color === \"primary\")(\"mat-accent\", ctx.color !== \"primary\" && ctx.color !== \"warn\")(\"mat-warn\", ctx.color === \"warn\")(\"mat-list-single-selected-option\", ctx.selected && !ctx.selectionList.multiple);\n    } }, inputs: { disableRipple: \"disableRipple\", checkboxPosition: \"checkboxPosition\", color: \"color\", value: \"value\", selected: \"selected\", disabled: \"disabled\" }, exportAs: [\"matListOption\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c5, decls: 7, vars: 5, consts: [[1, \"mat-list-item-content\"], [\"mat-ripple\", \"\", 1, \"mat-list-item-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [3, \"state\", \"disabled\", 4, \"ngIf\"], [1, \"mat-list-text\"], [\"text\", \"\"], [3, \"state\", \"disabled\"]], template: function MatListOption_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelement(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatListOption_mat_pseudo_checkbox_2_Template, 1, 2, \"mat-pseudo-checkbox\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵprojection(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(6, 1);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-content-reverse\", ctx.checkboxPosition == \"after\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx._isRippleDisabled());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.selectionList.multiple);\n    } }, directives: [ɵngcc1.MatRipple, ɵngcc2.NgIf, ɵngcc1.MatPseudoCheckbox], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatListOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatSelectionList, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatSelectionList)),] }] }\n];\nMatListOption.propDecorators = {\n    _avatar: [{ type: ContentChild, args: [MatListAvatarCssMatStyler,] }],\n    _icon: [{ type: ContentChild, args: [MatListIconCssMatStyler,] }],\n    _lines: [{ type: ContentChildren, args: [MatLine, { descendants: true },] }],\n    _text: [{ type: ViewChild, args: ['text',] }],\n    checkboxPosition: [{ type: Input }],\n    color: [{ type: Input }],\n    value: [{ type: Input }],\n    disabled: [{ type: Input }],\n    selected: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListOption, [{\n        type: Component,\n        args: [{\n                selector: 'mat-list-option',\n                exportAs: 'matListOption',\n                inputs: ['disableRipple'],\n                host: {\n                    'role': 'option',\n                    'class': 'mat-list-item mat-list-option mat-focus-indicator',\n                    '(focus)': '_handleFocus()',\n                    '(blur)': '_handleBlur()',\n                    '(click)': '_handleClick()',\n                    '[class.mat-list-item-disabled]': 'disabled',\n                    '[class.mat-list-item-with-avatar]': '_avatar || _icon',\n                    // Manually set the \"primary\" or \"warn\" class if the color has been explicitly\n                    // set to \"primary\" or \"warn\". The pseudo checkbox picks up these classes for\n                    // its theme.\n                    '[class.mat-primary]': 'color === \"primary\"',\n                    // Even though accent is the default, we need to set this class anyway, because the  list might\n                    // be placed inside a parent that has one of the other colors with a higher specificity.\n                    '[class.mat-accent]': 'color !== \"primary\" && color !== \"warn\"',\n                    '[class.mat-warn]': 'color === \"warn\"',\n                    '[class.mat-list-single-selected-option]': 'selected && !selectionList.multiple',\n                    '[attr.aria-selected]': 'selected',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.tabindex]': '-1'\n                },\n                template: \"<div class=\\\"mat-list-item-content\\\"\\n  [class.mat-list-item-content-reverse]=\\\"checkboxPosition == 'after'\\\">\\n\\n  <div mat-ripple\\n    class=\\\"mat-list-item-ripple\\\"\\n    [matRippleTrigger]=\\\"_getHostElement()\\\"\\n    [matRippleDisabled]=\\\"_isRippleDisabled()\\\"></div>\\n\\n  <mat-pseudo-checkbox\\n    *ngIf=\\\"selectionList.multiple\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\"\\n    [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n  <div class=\\\"mat-list-text\\\" #text><ng-content></ng-content></div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatSelectionList, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatSelectionList))]\n            }] }]; }, { checkboxPosition: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], _avatar: [{\n            type: ContentChild,\n            args: [MatListAvatarCssMatStyler]\n        }], _icon: [{\n            type: ContentChild,\n            args: [MatListIconCssMatStyler]\n        }], _lines: [{\n            type: ContentChildren,\n            args: [MatLine, { descendants: true }]\n        }], _text: [{\n            type: ViewChild,\n            args: ['text']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatListOption.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatListOption.ngAcceptInputType_selected;\n    /** @type {?} */\n    MatListOption.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._selected;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._hasFocus;\n    /** @type {?} */\n    MatListOption.prototype._avatar;\n    /** @type {?} */\n    MatListOption.prototype._icon;\n    /** @type {?} */\n    MatListOption.prototype._lines;\n    /**\n     * DOM element containing the item's text.\n     * @type {?}\n     */\n    MatListOption.prototype._text;\n    /**\n     * Whether the label should appear before or after the checkbox. Defaults to 'after'\n     * @type {?}\n     */\n    MatListOption.prototype.checkboxPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._color;\n    /**\n     * This is set to true after the first OnChanges cycle so we don't clear the value of `selected`\n     * in the first cycle.\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._inputsInitialized;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._value;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._changeDetector;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatListOption.prototype.selectionList;\n}\n/**\n * Material Design list component where each item is a selectable option. Behaves as a listbox.\n */\nclass MatSelectionList extends _MatSelectionListMixinBase {\n    /**\n     * @param {?} _element\n     * @param {?} tabIndex\n     * @param {?} _changeDetector\n     */\n    constructor(_element, \n    // @breaking-change 11.0.0 Remove `tabIndex` parameter.\n    tabIndex, _changeDetector) {\n        super();\n        this._element = _element;\n        this._changeDetector = _changeDetector;\n        this._multiple = true;\n        this._contentInitialized = false;\n        /**\n         * Emits a change event whenever the selected state of an option changes.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Tabindex of the selection list.\n         * \\@breaking-change 11.0.0 Remove `tabIndex` input.\n         */\n        this.tabIndex = 0;\n        /**\n         * Theme color of the selection list. This sets the checkbox color for all list options.\n         */\n        this.color = 'accent';\n        /**\n         * Function used for comparing an option against the selected value when determining which\n         * options should appear as selected. The first argument is the value of an options. The second\n         * one is a value from the selected value. A boolean must be returned.\n         */\n        this.compareWith = (/**\n         * @param {?} a1\n         * @param {?} a2\n         * @return {?}\n         */\n        (a1, a2) => a1 === a2);\n        this._disabled = false;\n        /**\n         * The currently selected options.\n         */\n        this.selectedOptions = new SelectionModel(this._multiple);\n        /**\n         * The tabindex of the selection list.\n         */\n        this._tabIndex = -1;\n        /**\n         * View to model callback that should be called whenever the selected options change.\n         */\n        this._onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => { });\n        /**\n         * Emits when the list has been destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * View to model callback that should be called if the list or its options lost focus.\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n    }\n    /**\n     * Whether the selection list is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // The `MatSelectionList` and `MatListOption` are using the `OnPush` change detection\n        // strategy. Therefore the options will not check for any changes if the `MatSelectionList`\n        // changed its state. Since we know that a change to `disabled` property of the list affects\n        // the state of the options, we manually mark each option for check.\n        this._markOptionsForCheck();\n    }\n    /**\n     * Whether selection is limited to one or multiple items (default multiple).\n     * @return {?}\n     */\n    get multiple() { return this._multiple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set multiple(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._multiple) {\n            if (isDevMode() && this._contentInitialized) {\n                throw new Error('Cannot change `multiple` mode of mat-selection-list after initialization.');\n            }\n            this._multiple = newValue;\n            this.selectedOptions = new SelectionModel(this._multiple, this.selectedOptions.selected);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._contentInitialized = true;\n        this._keyManager = new FocusKeyManager(this.options)\n            .withWrap()\n            .withTypeAhead()\n            // Allow disabled items to be focusable. For accessibility reasons, there must be a way for\n            // screenreader users, that allows reading the different options of the list.\n            .skipPredicate((/**\n         * @return {?}\n         */\n        () => false))\n            .withAllowedModifierKeys(['shiftKey']);\n        if (this._value) {\n            this._setOptionsFromValues(this._value);\n        }\n        // If the user attempts to tab out of the selection list, allow focus to escape.\n        this._keyManager.tabOut.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._allowFocusEscape();\n        }));\n        // When the number of options change, update the tabindex of the selection list.\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._updateTabIndex();\n        }));\n        // Sync external changes to the model back to the options.\n        this.selectedOptions.changed.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (event.added) {\n                for (let item of event.added) {\n                    item.selected = true;\n                }\n            }\n            if (event.removed) {\n                for (let item of event.removed) {\n                    item.selected = false;\n                }\n            }\n        }));\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const disableRippleChanges = changes['disableRipple'];\n        /** @type {?} */\n        const colorChanges = changes['color'];\n        if ((disableRippleChanges && !disableRippleChanges.firstChange) ||\n            (colorChanges && !colorChanges.firstChange)) {\n            this._markOptionsForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._isDestroyed = true;\n    }\n    /**\n     * Focuses the selection list.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._element.nativeElement.focus(options);\n    }\n    /**\n     * Selects all of the options.\n     * @return {?}\n     */\n    selectAll() {\n        this._setAllOptionsSelected(true);\n    }\n    /**\n     * Deselects all of the options.\n     * @return {?}\n     */\n    deselectAll() {\n        this._setAllOptionsSelected(false);\n    }\n    /**\n     * Sets the focused option of the selection-list.\n     * @param {?} option\n     * @return {?}\n     */\n    _setFocusedOption(option) {\n        this._keyManager.updateActiveItem(option);\n    }\n    /**\n     * Removes an option from the selection list and updates the active item.\n     * @param {?} option\n     * @return {?} Currently-active item.\n     */\n    _removeOptionFromList(option) {\n        /** @type {?} */\n        const optionIndex = this._getOptionIndex(option);\n        if (optionIndex > -1 && this._keyManager.activeItemIndex === optionIndex) {\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.updateActiveItem(optionIndex - 1);\n            }\n            else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.updateActiveItem(Math.min(optionIndex + 1, this.options.length - 1));\n            }\n        }\n        return this._keyManager.activeItem;\n    }\n    /**\n     * Passes relevant key presses to our key manager.\n     * @param {?} event\n     * @return {?}\n     */\n    _keydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const manager = this._keyManager;\n        /** @type {?} */\n        const previousFocusIndex = manager.activeItemIndex;\n        /** @type {?} */\n        const hasModifier = hasModifierKey(event);\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                if (!hasModifier && !manager.isTyping()) {\n                    this._toggleFocusedOption();\n                    // Always prevent space from scrolling the page since the list has focus\n                    event.preventDefault();\n                }\n                break;\n            case HOME:\n            case END:\n                if (!hasModifier) {\n                    keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                    event.preventDefault();\n                }\n                break;\n            default:\n                // The \"A\" key gets special treatment, because it's used for the \"select all\" functionality.\n                if (keyCode === A && this.multiple && hasModifierKey(event, 'ctrlKey') &&\n                    !manager.isTyping()) {\n                    /** @type {?} */\n                    const shouldSelect = this.options.some((/**\n                     * @param {?} option\n                     * @return {?}\n                     */\n                    option => !option.disabled && !option.selected));\n                    this._setAllOptionsSelected(shouldSelect, true);\n                    event.preventDefault();\n                }\n                else {\n                    manager.onKeydown(event);\n                }\n        }\n        if (this.multiple && (keyCode === UP_ARROW || keyCode === DOWN_ARROW) && event.shiftKey &&\n            manager.activeItemIndex !== previousFocusIndex) {\n            this._toggleFocusedOption();\n        }\n    }\n    /**\n     * Reports a value change to the ControlValueAccessor\n     * @return {?}\n     */\n    _reportValueChange() {\n        // Stop reporting value changes after the list has been destroyed. This avoids\n        // cases where the list might wrongly reset its value once it is removed, but\n        // the form control is still live.\n        if (this.options && !this._isDestroyed) {\n            /** @type {?} */\n            const value = this._getSelectedOptionValues();\n            this._onChange(value);\n            this._value = value;\n        }\n    }\n    /**\n     * Emits a change event if the selected state of an option changed.\n     * @param {?} option\n     * @return {?}\n     */\n    _emitChangeEvent(option) {\n        this.selectionChange.emit(new MatSelectionListChange(this, option));\n    }\n    /**\n     * When the selection list is focused, we want to move focus to an option within the list. Do this\n     * by setting the appropriate option to be active.\n     * @return {?}\n     */\n    _onFocus() {\n        /** @type {?} */\n        const activeIndex = this._keyManager.activeItemIndex;\n        if (!activeIndex || (activeIndex === -1)) {\n            // If there is no active index, set focus to the first option.\n            this._keyManager.setFirstItemActive();\n        }\n        else {\n            // Otherwise, set focus to the active option.\n            this._keyManager.setActiveItem(activeIndex);\n        }\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} values\n     * @return {?}\n     */\n    writeValue(values) {\n        this._value = values;\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        }\n    }\n    /**\n     * Implemented as a part of ControlValueAccessor.\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Sets the selected options based on the specified values.\n     * @private\n     * @param {?} values\n     * @return {?}\n     */\n    _setOptionsFromValues(values) {\n        this.options.forEach((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option._setSelected(false)));\n        values.forEach((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => {\n            /** @type {?} */\n            const correspondingOption = this.options.find((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => {\n                // Skip options that are already in the model. This allows us to handle cases\n                // where the same primitive value is selected multiple times.\n                return option.selected ? false : this.compareWith(option.value, value);\n            }));\n            if (correspondingOption) {\n                correspondingOption._setSelected(true);\n            }\n        }));\n    }\n    /**\n     * Returns the values of the selected options.\n     * @private\n     * @return {?}\n     */\n    _getSelectedOptionValues() {\n        return this.options.filter((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.selected)).map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.value));\n    }\n    /**\n     * Toggles the state of the currently focused option if enabled.\n     * @private\n     * @return {?}\n     */\n    _toggleFocusedOption() {\n        /** @type {?} */\n        let focusedIndex = this._keyManager.activeItemIndex;\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            /** @type {?} */\n            let focusedOption = this.options.toArray()[focusedIndex];\n            if (focusedOption && !focusedOption.disabled && (this._multiple || !focusedOption.selected)) {\n                focusedOption.toggle();\n                // Emit a change event because the focused option changed its state through user\n                // interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n    /**\n     * Sets the selected state on all of the options\n     * and emits an event if anything changed.\n     * @private\n     * @param {?} isSelected\n     * @param {?=} skipDisabled\n     * @return {?}\n     */\n    _setAllOptionsSelected(isSelected, skipDisabled) {\n        // Keep track of whether anything changed, because we only want to\n        // emit the changed event when something actually changed.\n        /** @type {?} */\n        let hasChanged = false;\n        this.options.forEach((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => {\n            if ((!skipDisabled || !option.disabled) && option._setSelected(isSelected)) {\n                hasChanged = true;\n            }\n        }));\n        if (hasChanged) {\n            this._reportValueChange();\n        }\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     * @private\n     * @param {?} index The index to be checked.\n     * @return {?} True if the index is valid for our list of options.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this.options.length;\n    }\n    /**\n     * Returns the index of the specified list option.\n     * @private\n     * @param {?} option\n     * @return {?}\n     */\n    _getOptionIndex(option) {\n        return this.options.toArray().indexOf(option);\n    }\n    /**\n     * Marks all the options to be checked in the next change detection run.\n     * @private\n     * @return {?}\n     */\n    _markOptionsForCheck() {\n        if (this.options) {\n            this.options.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option._markForCheck()));\n        }\n    }\n    /**\n     * Removes the tabindex from the selection list and resets it back afterwards, allowing the user\n     * to tab out of it. This prevents the list from capturing focus and redirecting it back within\n     * the list, creating a focus trap if it user tries to tab away.\n     * @private\n     * @return {?}\n     */\n    _allowFocusEscape() {\n        this._tabIndex = -1;\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this._tabIndex = 0;\n            this._changeDetector.markForCheck();\n        }));\n    }\n    /**\n     * Updates the tabindex based upon if the selection list is empty.\n     * @private\n     * @return {?}\n     */\n    _updateTabIndex() {\n        this._tabIndex = (this.options.length === 0) ? -1 : 0;\n    }\n}\nMatSelectionList.ɵfac = function MatSelectionList_Factory(t) { return new (t || MatSelectionList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatSelectionList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSelectionList, selectors: [[\"mat-selection-list\"]], contentQueries: function MatSelectionList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListOption, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n    } }, hostAttrs: [\"role\", \"listbox\", 1, \"mat-selection-list\", \"mat-list-base\"], hostVars: 3, hostBindings: function MatSelectionList_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatSelectionList_focus_HostBindingHandler() { return ctx._onFocus(); })(\"keydown\", function MatSelectionList_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-multiselectable\", ctx.multiple)(\"aria-disabled\", ctx.disabled.toString())(\"tabindex\", ctx._tabIndex);\n    } }, inputs: { disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", color: \"color\", compareWith: \"compareWith\", disabled: \"disabled\", multiple: \"multiple\" }, outputs: { selectionChange: \"selectionChange\" }, exportAs: [\"matSelectionList\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SELECTION_LIST_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatSelectionList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatSelectionList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: ChangeDetectorRef }\n];\nMatSelectionList.propDecorators = {\n    options: [{ type: ContentChildren, args: [MatListOption, { descendants: true },] }],\n    selectionChange: [{ type: Output }],\n    tabIndex: [{ type: Input }],\n    color: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    disabled: [{ type: Input }],\n    multiple: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectionList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-selection-list',\n                exportAs: 'matSelectionList',\n                inputs: ['disableRipple'],\n                host: {\n                    'role': 'listbox',\n                    'class': 'mat-selection-list mat-list-base',\n                    '(focus)': '_onFocus()',\n                    '(keydown)': '_keydown($event)',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.tabindex]': '_tabIndex'\n                },\n                template: '<ng-content></ng-content>',\n                encapsulation: ViewEncapsulation.None,\n                providers: [MAT_SELECTION_LIST_VALUE_ACCESSOR],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { selectionChange: [{\n            type: Output\n        }], tabIndex: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], options: [{\n            type: ContentChildren,\n            args: [MatListOption, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSelectionList.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatSelectionList.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatSelectionList.ngAcceptInputType_multiple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._multiple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._contentInitialized;\n    /**\n     * The FocusKeyManager which handles focus.\n     * @type {?}\n     */\n    MatSelectionList.prototype._keyManager;\n    /**\n     * The option components contained within this selection-list.\n     * @type {?}\n     */\n    MatSelectionList.prototype.options;\n    /**\n     * Emits a change event whenever the selected state of an option changes.\n     * @type {?}\n     */\n    MatSelectionList.prototype.selectionChange;\n    /**\n     * Tabindex of the selection list.\n     * \\@breaking-change 11.0.0 Remove `tabIndex` input.\n     * @type {?}\n     */\n    MatSelectionList.prototype.tabIndex;\n    /**\n     * Theme color of the selection list. This sets the checkbox color for all list options.\n     * @type {?}\n     */\n    MatSelectionList.prototype.color;\n    /**\n     * Function used for comparing an option against the selected value when determining which\n     * options should appear as selected. The first argument is the value of an options. The second\n     * one is a value from the selected value. A boolean must be returned.\n     * @type {?}\n     */\n    MatSelectionList.prototype.compareWith;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._disabled;\n    /**\n     * The currently selected options.\n     * @type {?}\n     */\n    MatSelectionList.prototype.selectedOptions;\n    /**\n     * The tabindex of the selection list.\n     * @type {?}\n     */\n    MatSelectionList.prototype._tabIndex;\n    /**\n     * View to model callback that should be called whenever the selected options change.\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._onChange;\n    /**\n     * Keeps track of the currently-selected value.\n     * @type {?}\n     */\n    MatSelectionList.prototype._value;\n    /**\n     * Emits when the list has been destroyed.\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._destroyed;\n    /**\n     * View to model callback that should be called if the list or its options lost focus.\n     * @type {?}\n     */\n    MatSelectionList.prototype._onTouched;\n    /**\n     * Whether the list has been destroyed.\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._isDestroyed;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._changeDetector;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/list/list-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatListModule {\n}\nMatListModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatListModule });\nMatListModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatListModule_Factory(t) { return new (t || MatListModule)(); }, imports: [[MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule],\n        MatLineModule,\n        MatCommonModule,\n        MatPseudoCheckboxModule,\n        MatDividerModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatListModule, { declarations: function () { return [MatList,\n        MatNavList,\n        MatListItem,\n        MatListAvatarCssMatStyler,\n        MatListIconCssMatStyler,\n        MatListSubheaderCssMatStyler,\n        MatSelectionList,\n        MatListOption]; }, imports: function () { return [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule]; }, exports: function () { return [MatList,\n        MatNavList,\n        MatListItem,\n        MatListAvatarCssMatStyler,\n        MatLineModule,\n        MatCommonModule,\n        MatListIconCssMatStyler,\n        MatListSubheaderCssMatStyler,\n        MatPseudoCheckboxModule,\n        MatSelectionList,\n        MatListOption,\n        MatDividerModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule],\n                exports: [\n                    MatList,\n                    MatNavList,\n                    MatListItem,\n                    MatListAvatarCssMatStyler,\n                    MatLineModule,\n                    MatCommonModule,\n                    MatListIconCssMatStyler,\n                    MatListSubheaderCssMatStyler,\n                    MatPseudoCheckboxModule,\n                    MatSelectionList,\n                    MatListOption,\n                    MatDividerModule\n                ],\n                declarations: [\n                    MatList,\n                    MatNavList,\n                    MatListItem,\n                    MatListAvatarCssMatStyler,\n                    MatListIconCssMatStyler,\n                    MatListSubheaderCssMatStyler,\n                    MatSelectionList,\n                    MatListOption\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/list/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECTION_LIST_VALUE_ACCESSOR, MatList, MatListAvatarCssMatStyler, MatListIconCssMatStyler, MatListItem, MatListModule, MatListOption, MatListSubheaderCssMatStyler, MatNavList, MatSelectionList, MatSelectionListChange };\n\n//# sourceMappingURL=list.js.map","import { FocusMonitor, FocusKeyManager, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UP_ARROW, DOWN_ARROW, END, hasModifierKey, HOME, RIGHT_ARROW, LEFT_ARROW, ESCAPE } from '@angular/cdk/keycodes';\nimport { Directive, TemplateRef, ComponentFactoryResolver, ApplicationRef, Injector, ViewContainerRef, Inject, ChangeDetectorRef, InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Optional, Input, HostListener, QueryList, EventEmitter, NgZone, ContentChildren, ViewChild, ContentChild, Output, Self, NgModule } from '@angular/core';\nimport { Subject, Subscription, merge, of, asapScheduler } from 'rxjs';\nimport { startWith, switchMap, take, filter, takeUntil, delay } from 'rxjs/operators';\nimport { trigger, state, style, transition, group, query, animate } from '@angular/animations';\nimport { TemplatePortal, DomPortalOutlet } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinDisableRipple, mixinDisabled, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the mat-menu component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/overlay';\nimport * as ɵngcc5 from '@angular/cdk/bidi';\n\nconst _c0 = [\"mat-menu-item\", \"\"];\nconst _c1 = [\"*\"];\nfunction _MatMenu_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    const _r2 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n    ɵngcc0.ɵɵlistener(\"keydown\", function _MatMenu_ng_template_0_Template_div_keydown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1._handleKeydown($event); })(\"click\", function _MatMenu_ng_template_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3.closed.emit(\"click\"); })(\"@transformMenu.start\", function _MatMenu_ng_template_0_Template_div_animation_transformMenu_start_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4._onAnimationStart($event); })(\"@transformMenu.done\", function _MatMenu_ng_template_0_Template_div_animation_transformMenu_done_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5._onAnimationDone($event); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r0.panelId)(\"ngClass\", ctx_r0._classList)(\"@transformMenu\", ctx_r0._panelAnimationState);\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r0.ariaLabel || null)(\"aria-labelledby\", ctx_r0.ariaLabelledby || null)(\"aria-describedby\", ctx_r0.ariaDescribedby || null);\n} }\nconst matMenuAnimations = {\n    /**\n     * This animation controls the menu panel's entry and exit from the page.\n     *\n     * When the menu panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the menu panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformMenu: trigger('transformMenu', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)'\n        })),\n        transition('void => enter', group([\n            query('.mat-menu-content, .mat-mdc-menu-content', animate('100ms linear', style({\n                opacity: 1\n            }))),\n            animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({ transform: 'scale(1)' })),\n        ])),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ]),\n    /**\n     * This animation fades in the background color and content of the menu panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // TODO(crisbeto): this is inside the `transformMenu`\n        // now. Remove next time we do breaking changes.\n        state('showing', style({ opacity: 1 })),\n        transition('void => *', [\n            style({ opacity: 0 }),\n            animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n/**\n * @deprecated\n * \\@breaking-change 8.0.0\n * \\@docs-private\n * @type {?}\n */\nconst fadeInItems = matMenuAnimations.fadeInItems;\n/**\n * @deprecated\n * \\@breaking-change 8.0.0\n * \\@docs-private\n * @type {?}\n */\nconst transformMenu = matMenuAnimations.transformMenu;\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu-content.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Menu content that will be rendered lazily once the menu is opened.\n */\nclass MatMenuContent {\n    /**\n     * @param {?} _template\n     * @param {?} _componentFactoryResolver\n     * @param {?} _appRef\n     * @param {?} _injector\n     * @param {?} _viewContainerRef\n     * @param {?} _document\n     * @param {?=} _changeDetectorRef\n     */\n    constructor(_template, _componentFactoryResolver, _appRef, _injector, _viewContainerRef, _document, _changeDetectorRef) {\n        this._template = _template;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._injector = _injector;\n        this._viewContainerRef = _viewContainerRef;\n        this._document = _document;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Emits when the menu content has been attached.\n         */\n        this._attached = new Subject();\n    }\n    /**\n     * Attaches the content with a particular context.\n     * \\@docs-private\n     * @param {?=} context\n     * @return {?}\n     */\n    attach(context = {}) {\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n        this.detach();\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'), this._componentFactoryResolver, this._appRef, this._injector);\n        }\n        /** @type {?} */\n        const element = this._template.elementRef.nativeElement;\n        // Because we support opening the same menu from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        (/** @type {?} */ (element.parentNode)).insertBefore(this._outlet.outletElement, element);\n        // When `MatMenuContent` is used in an `OnPush` component, the insertion of the menu\n        // content via `createEmbeddedView` does not cause the content to be seen as \"dirty\"\n        // by Angular. This causes the `@ContentChildren` for menu items within the menu to\n        // not be updated by Angular. By explicitly marking for check here, we tell Angular that\n        // it needs to check for new menu items and update the `@ContentChild` in `MatMenu`.\n        // @breaking-change 9.0.0 Make change detector ref required\n        if (this._changeDetectorRef) {\n            this._changeDetectorRef.markForCheck();\n        }\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n    /**\n     * Detaches the content.\n     * \\@docs-private\n     * @return {?}\n     */\n    detach() {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    }\n}\nMatMenuContent.ɵfac = function MatMenuContent_Factory(t) { return new (t || MatMenuContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ApplicationRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatMenuContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatMenuContent, selectors: [[\"ng-template\", \"matMenuContent\", \"\"]] });\n/** @nocollapse */\nMatMenuContent.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: ComponentFactoryResolver },\n    { type: ApplicationRef },\n    { type: Injector },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: ChangeDetectorRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMenuContent, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matMenuContent]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ApplicationRef }, { type: ɵngcc0.Injector }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._portal;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._outlet;\n    /**\n     * Emits when the menu content has been attached.\n     * @type {?}\n     */\n    MatMenuContent.prototype._attached;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._template;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._componentFactoryResolver;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._appRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._injector;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._viewContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._changeDetectorRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Throws an exception for the case when menu trigger doesn't have a valid mat-menu instance\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatMenuMissingError() {\n    throw Error(`matMenuTriggerFor: must pass in an mat-menu instance.\n\n    Example:\n      <mat-menu #menu=\"matMenu\"></mat-menu>\n      <button [matMenuTriggerFor]=\"menu\"></button>`);\n}\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatMenuInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mat-menu xPosition=\"before\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatMenuInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mat-menu yPosition=\"above\" #menu=\"matMenu\"></mat-menu>`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu-panel.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token used to provide the parent menu to menu-specific components.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_MENU_PANEL = new InjectionToken('MAT_MENU_PANEL');\n/**\n * Interface for a custom menu panel that can be used with `matMenuTriggerFor`.\n * \\@docs-private\n * @record\n * @template T\n */\nfunction MatMenuPanel() { }\nif (false) {\n    /** @type {?} */\n    MatMenuPanel.prototype.xPosition;\n    /** @type {?} */\n    MatMenuPanel.prototype.yPosition;\n    /** @type {?} */\n    MatMenuPanel.prototype.overlapTrigger;\n    /** @type {?} */\n    MatMenuPanel.prototype.templateRef;\n    /** @type {?} */\n    MatMenuPanel.prototype.close;\n    /** @type {?|undefined} */\n    MatMenuPanel.prototype.parentMenu;\n    /** @type {?|undefined} */\n    MatMenuPanel.prototype.direction;\n    /** @type {?} */\n    MatMenuPanel.prototype.focusFirstItem;\n    /** @type {?} */\n    MatMenuPanel.prototype.resetActiveItem;\n    /** @type {?|undefined} */\n    MatMenuPanel.prototype.setPositionClasses;\n    /** @type {?|undefined} */\n    MatMenuPanel.prototype.lazyContent;\n    /** @type {?|undefined} */\n    MatMenuPanel.prototype.backdropClass;\n    /** @type {?|undefined} */\n    MatMenuPanel.prototype.hasBackdrop;\n    /** @type {?|undefined} */\n    MatMenuPanel.prototype.panelId;\n    /**\n     * @deprecated To be removed.\n     * \\@breaking-change 8.0.0\n     * @type {?|undefined}\n     */\n    MatMenuPanel.prototype.addItem;\n    /**\n     * @deprecated To be removed.\n     * \\@breaking-change 8.0.0\n     * @type {?|undefined}\n     */\n    MatMenuPanel.prototype.removeItem;\n    /**\n     * @param {?} depth\n     * @return {?}\n     */\n    MatMenuPanel.prototype.setElevation = function (depth) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu-item.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatMenuItem.\n/**\n * \\@docs-private\n */\nclass MatMenuItemBase {\n}\n/** @type {?} */\nconst _MatMenuItemMixinBase = mixinDisableRipple(mixinDisabled(MatMenuItemBase));\n/**\n * Single item inside of a `mat-menu`. Provides the menu item styling and accessibility treatment.\n */\nclass MatMenuItem extends _MatMenuItemMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?=} document\n     * @param {?=} _focusMonitor\n     * @param {?=} _parentMenu\n     */\n    constructor(_elementRef, document, _focusMonitor, _parentMenu) {\n        // @breaking-change 8.0.0 make `_focusMonitor` and `document` required params.\n        super();\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this._parentMenu = _parentMenu;\n        /**\n         * ARIA role for the menu item.\n         */\n        this.role = 'menuitem';\n        /**\n         * Stream that emits when the menu item is hovered.\n         */\n        this._hovered = new Subject();\n        /**\n         * Stream that emits when the menu item is focused.\n         */\n        this._focused = new Subject();\n        /**\n         * Whether the menu item is highlighted.\n         */\n        this._highlighted = false;\n        /**\n         * Whether the menu item acts as a trigger for a sub-menu.\n         */\n        this._triggersSubmenu = false;\n        if (_focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for menu items only when the focus was not caused by a\n            // mouse or touch interaction.\n            _focusMonitor.monitor(this._elementRef, false);\n        }\n        if (_parentMenu && _parentMenu.addItem) {\n            _parentMenu.addItem(this);\n        }\n        this._document = document;\n    }\n    /**\n     * Focuses the menu item.\n     * @param {?=} origin\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(origin = 'program', options) {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n        }\n        else {\n            this._getHostElement().focus(options);\n        }\n        this._focused.next(this);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef);\n        }\n        if (this._parentMenu && this._parentMenu.removeItem) {\n            this._parentMenu.removeItem(this);\n        }\n        this._hovered.complete();\n        this._focused.complete();\n    }\n    /**\n     * Used to set the `tabindex`.\n     * @return {?}\n     */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /**\n     * Returns the host DOM element.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /**\n     * Prevents the default element actions if it is disabled.\n     * @param {?} event\n     * @return {?}\n     */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _checkDisabled(event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n    /**\n     * Emits to the hover stream.\n     * @return {?}\n     */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleMouseEnter() {\n        this._hovered.next(this);\n    }\n    /**\n     * Gets the label to be used when determining whether the option should be focused.\n     * @return {?}\n     */\n    getLabel() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        /** @type {?} */\n        const textNodeType = this._document ? this._document.TEXT_NODE : 3;\n        /** @type {?} */\n        let output = '';\n        if (element.childNodes) {\n            /** @type {?} */\n            const length = element.childNodes.length;\n            // Go through all the top-level text nodes and extract their text.\n            // We skip anything that's not a text node to prevent the text from\n            // being thrown off by something like an icon.\n            for (let i = 0; i < length; i++) {\n                if (element.childNodes[i].nodeType === textNodeType) {\n                    output += element.childNodes[i].textContent;\n                }\n            }\n        }\n        return output.trim();\n    }\n}\nMatMenuItem.ɵfac = function MatMenuItem_Factory(t) { return new (t || MatMenuItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_PANEL, 8)); };\nMatMenuItem.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatMenuItem, selectors: [[\"\", \"mat-menu-item\", \"\"]], hostAttrs: [1, \"mat-focus-indicator\"], hostVars: 10, hostBindings: function MatMenuItem_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatMenuItem_click_HostBindingHandler($event) { return ctx._checkDisabled($event); })(\"mouseenter\", function MatMenuItem_mouseenter_HostBindingHandler() { return ctx._handleMouseEnter(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"role\", ctx.role)(\"tabindex\", ctx._getTabIndex())(\"aria-disabled\", ctx.disabled.toString())(\"disabled\", ctx.disabled || null);\n        ɵngcc0.ɵɵclassProp(\"mat-menu-item\", true)(\"mat-menu-item-highlighted\", ctx._highlighted)(\"mat-menu-item-submenu-trigger\", ctx._triggersSubmenu);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", role: \"role\" }, exportAs: [\"matMenuItem\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 2, vars: 2, consts: [[\"matRipple\", \"\", 1, \"mat-menu-ripple\", 3, \"matRippleDisabled\", \"matRippleTrigger\"]], template: function MatMenuItem_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelement(1, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleTrigger\", ctx._getHostElement());\n    } }, directives: [ɵngcc2.MatRipple], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatMenuItem.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: FocusMonitor },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_PANEL,] }, { type: Optional }] }\n];\nMatMenuItem.propDecorators = {\n    role: [{ type: Input }],\n    _checkDisabled: [{ type: HostListener, args: ['click', ['$event'],] }],\n    _handleMouseEnter: [{ type: HostListener, args: ['mouseenter',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMenuItem, [{\n        type: Component,\n        args: [{\n                selector: '[mat-menu-item]',\n                exportAs: 'matMenuItem',\n                inputs: ['disabled', 'disableRipple'],\n                host: {\n                    '[attr.role]': 'role',\n                    '[class.mat-menu-item]': 'true',\n                    '[class.mat-menu-item-highlighted]': '_highlighted',\n                    '[class.mat-menu-item-submenu-trigger]': '_triggersSubmenu',\n                    '[attr.tabindex]': '_getTabIndex()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.disabled]': 'disabled || null',\n                    'class': 'mat-focus-indicator'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                template: \"<ng-content></ng-content>\\n<div class=\\\"mat-menu-ripple\\\" matRipple\\n     [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\">\\n</div>\\n\"\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc1.FocusMonitor }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_PANEL]\n            }, {\n                type: Optional\n            }] }]; }, { role: [{\n            type: Input\n        }], _checkDisabled: [{\n            type: HostListener,\n            args: ['click', ['$event']]\n        }], _handleMouseEnter: [{\n            type: HostListener,\n            args: ['mouseenter']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatMenuItem.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatMenuItem.ngAcceptInputType_disableRipple;\n    /**\n     * ARIA role for the menu item.\n     * @type {?}\n     */\n    MatMenuItem.prototype.role;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuItem.prototype._document;\n    /**\n     * Stream that emits when the menu item is hovered.\n     * @type {?}\n     */\n    MatMenuItem.prototype._hovered;\n    /**\n     * Stream that emits when the menu item is focused.\n     * @type {?}\n     */\n    MatMenuItem.prototype._focused;\n    /**\n     * Whether the menu item is highlighted.\n     * @type {?}\n     */\n    MatMenuItem.prototype._highlighted;\n    /**\n     * Whether the menu item acts as a trigger for a sub-menu.\n     * @type {?}\n     */\n    MatMenuItem.prototype._triggersSubmenu;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuItem.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuItem.prototype._focusMonitor;\n    /** @type {?} */\n    MatMenuItem.prototype._parentMenu;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default `mat-menu` options that can be overridden.\n * @record\n */\nfunction MatMenuDefaultOptions() { }\nif (false) {\n    /**\n     * The x-axis position of the menu.\n     * @type {?}\n     */\n    MatMenuDefaultOptions.prototype.xPosition;\n    /**\n     * The y-axis position of the menu.\n     * @type {?}\n     */\n    MatMenuDefaultOptions.prototype.yPosition;\n    /**\n     * Whether the menu should overlap the menu trigger.\n     * @type {?}\n     */\n    MatMenuDefaultOptions.prototype.overlapTrigger;\n    /**\n     * Class to be applied to the menu's backdrop.\n     * @type {?}\n     */\n    MatMenuDefaultOptions.prototype.backdropClass;\n    /**\n     * Whether the menu has a backdrop.\n     * @type {?|undefined}\n     */\n    MatMenuDefaultOptions.prototype.hasBackdrop;\n}\n/**\n * Injection token to be used to override the default options for `mat-menu`.\n * @type {?}\n */\nconst MAT_MENU_DEFAULT_OPTIONS = new InjectionToken('mat-menu-default-options', {\n    providedIn: 'root',\n    factory: MAT_MENU_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_MENU_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop',\n    };\n}\n/**\n * Start elevation for the menu panel.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_MENU_BASE_ELEVATION = 4;\n/** @type {?} */\nlet menuPanelUid = 0;\n/**\n * Base class with all of the `MatMenu` functionality.\n */\n// tslint:disable-next-line:class-name\nclass _MatMenuBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?} _defaultOptions\n     */\n    constructor(_elementRef, _ngZone, _defaultOptions) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        this._xPosition = this._defaultOptions.xPosition;\n        this._yPosition = this._defaultOptions.yPosition;\n        /**\n         * Only the direct descendant menu items.\n         */\n        this._directDescendantItems = new QueryList();\n        /**\n         * Subscription to tab events on the menu panel\n         */\n        this._tabSubscription = Subscription.EMPTY;\n        /**\n         * Config object to be passed into the menu's ngClass\n         */\n        this._classList = {};\n        /**\n         * Current state of the panel animation.\n         */\n        this._panelAnimationState = 'void';\n        /**\n         * Emits whenever an animation on the menu completes.\n         */\n        this._animationDone = new Subject();\n        /**\n         * Class to be added to the backdrop element.\n         */\n        this.backdropClass = this._defaultOptions.backdropClass;\n        this._overlapTrigger = this._defaultOptions.overlapTrigger;\n        this._hasBackdrop = this._defaultOptions.hasBackdrop;\n        /**\n         * Event emitted when the menu is closed.\n         */\n        this.closed = new EventEmitter();\n        /**\n         * Event emitted when the menu is closed.\n         * @deprecated Switch to `closed` instead\n         * \\@breaking-change 8.0.0\n         */\n        this.close = this.closed;\n        this.panelId = `mat-menu-panel-${menuPanelUid++}`;\n    }\n    /**\n     * Position of the menu in the X axis.\n     * @return {?}\n     */\n    get xPosition() { return this._xPosition; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set xPosition(value) {\n        if (value !== 'before' && value !== 'after') {\n            throwMatMenuInvalidPositionX();\n        }\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n    /**\n     * Position of the menu in the Y axis.\n     * @return {?}\n     */\n    get yPosition() { return this._yPosition; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set yPosition(value) {\n        if (value !== 'above' && value !== 'below') {\n            throwMatMenuInvalidPositionY();\n        }\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n    /**\n     * Whether the menu should overlap its trigger.\n     * @return {?}\n     */\n    get overlapTrigger() { return this._overlapTrigger; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set overlapTrigger(value) {\n        this._overlapTrigger = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the menu has a backdrop.\n     * @return {?}\n     */\n    get hasBackdrop() { return this._hasBackdrop; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hasBackdrop(value) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @param {?} classes list of class names\n     * @return {?}\n     */\n    set panelClass(classes) {\n        /** @type {?} */\n        const previousPanelClass = this._previousPanelClass;\n        if (previousPanelClass && previousPanelClass.length) {\n            previousPanelClass.split(' ').forEach((/**\n             * @param {?} className\n             * @return {?}\n             */\n            (className) => {\n                this._classList[className] = false;\n            }));\n        }\n        this._previousPanelClass = classes;\n        if (classes && classes.length) {\n            classes.split(' ').forEach((/**\n             * @param {?} className\n             * @return {?}\n             */\n            (className) => {\n                this._classList[className] = true;\n            }));\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @deprecated Use `panelClass` instead.\n     * \\@breaking-change 8.0.0\n     * @return {?}\n     */\n    get classList() { return this.panelClass; }\n    /**\n     * @param {?} classes\n     * @return {?}\n     */\n    set classList(classes) { this.panelClass = classes; }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._updateDirectDescendants();\n        this._keyManager = new FocusKeyManager(this._directDescendantItems).withWrap().withTypeAhead();\n        this._tabSubscription = this._keyManager.tabOut.subscribe((/**\n         * @return {?}\n         */\n        () => this.closed.emit('tab')));\n        // If a user manually (programatically) focuses a menu item, we need to reflect that focus\n        // change back to the key manager. Note that we don't need to unsubscribe here because _focused\n        // is internal and we know that it gets completed on destroy.\n        this._directDescendantItems.changes.pipe(startWith(this._directDescendantItems), switchMap((/**\n         * @param {?} items\n         * @return {?}\n         */\n        items => merge(...items.map((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => item._focused)))))).subscribe((/**\n         * @param {?} focusedItem\n         * @return {?}\n         */\n        focusedItem => this._keyManager.updateActiveItem(focusedItem)));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._directDescendantItems.destroy();\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n    /**\n     * Stream that emits whenever the hovered menu item changes.\n     * @return {?}\n     */\n    _hovered() {\n        // Coerce the `changes` property because Angular types it as `Observable<any>`\n        /** @type {?} */\n        const itemChanges = (/** @type {?} */ (this._directDescendantItems.changes));\n        return (/** @type {?} */ (itemChanges.pipe(startWith(this._directDescendantItems), switchMap((/**\n         * @param {?} items\n         * @return {?}\n         */\n        items => merge(...items.map((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => item._hovered))))))));\n    }\n    /*\n       * Registers a menu item with the menu.\n       * @docs-private\n       * @deprecated No longer being used. To be removed.\n       * @breaking-change 9.0.0\n       */\n    /**\n     * @param {?} _item\n     * @return {?}\n     */\n    addItem(_item) { }\n    /**\n     * Removes an item from the menu.\n     * \\@docs-private\n     * @deprecated No longer being used. To be removed.\n     * \\@breaking-change 9.0.0\n     * @param {?} _item\n     * @return {?}\n     */\n    removeItem(_item) { }\n    /**\n     * Handle a keyboard event from the menu, delegating to the appropriate action.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const manager = this._keyManager;\n        switch (keyCode) {\n            case ESCAPE:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this.closed.emit('keydown');\n                }\n                break;\n            case LEFT_ARROW:\n                if (this.parentMenu && this.direction === 'ltr') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            case RIGHT_ARROW:\n                if (this.parentMenu && this.direction === 'rtl') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            case HOME:\n            case END:\n                if (!hasModifierKey(event)) {\n                    keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                    event.preventDefault();\n                }\n                break;\n            default:\n                if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n                    manager.setFocusOrigin('keyboard');\n                }\n                manager.onKeydown(event);\n        }\n    }\n    /**\n     * Focus the first item in the menu.\n     * @param {?=} origin Action from which the focus originated. Used to set the correct styling.\n     * @return {?}\n     */\n    focusFirstItem(origin = 'program') {\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this._ngZone.onStable.asObservable()\n                .pipe(take(1))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._focusFirstItem(origin)));\n        }\n        else {\n            this._focusFirstItem(origin);\n        }\n    }\n    /**\n     * Actual implementation that focuses the first item. Needs to be separated\n     * out so we don't repeat the same logic in the public `focusFirstItem` method.\n     * @private\n     * @param {?} origin\n     * @return {?}\n     */\n    _focusFirstItem(origin) {\n        /** @type {?} */\n        const manager = this._keyManager;\n        manager.setFocusOrigin(origin).setFirstItemActive();\n        // If there's no active item at this point, it means that all the items are disabled.\n        // Move focus to the menu panel so keyboard events like Escape still work. Also this will\n        // give _some_ feedback to screen readers.\n        if (!manager.activeItem && this._directDescendantItems.length) {\n            /** @type {?} */\n            let element = this._directDescendantItems.first._getHostElement().parentElement;\n            // Because the `mat-menu` is at the DOM insertion point, not inside the overlay, we don't\n            // have a nice way of getting a hold of the menu panel. We can't use a `ViewChild` either\n            // because the panel is inside an `ng-template`. We work around it by starting from one of\n            // the items and walking up the DOM.\n            while (element) {\n                if (element.getAttribute('role') === 'menu') {\n                    element.focus();\n                    break;\n                }\n                else {\n                    element = element.parentElement;\n                }\n            }\n        }\n    }\n    /**\n     * Resets the active item in the menu. This is used when the menu is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     * @return {?}\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n    /**\n     * Sets the menu panel elevation.\n     * @param {?} depth Number of parent menus that come before the menu.\n     * @return {?}\n     */\n    setElevation(depth) {\n        // The elevation starts at the base and increases by one for each level.\n        // Capped at 24 because that's the maximum elevation defined in the Material design spec.\n        /** @type {?} */\n        const elevation = Math.min(MAT_MENU_BASE_ELEVATION + depth, 24);\n        /** @type {?} */\n        const newElevation = `mat-elevation-z${elevation}`;\n        /** @type {?} */\n        const customElevation = Object.keys(this._classList).find((/**\n         * @param {?} c\n         * @return {?}\n         */\n        c => c.startsWith('mat-elevation-z')));\n        if (!customElevation || customElevation === this._previousElevation) {\n            if (this._previousElevation) {\n                this._classList[this._previousElevation] = false;\n            }\n            this._classList[newElevation] = true;\n            this._previousElevation = newElevation;\n        }\n    }\n    /**\n     * Adds classes to the menu panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * \\@docs-private\n     * @param {?=} posX Position of the menu along the x axis.\n     * @param {?=} posY Position of the menu along the y axis.\n     * @return {?}\n     */\n    setPositionClasses(posX = this.xPosition, posY = this.yPosition) {\n        /** @type {?} */\n        const classes = this._classList;\n        classes['mat-menu-before'] = posX === 'before';\n        classes['mat-menu-after'] = posX === 'after';\n        classes['mat-menu-above'] = posY === 'above';\n        classes['mat-menu-below'] = posY === 'below';\n    }\n    /**\n     * Starts the enter animation.\n     * @return {?}\n     */\n    _startAnimation() {\n        // @breaking-change 8.0.0 Combine with _resetAnimation.\n        this._panelAnimationState = 'enter';\n    }\n    /**\n     * Resets the panel animation to its initial state.\n     * @return {?}\n     */\n    _resetAnimation() {\n        // @breaking-change 8.0.0 Combine with _startAnimation.\n        this._panelAnimationState = 'void';\n    }\n    /**\n     * Callback that is invoked when the panel animation completes.\n     * @param {?} event\n     * @return {?}\n     */\n    _onAnimationDone(event) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onAnimationStart(event) {\n        this._isAnimating = true;\n        // Scroll the content element to the top as soon as the animation starts. This is necessary,\n        // because we move focus to the first item while it's still being animated, which can throw\n        // the browser off when it determines the scroll position. Alternatively we can move focus\n        // when the animation is done, however moving focus asynchronously will interrupt screen\n        // readers which are in the process of reading out the menu already. We take the `element`\n        // from the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n    /**\n     * Sets up a stream that will keep track of any newly-added menu items and will update the list\n     * of direct descendants. We collect the descendants this way, because `_allItems` can include\n     * items that are part of child menus, and using a custom way of registering items is unreliable\n     * when it comes to maintaining the item order.\n     * @private\n     * @return {?}\n     */\n    _updateDirectDescendants() {\n        this._allItems.changes\n            .pipe(startWith(this._allItems))\n            .subscribe((/**\n         * @param {?} items\n         * @return {?}\n         */\n        (items) => {\n            this._directDescendantItems.reset(items.filter((/**\n             * @param {?} item\n             * @return {?}\n             */\n            item => item._parentMenu === this)));\n            this._directDescendantItems.notifyOnChanges();\n        }));\n    }\n}\n_MatMenuBase.ɵfac = function _MatMenuBase_Factory(t) { return new (t || _MatMenuBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_DEFAULT_OPTIONS)); };\n_MatMenuBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatMenuBase, contentQueries: function _MatMenuBase_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuContent, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuItem, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuItem, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.lazyContent = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allItems = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.items = _t);\n    } }, viewQuery: function _MatMenuBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TemplateRef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\n    } }, inputs: { backdropClass: \"backdropClass\", xPosition: \"xPosition\", yPosition: \"yPosition\", overlapTrigger: \"overlapTrigger\", hasBackdrop: \"hasBackdrop\", panelClass: [\"class\", \"panelClass\"], classList: \"classList\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"] }, outputs: { closed: \"closed\", close: \"close\" } });\n/** @nocollapse */\n_MatMenuBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_DEFAULT_OPTIONS,] }] }\n];\n_MatMenuBase.propDecorators = {\n    _allItems: [{ type: ContentChildren, args: [MatMenuItem, { descendants: true },] }],\n    backdropClass: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    ariaDescribedby: [{ type: Input, args: ['aria-describedby',] }],\n    xPosition: [{ type: Input }],\n    yPosition: [{ type: Input }],\n    templateRef: [{ type: ViewChild, args: [TemplateRef,] }],\n    items: [{ type: ContentChildren, args: [MatMenuItem, { descendants: false },] }],\n    lazyContent: [{ type: ContentChild, args: [MatMenuContent,] }],\n    overlapTrigger: [{ type: Input }],\n    hasBackdrop: [{ type: Input }],\n    panelClass: [{ type: Input, args: ['class',] }],\n    classList: [{ type: Input }],\n    closed: [{ type: Output }],\n    close: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatMenuBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_DEFAULT_OPTIONS]\n            }] }]; }, { backdropClass: [{\n            type: Input\n        }], closed: [{\n            type: Output\n        }], close: [{\n            type: Output\n        }], xPosition: [{\n            type: Input\n        }], yPosition: [{\n            type: Input\n        }], overlapTrigger: [{\n            type: Input\n        }], hasBackdrop: [{\n            type: Input\n        }], panelClass: [{\n            type: Input,\n            args: ['class']\n        }], classList: [{\n            type: Input\n        }], _allItems: [{\n            type: ContentChildren,\n            args: [MatMenuItem, { descendants: true }]\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], ariaDescribedby: [{\n            type: Input,\n            args: ['aria-describedby']\n        }], templateRef: [{\n            type: ViewChild,\n            args: [TemplateRef]\n        }], items: [{\n            type: ContentChildren,\n            args: [MatMenuItem, { descendants: false }]\n        }], lazyContent: [{\n            type: ContentChild,\n            args: [MatMenuContent]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    _MatMenuBase.ngAcceptInputType_overlapTrigger;\n    /** @type {?} */\n    _MatMenuBase.ngAcceptInputType_hasBackdrop;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._keyManager;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._xPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._yPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._previousElevation;\n    /**\n     * All items inside the menu. Includes items nested inside another menu.\n     * @type {?}\n     */\n    _MatMenuBase.prototype._allItems;\n    /**\n     * Only the direct descendant menu items.\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._directDescendantItems;\n    /**\n     * Subscription to tab events on the menu panel\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._tabSubscription;\n    /**\n     * Config object to be passed into the menu's ngClass\n     * @type {?}\n     */\n    _MatMenuBase.prototype._classList;\n    /**\n     * Current state of the panel animation.\n     * @type {?}\n     */\n    _MatMenuBase.prototype._panelAnimationState;\n    /**\n     * Emits whenever an animation on the menu completes.\n     * @type {?}\n     */\n    _MatMenuBase.prototype._animationDone;\n    /**\n     * Whether the menu is animating.\n     * @type {?}\n     */\n    _MatMenuBase.prototype._isAnimating;\n    /**\n     * Parent menu of the current menu panel.\n     * @type {?}\n     */\n    _MatMenuBase.prototype.parentMenu;\n    /**\n     * Layout direction of the menu.\n     * @type {?}\n     */\n    _MatMenuBase.prototype.direction;\n    /**\n     * Class to be added to the backdrop element.\n     * @type {?}\n     */\n    _MatMenuBase.prototype.backdropClass;\n    /**\n     * aria-label for the menu panel.\n     * @type {?}\n     */\n    _MatMenuBase.prototype.ariaLabel;\n    /**\n     * aria-labelledby for the menu panel.\n     * @type {?}\n     */\n    _MatMenuBase.prototype.ariaLabelledby;\n    /**\n     * aria-describedby for the menu panel.\n     * @type {?}\n     */\n    _MatMenuBase.prototype.ariaDescribedby;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    _MatMenuBase.prototype.templateRef;\n    /**\n     * List of the items inside of a menu.\n     * @deprecated\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     */\n    _MatMenuBase.prototype.items;\n    /**\n     * Menu content that will be rendered lazily.\n     * \\@docs-private\n     * @type {?}\n     */\n    _MatMenuBase.prototype.lazyContent;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._overlapTrigger;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._hasBackdrop;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._previousPanelClass;\n    /**\n     * Event emitted when the menu is closed.\n     * @type {?}\n     */\n    _MatMenuBase.prototype.closed;\n    /**\n     * Event emitted when the menu is closed.\n     * @deprecated Switch to `closed` instead\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     */\n    _MatMenuBase.prototype.close;\n    /** @type {?} */\n    _MatMenuBase.prototype.panelId;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._defaultOptions;\n}\n/**\n * \\@docs-private We show the \"_MatMenu\" class as \"MatMenu\" in the docs.\n */\nclass MatMenu extends _MatMenuBase {\n}\nMatMenu.ɵfac = function MatMenu_Factory(t) { return ɵMatMenu_BaseFactory(t || MatMenu); };\nMatMenu.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatMenu, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatMenu_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatMenu);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMenu, [{\n        type: Directive\n    }], null, null); })();\n// Note on the weird inheritance setup: we need three classes, because the MDC-based menu has to\n// extend `MatMenu`, however keeping a reference to it will cause the inlined template and styles\n// to be retained as well. The MDC menu also has to provide itself as a `MatMenu` in order for\n// queries and DI to work correctly, while still not referencing the actual menu class.\n// Class responsibility is split up as follows:\n// * _MatMenuBase - provides all the functionality without any of the Angular metadata.\n// * MatMenu - keeps the same name symbol name as the current menu and\n// is used as a provider for DI and query purposes.\n// * _MatMenu - the actual menu component implementation with the Angular metadata that should\n// be tree shaken away for MDC.\n/**\n * \\@docs-public MatMenu\n */\n// tslint:disable-next-line:class-name\nclass _MatMenu extends MatMenu {\n    /**\n     * @param {?} elementRef\n     * @param {?} ngZone\n     * @param {?} defaultOptions\n     */\n    constructor(elementRef, ngZone, defaultOptions) {\n        super(elementRef, ngZone, defaultOptions);\n    }\n}\n_MatMenu.ɵfac = function _MatMenu_Factory(t) { return new (t || _MatMenu)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_DEFAULT_OPTIONS)); };\n_MatMenu.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: _MatMenu, selectors: [[\"mat-menu\"]], exportAs: [\"matMenu\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_MENU_PANEL, useExisting: MatMenu },\n            { provide: MatMenu, useExisting: _MatMenu }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 1, vars: 0, consts: [[\"tabindex\", \"-1\", \"role\", \"menu\", 1, \"mat-menu-panel\", 3, \"id\", \"ngClass\", \"keydown\", \"click\"], [1, \"mat-menu-content\"]], template: function _MatMenu_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, _MatMenu_ng_template_0_Template, 3, 6, \"ng-template\");\n    } }, directives: [ɵngcc3.NgClass], styles: [\".mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:\\\"\\\";display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"], encapsulation: 2, data: { animation: [\n            matMenuAnimations.transformMenu,\n            matMenuAnimations.fadeInItems\n        ] }, changeDetection: 0 });\n/** @nocollapse */\n_MatMenu.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_DEFAULT_OPTIONS,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatMenu, [{\n        type: Component,\n        args: [{\n                selector: 'mat-menu',\n                template: \"<ng-template>\\n  <div\\n    class=\\\"mat-menu-panel\\\"\\n    [id]=\\\"panelId\\\"\\n    [ngClass]=\\\"_classList\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\"\\n    (click)=\\\"closed.emit('click')\\\"\\n    [@transformMenu]=\\\"_panelAnimationState\\\"\\n    (@transformMenu.start)=\\\"_onAnimationStart($event)\\\"\\n    (@transformMenu.done)=\\\"_onAnimationDone($event)\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"menu\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby || null\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby || null\\\">\\n    <div class=\\\"mat-menu-content\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matMenu',\n                animations: [\n                    matMenuAnimations.transformMenu,\n                    matMenuAnimations.fadeInItems\n                ],\n                providers: [\n                    { provide: MAT_MENU_PANEL, useExisting: MatMenu },\n                    { provide: MatMenu, useExisting: _MatMenu }\n                ],\n                styles: [\".mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:\\\"\\\";display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu-trigger.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that determines the scroll handling while the menu is open.\n * @type {?}\n */\nconst MAT_MENU_SCROLL_STRATEGY = new InjectionToken('mat-menu-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_MENU_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_MENU_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * Default top padding of the menu panel.\n * @type {?}\n */\nconst MENU_PANEL_TOP_PADDING = 8;\n/**\n * Options for binding a passive event listener.\n * @type {?}\n */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n// TODO(andrewseguin): Remove the kebab versions in favor of camelCased attribute selectors\n/**\n * Directive applied to an element that should trigger a `mat-menu`.\n */\nclass MatMenuTrigger {\n    /**\n     * @param {?} _overlay\n     * @param {?} _element\n     * @param {?} _viewContainerRef\n     * @param {?} scrollStrategy\n     * @param {?} _parentMenu\n     * @param {?} _menuItemInstance\n     * @param {?} _dir\n     * @param {?=} _focusMonitor\n     */\n    constructor(_overlay, _element, _viewContainerRef, scrollStrategy, _parentMenu, _menuItemInstance, _dir, _focusMonitor) {\n        this._overlay = _overlay;\n        this._element = _element;\n        this._viewContainerRef = _viewContainerRef;\n        this._parentMenu = _parentMenu;\n        this._menuItemInstance = _menuItemInstance;\n        this._dir = _dir;\n        this._focusMonitor = _focusMonitor;\n        this._overlayRef = null;\n        this._menuOpen = false;\n        this._closingActionsSubscription = Subscription.EMPTY;\n        this._hoverSubscription = Subscription.EMPTY;\n        this._menuCloseSubscription = Subscription.EMPTY;\n        /**\n         * Handles touch start events on the trigger.\n         * Needs to be an arrow function so we can easily use addEventListener and removeEventListener.\n         */\n        this._handleTouchStart = (/**\n         * @return {?}\n         */\n        () => this._openedBy = 'touch');\n        // Tracking input type is necessary so it's possible to only auto-focus\n        // the first item of the list when the menu is opened via the keyboard\n        this._openedBy = null;\n        /**\n         * Whether focus should be restored when the menu is closed.\n         * Note that disabling this option can have accessibility implications\n         * and it's up to you to manage focus, if you decide to turn it off.\n         */\n        this.restoreFocus = true;\n        /**\n         * Event emitted when the associated menu is opened.\n         */\n        this.menuOpened = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is opened.\n         * @deprecated Switch to `menuOpened` instead\n         * \\@breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuOpen = this.menuOpened;\n        /**\n         * Event emitted when the associated menu is closed.\n         */\n        this.menuClosed = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is closed.\n         * @deprecated Switch to `menuClosed` instead\n         * \\@breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuClose = this.menuClosed;\n        _element.nativeElement.addEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        if (_menuItemInstance) {\n            _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\n        }\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * @deprecated\n     * \\@breaking-change 8.0.0\n     * @return {?}\n     */\n    get _deprecatedMatMenuTriggerFor() { return this.menu; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set _deprecatedMatMenuTriggerFor(v) {\n        this.menu = v;\n    }\n    /**\n     * References the menu instance that the trigger is associated with.\n     * @return {?}\n     */\n    get menu() { return this._menu; }\n    /**\n     * @param {?} menu\n     * @return {?}\n     */\n    set menu(menu) {\n        if (menu === this._menu) {\n            return;\n        }\n        this._menu = menu;\n        this._menuCloseSubscription.unsubscribe();\n        if (menu) {\n            this._menuCloseSubscription = menu.close.asObservable().subscribe((/**\n             * @param {?} reason\n             * @return {?}\n             */\n            reason => {\n                this._destroyMenu();\n                // If a click closed the menu, we should close the entire chain of nested menus.\n                if ((reason === 'click' || reason === 'tab') && this._parentMenu) {\n                    this._parentMenu.closed.emit(reason);\n                }\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._checkMenu();\n        this._handleHover();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n        this._element.nativeElement.removeEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        this._menuCloseSubscription.unsubscribe();\n        this._closingActionsSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n    /**\n     * Whether the menu is open.\n     * @return {?}\n     */\n    get menuOpen() {\n        return this._menuOpen;\n    }\n    /**\n     * The text direction of the containing app.\n     * @return {?}\n     */\n    get dir() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Whether the menu triggers a sub-menu or a top-level one.\n     * @return {?}\n     */\n    triggersSubmenu() {\n        return !!(this._menuItemInstance && this._parentMenu);\n    }\n    /**\n     * Toggles the menu between the open and closed states.\n     * @return {?}\n     */\n    toggleMenu() {\n        return this._menuOpen ? this.closeMenu() : this.openMenu();\n    }\n    /**\n     * Opens the menu.\n     * @return {?}\n     */\n    openMenu() {\n        if (this._menuOpen) {\n            return;\n        }\n        this._checkMenu();\n        /** @type {?} */\n        const overlayRef = this._createOverlay();\n        /** @type {?} */\n        const overlayConfig = overlayRef.getConfig();\n        this._setPosition((/** @type {?} */ (overlayConfig.positionStrategy)));\n        overlayConfig.hasBackdrop = this.menu.hasBackdrop == null ? !this.triggersSubmenu() :\n            this.menu.hasBackdrop;\n        overlayRef.attach(this._getPortal());\n        if (this.menu.lazyContent) {\n            this.menu.lazyContent.attach(this.menuData);\n        }\n        this._closingActionsSubscription = this._menuClosingActions().subscribe((/**\n         * @return {?}\n         */\n        () => this.closeMenu()));\n        this._initMenu();\n        if (this.menu instanceof MatMenu) {\n            this.menu._startAnimation();\n        }\n    }\n    /**\n     * Closes the menu.\n     * @return {?}\n     */\n    closeMenu() {\n        this.menu.close.emit();\n    }\n    /**\n     * Focuses the menu trigger.\n     * @param {?=} origin Source of the menu trigger's focus.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(origin = 'program', options) {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._element, origin, options);\n        }\n        else {\n            this._element.nativeElement.focus(options);\n        }\n    }\n    /**\n     * Closes the menu and does the necessary cleanup.\n     * @private\n     * @return {?}\n     */\n    _destroyMenu() {\n        if (!this._overlayRef || !this.menuOpen) {\n            return;\n        }\n        /** @type {?} */\n        const menu = this.menu;\n        this._closingActionsSubscription.unsubscribe();\n        this._overlayRef.detach();\n        this._restoreFocus();\n        if (menu instanceof MatMenu) {\n            menu._resetAnimation();\n            if (menu.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                menu._animationDone\n                    .pipe(filter((/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                event => event.toState === 'void')), take(1), \n                // Interrupt if the content got re-attached.\n                takeUntil(menu.lazyContent._attached))\n                    .subscribe({\n                    next: (/**\n                     * @return {?}\n                     */\n                    () => (/** @type {?} */ (menu.lazyContent)).detach()),\n                    // No matter whether the content got re-attached, reset the menu.\n                    complete: (/**\n                     * @return {?}\n                     */\n                    () => this._setIsMenuOpen(false))\n                });\n            }\n            else {\n                this._setIsMenuOpen(false);\n            }\n        }\n        else {\n            this._setIsMenuOpen(false);\n            if (menu.lazyContent) {\n                menu.lazyContent.detach();\n            }\n        }\n    }\n    /**\n     * This method sets the menu state to open and focuses the first item if\n     * the menu was opened via the keyboard.\n     * @private\n     * @return {?}\n     */\n    _initMenu() {\n        this.menu.parentMenu = this.triggersSubmenu() ? this._parentMenu : undefined;\n        this.menu.direction = this.dir;\n        this._setMenuElevation();\n        this._setIsMenuOpen(true);\n        this.menu.focusFirstItem(this._openedBy || 'program');\n    }\n    /**\n     * Updates the menu elevation based on the amount of parent menus that it has.\n     * @private\n     * @return {?}\n     */\n    _setMenuElevation() {\n        if (this.menu.setElevation) {\n            /** @type {?} */\n            let depth = 0;\n            /** @type {?} */\n            let parentMenu = this.menu.parentMenu;\n            while (parentMenu) {\n                depth++;\n                parentMenu = parentMenu.parentMenu;\n            }\n            this.menu.setElevation(depth);\n        }\n    }\n    /**\n     * Restores focus to the element that was focused before the menu was open.\n     * @private\n     * @return {?}\n     */\n    _restoreFocus() {\n        // We should reset focus if the user is navigating using a keyboard or\n        // if we have a top-level trigger which might cause focus to be lost\n        // when clicking on the backdrop.\n        if (this.restoreFocus) {\n            if (!this._openedBy) {\n                // Note that the focus style will show up both for `program` and\n                // `keyboard` so we don't have to specify which one it is.\n                this.focus();\n            }\n            else if (!this.triggersSubmenu()) {\n                this.focus(this._openedBy);\n            }\n        }\n        this._openedBy = null;\n    }\n    // set state rather than toggle to support triggers sharing a menu\n    /**\n     * @private\n     * @param {?} isOpen\n     * @return {?}\n     */\n    _setIsMenuOpen(isOpen) {\n        this._menuOpen = isOpen;\n        this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n        if (this.triggersSubmenu()) {\n            this._menuItemInstance._highlighted = isOpen;\n        }\n    }\n    /**\n     * This method checks that a valid instance of MatMenu has been passed into\n     * matMenuTriggerFor. If not, an exception is thrown.\n     * @private\n     * @return {?}\n     */\n    _checkMenu() {\n        if (!this.menu) {\n            throwMatMenuMissingError();\n        }\n    }\n    /**\n     * This method creates the overlay from the provided menu's template and saves its\n     * OverlayRef so that it can be attached to the DOM when openMenu is called.\n     * @private\n     * @return {?}\n     */\n    _createOverlay() {\n        if (!this._overlayRef) {\n            /** @type {?} */\n            const config = this._getOverlayConfig();\n            this._subscribeToPositions((/** @type {?} */ (config.positionStrategy)));\n            this._overlayRef = this._overlay.create(config);\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `MatMenuPanel` themselves.\n            this._overlayRef.keydownEvents().subscribe();\n        }\n        return this._overlayRef;\n    }\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @private\n     * @return {?} OverlayConfig\n     */\n    _getOverlayConfig() {\n        return new OverlayConfig({\n            positionStrategy: this._overlay.position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withTransformOriginOn('.mat-menu-panel, .mat-mdc-menu-panel'),\n            backdropClass: this.menu.backdropClass || 'cdk-overlay-transparent-backdrop',\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir\n        });\n    }\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the menu based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     * @private\n     * @param {?} position\n     * @return {?}\n     */\n    _subscribeToPositions(position) {\n        if (this.menu.setPositionClasses) {\n            position.positionChanges.subscribe((/**\n             * @param {?} change\n             * @return {?}\n             */\n            change => {\n                /** @type {?} */\n                const posX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                /** @type {?} */\n                const posY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n                (/** @type {?} */ (this.menu.setPositionClasses))(posX, posY);\n            }));\n        }\n    }\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @private\n     * @param {?} positionStrategy Strategy whose position to update.\n     * @return {?}\n     */\n    _setPosition(positionStrategy) {\n        let [originX, originFallbackX] = this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n        let [overlayY, overlayFallbackY] = this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        /** @type {?} */\n        let offsetY = 0;\n        if (this.triggersSubmenu()) {\n            // When the menu is a sub-menu, it should always align itself\n            // to the edges of the trigger, instead of overlapping it.\n            overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\n            originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n            offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\n        }\n        else if (!this.menu.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n        positionStrategy.withPositions([\n            { originX, originY, overlayX, overlayY, offsetY },\n            { originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY },\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            }\n        ]);\n    }\n    /**\n     * Returns a stream that emits whenever an action that should close the menu occurs.\n     * @private\n     * @return {?}\n     */\n    _menuClosingActions() {\n        /** @type {?} */\n        const backdrop = (/** @type {?} */ (this._overlayRef)).backdropClick();\n        /** @type {?} */\n        const detachments = (/** @type {?} */ (this._overlayRef)).detachments();\n        /** @type {?} */\n        const parentClose = this._parentMenu ? this._parentMenu.closed : of();\n        /** @type {?} */\n        const hover = this._parentMenu ? this._parentMenu._hovered().pipe(filter((/**\n         * @param {?} active\n         * @return {?}\n         */\n        active => active !== this._menuItemInstance)), filter((/**\n         * @return {?}\n         */\n        () => this._menuOpen))) : of();\n        return merge(backdrop, parentClose, hover, detachments);\n    }\n    /**\n     * Handles mouse presses on the trigger.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleMousedown(event) {\n        if (!isFakeMousedownFromScreenReader(event)) {\n            // Since right or middle button clicks won't trigger the `click` event,\n            // we shouldn't consider the menu as opened by mouse in those cases.\n            this._openedBy = event.button === 0 ? 'mouse' : null;\n            // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n            // we should prevent focus from moving onto it via click to avoid the\n            // highlight from lingering on the menu item.\n            if (this.triggersSubmenu()) {\n                event.preventDefault();\n            }\n        }\n    }\n    /**\n     * Handles key presses on the trigger.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        if (this.triggersSubmenu() && ((keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\n            (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\n            this.openMenu();\n        }\n    }\n    /**\n     * Handles click events on the trigger.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClick(event) {\n        if (this.triggersSubmenu()) {\n            // Stop event propagation to avoid closing the parent menu.\n            event.stopPropagation();\n            this.openMenu();\n        }\n        else {\n            this.toggleMenu();\n        }\n    }\n    /**\n     * Handles the cases where the user hovers over the trigger.\n     * @private\n     * @return {?}\n     */\n    _handleHover() {\n        // Subscribe to changes in the hovered item in order to toggle the panel.\n        if (!this.triggersSubmenu()) {\n            return;\n        }\n        this._hoverSubscription = this._parentMenu._hovered()\n            // Since we might have multiple competing triggers for the same menu (e.g. a sub-menu\n            // with different data and triggers), we have to delay it by a tick to ensure that\n            // it won't be closed immediately after it is opened.\n            .pipe(filter((/**\n         * @param {?} active\n         * @return {?}\n         */\n        active => active === this._menuItemInstance && !active.disabled)), delay(0, asapScheduler))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._openedBy = 'mouse';\n            // If the same menu is used between multiple triggers, it might still be animating\n            // while the new trigger tries to re-open it. Wait for the animation to finish\n            // before doing so. Also interrupt if the user moves to another item.\n            if (this.menu instanceof MatMenu && this.menu._isAnimating) {\n                // We need the `delay(0)` here in order to avoid\n                // 'changed after checked' errors in some cases. See #12194.\n                this.menu._animationDone\n                    .pipe(take(1), delay(0, asapScheduler), takeUntil(this._parentMenu._hovered()))\n                    .subscribe((/**\n                 * @return {?}\n                 */\n                () => this.openMenu()));\n            }\n            else {\n                this.openMenu();\n            }\n        }));\n    }\n    /**\n     * Gets the portal that should be attached to the overlay.\n     * @private\n     * @return {?}\n     */\n    _getPortal() {\n        // Note that we can avoid this check by keeping the portal on the menu panel.\n        // While it would be cleaner, we'd have to introduce another required method on\n        // `MatMenuPanel`, making it harder to consume.\n        if (!this._portal || this._portal.templateRef !== this.menu.templateRef) {\n            this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\n        }\n        return this._portal;\n    }\n}\nMatMenuTrigger.ɵfac = function MatMenuTrigger_Factory(t) { return new (t || MatMenuTrigger)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(MatMenu, 8), ɵngcc0.ɵɵdirectiveInject(MatMenuItem, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor)); };\nMatMenuTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatMenuTrigger, selectors: [[\"\", \"mat-menu-trigger-for\", \"\"], [\"\", \"matMenuTriggerFor\", \"\"]], hostAttrs: [\"aria-haspopup\", \"true\", 1, \"mat-menu-trigger\"], hostVars: 2, hostBindings: function MatMenuTrigger_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatMenuTrigger_mousedown_HostBindingHandler($event) { return ctx._handleMousedown($event); })(\"keydown\", function MatMenuTrigger_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"click\", function MatMenuTrigger_click_HostBindingHandler($event) { return ctx._handleClick($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.menuOpen || null)(\"aria-controls\", ctx.menuOpen ? ctx.menu.panelId : null);\n    } }, inputs: { restoreFocus: [\"matMenuTriggerRestoreFocus\", \"restoreFocus\"], _deprecatedMatMenuTriggerFor: [\"mat-menu-trigger-for\", \"_deprecatedMatMenuTriggerFor\"], menu: [\"matMenuTriggerFor\", \"menu\"], menuData: [\"matMenuTriggerData\", \"menuData\"] }, outputs: { menuOpened: \"menuOpened\", onMenuOpen: \"onMenuOpen\", menuClosed: \"menuClosed\", onMenuClose: \"onMenuClose\" }, exportAs: [\"matMenuTrigger\"] });\n/** @nocollapse */\nMatMenuTrigger.ctorParameters = () => [\n    { type: Overlay },\n    { type: ElementRef },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_SCROLL_STRATEGY,] }] },\n    { type: MatMenu, decorators: [{ type: Optional }] },\n    { type: MatMenuItem, decorators: [{ type: Optional }, { type: Self }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: FocusMonitor }\n];\nMatMenuTrigger.propDecorators = {\n    _deprecatedMatMenuTriggerFor: [{ type: Input, args: ['mat-menu-trigger-for',] }],\n    menu: [{ type: Input, args: ['matMenuTriggerFor',] }],\n    menuData: [{ type: Input, args: ['matMenuTriggerData',] }],\n    restoreFocus: [{ type: Input, args: ['matMenuTriggerRestoreFocus',] }],\n    menuOpened: [{ type: Output }],\n    onMenuOpen: [{ type: Output }],\n    menuClosed: [{ type: Output }],\n    onMenuClose: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMenuTrigger, [{\n        type: Directive,\n        args: [{\n                selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\n                host: {\n                    'class': 'mat-menu-trigger',\n                    'aria-haspopup': 'true',\n                    '[attr.aria-expanded]': 'menuOpen || null',\n                    '[attr.aria-controls]': 'menuOpen ? menu.panelId : null',\n                    '(mousedown)': '_handleMousedown($event)',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(click)': '_handleClick($event)'\n                },\n                exportAs: 'matMenuTrigger'\n            }]\n    }], function () { return [{ type: ɵngcc4.Overlay }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_SCROLL_STRATEGY]\n            }] }, { type: MatMenu, decorators: [{\n                type: Optional\n            }] }, { type: MatMenuItem, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc5.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc1.FocusMonitor }]; }, { restoreFocus: [{\n            type: Input,\n            args: ['matMenuTriggerRestoreFocus']\n        }], menuOpened: [{\n            type: Output\n        }], onMenuOpen: [{\n            type: Output\n        }], menuClosed: [{\n            type: Output\n        }], onMenuClose: [{\n            type: Output\n        }], _deprecatedMatMenuTriggerFor: [{\n            type: Input,\n            args: ['mat-menu-trigger-for']\n        }], menu: [{\n            type: Input,\n            args: ['matMenuTriggerFor']\n        }], menuData: [{\n            type: Input,\n            args: ['matMenuTriggerData']\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._portal;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._menuOpen;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._closingActionsSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._hoverSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._menuCloseSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._scrollStrategy;\n    /**\n     * Handles touch start events on the trigger.\n     * Needs to be an arrow function so we can easily use addEventListener and removeEventListener.\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._handleTouchStart;\n    /** @type {?} */\n    MatMenuTrigger.prototype._openedBy;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._menu;\n    /**\n     * Data to be passed along to any lazily-rendered content.\n     * @type {?}\n     */\n    MatMenuTrigger.prototype.menuData;\n    /**\n     * Whether focus should be restored when the menu is closed.\n     * Note that disabling this option can have accessibility implications\n     * and it's up to you to manage focus, if you decide to turn it off.\n     * @type {?}\n     */\n    MatMenuTrigger.prototype.restoreFocus;\n    /**\n     * Event emitted when the associated menu is opened.\n     * @type {?}\n     */\n    MatMenuTrigger.prototype.menuOpened;\n    /**\n     * Event emitted when the associated menu is opened.\n     * @deprecated Switch to `menuOpened` instead\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     */\n    MatMenuTrigger.prototype.onMenuOpen;\n    /**\n     * Event emitted when the associated menu is closed.\n     * @type {?}\n     */\n    MatMenuTrigger.prototype.menuClosed;\n    /**\n     * Event emitted when the associated menu is closed.\n     * @deprecated Switch to `menuClosed` instead\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     */\n    MatMenuTrigger.prototype.onMenuClose;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._viewContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._parentMenu;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._menuItemInstance;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._focusMonitor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used by both the current `MatMenuModule` and the MDC `MatMenuModule`\n * to declare the menu-related directives.\n */\n// tslint:disable-next-line:class-name\nclass _MatMenuDirectivesModule {\n}\n_MatMenuDirectivesModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: _MatMenuDirectivesModule });\n_MatMenuDirectivesModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function _MatMenuDirectivesModule_Factory(t) { return new (t || _MatMenuDirectivesModule)(); }, providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatMenuDirectivesModule, { declarations: function () { return [MatMenuTrigger,\n        MatMenuContent]; }, exports: function () { return [MatMenuTrigger,\n        MatMenuContent,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatMenuDirectivesModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatMenuTrigger, MatMenuContent, MatCommonModule],\n                declarations: [\n                    MatMenuTrigger,\n                    MatMenuContent,\n                ],\n                providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\nclass MatMenuModule {\n}\nMatMenuModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatMenuModule });\nMatMenuModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatMenuModule_Factory(t) { return new (t || MatMenuModule)(); }, providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[\n            CommonModule,\n            MatCommonModule,\n            MatRippleModule,\n            OverlayModule,\n            _MatMenuDirectivesModule,\n        ],\n        CdkScrollableModule, MatCommonModule,\n        _MatMenuDirectivesModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatMenuModule, { declarations: function () { return [_MatMenu,\n        MatMenuItem]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        MatRippleModule,\n        OverlayModule,\n        _MatMenuDirectivesModule]; }, exports: function () { return [CdkScrollableModule, MatCommonModule,\n        _MatMenu,\n        MatMenuItem,\n        _MatMenuDirectivesModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMenuModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    MatRippleModule,\n                    OverlayModule,\n                    _MatMenuDirectivesModule,\n                ],\n                exports: [CdkScrollableModule, MatCommonModule, _MatMenu, MatMenuItem, _MatMenuDirectivesModule],\n                declarations: [_MatMenu, MatMenuItem],\n                providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu-positions.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_MENU_DEFAULT_OPTIONS, MAT_MENU_PANEL, MAT_MENU_SCROLL_STRATEGY, MatMenu, MatMenuContent, MatMenuItem, MatMenuModule, MatMenuTrigger, _MatMenu, _MatMenuBase, _MatMenuDirectivesModule, fadeInItems, matMenuAnimations, transformMenu, MAT_MENU_DEFAULT_OPTIONS_FACTORY as ɵangular_material_src_material_menu_menu_a, MAT_MENU_SCROLL_STRATEGY_FACTORY as ɵangular_material_src_material_menu_menu_b, MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER as ɵangular_material_src_material_menu_menu_c };\n\n//# sourceMappingURL=menu.js.map","import { CommonModule } from '@angular/common';\nimport { Injectable, ɵɵdefineInjectable, Optional, SkipSelf, InjectionToken, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, Inject, Input, Output, NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\nimport { mixinDisabled, mixinInitialized } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/paginator/paginator-intl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/button';\nimport * as ɵngcc3 from '@angular/material/tooltip';\nimport * as ɵngcc4 from '@angular/material/form-field';\nimport * as ɵngcc5 from '@angular/material/select';\nimport * as ɵngcc6 from '@angular/material/core';\n\nfunction MatPaginator_div_2_mat_form_field_3_mat_option_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-option\", 19);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const pageSizeOption_r6 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"value\", pageSizeOption_r6);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", pageSizeOption_r6, \" \");\n} }\nfunction MatPaginator_div_2_mat_form_field_3_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-form-field\", 16);\n    ɵngcc0.ɵɵelementStart(1, \"mat-select\", 17);\n    ɵngcc0.ɵɵlistener(\"selectionChange\", function MatPaginator_div_2_mat_form_field_3_Template_mat_select_selectionChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(2); return ctx_r7._changePageSize($event.value); });\n    ɵngcc0.ɵɵtemplate(2, MatPaginator_div_2_mat_form_field_3_mat_option_2_Template, 2, 2, \"mat-option\", 18);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"color\", ctx_r3.color);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"value\", ctx_r3.pageSize)(\"disabled\", ctx_r3.disabled)(\"aria-label\", ctx_r3._intl.itemsPerPageLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r3._displayedPageSizeOptions);\n} }\nfunction MatPaginator_div_2_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 20);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r4.pageSize);\n} }\nfunction MatPaginator_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 13);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, MatPaginator_div_2_mat_form_field_3_Template, 3, 5, \"mat-form-field\", 14);\n    ɵngcc0.ɵɵtemplate(4, MatPaginator_div_2_div_4_Template, 2, 1, \"div\", 15);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0._intl.itemsPerPageLabel, \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0._displayedPageSizeOptions.length > 1);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0._displayedPageSizeOptions.length <= 1);\n} }\nfunction MatPaginator_button_6_Template(rf, ctx) { if (rf & 1) {\n    const _r10 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 21);\n    ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_button_6_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.firstPage(); });\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(1, \"svg\", 7);\n    ɵngcc0.ɵɵelement(2, \"path\", 22);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"matTooltip\", ctx_r1._intl.firstPageLabel)(\"matTooltipDisabled\", ctx_r1._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r1._previousButtonsDisabled());\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r1._intl.firstPageLabel);\n} }\nfunction MatPaginator_button_13_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵnamespaceHTML();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 23);\n    ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_button_13_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.lastPage(); });\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(1, \"svg\", 7);\n    ɵngcc0.ɵɵelement(2, \"path\", 24);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"matTooltip\", ctx_r2._intl.lastPageLabel)(\"matTooltipDisabled\", ctx_r2._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r2._nextButtonsDisabled());\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r2._intl.lastPageLabel);\n} }\nclass MatPaginatorIntl {\n    constructor() {\n        /**\n         * Stream to emit from when labels are changed. Use this to notify components when the labels have\n         * changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * A label for the page size selector.\n         */\n        this.itemsPerPageLabel = 'Items per page:';\n        /**\n         * A label for the button that increments the current page.\n         */\n        this.nextPageLabel = 'Next page';\n        /**\n         * A label for the button that decrements the current page.\n         */\n        this.previousPageLabel = 'Previous page';\n        /**\n         * A label for the button that moves to the first page.\n         */\n        this.firstPageLabel = 'First page';\n        /**\n         * A label for the button that moves to the last page.\n         */\n        this.lastPageLabel = 'Last page';\n        /**\n         * A label for the range of items within the current page and the length of the whole list.\n         */\n        this.getRangeLabel = (/**\n         * @param {?} page\n         * @param {?} pageSize\n         * @param {?} length\n         * @return {?}\n         */\n        (page, pageSize, length) => {\n            if (length == 0 || pageSize == 0) {\n                return `0 of ${length}`;\n            }\n            length = Math.max(length, 0);\n            /** @type {?} */\n            const startIndex = page * pageSize;\n            // If the start index exceeds the list length, do not try and fix the end index to the end.\n            /** @type {?} */\n            const endIndex = startIndex < length ?\n                Math.min(startIndex + pageSize, length) :\n                startIndex + pageSize;\n            return `${startIndex + 1} – ${endIndex} of ${length}`;\n        });\n    }\n}\nMatPaginatorIntl.ɵfac = function MatPaginatorIntl_Factory(t) { return new (t || MatPaginatorIntl)(); };\n/** @nocollapse */ MatPaginatorIntl.ɵprov = ɵɵdefineInjectable({ factory: function MatPaginatorIntl_Factory() { return new MatPaginatorIntl(); }, token: MatPaginatorIntl, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPaginatorIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * Stream to emit from when labels are changed. Use this to notify components when the labels have\n     * changed after initialization.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.changes;\n    /**\n     * A label for the page size selector.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.itemsPerPageLabel;\n    /**\n     * A label for the button that increments the current page.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.nextPageLabel;\n    /**\n     * A label for the button that decrements the current page.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.previousPageLabel;\n    /**\n     * A label for the button that moves to the first page.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.firstPageLabel;\n    /**\n     * A label for the button that moves to the last page.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.lastPageLabel;\n    /**\n     * A label for the range of items within the current page and the length of the whole list.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.getRangeLabel;\n}\n/**\n * \\@docs-private\n * @param {?} parentIntl\n * @return {?}\n */\nfunction MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatPaginatorIntl();\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_PAGINATOR_INTL_PROVIDER = {\n    // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n    provide: MatPaginatorIntl,\n    deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n    useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/paginator/paginator.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The default page size if there is no page size and there are no provided page size options.\n * @type {?}\n */\nconst DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nclass PageEvent {\n}\nif (false) {\n    /**\n     * The current page index.\n     * @type {?}\n     */\n    PageEvent.prototype.pageIndex;\n    /**\n     * Index of the page that was selected previously.\n     * \\@breaking-change 8.0.0 To be made into a required property.\n     * @type {?}\n     */\n    PageEvent.prototype.previousPageIndex;\n    /**\n     * The current page size\n     * @type {?}\n     */\n    PageEvent.prototype.pageSize;\n    /**\n     * The current total number of items being paged\n     * @type {?}\n     */\n    PageEvent.prototype.length;\n}\n/**\n * Object that can be used to configure the default options for the paginator module.\n * @record\n */\nfunction MatPaginatorDefaultOptions() { }\nif (false) {\n    /**\n     * Number of items to display on a page. By default set to 50.\n     * @type {?|undefined}\n     */\n    MatPaginatorDefaultOptions.prototype.pageSize;\n    /**\n     * The set of provided page size options to display to the user.\n     * @type {?|undefined}\n     */\n    MatPaginatorDefaultOptions.prototype.pageSizeOptions;\n    /**\n     * Whether to hide the page size selection UI from the user.\n     * @type {?|undefined}\n     */\n    MatPaginatorDefaultOptions.prototype.hidePageSize;\n    /**\n     * Whether to show the first/last buttons UI to the user.\n     * @type {?|undefined}\n     */\n    MatPaginatorDefaultOptions.prototype.showFirstLastButtons;\n}\n/**\n * Injection token that can be used to provide the default options for the paginator module.\n * @type {?}\n */\nconst MAT_PAGINATOR_DEFAULT_OPTIONS = new InjectionToken('MAT_PAGINATOR_DEFAULT_OPTIONS');\n// Boilerplate for applying mixins to MatPaginator.\n/**\n * \\@docs-private\n */\nclass MatPaginatorBase {\n}\n/** @type {?} */\nconst _MatPaginatorBase = mixinDisabled(mixinInitialized(MatPaginatorBase));\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\nclass MatPaginator extends _MatPaginatorBase {\n    /**\n     * @param {?} _intl\n     * @param {?} _changeDetectorRef\n     * @param {?=} defaults\n     */\n    constructor(_intl, _changeDetectorRef, defaults) {\n        super();\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._pageIndex = 0;\n        this._length = 0;\n        this._pageSizeOptions = [];\n        this._hidePageSize = false;\n        this._showFirstLastButtons = false;\n        /**\n         * Event emitted when the paginator changes the page size or page index.\n         */\n        this.page = new EventEmitter();\n        this._intlChanges = _intl.changes.subscribe((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n        if (defaults) {\n            const { pageSize, pageSizeOptions, hidePageSize, showFirstLastButtons } = defaults;\n            if (pageSize != null) {\n                this._pageSize = pageSize;\n            }\n            if (pageSizeOptions != null) {\n                this._pageSizeOptions = pageSizeOptions;\n            }\n            if (hidePageSize != null) {\n                this._hidePageSize = hidePageSize;\n            }\n            if (showFirstLastButtons != null) {\n                this._showFirstLastButtons = showFirstLastButtons;\n            }\n        }\n    }\n    /**\n     * The zero-based page index of the displayed list of items. Defaulted to 0.\n     * @return {?}\n     */\n    get pageIndex() { return this._pageIndex; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set pageIndex(value) {\n        this._pageIndex = Math.max(coerceNumberProperty(value), 0);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * The length of the total number of items that are being paginated. Defaulted to 0.\n     * @return {?}\n     */\n    get length() { return this._length; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set length(value) {\n        this._length = coerceNumberProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Number of items to display on a page. By default set to 50.\n     * @return {?}\n     */\n    get pageSize() { return this._pageSize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set pageSize(value) {\n        this._pageSize = Math.max(coerceNumberProperty(value), 0);\n        this._updateDisplayedPageSizeOptions();\n    }\n    /**\n     * The set of provided page size options to display to the user.\n     * @return {?}\n     */\n    get pageSizeOptions() { return this._pageSizeOptions; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set pageSizeOptions(value) {\n        this._pageSizeOptions = (value || []).map((/**\n         * @param {?} p\n         * @return {?}\n         */\n        p => coerceNumberProperty(p)));\n        this._updateDisplayedPageSizeOptions();\n    }\n    /**\n     * Whether to hide the page size selection UI from the user.\n     * @return {?}\n     */\n    get hidePageSize() { return this._hidePageSize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hidePageSize(value) {\n        this._hidePageSize = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether to show the first/last buttons UI to the user.\n     * @return {?}\n     */\n    get showFirstLastButtons() { return this._showFirstLastButtons; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set showFirstLastButtons(value) {\n        this._showFirstLastButtons = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._initialized = true;\n        this._updateDisplayedPageSizeOptions();\n        this._markInitialized();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n    }\n    /**\n     * Advances to the next page if it exists.\n     * @return {?}\n     */\n    nextPage() {\n        if (!this.hasNextPage()) {\n            return;\n        }\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex++;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Move back to the previous page if it exists.\n     * @return {?}\n     */\n    previousPage() {\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex--;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Move to the first page if not already there.\n     * @return {?}\n     */\n    firstPage() {\n        // hasPreviousPage being false implies at the start\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = 0;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Move to the last page if not already there.\n     * @return {?}\n     */\n    lastPage() {\n        // hasNextPage being false implies at the end\n        if (!this.hasNextPage()) {\n            return;\n        }\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.getNumberOfPages() - 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Whether there is a previous page.\n     * @return {?}\n     */\n    hasPreviousPage() {\n        return this.pageIndex >= 1 && this.pageSize != 0;\n    }\n    /**\n     * Whether there is a next page.\n     * @return {?}\n     */\n    hasNextPage() {\n        /** @type {?} */\n        const maxPageIndex = this.getNumberOfPages() - 1;\n        return this.pageIndex < maxPageIndex && this.pageSize != 0;\n    }\n    /**\n     * Calculate the number of pages\n     * @return {?}\n     */\n    getNumberOfPages() {\n        if (!this.pageSize) {\n            return 0;\n        }\n        return Math.ceil(this.length / this.pageSize);\n    }\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     * @param {?} pageSize\n     * @return {?}\n     */\n    _changePageSize(pageSize) {\n        // Current page needs to be updated to reflect the new page size. Navigate to the page\n        // containing the previous page's first item.\n        /** @type {?} */\n        const startIndex = this.pageIndex * this.pageSize;\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n        this.pageSize = pageSize;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Checks whether the buttons for going forwards should be disabled.\n     * @return {?}\n     */\n    _nextButtonsDisabled() {\n        return this.disabled || !this.hasNextPage();\n    }\n    /**\n     * Checks whether the buttons for going backwards should be disabled.\n     * @return {?}\n     */\n    _previousButtonsDisabled() {\n        return this.disabled || !this.hasPreviousPage();\n    }\n    /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     * @private\n     * @return {?}\n     */\n    _updateDisplayedPageSizeOptions() {\n        if (!this._initialized) {\n            return;\n        }\n        // If no page size is provided, use the first page size option or the default page size.\n        if (!this.pageSize) {\n            this._pageSize = this.pageSizeOptions.length != 0 ?\n                this.pageSizeOptions[0] :\n                DEFAULT_PAGE_SIZE;\n        }\n        this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n        if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n            this._displayedPageSizeOptions.push(this.pageSize);\n        }\n        // Sort the numbers using a number-specific sort function.\n        this._displayedPageSizeOptions.sort((/**\n         * @param {?} a\n         * @param {?} b\n         * @return {?}\n         */\n        (a, b) => a - b));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Emits an event notifying that a change of the paginator's properties has been triggered.\n     * @private\n     * @param {?} previousPageIndex\n     * @return {?}\n     */\n    _emitPageEvent(previousPageIndex) {\n        this.page.emit({\n            previousPageIndex,\n            pageIndex: this.pageIndex,\n            pageSize: this.pageSize,\n            length: this.length\n        });\n    }\n}\nMatPaginator.ɵfac = function MatPaginator_Factory(t) { return new (t || MatPaginator)(ɵngcc0.ɵɵdirectiveInject(MatPaginatorIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_PAGINATOR_DEFAULT_OPTIONS, 8)); };\nMatPaginator.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatPaginator, selectors: [[\"mat-paginator\"]], hostAttrs: [1, \"mat-paginator\"], inputs: { disabled: \"disabled\", pageIndex: \"pageIndex\", length: \"length\", pageSize: \"pageSize\", pageSizeOptions: \"pageSizeOptions\", hidePageSize: \"hidePageSize\", showFirstLastButtons: \"showFirstLastButtons\", color: \"color\" }, outputs: { page: \"page\" }, exportAs: [\"matPaginator\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 14, vars: 14, consts: [[1, \"mat-paginator-outer-container\"], [1, \"mat-paginator-container\"], [\"class\", \"mat-paginator-page-size\", 4, \"ngIf\"], [1, \"mat-paginator-range-actions\"], [1, \"mat-paginator-range-label\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"class\", \"mat-paginator-navigation-first\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-previous\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"viewBox\", \"0 0 24 24\", \"focusable\", \"false\", 1, \"mat-paginator-icon\"], [\"d\", \"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-next\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"class\", \"mat-paginator-navigation-last\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\", 4, \"ngIf\"], [1, \"mat-paginator-page-size\"], [1, \"mat-paginator-page-size-label\"], [\"class\", \"mat-paginator-page-size-select\", 3, \"color\", 4, \"ngIf\"], [\"class\", \"mat-paginator-page-size-value\", 4, \"ngIf\"], [1, \"mat-paginator-page-size-select\", 3, \"color\"], [3, \"value\", \"disabled\", \"aria-label\", \"selectionChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [1, \"mat-paginator-page-size-value\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-first\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-last\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"]], template: function MatPaginator_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatPaginator_div_2_Template, 5, 3, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3);\n        ɵngcc0.ɵɵelementStart(4, \"div\", 4);\n        ɵngcc0.ɵɵtext(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(6, MatPaginator_button_6_Template, 3, 5, \"button\", 5);\n        ɵngcc0.ɵɵelementStart(7, \"button\", 6);\n        ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_7_listener() { return ctx.previousPage(); });\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(8, \"svg\", 7);\n        ɵngcc0.ɵɵelement(9, \"path\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelementStart(10, \"button\", 9);\n        ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_10_listener() { return ctx.nextPage(); });\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(11, \"svg\", 7);\n        ɵngcc0.ɵɵelement(12, \"path\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(13, MatPaginator_button_13_Template, 3, 5, \"button\", 11);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.hidePageSize);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx._intl.getRangeLabel(ctx.pageIndex, ctx.pageSize, ctx.length), \" \");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showFirstLastButtons);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matTooltip\", ctx._intl.previousPageLabel)(\"matTooltipDisabled\", ctx._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._previousButtonsDisabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx._intl.previousPageLabel);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"matTooltip\", ctx._intl.nextPageLabel)(\"matTooltipDisabled\", ctx._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._nextButtonsDisabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx._intl.nextPageLabel);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showFirstLastButtons);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc2.MatButton, ɵngcc3.MatTooltip, ɵngcc4.MatFormField, ɵngcc5.MatSelect, ɵngcc1.NgForOf, ɵngcc6.MatOption], styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;min-height:56px;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatPaginator.ctorParameters = () => [\n    { type: MatPaginatorIntl },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_PAGINATOR_DEFAULT_OPTIONS,] }] }\n];\nMatPaginator.propDecorators = {\n    color: [{ type: Input }],\n    pageIndex: [{ type: Input }],\n    length: [{ type: Input }],\n    pageSize: [{ type: Input }],\n    pageSizeOptions: [{ type: Input }],\n    hidePageSize: [{ type: Input }],\n    showFirstLastButtons: [{ type: Input }],\n    page: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPaginator, [{\n        type: Component,\n        args: [{\n                selector: 'mat-paginator',\n                exportAs: 'matPaginator',\n                template: \"<div class=\\\"mat-paginator-outer-container\\\">\\n  <div class=\\\"mat-paginator-container\\\">\\n    <div class=\\\"mat-paginator-page-size\\\" *ngIf=\\\"!hidePageSize\\\">\\n      <div class=\\\"mat-paginator-page-size-label\\\">\\n        {{_intl.itemsPerPageLabel}}\\n      </div>\\n\\n      <mat-form-field\\n        *ngIf=\\\"_displayedPageSizeOptions.length > 1\\\"\\n        [color]=\\\"color\\\"\\n        class=\\\"mat-paginator-page-size-select\\\">\\n        <mat-select\\n          [value]=\\\"pageSize\\\"\\n          [disabled]=\\\"disabled\\\"\\n          [aria-label]=\\\"_intl.itemsPerPageLabel\\\"\\n          (selectionChange)=\\\"_changePageSize($event.value)\\\">\\n          <mat-option *ngFor=\\\"let pageSizeOption of _displayedPageSizeOptions\\\" [value]=\\\"pageSizeOption\\\">\\n            {{pageSizeOption}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <div\\n        class=\\\"mat-paginator-page-size-value\\\"\\n        *ngIf=\\\"_displayedPageSizeOptions.length <= 1\\\">{{pageSize}}</div>\\n    </div>\\n\\n    <div class=\\\"mat-paginator-range-actions\\\">\\n      <div class=\\\"mat-paginator-range-label\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-first\\\"\\n              (click)=\\\"firstPage()\\\"\\n              [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-last\\\"\\n              (click)=\\\"lastPage()\\\"\\n              [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n        </svg>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\",\n                inputs: ['disabled'],\n                host: {\n                    'class': 'mat-paginator'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;min-height:56px;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}\\n\"]\n            }]\n    }], function () { return [{ type: MatPaginatorIntl }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_PAGINATOR_DEFAULT_OPTIONS]\n            }] }]; }, { page: [{\n            type: Output\n        }], pageIndex: [{\n            type: Input\n        }], length: [{\n            type: Input\n        }], pageSize: [{\n            type: Input\n        }], pageSizeOptions: [{\n            type: Input\n        }], hidePageSize: [{\n            type: Input\n        }], showFirstLastButtons: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_pageIndex;\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_length;\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_pageSize;\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_hidePageSize;\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_showFirstLastButtons;\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._initialized;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._intlChanges;\n    /**\n     * Theme color to be used for the underlying form controls.\n     * @type {?}\n     */\n    MatPaginator.prototype.color;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._pageIndex;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._length;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._pageSize;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._pageSizeOptions;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._hidePageSize;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._showFirstLastButtons;\n    /**\n     * Event emitted when the paginator changes the page size or page index.\n     * @type {?}\n     */\n    MatPaginator.prototype.page;\n    /**\n     * Displayed set of page size options. Will be sorted and include current page size.\n     * @type {?}\n     */\n    MatPaginator.prototype._displayedPageSizeOptions;\n    /** @type {?} */\n    MatPaginator.prototype._intl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._changeDetectorRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/paginator/paginator-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatPaginatorModule {\n}\nMatPaginatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatPaginatorModule });\nMatPaginatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatPaginatorModule_Factory(t) { return new (t || MatPaginatorModule)(); }, providers: [MAT_PAGINATOR_INTL_PROVIDER], imports: [[\n            CommonModule,\n            MatButtonModule,\n            MatSelectModule,\n            MatTooltipModule,\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatPaginatorModule, { declarations: function () { return [MatPaginator]; }, imports: function () { return [CommonModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatTooltipModule]; }, exports: function () { return [MatPaginator]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPaginatorModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatButtonModule,\n                    MatSelectModule,\n                    MatTooltipModule,\n                ],\n                exports: [MatPaginator],\n                declarations: [MatPaginator],\n                providers: [MAT_PAGINATOR_INTL_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/paginator/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PAGINATOR_DEFAULT_OPTIONS, MAT_PAGINATOR_INTL_PROVIDER, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MatPaginator, MatPaginatorIntl, MatPaginatorModule, PageEvent };\n\n//# sourceMappingURL=paginator.js.map","import { InjectionToken, inject, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, NgZone, Optional, Inject, Input, ViewChild, Output, NgModule } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subscription, fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/progress-bar/progress-bar.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Last animation end data.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nconst _c0 = [\"primaryValueBar\"];\nfunction ProgressAnimationEnd() { }\nif (false) {\n    /** @type {?} */\n    ProgressAnimationEnd.prototype.value;\n}\n// Boilerplate for applying mixins to MatProgressBar.\n/**\n * \\@docs-private\n */\nclass MatProgressBarBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatProgressBarBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatProgressBarMixinBase = mixinColor(MatProgressBarBase, 'primary');\n/**\n * Injection token used to provide the current location to `MatProgressBar`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_PROGRESS_BAR_LOCATION = new InjectionToken('mat-progress-bar-location', { providedIn: 'root', factory: MAT_PROGRESS_BAR_LOCATION_FACTORY });\n/**\n * Stubbed out location for `MatProgressBar`.\n * \\@docs-private\n * @record\n */\nfunction MatProgressBarLocation() { }\nif (false) {\n    /** @type {?} */\n    MatProgressBarLocation.prototype.getPathname;\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_PROGRESS_BAR_LOCATION_FACTORY() {\n    /** @type {?} */\n    const _document = inject(DOCUMENT);\n    /** @type {?} */\n    const _location = _document ? _document.location : null;\n    return {\n        // Note that this needs to be a function, rather than a property, because Angular\n        // will only resolve it once, but we want the current path on each call.\n        getPathname: (/**\n         * @return {?}\n         */\n        () => _location ? (_location.pathname + _location.search) : '')\n    };\n}\n/**\n * Counter used to generate unique IDs for progress bars.\n * @type {?}\n */\nlet progressbarId = 0;\n/**\n * `<mat-progress-bar>` component.\n */\nclass MatProgressBar extends _MatProgressBarMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?=} _animationMode\n     * @param {?=} location\n     */\n    constructor(_elementRef, _ngZone, _animationMode, \n    /**\n     * @deprecated `location` parameter to be made required.\n     * @breaking-change 8.0.0\n     */\n    location) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._animationMode = _animationMode;\n        /**\n         * Flag that indicates whether NoopAnimations mode is set to true.\n         */\n        this._isNoopAnimation = false;\n        this._value = 0;\n        this._bufferValue = 0;\n        /**\n         * Event emitted when animation of the primary progress bar completes. This event will not\n         * be emitted when animations are disabled, nor will it be emitted for modes with continuous\n         * animations (indeterminate and query).\n         */\n        this.animationEnd = new EventEmitter();\n        /**\n         * Reference to animation end subscription to be unsubscribed on destroy.\n         */\n        this._animationEndSubscription = Subscription.EMPTY;\n        /**\n         * Mode of the progress bar.\n         *\n         * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n         * 'determinate'.\n         * Mirrored to mode attribute.\n         */\n        this.mode = 'determinate';\n        /**\n         * ID of the progress bar.\n         */\n        this.progressbarId = `mat-progress-bar-${progressbarId++}`;\n        // We need to prefix the SVG reference with the current path, otherwise they won't work\n        // in Safari if the page has a `<base>` tag. Note that we need quotes inside the `url()`,\n        // because named route URLs can contain parentheses (see #12338). Also we don't use since\n        // we can't tell the difference between whether\n        // the consumer is using the hash location strategy or not, because `Location` normalizes\n        // both `/#/foo/bar` and `/foo/bar` to the same thing.\n        /** @type {?} */\n        const path = location ? location.getPathname().split('#')[0] : '';\n        this._rectangleFillValue = `url('${path}#${this.progressbarId}')`;\n        this._isNoopAnimation = _animationMode === 'NoopAnimations';\n    }\n    /**\n     * Value of the progress bar. Defaults to zero. Mirrored to aria-valuenow.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set value(v) {\n        this._value = clamp(coerceNumberProperty(v) || 0);\n    }\n    /**\n     * Buffer value of the progress bar. Defaults to zero.\n     * @return {?}\n     */\n    get bufferValue() { return this._bufferValue; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set bufferValue(v) { this._bufferValue = clamp(v || 0); }\n    /**\n     * Gets the current transform value for the progress bar's primary indicator.\n     * @return {?}\n     */\n    _primaryTransform() {\n        /** @type {?} */\n        const scale = this.value / 100;\n        return { transform: `scaleX(${scale})` };\n    }\n    /**\n     * Gets the current transform value for the progress bar's buffer indicator. Only used if the\n     * progress mode is set to buffer, otherwise returns an undefined, causing no transformation.\n     * @return {?}\n     */\n    _bufferTransform() {\n        if (this.mode === 'buffer') {\n            /** @type {?} */\n            const scale = this.bufferValue / 100;\n            return { transform: `scaleX(${scale})` };\n        }\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // Run outside angular so change detection didn't get triggered on every transition end\n        // instead only on the animation that we care about (primary value bar's transitionend)\n        this._ngZone.runOutsideAngular(((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const element = this._primaryValueBar.nativeElement;\n            this._animationEndSubscription =\n                ((/** @type {?} */ (fromEvent(element, 'transitionend'))))\n                    .pipe(filter(((/**\n                 * @param {?} e\n                 * @return {?}\n                 */\n                (e) => e.target === element))))\n                    .subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    if (this.mode === 'determinate' || this.mode === 'buffer') {\n                        this._ngZone.run((/**\n                         * @return {?}\n                         */\n                        () => this.animationEnd.next({ value: this.value })));\n                    }\n                }));\n        })));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._animationEndSubscription.unsubscribe();\n    }\n}\nMatProgressBar.ɵfac = function MatProgressBar_Factory(t) { return new (t || MatProgressBar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_BAR_LOCATION, 8)); };\nMatProgressBar.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatProgressBar, selectors: [[\"mat-progress-bar\"]], viewQuery: function MatProgressBar_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._primaryValueBar = _t.first);\n    } }, hostAttrs: [\"role\", \"progressbar\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", 1, \"mat-progress-bar\"], hostVars: 4, hostBindings: function MatProgressBar_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-valuenow\", ctx.mode === \"indeterminate\" || ctx.mode === \"query\" ? null : ctx.value)(\"mode\", ctx.mode);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._isNoopAnimation);\n    } }, inputs: { color: \"color\", mode: \"mode\", value: \"value\", bufferValue: \"bufferValue\" }, outputs: { animationEnd: \"animationEnd\" }, exportAs: [\"matProgressBar\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 9, vars: 4, consts: [[\"width\", \"100%\", \"height\", \"4\", \"focusable\", \"false\", 1, \"mat-progress-bar-background\", \"mat-progress-bar-element\"], [\"x\", \"4\", \"y\", \"0\", \"width\", \"8\", \"height\", \"4\", \"patternUnits\", \"userSpaceOnUse\", 3, \"id\"], [\"cx\", \"2\", \"cy\", \"2\", \"r\", \"2\"], [\"width\", \"100%\", \"height\", \"100%\"], [1, \"mat-progress-bar-buffer\", \"mat-progress-bar-element\", 3, \"ngStyle\"], [1, \"mat-progress-bar-primary\", \"mat-progress-bar-fill\", \"mat-progress-bar-element\", 3, \"ngStyle\"], [\"primaryValueBar\", \"\"], [1, \"mat-progress-bar-secondary\", \"mat-progress-bar-fill\", \"mat-progress-bar-element\"]], template: function MatProgressBar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"defs\");\n        ɵngcc0.ɵɵelementStart(2, \"pattern\", 1);\n        ɵngcc0.ɵɵelement(3, \"circle\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(4, \"rect\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelement(5, \"div\", 4);\n        ɵngcc0.ɵɵelement(6, \"div\", 5, 6);\n        ɵngcc0.ɵɵelement(8, \"div\", 7);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.progressbarId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵattribute(\"fill\", ctx._rectangleFillValue);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._bufferTransform());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._primaryTransform());\n    } }, directives: [ɵngcc1.NgStyle], styles: [\".mat-progress-bar{display:block;height:4px;overflow:hidden;position:relative;transition:opacity 250ms linear;width:100%}._mat-animation-noopable.mat-progress-bar{transition:none;animation:none}.mat-progress-bar .mat-progress-bar-element,.mat-progress-bar .mat-progress-bar-fill::after{height:100%;position:absolute;width:100%}.mat-progress-bar .mat-progress-bar-background{width:calc(100% + 10px)}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-background{display:none}.mat-progress-bar .mat-progress-bar-buffer{transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-buffer{border-top:solid 5px;opacity:.5}.mat-progress-bar .mat-progress-bar-secondary{display:none}.mat-progress-bar .mat-progress-bar-fill{animation:none;transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-fill{border-top:solid 4px}.mat-progress-bar .mat-progress-bar-fill::after{animation:none;content:\\\"\\\";display:inline-block;left:0}.mat-progress-bar[dir=rtl],[dir=rtl] .mat-progress-bar{transform:rotateY(180deg)}.mat-progress-bar[mode=query]{transform:rotateZ(180deg)}.mat-progress-bar[mode=query][dir=rtl],[dir=rtl] .mat-progress-bar[mode=query]{transform:rotateZ(180deg) rotateY(180deg)}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-fill,.mat-progress-bar[mode=query] .mat-progress-bar-fill{transition:none}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary,.mat-progress-bar[mode=query] .mat-progress-bar-primary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-translate 2000ms infinite linear;left:-145.166611%}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-primary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary,.mat-progress-bar[mode=query] .mat-progress-bar-secondary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-translate 2000ms infinite linear;left:-54.888891%;display:block}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-secondary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=buffer] .mat-progress-bar-background{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-background-scroll 250ms infinite linear;display:block}.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-buffer,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-background{animation:none;transition-duration:1ms}@keyframes mat-progress-bar-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(83.67142%)}100%{transform:translateX(200.611057%)}}@keyframes mat-progress-bar-primary-indeterminate-scale{0%{transform:scaleX(0.08)}36.65%{animation-timing-function:cubic-bezier(0.334731, 0.12482, 0.785844, 1);transform:scaleX(0.08)}69.15%{animation-timing-function:cubic-bezier(0.06, 0.11, 0.6, 1);transform:scaleX(0.661479)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(37.651913%)}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(84.386165%)}100%{transform:translateX(160.277782%)}}@keyframes mat-progress-bar-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:scaleX(0.08)}19.15%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:scaleX(0.457104)}44.15%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:scaleX(0.72796)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-background-scroll{to{transform:translateX(-8px)}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatProgressBar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_PROGRESS_BAR_LOCATION,] }] }\n];\nMatProgressBar.propDecorators = {\n    value: [{ type: Input }],\n    bufferValue: [{ type: Input }],\n    _primaryValueBar: [{ type: ViewChild, args: ['primaryValueBar',] }],\n    animationEnd: [{ type: Output }],\n    mode: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressBar, [{\n        type: Component,\n        args: [{\n                selector: 'mat-progress-bar',\n                exportAs: 'matProgressBar',\n                host: {\n                    'role': 'progressbar',\n                    'aria-valuemin': '0',\n                    'aria-valuemax': '100',\n                    '[attr.aria-valuenow]': '(mode === \"indeterminate\" || mode === \"query\") ? null : value',\n                    '[attr.mode]': 'mode',\n                    'class': 'mat-progress-bar',\n                    '[class._mat-animation-noopable]': '_isNoopAnimation'\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  The background div is named as such because it appears below the other divs and is not sized based\\n  on values.\\n-->\\n<svg width=\\\"100%\\\" height=\\\"4\\\" focusable=\\\"false\\\" class=\\\"mat-progress-bar-background mat-progress-bar-element\\\">\\n  <defs>\\n    <pattern [id]=\\\"progressbarId\\\" x=\\\"4\\\" y=\\\"0\\\" width=\\\"8\\\" height=\\\"4\\\" patternUnits=\\\"userSpaceOnUse\\\">\\n      <circle cx=\\\"2\\\" cy=\\\"2\\\" r=\\\"2\\\"/>\\n    </pattern>\\n  </defs>\\n  <rect [attr.fill]=\\\"_rectangleFillValue\\\" width=\\\"100%\\\" height=\\\"100%\\\"/>\\n</svg>\\n<div class=\\\"mat-progress-bar-buffer mat-progress-bar-element\\\" [ngStyle]=\\\"_bufferTransform()\\\"></div>\\n<div class=\\\"mat-progress-bar-primary mat-progress-bar-fill mat-progress-bar-element\\\" [ngStyle]=\\\"_primaryTransform()\\\" #primaryValueBar></div>\\n<div class=\\\"mat-progress-bar-secondary mat-progress-bar-fill mat-progress-bar-element\\\"></div>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-bar{display:block;height:4px;overflow:hidden;position:relative;transition:opacity 250ms linear;width:100%}._mat-animation-noopable.mat-progress-bar{transition:none;animation:none}.mat-progress-bar .mat-progress-bar-element,.mat-progress-bar .mat-progress-bar-fill::after{height:100%;position:absolute;width:100%}.mat-progress-bar .mat-progress-bar-background{width:calc(100% + 10px)}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-background{display:none}.mat-progress-bar .mat-progress-bar-buffer{transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-buffer{border-top:solid 5px;opacity:.5}.mat-progress-bar .mat-progress-bar-secondary{display:none}.mat-progress-bar .mat-progress-bar-fill{animation:none;transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-fill{border-top:solid 4px}.mat-progress-bar .mat-progress-bar-fill::after{animation:none;content:\\\"\\\";display:inline-block;left:0}.mat-progress-bar[dir=rtl],[dir=rtl] .mat-progress-bar{transform:rotateY(180deg)}.mat-progress-bar[mode=query]{transform:rotateZ(180deg)}.mat-progress-bar[mode=query][dir=rtl],[dir=rtl] .mat-progress-bar[mode=query]{transform:rotateZ(180deg) rotateY(180deg)}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-fill,.mat-progress-bar[mode=query] .mat-progress-bar-fill{transition:none}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary,.mat-progress-bar[mode=query] .mat-progress-bar-primary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-translate 2000ms infinite linear;left:-145.166611%}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-primary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary,.mat-progress-bar[mode=query] .mat-progress-bar-secondary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-translate 2000ms infinite linear;left:-54.888891%;display:block}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-secondary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=buffer] .mat-progress-bar-background{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-background-scroll 250ms infinite linear;display:block}.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-buffer,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-background{animation:none;transition-duration:1ms}@keyframes mat-progress-bar-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(83.67142%)}100%{transform:translateX(200.611057%)}}@keyframes mat-progress-bar-primary-indeterminate-scale{0%{transform:scaleX(0.08)}36.65%{animation-timing-function:cubic-bezier(0.334731, 0.12482, 0.785844, 1);transform:scaleX(0.08)}69.15%{animation-timing-function:cubic-bezier(0.06, 0.11, 0.6, 1);transform:scaleX(0.661479)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(37.651913%)}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(84.386165%)}100%{transform:translateX(160.277782%)}}@keyframes mat-progress-bar-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:scaleX(0.08)}19.15%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:scaleX(0.457104)}44.15%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:scaleX(0.72796)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-background-scroll{to{transform:translateX(-8px)}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_PROGRESS_BAR_LOCATION]\n            }] }]; }, { animationEnd: [{\n            type: Output\n        }], mode: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], bufferValue: [{\n            type: Input\n        }], _primaryValueBar: [{\n            type: ViewChild,\n            args: ['primaryValueBar']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatProgressBar.ngAcceptInputType_value;\n    /**\n     * Flag that indicates whether NoopAnimations mode is set to true.\n     * @type {?}\n     */\n    MatProgressBar.prototype._isNoopAnimation;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressBar.prototype._value;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressBar.prototype._bufferValue;\n    /** @type {?} */\n    MatProgressBar.prototype._primaryValueBar;\n    /**\n     * Event emitted when animation of the primary progress bar completes. This event will not\n     * be emitted when animations are disabled, nor will it be emitted for modes with continuous\n     * animations (indeterminate and query).\n     * @type {?}\n     */\n    MatProgressBar.prototype.animationEnd;\n    /**\n     * Reference to animation end subscription to be unsubscribed on destroy.\n     * @type {?}\n     * @private\n     */\n    MatProgressBar.prototype._animationEndSubscription;\n    /**\n     * Mode of the progress bar.\n     *\n     * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n     * 'determinate'.\n     * Mirrored to mode attribute.\n     * @type {?}\n     */\n    MatProgressBar.prototype.mode;\n    /**\n     * ID of the progress bar.\n     * @type {?}\n     */\n    MatProgressBar.prototype.progressbarId;\n    /**\n     * Attribute to be used for the `fill` attribute on the internal `rect` element.\n     * @type {?}\n     */\n    MatProgressBar.prototype._rectangleFillValue;\n    /** @type {?} */\n    MatProgressBar.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressBar.prototype._ngZone;\n    /** @type {?} */\n    MatProgressBar.prototype._animationMode;\n}\n/**\n * Clamps a value to be between two numbers, by default 0 and 100.\n * @param {?} v\n * @param {?=} min\n * @param {?=} max\n * @return {?}\n */\nfunction clamp(v, min = 0, max = 100) {\n    return Math.max(min, Math.min(max, v));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/progress-bar/progress-bar-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatProgressBarModule {\n}\nMatProgressBarModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatProgressBarModule });\nMatProgressBarModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatProgressBarModule_Factory(t) { return new (t || MatProgressBarModule)(); }, imports: [[CommonModule, MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatProgressBarModule, { declarations: function () { return [MatProgressBar]; }, imports: function () { return [CommonModule, MatCommonModule]; }, exports: function () { return [MatProgressBar,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressBarModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, MatCommonModule],\n                exports: [MatProgressBar, MatCommonModule],\n                declarations: [MatProgressBar]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/progress-bar/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_BAR_LOCATION, MAT_PROGRESS_BAR_LOCATION_FACTORY, MatProgressBar, MatProgressBarModule };\n\n//# sourceMappingURL=progress-bar.js.map","import { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { _getShadowRoot, Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/progress-spinner/progress-spinner.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base reference size of the spinner.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/common';\n\nfunction MatProgressSpinner__svg_circle_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"animation-name\", \"mat-progress-spinner-stroke-rotate-\" + ctx_r0.diameter)(\"stroke-dashoffset\", ctx_r0._strokeDashOffset, \"px\")(\"stroke-dasharray\", ctx_r0._strokeCircumference, \"px\")(\"stroke-width\", ctx_r0._circleStrokeWidth, \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r0._circleRadius);\n} }\nfunction MatProgressSpinner__svg_circle_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"stroke-dashoffset\", ctx_r1._strokeDashOffset, \"px\")(\"stroke-dasharray\", ctx_r1._strokeCircumference, \"px\")(\"stroke-width\", ctx_r1._circleStrokeWidth, \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r1._circleRadius);\n} }\nfunction MatSpinner__svg_circle_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"animation-name\", \"mat-progress-spinner-stroke-rotate-\" + ctx_r0.diameter)(\"stroke-dashoffset\", ctx_r0._strokeDashOffset, \"px\")(\"stroke-dasharray\", ctx_r0._strokeCircumference, \"px\")(\"stroke-width\", ctx_r0._circleStrokeWidth, \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r0._circleRadius);\n} }\nfunction MatSpinner__svg_circle_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"stroke-dashoffset\", ctx_r1._strokeDashOffset, \"px\")(\"stroke-dasharray\", ctx_r1._strokeCircumference, \"px\")(\"stroke-width\", ctx_r1._circleStrokeWidth, \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r1._circleRadius);\n} }\nconst BASE_SIZE = 100;\n/**\n * Base reference stroke width of the spinner.\n * \\@docs-private\n * @type {?}\n */\nconst BASE_STROKE_WIDTH = 10;\n// Boilerplate for applying mixins to MatProgressSpinner.\n/**\n * \\@docs-private\n */\nclass MatProgressSpinnerBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatProgressSpinnerBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatProgressSpinnerMixinBase = mixinColor(MatProgressSpinnerBase, 'primary');\n/**\n * Default `mat-progress-spinner` options that can be overridden.\n * @record\n */\nfunction MatProgressSpinnerDefaultOptions() { }\nif (false) {\n    /**\n     * Diameter of the spinner.\n     * @type {?|undefined}\n     */\n    MatProgressSpinnerDefaultOptions.prototype.diameter;\n    /**\n     * Width of the spinner's stroke.\n     * @type {?|undefined}\n     */\n    MatProgressSpinnerDefaultOptions.prototype.strokeWidth;\n    /**\n     * Whether the animations should be force to be enabled, ignoring if the current environment is\n     * using NoopAnimationsModule.\n     * @type {?|undefined}\n     */\n    MatProgressSpinnerDefaultOptions.prototype._forceAnimations;\n}\n/**\n * Injection token to be used to override the default options for `mat-progress-spinner`.\n * @type {?}\n */\nconst MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS = new InjectionToken('mat-progress-spinner-default-options', {\n    providedIn: 'root',\n    factory: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY() {\n    return { diameter: BASE_SIZE };\n}\n// .0001 percentage difference is necessary in order to avoid unwanted animation frames\n// for example because the animation duration is 4 seconds, .1% accounts to 4ms\n// which are enough to see the flicker described in\n// https://github.com/angular/components/issues/8984\n/** @type {?} */\nconst INDETERMINATE_ANIMATION_TEMPLATE = `\n @keyframes mat-progress-spinner-stroke-rotate-DIAMETER {\n    0%      { stroke-dashoffset: START_VALUE;  transform: rotate(0); }\n    12.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(0); }\n    12.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(72.5deg); }\n    25%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(72.5deg); }\n\n    25.0001%   { stroke-dashoffset: START_VALUE;  transform: rotate(270deg); }\n    37.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(270deg); }\n    37.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(161.5deg); }\n    50%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(161.5deg); }\n\n    50.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(180deg); }\n    62.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(180deg); }\n    62.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(251.5deg); }\n    75%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(251.5deg); }\n\n    75.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(90deg); }\n    87.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(90deg); }\n    87.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(341.5deg); }\n    100%    { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(341.5deg); }\n  }\n`;\n/**\n * `<mat-progress-spinner>` component.\n */\nclass MatProgressSpinner extends _MatProgressSpinnerMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} platform\n     * @param {?} _document\n     * @param {?} animationMode\n     * @param {?=} defaults\n     */\n    constructor(_elementRef, platform, _document, animationMode, defaults) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._document = _document;\n        this._diameter = BASE_SIZE;\n        this._value = 0;\n        this._fallbackAnimation = false;\n        /**\n         * Mode of the progress circle\n         */\n        this.mode = 'determinate';\n        /** @type {?} */\n        const trackedDiameters = MatProgressSpinner._diameters;\n        // The base size is already inserted via the component's structural styles. We still\n        // need to track it so we don't end up adding the same styles again.\n        if (!trackedDiameters.has(_document.head)) {\n            trackedDiameters.set(_document.head, new Set([BASE_SIZE]));\n        }\n        this._fallbackAnimation = platform.EDGE || platform.TRIDENT;\n        this._noopAnimations = animationMode === 'NoopAnimations' &&\n            (!!defaults && !defaults._forceAnimations);\n        if (defaults) {\n            if (defaults.diameter) {\n                this.diameter = defaults.diameter;\n            }\n            if (defaults.strokeWidth) {\n                this.strokeWidth = defaults.strokeWidth;\n            }\n        }\n    }\n    /**\n     * The diameter of the progress spinner (will set width and height of svg).\n     * @return {?}\n     */\n    get diameter() { return this._diameter; }\n    /**\n     * @param {?} size\n     * @return {?}\n     */\n    set diameter(size) {\n        this._diameter = coerceNumberProperty(size);\n        // If this is set before `ngOnInit`, the style root may not have been resolved yet.\n        if (!this._fallbackAnimation && this._styleRoot) {\n            this._attachStyleNode();\n        }\n    }\n    /**\n     * Stroke width of the progress spinner.\n     * @return {?}\n     */\n    get strokeWidth() {\n        return this._strokeWidth || this.diameter / 10;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set strokeWidth(value) {\n        this._strokeWidth = coerceNumberProperty(value);\n    }\n    /**\n     * Value of the progress circle.\n     * @return {?}\n     */\n    get value() {\n        return this.mode === 'determinate' ? this._value : 0;\n    }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        this._value = Math.max(0, Math.min(100, coerceNumberProperty(newValue)));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        // Note that we need to look up the root node in ngOnInit, rather than the constructor, because\n        // Angular seems to create the element outside the shadow root and then moves it inside, if the\n        // node is inside an `ngIf` and a ShadowDom-encapsulated component.\n        this._styleRoot = _getShadowRoot(element) || this._document.head;\n        this._attachStyleNode();\n        // On IE and Edge, we can't animate the `stroke-dashoffset`\n        // reliably so we fall back to a non-spec animation.\n        /** @type {?} */\n        const animationClass = `mat-progress-spinner-indeterminate${this._fallbackAnimation ? '-fallback' : ''}-animation`;\n        element.classList.add(animationClass);\n    }\n    /**\n     * The radius of the spinner, adjusted for stroke width.\n     * @return {?}\n     */\n    get _circleRadius() {\n        return (this.diameter - BASE_STROKE_WIDTH) / 2;\n    }\n    /**\n     * The view box of the spinner's svg element.\n     * @return {?}\n     */\n    get _viewBox() {\n        /** @type {?} */\n        const viewBox = this._circleRadius * 2 + this.strokeWidth;\n        return `0 0 ${viewBox} ${viewBox}`;\n    }\n    /**\n     * The stroke circumference of the svg circle.\n     * @return {?}\n     */\n    get _strokeCircumference() {\n        return 2 * Math.PI * this._circleRadius;\n    }\n    /**\n     * The dash offset of the svg circle.\n     * @return {?}\n     */\n    get _strokeDashOffset() {\n        if (this.mode === 'determinate') {\n            return this._strokeCircumference * (100 - this._value) / 100;\n        }\n        // In fallback mode set the circle to 80% and rotate it with CSS.\n        if (this._fallbackAnimation && this.mode === 'indeterminate') {\n            return this._strokeCircumference * 0.2;\n        }\n        return null;\n    }\n    /**\n     * Stroke width of the circle in percent.\n     * @return {?}\n     */\n    get _circleStrokeWidth() {\n        return this.strokeWidth / this.diameter * 100;\n    }\n    /**\n     * Dynamically generates a style tag containing the correct animation for this diameter.\n     * @private\n     * @return {?}\n     */\n    _attachStyleNode() {\n        /** @type {?} */\n        const styleRoot = this._styleRoot;\n        /** @type {?} */\n        const currentDiameter = this._diameter;\n        /** @type {?} */\n        const diameters = MatProgressSpinner._diameters;\n        /** @type {?} */\n        let diametersForElement = diameters.get(styleRoot);\n        if (!diametersForElement || !diametersForElement.has(currentDiameter)) {\n            /** @type {?} */\n            const styleTag = this._document.createElement('style');\n            styleTag.setAttribute('mat-spinner-animation', currentDiameter + '');\n            styleTag.textContent = this._getAnimationText();\n            styleRoot.appendChild(styleTag);\n            if (!diametersForElement) {\n                diametersForElement = new Set();\n                diameters.set(styleRoot, diametersForElement);\n            }\n            diametersForElement.add(currentDiameter);\n        }\n    }\n    /**\n     * Generates animation styles adjusted for the spinner's diameter.\n     * @private\n     * @return {?}\n     */\n    _getAnimationText() {\n        return INDETERMINATE_ANIMATION_TEMPLATE\n            // Animation should begin at 5% and end at 80%\n            .replace(/START_VALUE/g, `${0.95 * this._strokeCircumference}`)\n            .replace(/END_VALUE/g, `${0.2 * this._strokeCircumference}`)\n            .replace(/DIAMETER/g, `${this.diameter}`);\n    }\n}\nMatProgressSpinner.ɵfac = function MatProgressSpinner_Factory(t) { return new (t || MatProgressSpinner)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS)); };\nMatProgressSpinner.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatProgressSpinner, selectors: [[\"mat-progress-spinner\"]], hostAttrs: [\"role\", \"progressbar\", 1, \"mat-progress-spinner\"], hostVars: 10, hostBindings: function MatProgressSpinner_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-valuemin\", ctx.mode === \"determinate\" ? 0 : null)(\"aria-valuemax\", ctx.mode === \"determinate\" ? 100 : null)(\"aria-valuenow\", ctx.mode === \"determinate\" ? ctx.value : null)(\"mode\", ctx.mode);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._noopAnimations);\n    } }, inputs: { color: \"color\", mode: \"mode\", diameter: \"diameter\", strokeWidth: \"strokeWidth\", value: \"value\" }, exportAs: [\"matProgressSpinner\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 8, consts: [[\"preserveAspectRatio\", \"xMidYMid meet\", \"focusable\", \"false\", 3, \"ngSwitch\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"animation-name\", \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\"]], template: function MatProgressSpinner_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatProgressSpinner__svg_circle_1_Template, 1, 9, \"circle\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatProgressSpinner__svg_circle_2_Template, 1, 7, \"circle\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.mode === \"indeterminate\");\n        ɵngcc0.ɵɵattribute(\"viewBox\", ctx._viewBox);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    } }, directives: [ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase], styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/**\n * Tracks diameters of existing instances to de-dupe generated styles (default d = 100).\n * We need to keep track of which elements the diameters were attached to, because for\n * elements in the Shadow DOM the style tags are attached to the shadow root, rather\n * than the document head.\n */\nMatProgressSpinner._diameters = new WeakMap();\n/** @nocollapse */\nMatProgressSpinner.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS,] }] }\n];\nMatProgressSpinner.propDecorators = {\n    diameter: [{ type: Input }],\n    strokeWidth: [{ type: Input }],\n    mode: [{ type: Input }],\n    value: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressSpinner, [{\n        type: Component,\n        args: [{\n                selector: 'mat-progress-spinner',\n                exportAs: 'matProgressSpinner',\n                host: {\n                    'role': 'progressbar',\n                    'class': 'mat-progress-spinner',\n                    '[class._mat-animation-noopable]': `_noopAnimations`,\n                    '[style.width.px]': 'diameter',\n                    '[style.height.px]': 'diameter',\n                    '[attr.aria-valuemin]': 'mode === \"determinate\" ? 0 : null',\n                    '[attr.aria-valuemax]': 'mode === \"determinate\" ? 100 : null',\n                    '[attr.aria-valuenow]': 'mode === \"determinate\" ? value : null',\n                    '[attr.mode]': 'mode'\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG. `focusable=\\\"false\\\"` prevents IE from allowing the user to\\n  tab into the SVG element.\\n-->\\n\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_viewBox\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\">\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_circleRadius\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + diameter\\\"\\n    [style.stroke-dashoffset.px]=\\\"_strokeDashOffset\\\"\\n    [style.stroke-dasharray.px]=\\\"_strokeCircumference\\\"\\n    [style.stroke-width.%]=\\\"_circleStrokeWidth\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_circleRadius\\\"\\n    [style.stroke-dashoffset.px]=\\\"_strokeDashOffset\\\"\\n    [style.stroke-dasharray.px]=\\\"_strokeCircumference\\\"\\n    [style.stroke-width.%]=\\\"_circleStrokeWidth\\\"></circle>\\n</svg>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n            }] }]; }, { mode: [{\n            type: Input\n        }], diameter: [{\n            type: Input\n        }], strokeWidth: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Tracks diameters of existing instances to de-dupe generated styles (default d = 100).\n     * We need to keep track of which elements the diameters were attached to, because for\n     * elements in the Shadow DOM the style tags are attached to the shadow root, rather\n     * than the document head.\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner._diameters;\n    /** @type {?} */\n    MatProgressSpinner.ngAcceptInputType_diameter;\n    /** @type {?} */\n    MatProgressSpinner.ngAcceptInputType_strokeWidth;\n    /** @type {?} */\n    MatProgressSpinner.ngAcceptInputType_value;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner.prototype._diameter;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner.prototype._value;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner.prototype._strokeWidth;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner.prototype._fallbackAnimation;\n    /**\n     * Element to which we should add the generated style tags for the indeterminate animation.\n     * For most elements this is the document, but for the ones in the Shadow DOM we need to\n     * use the shadow root.\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner.prototype._styleRoot;\n    /**\n     * Whether the _mat-animation-noopable class should be applied, disabling animations.\n     * @type {?}\n     */\n    MatProgressSpinner.prototype._noopAnimations;\n    /**\n     * Mode of the progress circle\n     * @type {?}\n     */\n    MatProgressSpinner.prototype.mode;\n    /** @type {?} */\n    MatProgressSpinner.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner.prototype._document;\n}\n/**\n * `<mat-spinner>` component.\n *\n * This is a component definition to be used as a convenience reference to create an\n * indeterminate `<mat-progress-spinner>` instance.\n */\nclass MatSpinner extends MatProgressSpinner {\n    /**\n     * @param {?} elementRef\n     * @param {?} platform\n     * @param {?} document\n     * @param {?} animationMode\n     * @param {?=} defaults\n     */\n    constructor(elementRef, platform, document, animationMode, defaults) {\n        super(elementRef, platform, document, animationMode, defaults);\n        this.mode = 'indeterminate';\n    }\n}\nMatSpinner.ɵfac = function MatSpinner_Factory(t) { return new (t || MatSpinner)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS)); };\nMatSpinner.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSpinner, selectors: [[\"mat-spinner\"]], hostAttrs: [\"role\", \"progressbar\", \"mode\", \"indeterminate\", 1, \"mat-spinner\", \"mat-progress-spinner\"], hostVars: 6, hostBindings: function MatSpinner_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._noopAnimations);\n    } }, inputs: { color: \"color\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 8, consts: [[\"preserveAspectRatio\", \"xMidYMid meet\", \"focusable\", \"false\", 3, \"ngSwitch\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"animation-name\", \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\"]], template: function MatSpinner_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatSpinner__svg_circle_1_Template, 1, 9, \"circle\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatSpinner__svg_circle_2_Template, 1, 7, \"circle\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.mode === \"indeterminate\");\n        ɵngcc0.ɵɵattribute(\"viewBox\", ctx._viewBox);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    } }, directives: [ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase], styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatSpinner.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSpinner, [{\n        type: Component,\n        args: [{\n                selector: 'mat-spinner',\n                host: {\n                    'role': 'progressbar',\n                    'mode': 'indeterminate',\n                    'class': 'mat-spinner mat-progress-spinner',\n                    '[class._mat-animation-noopable]': `_noopAnimations`,\n                    '[style.width.px]': 'diameter',\n                    '[style.height.px]': 'diameter'\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG. `focusable=\\\"false\\\"` prevents IE from allowing the user to\\n  tab into the SVG element.\\n-->\\n\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_viewBox\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\">\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_circleRadius\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + diameter\\\"\\n    [style.stroke-dashoffset.px]=\\\"_strokeDashOffset\\\"\\n    [style.stroke-dasharray.px]=\\\"_strokeCircumference\\\"\\n    [style.stroke-width.%]=\\\"_circleStrokeWidth\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_circleRadius\\\"\\n    [style.stroke-dashoffset.px]=\\\"_strokeDashOffset\\\"\\n    [style.stroke-dasharray.px]=\\\"_strokeCircumference\\\"\\n    [style.stroke-width.%]=\\\"_circleStrokeWidth\\\"></circle>\\n</svg>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/progress-spinner/progress-spinner-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatProgressSpinnerModule {\n}\nMatProgressSpinnerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatProgressSpinnerModule });\nMatProgressSpinnerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatProgressSpinnerModule_Factory(t) { return new (t || MatProgressSpinnerModule)(); }, imports: [[MatCommonModule, CommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatProgressSpinnerModule, { declarations: function () { return [MatProgressSpinner,\n        MatSpinner]; }, imports: function () { return [MatCommonModule, CommonModule]; }, exports: function () { return [MatProgressSpinner,\n        MatSpinner,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressSpinnerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule, CommonModule],\n                exports: [\n                    MatProgressSpinner,\n                    MatSpinner,\n                    MatCommonModule\n                ],\n                declarations: [\n                    MatProgressSpinner,\n                    MatSpinner\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/progress-spinner/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS, MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY, MatProgressSpinner, MatProgressSpinnerModule, MatSpinner };\n\n//# sourceMappingURL=progress-spinner.js.map","import { InjectionToken, forwardRef, EventEmitter, Directive, ChangeDetectorRef, Output, ContentChildren, Input, Optional, ElementRef, Inject, ViewChild, Component, ViewEncapsulation, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport { mixinDisableRipple, mixinTabIndex, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/radio/radio.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/collections';\nimport * as ɵngcc3 from '@angular/material/core';\n\nconst _c0 = [\"input\"];\nconst _c1 = function () { return { enterDuration: 150 }; };\nconst _c2 = [\"*\"];\nfunction MatRadioDefaultOptions() { }\nif (false) {\n    /** @type {?} */\n    MatRadioDefaultOptions.prototype.color;\n}\n/** @type {?} */\nconst MAT_RADIO_DEFAULT_OPTIONS = new InjectionToken('mat-radio-default-options', {\n    providedIn: 'root',\n    factory: MAT_RADIO_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * @return {?}\n */\nfunction MAT_RADIO_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent'\n    };\n}\n// Increasing integer for generating unique ids for radio components.\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * Provider Expression that allows mat-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatRadioGroup)),\n    multi: true\n};\n/**\n * Change event object emitted by MatRadio and MatRadioGroup.\n */\nclass MatRadioChange {\n    /**\n     * @param {?} source\n     * @param {?} value\n     */\n    constructor(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n}\nif (false) {\n    /**\n     * The MatRadioButton that emits the change event.\n     * @type {?}\n     */\n    MatRadioChange.prototype.source;\n    /**\n     * The value of the MatRadioButton.\n     * @type {?}\n     */\n    MatRadioChange.prototype.value;\n}\n/**\n * A group of radio buttons. May contain one or more `<mat-radio-button>` elements.\n */\nclass MatRadioGroup {\n    /**\n     * @param {?} _changeDetector\n     */\n    constructor(_changeDetector) {\n        this._changeDetector = _changeDetector;\n        /**\n         * Selected value for the radio group.\n         */\n        this._value = null;\n        /**\n         * The HTML name attribute applied to radio buttons in this group.\n         */\n        this._name = `mat-radio-group-${nextUniqueId++}`;\n        /**\n         * The currently selected radio button. Should match value.\n         */\n        this._selected = null;\n        /**\n         * Whether the `value` has been set to its initial value.\n         */\n        this._isInitialized = false;\n        /**\n         * Whether the labels should appear after or before the radio-buttons. Defaults to 'after'\n         */\n        this._labelPosition = 'after';\n        /**\n         * Whether the radio group is disabled.\n         */\n        this._disabled = false;\n        /**\n         * Whether the radio group is required.\n         */\n        this._required = false;\n        /**\n         * The method to be called in order to update ngModel\n         */\n        this._controlValueAccessorChangeFn = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * onTouch function registered via registerOnTouch (ControlValueAccessor).\n         * \\@docs-private\n         */\n        this.onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * Event emitted when the group value changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * a radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n    }\n    /**\n     * Name of the radio button group. All radio buttons inside this group will use this name.\n     * @return {?}\n     */\n    get name() { return this._name; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set name(value) {\n        this._name = value;\n        this._updateRadioButtonNames();\n    }\n    /**\n     * Whether the labels should appear after or before the radio-buttons. Defaults to 'after'\n     * @return {?}\n     */\n    get labelPosition() {\n        return this._labelPosition;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this._markRadiosForCheck();\n    }\n    /**\n     * Value for the radio-group. Should equal the value of the selected radio button if there is\n     * a corresponding radio button with a matching value. If there is not such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n            this._updateSelectedRadioFromValue();\n            this._checkSelectedRadioButton();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n    /**\n     * The currently selected radio button. If set to a new radio button, the radio group value\n     * will be updated to match the new selected button.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} selected\n     * @return {?}\n     */\n    set selected(selected) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this._checkSelectedRadioButton();\n    }\n    /**\n     * Whether the radio group is disabled\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._markRadiosForCheck();\n    }\n    /**\n     * Whether the radio group is required\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this._markRadiosForCheck();\n    }\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on MatRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the MatRadioGroup.\n        this._isInitialized = true;\n    }\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     * @return {?}\n     */\n    _touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _updateRadioButtonNames() {\n        if (this._radios) {\n            this._radios.forEach((/**\n             * @param {?} radio\n             * @return {?}\n             */\n            radio => {\n                radio.name = this.name;\n                radio._markForCheck();\n            }));\n        }\n    }\n    /**\n     * Updates the `selected` radio button from the internal _value state.\n     * @private\n     * @return {?}\n     */\n    _updateSelectedRadioFromValue() {\n        // If the value already matches the selected radio, do nothing.\n        /** @type {?} */\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n        if (this._radios && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach((/**\n             * @param {?} radio\n             * @return {?}\n             */\n            radio => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            }));\n        }\n    }\n    /**\n     * Dispatch change event with current selection and group value.\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        if (this._isInitialized) {\n            this.change.emit(new MatRadioChange((/** @type {?} */ (this._selected)), this._value));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach((/**\n             * @param {?} radio\n             * @return {?}\n             */\n            radio => radio._markForCheck()));\n        }\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param {?} isDisabled Whether the control should be disabled.\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n}\nMatRadioGroup.ɵfac = function MatRadioGroup_Factory(t) { return new (t || MatRadioGroup)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatRadioGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatRadioGroup, selectors: [[\"mat-radio-group\"]], contentQueries: function MatRadioGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatRadioButton, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._radios = _t);\n    } }, hostAttrs: [\"role\", \"radiogroup\", 1, \"mat-radio-group\"], inputs: { name: \"name\", labelPosition: \"labelPosition\", value: \"value\", selected: \"selected\", disabled: \"disabled\", required: \"required\", color: \"color\" }, outputs: { change: \"change\" }, exportAs: [\"matRadioGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR])] });\n/** @nocollapse */\nMatRadioGroup.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\nMatRadioGroup.propDecorators = {\n    change: [{ type: Output }],\n    _radios: [{ type: ContentChildren, args: [forwardRef((/**\n                 * @return {?}\n                 */\n                () => MatRadioButton)), { descendants: true },] }],\n    color: [{ type: Input }],\n    name: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    value: [{ type: Input }],\n    selected: [{ type: Input }],\n    disabled: [{ type: Input }],\n    required: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRadioGroup, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-radio-group',\n                exportAs: 'matRadioGroup',\n                providers: [MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR],\n                host: {\n                    'role': 'radiogroup',\n                    'class': 'mat-radio-group'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, { change: [{\n            type: Output\n        }], name: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], _radios: [{\n            type: ContentChildren,\n            args: [forwardRef(( /**\n                             * @return {?}\n                             */() => MatRadioButton)), { descendants: true }]\n        }], color: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatRadioGroup.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatRadioGroup.ngAcceptInputType_required;\n    /**\n     * Selected value for the radio group.\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._value;\n    /**\n     * The HTML name attribute applied to radio buttons in this group.\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._name;\n    /**\n     * The currently selected radio button. Should match value.\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._selected;\n    /**\n     * Whether the `value` has been set to its initial value.\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._isInitialized;\n    /**\n     * Whether the labels should appear after or before the radio-buttons. Defaults to 'after'\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._labelPosition;\n    /**\n     * Whether the radio group is disabled.\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._disabled;\n    /**\n     * Whether the radio group is required.\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._required;\n    /**\n     * The method to be called in order to update ngModel\n     * @type {?}\n     */\n    MatRadioGroup.prototype._controlValueAccessorChangeFn;\n    /**\n     * onTouch function registered via registerOnTouch (ControlValueAccessor).\n     * \\@docs-private\n     * @type {?}\n     */\n    MatRadioGroup.prototype.onTouched;\n    /**\n     * Event emitted when the group value changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * a radio button (the same behavior as `<input type-\"radio\">`).\n     * @type {?}\n     */\n    MatRadioGroup.prototype.change;\n    /**\n     * Child radio buttons.\n     * @type {?}\n     */\n    MatRadioGroup.prototype._radios;\n    /**\n     * Theme color for all of the radio buttons in the group.\n     * @type {?}\n     */\n    MatRadioGroup.prototype.color;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._changeDetector;\n}\n// Boilerplate for applying mixins to MatRadioButton.\n/**\n * \\@docs-private\n */\nclass MatRadioButtonBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatRadioButtonBase.prototype.disabled;\n    /** @type {?} */\n    MatRadioButtonBase.prototype._elementRef;\n}\n// As per Material design specifications the selection control radio should use the accent color\n// palette by default. https://material.io/guidelines/components/selection-controls.html\n/** @type {?} */\nconst _MatRadioButtonMixinBase = mixinDisableRipple(mixinTabIndex(MatRadioButtonBase));\n/**\n * Base class with all of the `MatRadioButton` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatRadioButtonBase extends _MatRadioButtonMixinBase {\n    /**\n     * @param {?} radioGroup\n     * @param {?} elementRef\n     * @param {?} _changeDetector\n     * @param {?} _focusMonitor\n     * @param {?} _radioDispatcher\n     * @param {?=} _animationMode\n     * @param {?=} _providerOverride\n     */\n    constructor(radioGroup, elementRef, _changeDetector, _focusMonitor, _radioDispatcher, _animationMode, _providerOverride) {\n        super(elementRef);\n        this._changeDetector = _changeDetector;\n        this._focusMonitor = _focusMonitor;\n        this._radioDispatcher = _radioDispatcher;\n        this._animationMode = _animationMode;\n        this._providerOverride = _providerOverride;\n        this._uniqueId = `mat-radio-${++nextUniqueId}`;\n        /**\n         * The unique ID for the radio button.\n         */\n        this.id = this._uniqueId;\n        /**\n         * Event emitted when the checked state of this radio button changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * the radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n        /**\n         * Whether this radio is checked.\n         */\n        this._checked = false;\n        /**\n         * Value assigned to this radio.\n         */\n        this._value = null;\n        /**\n         * Unregister function for _radioDispatcher\n         */\n        this._removeUniqueSelectionListener = (/**\n         * @return {?}\n         */\n        () => { });\n        // Assertions. Ideally these should be stripped out by the compiler.\n        // TODO(jelbourn): Assert that there's no name binding AND a parent radio group.\n        this.radioGroup = radioGroup;\n        this._removeUniqueSelectionListener =\n            _radioDispatcher.listen((/**\n             * @param {?} id\n             * @param {?} name\n             * @return {?}\n             */\n            (id, name) => {\n                if (id !== this.id && name === this.name) {\n                    this.checked = false;\n                }\n            }));\n    }\n    /**\n     * Whether this radio button is checked.\n     * @return {?}\n     */\n    get checked() { return this._checked; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set checked(value) {\n        /** @type {?} */\n        const newCheckedState = coerceBooleanProperty(value);\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            }\n            else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n    /**\n     * The value of this radio button.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup !== null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n    /**\n     * Whether the label should appear after or before the radio button. Defaults to 'after'\n     * @return {?}\n     */\n    get labelPosition() {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    /**\n     * Whether the radio button is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled || (this.radioGroup !== null && this.radioGroup.disabled);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._setDisabled(coerceBooleanProperty(value));\n    }\n    /**\n     * Whether the radio button is required.\n     * @return {?}\n     */\n    get required() {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /**\n     * Theme color of the radio button.\n     * @return {?}\n     */\n    get color() {\n        return this._color ||\n            (this.radioGroup && this.radioGroup.color) ||\n            this._providerOverride && this._providerOverride.color || 'accent';\n    }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set color(newValue) { this._color = newValue; }\n    /**\n     * ID of the native input element inside `<mat-radio-button>`\n     * @return {?}\n     */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    /**\n     * Focuses the radio button.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._focusMonitor.focusVia(this._inputElement, 'keyboard', options);\n    }\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     * @return {?}\n     */\n    _markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe((/**\n         * @param {?} focusOrigin\n         * @return {?}\n         */\n        focusOrigin => {\n            if (!focusOrigin && this.radioGroup) {\n                this.radioGroup._touch();\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._removeUniqueSelectionListener();\n    }\n    /**\n     * Dispatch change event with current value.\n     * @private\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        this.change.emit(new MatRadioChange(this, this._value));\n    }\n    /**\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /**\n     * Triggered when the radio button received a click or the input recognized any change.\n     * Clicking on a label element, will trigger a change event on the associated input.\n     * @param {?} event\n     * @return {?}\n     */\n    _onInputChange(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n        /** @type {?} */\n        const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n        this.checked = true;\n        this._emitChangeEvent();\n        if (this.radioGroup) {\n            this.radioGroup._controlValueAccessorChangeFn(this.value);\n            if (groupValueChanged) {\n                this.radioGroup._emitChangeEvent();\n            }\n        }\n    }\n    /**\n     * Sets the disabled state and marks for check if a change occurred.\n     * @protected\n     * @param {?} value\n     * @return {?}\n     */\n    _setDisabled(value) {\n        if (this._disabled !== value) {\n            this._disabled = value;\n            this._changeDetector.markForCheck();\n        }\n    }\n}\n_MatRadioButtonBase.ɵfac = function _MatRadioButtonBase_Factory(t) { return new (t || _MatRadioButtonBase)(ɵngcc0.ɵɵdirectiveInject(MatRadioGroup, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_RADIO_DEFAULT_OPTIONS, 8)); };\n_MatRadioButtonBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatRadioButtonBase, viewQuery: function _MatRadioButtonBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n    } }, inputs: { id: \"id\", checked: \"checked\", value: \"value\", labelPosition: \"labelPosition\", disabled: \"disabled\", required: \"required\", color: \"color\", name: \"name\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"] }, outputs: { change: \"change\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\n_MatRadioButtonBase.ctorParameters = () => [\n    { type: MatRadioGroup, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor },\n    { type: UniqueSelectionDispatcher },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RADIO_DEFAULT_OPTIONS,] }] }\n];\n_MatRadioButtonBase.propDecorators = {\n    id: [{ type: Input }],\n    name: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    ariaDescribedby: [{ type: Input, args: ['aria-describedby',] }],\n    checked: [{ type: Input }],\n    value: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    disabled: [{ type: Input }],\n    required: [{ type: Input }],\n    color: [{ type: Input }],\n    change: [{ type: Output }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatRadioButtonBase, [{\n        type: Directive\n    }], function () { return [{ type: MatRadioGroup, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc2.UniqueSelectionDispatcher }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RADIO_DEFAULT_OPTIONS]\n            }] }]; }, { id: [{\n            type: Input\n        }], change: [{\n            type: Output\n        }], checked: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], ariaDescribedby: [{\n            type: Input,\n            args: ['aria-describedby']\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    _MatRadioButtonBase.ngAcceptInputType_checked;\n    /** @type {?} */\n    _MatRadioButtonBase.ngAcceptInputType_disabled;\n    /** @type {?} */\n    _MatRadioButtonBase.ngAcceptInputType_required;\n    /** @type {?} */\n    _MatRadioButtonBase.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatRadioButtonBase.prototype._uniqueId;\n    /**\n     * The unique ID for the radio button.\n     * @type {?}\n     */\n    _MatRadioButtonBase.prototype.id;\n    /**\n     * Analog to HTML 'name' attribute used to group radios for unique selection.\n     * @type {?}\n     */\n    _MatRadioButtonBase.prototype.name;\n    /**\n     * Used to set the 'aria-label' attribute on the underlying input element.\n     * @type {?}\n     */\n    _MatRadioButtonBase.prototype.ariaLabel;\n    /**\n     * The 'aria-labelledby' attribute takes precedence as the element's text alternative.\n     * @type {?}\n     */\n    _MatRadioButtonBase.prototype.ariaLabelledby;\n    /**\n     * The 'aria-describedby' attribute is read after the element's label and field type.\n     * @type {?}\n     */\n    _MatRadioButtonBase.prototype.ariaDescribedby;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatRadioButtonBase.prototype._labelPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatRadioButtonBase.prototype._color;\n    /**\n     * Event emitted when the checked state of this radio button changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * the radio button (the same behavior as `<input type-\"radio\">`).\n     * @type {?}\n     */\n    _MatRadioButtonBase.prototype.change;\n    /**\n     * The parent radio group. May or may not be present.\n     * @type {?}\n     */\n    _MatRadioButtonBase.prototype.radioGroup;\n    /**\n     * Whether this radio is checked.\n     * @type {?}\n     * @private\n     */\n    _MatRadioButtonBase.prototype._checked;\n    /**\n     * Whether this radio is disabled.\n     * @type {?}\n     * @private\n     */\n    _MatRadioButtonBase.prototype._disabled;\n    /**\n     * Whether this radio is required.\n     * @type {?}\n     * @private\n     */\n    _MatRadioButtonBase.prototype._required;\n    /**\n     * Value assigned to this radio.\n     * @type {?}\n     * @private\n     */\n    _MatRadioButtonBase.prototype._value;\n    /**\n     * Unregister function for _radioDispatcher\n     * @type {?}\n     * @private\n     */\n    _MatRadioButtonBase.prototype._removeUniqueSelectionListener;\n    /**\n     * The native `<input type=radio>` element\n     * @type {?}\n     */\n    _MatRadioButtonBase.prototype._inputElement;\n    /**\n     * @type {?}\n     * @protected\n     */\n    _MatRadioButtonBase.prototype._changeDetector;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatRadioButtonBase.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatRadioButtonBase.prototype._radioDispatcher;\n    /** @type {?} */\n    _MatRadioButtonBase.prototype._animationMode;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatRadioButtonBase.prototype._providerOverride;\n}\n/**\n * A Material design radio-button. Typically placed inside of `<mat-radio-group>` elements.\n */\nclass MatRadioButton extends _MatRadioButtonBase {\n}\nMatRadioButton.ɵfac = function MatRadioButton_Factory(t) { return ɵMatRadioButton_BaseFactory(t || MatRadioButton); };\nMatRadioButton.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatRadioButton, selectors: [[\"mat-radio-button\"]], hostAttrs: [1, \"mat-radio-button\"], hostVars: 17, hostBindings: function MatRadioButton_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatRadioButton_focus_HostBindingHandler() { return ctx._inputElement.nativeElement.focus(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", 0 - 1)(\"id\", ctx.id)(\"aria-label\", null)(\"aria-labelledby\", null)(\"aria-describedby\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-radio-checked\", ctx.checked)(\"mat-radio-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-primary\", ctx.color === \"primary\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\n    } }, inputs: { disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, exportAs: [\"matRadioButton\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 13, vars: 19, consts: [[1, \"mat-radio-label\"], [\"label\", \"\"], [1, \"mat-radio-container\"], [1, \"mat-radio-outer-circle\"], [1, \"mat-radio-inner-circle\"], [\"type\", \"radio\", 1, \"mat-radio-input\", \"cdk-visually-hidden\", 3, \"id\", \"checked\", \"disabled\", \"tabIndex\", \"required\", \"change\", \"click\"], [\"input\", \"\"], [\"mat-ripple\", \"\", 1, \"mat-radio-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-radio-persistent-ripple\"], [1, \"mat-radio-label-content\"], [2, \"display\", \"none\"]], template: function MatRadioButton_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelement(3, \"div\", 3);\n        ɵngcc0.ɵɵelement(4, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"input\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"change\", function MatRadioButton_Template_input_change_5_listener($event) { return ctx._onInputChange($event); })(\"click\", function MatRadioButton_Template_input_click_5_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(9, \"div\", 9);\n        ɵngcc0.ɵɵelementStart(10, \"span\", 10);\n        ɵngcc0.ɵɵtext(11, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex)(\"required\", ctx.required);\n        ɵngcc0.ɵɵattribute(\"name\", ctx.name)(\"value\", ctx.value)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-describedby\", ctx.ariaDescribedby);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", true)(\"matRippleRadius\", 20)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(18, _c1));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-radio-label-before\", ctx.labelPosition == \"before\");\n    } }, directives: [ɵngcc3.MatRipple], styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:transparent;outline:0}.mat-radio-label{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:transform ease 280ms,background-color ease 280ms;width:20px;transform:scale(0.001)}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-checked .mat-radio-inner-circle{transform:scale(0.5)}.cdk-high-contrast-active .mat-radio-checked .mat-radio-inner-circle{border:solid 10px}.mat-radio-label-content{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple,.mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-persistent-ripple,.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple{opacity:0}@media(hover: none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{bottom:0;left:50%}.cdk-high-contrast-active .mat-radio-disabled{opacity:.5}\\n\"], encapsulation: 2, changeDetection: 0 });\nconst ɵMatRadioButton_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRadioButton);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRadioButton, [{\n        type: Component,\n        args: [{\n                selector: 'mat-radio-button',\n                template: \"<!-- TODO(jelbourn): render the radio on either side of the content -->\\n<!-- TODO(mtlin): Evaluate trade-offs of using native radio vs. cost of additional bindings. -->\\n<label [attr.for]=\\\"inputId\\\" class=\\\"mat-radio-label\\\" #label>\\n  <!-- The actual 'radio' part of the control. -->\\n  <div class=\\\"mat-radio-container\\\">\\n    <div class=\\\"mat-radio-outer-circle\\\"></div>\\n    <div class=\\\"mat-radio-inner-circle\\\"></div>\\n    <input #input class=\\\"mat-radio-input cdk-visually-hidden\\\" type=\\\"radio\\\"\\n        [id]=\\\"inputId\\\"\\n        [checked]=\\\"checked\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [tabIndex]=\\\"tabIndex\\\"\\n        [attr.name]=\\\"name\\\"\\n        [attr.value]=\\\"value\\\"\\n        [required]=\\\"required\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n        (change)=\\\"_onInputChange($event)\\\"\\n        (click)=\\\"_onInputClick($event)\\\">\\n\\n    <!-- The ripple comes after the input so that we can target it with a CSS\\n         sibling selector when the input is focused. -->\\n    <div mat-ripple class=\\\"mat-radio-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n\\n      <div class=\\\"mat-ripple-element mat-radio-persistent-ripple\\\"></div>\\n    </div>\\n  </div>\\n\\n  <!-- The label content for radio control. -->\\n  <div class=\\\"mat-radio-label-content\\\" [class.mat-radio-label-before]=\\\"labelPosition == 'before'\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </div>\\n</label>\\n\",\n                inputs: ['disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matRadioButton',\n                host: {\n                    'class': 'mat-radio-button',\n                    '[class.mat-radio-checked]': 'checked',\n                    '[class.mat-radio-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[class.mat-primary]': 'color === \"primary\"',\n                    '[class.mat-accent]': 'color === \"accent\"',\n                    '[class.mat-warn]': 'color === \"warn\"',\n                    // Needs to be -1 so the `focus` event still fires.\n                    '[attr.tabindex]': '-1',\n                    '[attr.id]': 'id',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[attr.aria-describedby]': 'null',\n                    // Note: under normal conditions focus shouldn't land on this element, however it may be\n                    // programmatically set, for example inside of a focus trap, in this case we want to forward\n                    // the focus to the native element.\n                    '(focus)': '_inputElement.nativeElement.focus()'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:transparent;outline:0}.mat-radio-label{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:transform ease 280ms,background-color ease 280ms;width:20px;transform:scale(0.001)}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-checked .mat-radio-inner-circle{transform:scale(0.5)}.cdk-high-contrast-active .mat-radio-checked .mat-radio-inner-circle{border:solid 10px}.mat-radio-label-content{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple,.mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-persistent-ripple,.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple{opacity:0}@media(hover: none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{bottom:0;left:50%}.cdk-high-contrast-active .mat-radio-disabled{opacity:.5}\\n\"]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/radio/radio-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatRadioModule {\n}\nMatRadioModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatRadioModule });\nMatRadioModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatRadioModule_Factory(t) { return new (t || MatRadioModule)(); }, imports: [[MatRippleModule, MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatRadioModule, { declarations: function () { return [MatRadioGroup,\n        MatRadioButton]; }, imports: function () { return [MatRippleModule, MatCommonModule]; }, exports: function () { return [MatRadioGroup,\n        MatRadioButton,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRadioModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatRippleModule, MatCommonModule],\n                exports: [MatRadioGroup, MatRadioButton, MatCommonModule],\n                declarations: [MatRadioGroup, MatRadioButton]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/radio/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_RADIO_DEFAULT_OPTIONS, MAT_RADIO_DEFAULT_OPTIONS_FACTORY, MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR, MatRadioButton, MatRadioChange, MatRadioGroup, MatRadioModule, _MatRadioButtonBase };\n\n//# sourceMappingURL=radio.js.map","import { Overlay, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, EventEmitter, isDevMode, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, NgZone, ElementRef, Optional, Inject, Self, Attribute, ViewChild, ContentChildren, Input, ContentChild, Output, NgModule } from '@angular/core';\nimport { mixinDisableRipple, mixinTabIndex, mixinDisabled, mixinErrorState, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MAT_OPTION_PARENT_COMPONENT, ErrorStateMatcher, MatOption, MatOptgroup, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormField, MAT_FORM_FIELD, MatFormFieldModule } from '@angular/material/form-field';\nimport { ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { ActiveDescendantKeyManager, LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW, ENTER, SPACE, hasModifierKey, HOME, END, A } from '@angular/cdk/keycodes';\nimport { NgForm, FormGroupDirective, NgControl } from '@angular/forms';\nimport { Subject, defer, merge } from 'rxjs';\nimport { startWith, switchMap, take, filter, map, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { trigger, transition, query, animateChild, state, style, animate } from '@angular/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/forms';\nimport * as ɵngcc5 from '@angular/cdk/a11y';\nimport * as ɵngcc6 from '@angular/cdk/overlay';\nimport * as ɵngcc7 from '@angular/common';\nimport * as ɵngcc8 from '@angular/material/form-field';\n\nconst _c0 = [\"trigger\"];\nconst _c1 = [\"panel\"];\nfunction MatSelect_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.placeholder || \"\\u00A0\");\n} }\nfunction MatSelect_span_5_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r5.triggerValue || \"\\u00A0\");\n} }\nfunction MatSelect_span_5_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 0, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatSelect_span_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 9);\n    ɵngcc0.ɵɵtemplate(1, MatSelect_span_5_span_1_Template, 2, 1, \"span\", 10);\n    ɵngcc0.ɵɵtemplate(2, MatSelect_span_5_2_Template, 1, 0, undefined, 11);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", !!ctx_r3.customTrigger);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n} }\nfunction MatSelect_ng_template_8_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 13, 14);\n    ɵngcc0.ɵɵlistener(\"@transformPanel.done\", function MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8._panelDoneAnimatingStream.next($event.toState); })(\"keydown\", function MatSelect_ng_template_8_Template_div_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10._handleKeydown($event); });\n    ɵngcc0.ɵɵprojection(3, 1);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transformPanelWrap\", undefined);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"mat-select-panel \", ctx_r4._getPanelTheme(), \"\");\n    ɵngcc0.ɵɵstyleProp(\"transform-origin\", ctx_r4._transformOrigin)(\"font-size\", ctx_r4._triggerFontSize, \"px\");\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r4.panelClass)(\"@transformPanel\", ctx_r4.multiple ? \"showing-multiple\" : \"showing\");\n    ɵngcc0.ɵɵattribute(\"id\", ctx_r4.id + \"-panel\");\n} }\nconst _c2 = [[[\"mat-select-trigger\"]], \"*\"];\nconst _c3 = [\"mat-select-trigger\", \"*\"];\nconst matSelectAnimations = {\n    /**\n     * This animation ensures the select's overlay panel animation (transformPanel) is called when\n     * closing the select.\n     * This is needed due to https://github.com/angular/angular/issues/23302\n     */\n    transformPanelWrap: trigger('transformPanelWrap', [\n        transition('* => void', query('@transformPanel', [animateChild()], { optional: true }))\n    ]),\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0.8)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        state('showing', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 32px)',\n            // 32px = 2 * 16px padding\n            transform: 'scaleY(1)'\n        })),\n        state('showing-multiple', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 64px)',\n            // 64px = 48px padding on the left + 16px padding on the right\n            transform: 'scaleY(1)'\n        })),\n        transition('void => *', animate('120ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n * @return {?}\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * The max height of the select's overlay panel\n * @type {?}\n */\nconst SELECT_PANEL_MAX_HEIGHT = 256;\n/**\n * The panel's padding on the x-axis\n * @type {?}\n */\nconst SELECT_PANEL_PADDING_X = 16;\n/**\n * The panel's x axis padding if it is indented (e.g. there is an option group).\n * @type {?}\n */\nconst SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n/**\n * The height of the select items in `em` units.\n * @type {?}\n */\nconst SELECT_ITEM_HEIGHT_EM = 3;\n// TODO(josephperrott): Revert to a constant after 2018 spec updates are fully merged.\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * Calculated as:\n * (SELECT_PANEL_PADDING_X * 1.5) + 16 = 40\n * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.\n * The checkbox width is 16px.\n * @type {?}\n */\nconst SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + 16;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n * @type {?}\n */\nconst SELECT_PANEL_VIEWPORT_PADDING = 8;\n/**\n * Injection token that determines the scroll handling while a select is open.\n * @type {?}\n */\nconst MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * Object that can be used to configure the default options for the select module.\n * @record\n */\nfunction MatSelectConfig() { }\nif (false) {\n    /**\n     * Whether option centering should be disabled.\n     * @type {?|undefined}\n     */\n    MatSelectConfig.prototype.disableOptionCentering;\n    /**\n     * Time to wait in milliseconds after the last keystroke before moving focus to an item.\n     * @type {?|undefined}\n     */\n    MatSelectConfig.prototype.typeaheadDebounceInterval;\n}\n/**\n * Injection token that can be used to provide the default options the select module.\n * @type {?}\n */\nconst MAT_SELECT_CONFIG = new InjectionToken('MAT_SELECT_CONFIG');\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Change event object that is emitted when the select value has changed.\n */\nclass MatSelectChange {\n    /**\n     * @param {?} source\n     * @param {?} value\n     */\n    constructor(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n}\nif (false) {\n    /**\n     * Reference to the select that emitted the change event.\n     * @type {?}\n     */\n    MatSelectChange.prototype.source;\n    /**\n     * Current value of the select that emitted the event.\n     * @type {?}\n     */\n    MatSelectChange.prototype.value;\n}\n// Boilerplate for applying mixins to MatSelect.\n/**\n * \\@docs-private\n */\nclass MatSelectBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} ngControl\n     */\n    constructor(_elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._elementRef = _elementRef;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatSelectBase.prototype._elementRef;\n    /** @type {?} */\n    MatSelectBase.prototype._defaultErrorStateMatcher;\n    /** @type {?} */\n    MatSelectBase.prototype._parentForm;\n    /** @type {?} */\n    MatSelectBase.prototype._parentFormGroup;\n    /** @type {?} */\n    MatSelectBase.prototype.ngControl;\n}\n/** @type {?} */\nconst _MatSelectMixinBase = mixinDisableRipple(mixinTabIndex(mixinDisabled(mixinErrorState(MatSelectBase))));\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nclass MatSelectTrigger {\n}\nMatSelectTrigger.ɵfac = function MatSelectTrigger_Factory(t) { return new (t || MatSelectTrigger)(); };\nMatSelectTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSelectTrigger, selectors: [[\"mat-select-trigger\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectTrigger, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-select-trigger'\n            }]\n    }], null, null); })();\nclass MatSelect extends _MatSelectMixinBase {\n    /**\n     * @param {?} _viewportRuler\n     * @param {?} _changeDetectorRef\n     * @param {?} _ngZone\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} elementRef\n     * @param {?} _dir\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} _parentFormField\n     * @param {?} ngControl\n     * @param {?} tabIndex\n     * @param {?} scrollStrategyFactory\n     * @param {?} _liveAnnouncer\n     * @param {?=} defaults\n     */\n    constructor(_viewportRuler, _changeDetectorRef, _ngZone, _defaultErrorStateMatcher, elementRef, _dir, _parentForm, _parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer, defaults) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._viewportRuler = _viewportRuler;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._dir = _dir;\n        this._parentFormField = _parentFormField;\n        this.ngControl = ngControl;\n        this._liveAnnouncer = _liveAnnouncer;\n        /**\n         * Whether or not the overlay panel is open.\n         */\n        this._panelOpen = false;\n        /**\n         * Whether filling out the select is required in the form.\n         */\n        this._required = false;\n        /**\n         * The scroll position of the overlay panel, calculated to center the selected option.\n         */\n        this._scrollTop = 0;\n        /**\n         * Whether the component is in multiple selection mode.\n         */\n        this._multiple = false;\n        /**\n         * Comparison function to specify which option is displayed. Defaults to object equality.\n         */\n        this._compareWith = (/**\n         * @param {?} o1\n         * @param {?} o2\n         * @return {?}\n         */\n        (o1, o2) => o1 === o2);\n        /**\n         * Unique id for this input.\n         */\n        this._uid = `mat-select-${nextUniqueId++}`;\n        /**\n         * Emits whenever the component is destroyed.\n         */\n        this._destroy = new Subject();\n        /**\n         * The cached font-size of the trigger element.\n         */\n        this._triggerFontSize = 0;\n        /**\n         * `View -> model callback called when value changes`\n         */\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * `View -> model callback called when select has been touched`\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * The IDs of child options to be passed to the aria-owns attribute.\n         */\n        this._optionIds = '';\n        /**\n         * The value of the select panel's transform-origin property.\n         */\n        this._transformOrigin = 'top';\n        /**\n         * Emits when the panel element is finished transforming in.\n         */\n        this._panelDoneAnimatingStream = new Subject();\n        /**\n         * The y-offset of the overlay panel in relation to the trigger's top start corner.\n         * This must be adjusted to align the selected option text over the trigger text.\n         * when the panel opens. Will change based on the y-position of the selected option.\n         */\n        this._offsetY = 0;\n        /**\n         * This position config ensures that the top \"start\" corner of the overlay\n         * is aligned with with the top \"start\" of the origin by default (overlapping\n         * the trigger completely). If the panel cannot fit below the trigger, it\n         * will fall back to a position above the trigger.\n         */\n        this._positions = [\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'bottom',\n            },\n        ];\n        /**\n         * Whether the component is disabling centering of the active option over the trigger.\n         */\n        this._disableOptionCentering = false;\n        this._focused = false;\n        /**\n         * A name for this control that can be used by `mat-form-field`.\n         */\n        this.controlType = 'mat-select';\n        /**\n         * Aria label of the select. If not specified, the placeholder will be used as label.\n         */\n        this.ariaLabel = '';\n        /**\n         * Combined stream of all of the child options' change events.\n         */\n        this.optionSelectionChanges = (/** @type {?} */ (defer((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const options = this.options;\n            if (options) {\n                return options.changes.pipe(startWith(options), switchMap((/**\n                 * @return {?}\n                 */\n                () => merge(...options.map((/**\n                 * @param {?} option\n                 * @return {?}\n                 */\n                option => option.onSelectionChange))))));\n            }\n            return this._ngZone.onStable\n                .asObservable()\n                .pipe(take(1), switchMap((/**\n             * @return {?}\n             */\n            () => this.optionSelectionChanges)));\n        }))));\n        /**\n         * Event emitted when the select panel has been toggled.\n         */\n        this.openedChange = new EventEmitter();\n        /**\n         * Event emitted when the select has been opened.\n         */\n        this._openedStream = this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n        /**\n         * Event emitted when the select has been closed.\n         */\n        this._closedStream = this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => !o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n        /**\n         * Event emitted when the selected value has been changed by the user.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the select changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * \\@docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this._scrollStrategy = this._scrollStrategyFactory();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        if (defaults) {\n            if (defaults.disableOptionCentering != null) {\n                this.disableOptionCentering = defaults.disableOptionCentering;\n            }\n            if (defaults.typeaheadDebounceInterval != null) {\n                this.typeaheadDebounceInterval = defaults.typeaheadDebounceInterval;\n            }\n        }\n    }\n    /**\n     * Whether the select is focused.\n     * @return {?}\n     */\n    get focused() {\n        return this._focused || this._panelOpen;\n    }\n    /**\n     * Placeholder to be shown if no value has been selected.\n     * @return {?}\n     */\n    get placeholder() { return this._placeholder; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /**\n     * Whether the component is required.\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /**\n     * Whether the user should be allowed to select multiple options.\n     * @return {?}\n     */\n    get multiple() { return this._multiple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set multiple(value) {\n        if (this._selectionModel) {\n            throw getMatSelectDynamicMultipleError();\n        }\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether to center the active option over the trigger.\n     * @return {?}\n     */\n    get disableOptionCentering() { return this._disableOptionCentering; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableOptionCentering(value) {\n        this._disableOptionCentering = coerceBooleanProperty(value);\n    }\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     * @return {?}\n     */\n    get compareWith() { return this._compareWith; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function') {\n            throw getMatSelectNonFunctionValueError();\n        }\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /**\n     * Value of the select control.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n    /**\n     * Time to wait in milliseconds after the last keystroke before moving focus to an item.\n     * @return {?}\n     */\n    get typeaheadDebounceInterval() { return this._typeaheadDebounceInterval; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set typeaheadDebounceInterval(value) {\n        this._typeaheadDebounceInterval = coerceNumberProperty(value);\n    }\n    /**\n     * Unique id of the element.\n     * @return {?}\n     */\n    get id() { return this._id; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set id(value) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple);\n        this.stateChanges.next();\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this.panelOpen) {\n                this._scrollTop = 0;\n                this.openedChange.emit(true);\n            }\n            else {\n                this.openedChange.emit(false);\n                this.overlayDir.offsetX = 0;\n                this._changeDetectorRef.markForCheck();\n            }\n        }));\n        this._viewportRuler.change()\n            .pipe(takeUntil(this._destroy))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._panelOpen) {\n                this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n                this._changeDetectorRef.markForCheck();\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._initKeyManager();\n        this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            event.added.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.select()));\n            event.removed.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.deselect()));\n        }));\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._resetOptions();\n            this._initializeSelection();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            this.updateErrorState();\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes['disabled']) {\n            this.stateChanges.next();\n        }\n        if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n            this._keyManager.withTypeAhead(this._typeaheadDebounceInterval);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n    /**\n     * Toggles the overlay panel open or closed.\n     * @return {?}\n     */\n    toggle() {\n        this.panelOpen ? this.close() : this.open();\n    }\n    /**\n     * Opens the overlay panel.\n     * @return {?}\n     */\n    open() {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) {\n            return;\n        }\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement).fontSize || '0');\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._calculateOverlayPosition();\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable().pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                this.overlayDir.overlayRef.overlayElement) {\n                this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n            }\n        }));\n    }\n    /**\n     * Closes the overlay panel and focuses the host element.\n     * @return {?}\n     */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} value New value to be written to the model.\n     * @return {?}\n     */\n    writeValue(value) {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    }\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the value changes.\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the component has been touched.\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} isDisabled Sets whether the component is disabled.\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /**\n     * Whether or not the overlay panel is open.\n     * @return {?}\n     */\n    get panelOpen() {\n        return this._panelOpen;\n    }\n    /**\n     * The currently selected option.\n     * @return {?}\n     */\n    get selected() {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /**\n     * The value displayed in the trigger.\n     * @return {?}\n     */\n    get triggerValue() {\n        if (this.empty) {\n            return '';\n        }\n        if (this._multiple) {\n            /** @type {?} */\n            const selectedOptions = this._selectionModel.selected.map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.viewValue));\n            if (this._isRtl()) {\n                selectedOptions.reverse();\n            }\n            // TODO(crisbeto): delimiter should be configurable for proper localization.\n            return selectedOptions.join(', ');\n        }\n        return this._selectionModel.selected[0].viewValue;\n    }\n    /**\n     * Whether the element is in RTL mode.\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n    /**\n     * Handles all keydown events on the select.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if (!this.disabled) {\n            this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n        }\n    }\n    /**\n     * Handles keyboard events while the select is closed.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClosedKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        /** @type {?} */\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        /** @type {?} */\n        const manager = this._keyManager;\n        // Open the select on ALT + arrow key to match the native <select>\n        if (!manager.isTyping() && (isOpenKey && !hasModifierKey(event)) ||\n            ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        }\n        else if (!this.multiple) {\n            /** @type {?} */\n            const previouslySelectedOption = this.selected;\n            if (keyCode === HOME || keyCode === END) {\n                keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                event.preventDefault();\n            }\n            else {\n                manager.onKeydown(event);\n            }\n            /** @type {?} */\n            const selectedOption = this.selected;\n            // Since the value has changed, we need to announce it ourselves.\n            if (selectedOption && previouslySelectedOption !== selectedOption) {\n                // We set a duration on the live announcement, because we want the live element to be\n                // cleared after a while so that users can't navigate to it using the arrow keys.\n                this._liveAnnouncer.announce(((/** @type {?} */ (selectedOption))).viewValue, 10000);\n            }\n        }\n    }\n    /**\n     * Handles keyboard events when the selected is open.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _handleOpenKeydown(event) {\n        /** @type {?} */\n        const manager = this._keyManager;\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        /** @type {?} */\n        const isTyping = manager.isTyping();\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n            keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n        }\n        else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n            // Don't do anything in this case if the user is typing,\n            // because the typing sequence can include the space key.\n        }\n        else if (!isTyping && (keyCode === ENTER || keyCode === SPACE) && manager.activeItem &&\n            !hasModifierKey(event)) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            /** @type {?} */\n            const hasDeselectedOptions = this.options.some((/**\n             * @param {?} opt\n             * @return {?}\n             */\n            opt => !opt.disabled && !opt.selected));\n            this.options.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => {\n                if (!option.disabled) {\n                    hasDeselectedOptions ? option.select() : option.deselect();\n                }\n            }));\n        }\n        else {\n            /** @type {?} */\n            const previouslyFocusedIndex = manager.activeItemIndex;\n            manager.onKeydown(event);\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     * @return {?}\n     */\n    _onBlur() {\n        this._focused = false;\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     * @return {?}\n     */\n    _onAttached() {\n        this.overlayDir.positionChange.pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.detectChanges();\n            this._calculateOverlayOffsetX();\n            this.panel.nativeElement.scrollTop = this._scrollTop;\n        }));\n    }\n    /**\n     * Returns the theme to be used on the panel.\n     * @return {?}\n     */\n    _getPanelTheme() {\n        return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n    }\n    /**\n     * Whether the select has a value.\n     * @return {?}\n     */\n    get empty() {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _setSelectionByValue(value) {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMatSelectNonArrayValueError();\n            }\n            this._selectionModel.clear();\n            value.forEach((/**\n             * @param {?} currentValue\n             * @return {?}\n             */\n            (currentValue) => this._selectValue(currentValue)));\n            this._sortValues();\n        }\n        else {\n            this._selectionModel.clear();\n            /** @type {?} */\n            const correspondingOption = this._selectValue(value);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.setActiveItem(correspondingOption);\n            }\n            else if (!this.panelOpen) {\n                // Otherwise reset the highlighted option. Note that we only want to do this while\n                // closed, because doing it while open can shift the user's focus unnecessarily.\n                this._keyManager.setActiveItem(-1);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @private\n     * @param {?} value\n     * @return {?} Option that has the corresponding value.\n     */\n    _selectValue(value) {\n        /** @type {?} */\n        const correspondingOption = this.options.find((/**\n         * @param {?} option\n         * @return {?}\n         */\n        (option) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            }\n            catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        }));\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    }\n    /**\n     * Sets up a key manager to listen to keyboard events on the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options)\n            .withTypeAhead(this._typeaheadDebounceInterval)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n            .withAllowedModifierKeys(['shiftKey']);\n        this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this.panelOpen) {\n                // Select the active item when tabbing away. This is consistent with how the native\n                // select behaves. Note that we only want to do this in single selection mode.\n                if (!this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            }\n        }));\n        this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._panelOpen && this.panel) {\n                this._scrollActiveOptionIntoView();\n            }\n            else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n        }));\n    }\n    /**\n     * Drops current option subscriptions and IDs and resets from scratch.\n     * @private\n     * @return {?}\n     */\n    _resetOptions() {\n        /** @type {?} */\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n        this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this._onSelect(event.source, event.isUserInput);\n            if (event.isUserInput && !this.multiple && this._panelOpen) {\n                this.close();\n                this.focus();\n            }\n        }));\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option._stateChanges)))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }));\n        this._setOptionIds();\n    }\n    /**\n     * Invoked when an option is clicked.\n     * @private\n     * @param {?} option\n     * @param {?} isUserInput\n     * @return {?}\n     */\n    _onSelect(option, isUserInput) {\n        /** @type {?} */\n        const wasSelected = this._selectionModel.isSelected(option);\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            this._propagateChanges(option.value);\n        }\n        else {\n            if (wasSelected !== option.selected) {\n                option.selected ? this._selectionModel.select(option) :\n                    this._selectionModel.deselect(option);\n            }\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n            if (this.multiple) {\n                this._sortValues();\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mat-option`.\n                    this.focus();\n                }\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n        this.stateChanges.next();\n    }\n    /**\n     * Sorts the selected values in the selected based on their order in the panel.\n     * @private\n     * @return {?}\n     */\n    _sortValues() {\n        if (this.multiple) {\n            /** @type {?} */\n            const options = this.options.toArray();\n            this._selectionModel.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            (a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            }));\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Emits change event to set the model value.\n     * @private\n     * @param {?=} fallbackValue\n     * @return {?}\n     */\n    _propagateChanges(fallbackValue) {\n        /** @type {?} */\n        let valueToEmit = null;\n        if (this.multiple) {\n            valueToEmit = ((/** @type {?} */ (this.selected))).map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.value));\n        }\n        else {\n            valueToEmit = this.selected ? ((/** @type {?} */ (this.selected))).value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new MatSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Records option IDs to pass to the aria-owns property.\n     * @private\n     * @return {?}\n     */\n    _setOptionIds() {\n        this._optionIds = this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.id)).join(' ');\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     * @private\n     * @return {?}\n     */\n    _highlightCorrectOption() {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            }\n            else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n    /**\n     * Scrolls the active option into view.\n     * @private\n     * @return {?}\n     */\n    _scrollActiveOptionIntoView() {\n        /** @type {?} */\n        const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        /** @type {?} */\n        const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition(activeOptionIndex + labelCount, this._getItemHeight(), this.panel.nativeElement.scrollTop, SELECT_PANEL_MAX_HEIGHT);\n    }\n    /**\n     * Focuses the select element.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /**\n     * Gets the index of the provided option in the option list.\n     * @private\n     * @param {?} option\n     * @return {?}\n     */\n    _getOptionIndex(option) {\n        return this.options.reduce((/**\n         * @param {?} result\n         * @param {?} current\n         * @param {?} index\n         * @return {?}\n         */\n        (result, current, index) => {\n            if (result !== undefined) {\n                return result;\n            }\n            return option === current ? index : undefined;\n        }), undefined);\n    }\n    /**\n     * Calculates the scroll position and x- and y-offsets of the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _calculateOverlayPosition() {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const items = this._getItemCount();\n        /** @type {?} */\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        /** @type {?} */\n        const scrollContainerHeight = items * itemHeight;\n        // The farthest the panel can be scrolled before it hits the bottom\n        /** @type {?} */\n        const maxScroll = scrollContainerHeight - panelHeight;\n        // If no value is selected we open the popup to the first item.\n        /** @type {?} */\n        let selectedOptionOffset = this.empty ? 0 : (/** @type {?} */ (this._getOptionIndex(this._selectionModel.selected[0])));\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options, this.optionGroups);\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /** @type {?} */\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _calculateOverlayScroll(selectedIndex, scrollBuffer, maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n        /** @type {?} */\n        const halfOptionHeight = itemHeight / 2;\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        /** @type {?} */\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n    /**\n     * Returns the aria-label of the select component.\n     * @return {?}\n     */\n    _getAriaLabel() {\n        // If an ariaLabelledby value has been set by the consumer, the select should not overwrite the\n        // `aria-labelledby` value by setting the ariaLabel to the placeholder.\n        return this.ariaLabelledby ? null : this.ariaLabel || this.placeholder;\n    }\n    /**\n     * Returns the aria-labelledby of the select component.\n     * @return {?}\n     */\n    _getAriaLabelledby() {\n        if (this.ariaLabelledby) {\n            return this.ariaLabelledby;\n        }\n        // Note: we use `_getAriaLabel` here, because we want to check whether there's a\n        // computed label. `this.ariaLabel` is only the user-specified label.\n        if (!this._parentFormField || !this._parentFormField._hasFloatingLabel() ||\n            this._getAriaLabel()) {\n            return null;\n        }\n        return this._parentFormField._labelId || null;\n    }\n    /**\n     * Determines the `aria-activedescendant` to be set on the host.\n     * @return {?}\n     */\n    _getAriaActiveDescendant() {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    }\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     * @private\n     * @return {?}\n     */\n    _calculateOverlayOffsetX() {\n        /** @type {?} */\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        /** @type {?} */\n        const viewportSize = this._viewportRuler.getViewportSize();\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        /** @type {?} */\n        const paddingWidth = this.multiple ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X :\n            SELECT_PANEL_PADDING_X * 2;\n        /** @type {?} */\n        let offsetX;\n        // Adjust the offset, depending on the option padding.\n        if (this.multiple) {\n            offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n        }\n        else {\n            /** @type {?} */\n            let selected = this._selectionModel.selected[0] || this.options.first;\n            offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n        }\n        // Invert the offset in LTR.\n        if (!isRtl) {\n            offsetX *= -1;\n        }\n        // Determine how much the select overflows on each side.\n        /** @type {?} */\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        /** @type {?} */\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     * @private\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _calculateOverlayOffsetY(selectedIndex, scrollBuffer, maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /** @type {?} */\n        const maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);\n        /** @type {?} */\n        let optionOffsetFromPanelTop;\n        // Disable offset if requested by user by returning 0 as value to offset\n        if (this._disableOptionCentering) {\n            return 0;\n        }\n        if (this._scrollTop === 0) {\n            optionOffsetFromPanelTop = selectedIndex * itemHeight;\n        }\n        else if (this._scrollTop === maxScroll) {\n            /** @type {?} */\n            const firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;\n            /** @type {?} */\n            const selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n            // The first item is partially out of the viewport. Therefore we need to calculate what\n            // portion of it is shown in the viewport and account for it in our offset.\n            /** @type {?} */\n            let partialItemHeight = itemHeight - (this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight;\n            // Because the panel height is longer than the height of the options alone,\n            // there is always extra padding at the top or bottom of the panel. When\n            // scrolled to the very bottom, this padding is at the top of the panel and\n            // must be added to the offset.\n            optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;\n        }\n        else {\n            // If the option was scrolled to the middle of the panel using a scroll buffer,\n            // its offset will be the scroll buffer minus the half height that was added to\n            // center it.\n            optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;\n        }\n        // The final offset is the option's offset from the top, adjusted for the height difference,\n        // multiplied by -1 to ensure that the overlay moves in the correct direction up the page.\n        // The value is rounded to prevent some browsers from blurring the content.\n        return Math.round(optionOffsetFromPanelTop * -1 - optionHeightAdjustment);\n    }\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     * @private\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _checkOverlayWithinViewport(maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const viewportSize = this._viewportRuler.getViewportSize();\n        /** @type {?} */\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        /** @type {?} */\n        const bottomSpaceAvailable = viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n        /** @type {?} */\n        const panelHeightTop = Math.abs(this._offsetY);\n        /** @type {?} */\n        const totalPanelHeight = Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        /** @type {?} */\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        }\n        else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        }\n        else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n    /**\n     * Adjusts the overlay panel up to fit in the viewport.\n     * @private\n     * @param {?} panelHeightBottom\n     * @param {?} bottomSpaceAvailable\n     * @return {?}\n     */\n    _adjustPanelUp(panelHeightBottom, bottomSpaceAvailable) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        /** @type {?} */\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n    /**\n     * Adjusts the overlay panel down to fit in the viewport.\n     * @private\n     * @param {?} panelHeightTop\n     * @param {?} topSpaceAvailable\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        /** @type {?} */\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n            return;\n        }\n    }\n    /**\n     * Sets the transform origin point based on the selected option.\n     * @private\n     * @return {?}\n     */\n    _getOriginBasedOnOption() {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /** @type {?} */\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n        return `50% ${originY}px 0px`;\n    }\n    /**\n     * Calculates the amount of items in the select. This includes options and group labels.\n     * @private\n     * @return {?}\n     */\n    _getItemCount() {\n        return this.options.length + this.optionGroups.length;\n    }\n    /**\n     * Calculates the height of the select's options.\n     * @private\n     * @return {?}\n     */\n    _getItemHeight() {\n        return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() {\n        return this._panelOpen || !this.empty;\n    }\n}\nMatSelect.ɵfac = function MatSelect_Factory(t) { return new (t || MatSelect)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgControl, 10), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.LiveAnnouncer), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_CONFIG, 8)); };\nMatSelect.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSelect, selectors: [[\"mat-select\"]], contentQueries: function MatSelect_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSelectTrigger, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOptgroup, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.customTrigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n    } }, viewQuery: function MatSelect_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(CdkConnectedOverlay, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.overlayDir = _t.first);\n    } }, hostAttrs: [\"role\", \"listbox\", 1, \"mat-select\"], hostVars: 19, hostBindings: function MatSelect_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatSelect_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"focus\", function MatSelect_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSelect_blur_HostBindingHandler() { return ctx._onBlur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"tabindex\", ctx.tabIndex)(\"aria-label\", ctx._getAriaLabel())(\"aria-labelledby\", ctx._getAriaLabelledby())(\"aria-required\", ctx.required.toString())(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-owns\", ctx.panelOpen ? ctx._optionIds : null)(\"aria-multiselectable\", ctx.multiple)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-activedescendant\", ctx._getAriaActiveDescendant());\n        ɵngcc0.ɵɵclassProp(\"mat-select-disabled\", ctx.disabled)(\"mat-select-invalid\", ctx.errorState)(\"mat-select-required\", ctx.required)(\"mat-select-empty\", ctx.empty);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], id: \"id\", disableOptionCentering: \"disableOptionCentering\", typeaheadDebounceInterval: \"typeaheadDebounceInterval\", placeholder: \"placeholder\", required: \"required\", multiple: \"multiple\", compareWith: \"compareWith\", value: \"value\", panelClass: \"panelClass\", ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], errorStateMatcher: \"errorStateMatcher\", sortComparator: \"sortComparator\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", _closedStream: \"closed\", selectionChange: \"selectionChange\", valueChange: \"valueChange\" }, exportAs: [\"matSelect\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatFormFieldControl, useExisting: MatSelect },\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c3, decls: 9, vars: 9, consts: [[\"cdk-overlay-origin\", \"\", \"aria-hidden\", \"true\", 1, \"mat-select-trigger\", 3, \"click\"], [\"origin\", \"cdkOverlayOrigin\", \"trigger\", \"\"], [1, \"mat-select-value\", 3, \"ngSwitch\"], [\"class\", \"mat-select-placeholder\", 4, \"ngSwitchCase\"], [\"class\", \"mat-select-value-text\", 3, \"ngSwitch\", 4, \"ngSwitchCase\"], [1, \"mat-select-arrow-wrapper\"], [1, \"mat-select-arrow\"], [\"cdk-connected-overlay\", \"\", \"cdkConnectedOverlayLockPosition\", \"\", \"cdkConnectedOverlayHasBackdrop\", \"\", \"cdkConnectedOverlayBackdropClass\", \"cdk-overlay-transparent-backdrop\", 3, \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayOffsetY\", \"backdropClick\", \"attach\", \"detach\"], [1, \"mat-select-placeholder\"], [1, \"mat-select-value-text\", 3, \"ngSwitch\"], [4, \"ngSwitchDefault\"], [4, \"ngSwitchCase\"], [1, \"mat-select-panel-wrap\"], [3, \"ngClass\", \"keydown\"], [\"panel\", \"\"]], template: function MatSelect_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatSelect_Template_div_click_0_listener() { return ctx.toggle(); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(4, MatSelect_span_4_Template, 2, 1, \"span\", 3);\n        ɵngcc0.ɵɵtemplate(5, MatSelect_span_5_Template, 3, 2, \"span\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 5);\n        ɵngcc0.ɵɵelement(7, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(8, MatSelect_ng_template_8_Template, 4, 11, \"ng-template\", 7);\n        ɵngcc0.ɵɵlistener(\"backdropClick\", function MatSelect_Template_ng_template_backdropClick_8_listener() { return ctx.close(); })(\"attach\", function MatSelect_Template_ng_template_attach_8_listener() { return ctx._onAttached(); })(\"detach\", function MatSelect_Template_ng_template_detach_8_listener() { return ctx.close(); });\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.empty);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"cdkConnectedOverlayScrollStrategy\", ctx._scrollStrategy)(\"cdkConnectedOverlayOrigin\", _r0)(\"cdkConnectedOverlayOpen\", ctx.panelOpen)(\"cdkConnectedOverlayPositions\", ctx._positions)(\"cdkConnectedOverlayMinWidth\", ctx._triggerRect == null ? null : ctx._triggerRect.width)(\"cdkConnectedOverlayOffsetY\", ctx._offsetY);\n    } }, directives: [ɵngcc6.CdkOverlayOrigin, ɵngcc7.NgSwitch, ɵngcc7.NgSwitchCase, ɵngcc6.CdkConnectedOverlay, ɵngcc7.NgSwitchDefault, ɵngcc7.NgClass], styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\\n\"], encapsulation: 2, data: { animation: [\n            matSelectAnimations.transformPanelWrap,\n            matSelectAnimations.transformPanel\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatSelect.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: ErrorStateMatcher },\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }] },\n    { type: NgControl, decorators: [{ type: Self }, { type: Optional }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SELECT_SCROLL_STRATEGY,] }] },\n    { type: LiveAnnouncer },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_SELECT_CONFIG,] }] }\n];\nMatSelect.propDecorators = {\n    trigger: [{ type: ViewChild, args: ['trigger',] }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    overlayDir: [{ type: ViewChild, args: [CdkConnectedOverlay,] }],\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }],\n    optionGroups: [{ type: ContentChildren, args: [MatOptgroup, { descendants: true },] }],\n    panelClass: [{ type: Input }],\n    customTrigger: [{ type: ContentChild, args: [MatSelectTrigger,] }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    multiple: [{ type: Input }],\n    disableOptionCentering: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    value: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    errorStateMatcher: [{ type: Input }],\n    typeaheadDebounceInterval: [{ type: Input }],\n    sortComparator: [{ type: Input }],\n    id: [{ type: Input }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    selectionChange: [{ type: Output }],\n    valueChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelect, [{\n        type: Component,\n        args: [{\n                selector: 'mat-select',\n                exportAs: 'matSelect',\n                template: \"<div cdk-overlay-origin\\n     class=\\\"mat-select-trigger\\\"\\n     aria-hidden=\\\"true\\\"\\n     (click)=\\\"toggle()\\\"\\n     #origin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n  <div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\">\\n    <span class=\\\"mat-select-placeholder\\\" *ngSwitchCase=\\\"true\\\">{{placeholder || '\\\\u00A0'}}</span>\\n    <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\">\\n      <span *ngSwitchDefault>{{triggerValue || '\\\\u00A0'}}</span>\\n      <ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width\\\"\\n  [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]>\\n    <div\\n      #panel\\n      [attr.id]=\\\"id + '-panel'\\\"\\n      class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\"\\n      [ngClass]=\\\"panelClass\\\"\\n      [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\"\\n      (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n      [style.transformOrigin]=\\\"_transformOrigin\\\"\\n      [style.font-size.px]=\\\"_triggerFontSize\\\"\\n      (keydown)=\\\"_handleKeydown($event)\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'role': 'listbox',\n                    '[attr.id]': 'id',\n                    '[attr.tabindex]': 'tabIndex',\n                    '[attr.aria-label]': '_getAriaLabel()',\n                    '[attr.aria-labelledby]': '_getAriaLabelledby()',\n                    '[attr.aria-required]': 'required.toString()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-owns]': 'panelOpen ? _optionIds : null',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n                    '[class.mat-select-disabled]': 'disabled',\n                    '[class.mat-select-invalid]': 'errorState',\n                    '[class.mat-select-required]': 'required',\n                    '[class.mat-select-empty]': 'empty',\n                    'class': 'mat-select',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()'\n                },\n                animations: [\n                    matSelectAnimations.transformPanelWrap,\n                    matSelectAnimations.transformPanel\n                ],\n                providers: [\n                    { provide: MatFormFieldControl, useExisting: MatSelect },\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n                ],\n                styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc1.ViewportRuler }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.ErrorStateMatcher }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc8.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }] }, { type: ɵngcc4.NgControl, decorators: [{\n                type: Self\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SELECT_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc5.LiveAnnouncer }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_SELECT_CONFIG]\n            }] }]; }, { ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], openedChange: [{\n            type: Output\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], selectionChange: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], id: [{\n            type: Input\n        }], disableOptionCentering: [{\n            type: Input\n        }], typeaheadDebounceInterval: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], trigger: [{\n            type: ViewChild,\n            args: ['trigger']\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel']\n        }], overlayDir: [{\n            type: ViewChild,\n            args: [CdkConnectedOverlay]\n        }], options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }], optionGroups: [{\n            type: ContentChildren,\n            args: [MatOptgroup, { descendants: true }]\n        }], panelClass: [{\n            type: Input\n        }], customTrigger: [{\n            type: ContentChild,\n            args: [MatSelectTrigger]\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], errorStateMatcher: [{\n            type: Input\n        }], sortComparator: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_required;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_multiple;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disableOptionCentering;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_typeaheadDebounceInterval;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._scrollStrategyFactory;\n    /**\n     * Whether or not the overlay panel is open.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._panelOpen;\n    /**\n     * Whether filling out the select is required in the form.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._required;\n    /**\n     * The scroll position of the overlay panel, calculated to center the selected option.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._scrollTop;\n    /**\n     * The placeholder displayed in the trigger of the select.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._placeholder;\n    /**\n     * Whether the component is in multiple selection mode.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._multiple;\n    /**\n     * Comparison function to specify which option is displayed. Defaults to object equality.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._compareWith;\n    /**\n     * Unique id for this input.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._uid;\n    /**\n     * Emits whenever the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._destroy;\n    /**\n     * The last measured value for the trigger's client bounding rect.\n     * @type {?}\n     */\n    MatSelect.prototype._triggerRect;\n    /**\n     * The aria-describedby attribute on the select for improved a11y.\n     * @type {?}\n     */\n    MatSelect.prototype._ariaDescribedby;\n    /**\n     * The cached font-size of the trigger element.\n     * @type {?}\n     */\n    MatSelect.prototype._triggerFontSize;\n    /**\n     * Deals with the selection logic.\n     * @type {?}\n     */\n    MatSelect.prototype._selectionModel;\n    /**\n     * Manages keyboard events for options in the panel.\n     * @type {?}\n     */\n    MatSelect.prototype._keyManager;\n    /**\n     * `View -> model callback called when value changes`\n     * @type {?}\n     */\n    MatSelect.prototype._onChange;\n    /**\n     * `View -> model callback called when select has been touched`\n     * @type {?}\n     */\n    MatSelect.prototype._onTouched;\n    /**\n     * The IDs of child options to be passed to the aria-owns attribute.\n     * @type {?}\n     */\n    MatSelect.prototype._optionIds;\n    /**\n     * The value of the select panel's transform-origin property.\n     * @type {?}\n     */\n    MatSelect.prototype._transformOrigin;\n    /**\n     * Emits when the panel element is finished transforming in.\n     * @type {?}\n     */\n    MatSelect.prototype._panelDoneAnimatingStream;\n    /**\n     * Strategy that will be used to handle scrolling while the select panel is open.\n     * @type {?}\n     */\n    MatSelect.prototype._scrollStrategy;\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     * @type {?}\n     */\n    MatSelect.prototype._offsetY;\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     * @type {?}\n     */\n    MatSelect.prototype._positions;\n    /**\n     * Whether the component is disabling centering of the active option over the trigger.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._disableOptionCentering;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._focused;\n    /**\n     * A name for this control that can be used by `mat-form-field`.\n     * @type {?}\n     */\n    MatSelect.prototype.controlType;\n    /**\n     * Trigger that opens the select.\n     * @type {?}\n     */\n    MatSelect.prototype.trigger;\n    /**\n     * Panel containing the select options.\n     * @type {?}\n     */\n    MatSelect.prototype.panel;\n    /**\n     * Overlay pane containing the options.\n     * @deprecated To be turned into a private API.\n     * \\@breaking-change 10.0.0\n     * \\@docs-private\n     * @type {?}\n     */\n    MatSelect.prototype.overlayDir;\n    /**\n     * All of the defined select options.\n     * @type {?}\n     */\n    MatSelect.prototype.options;\n    /**\n     * All of the defined groups of options.\n     * @type {?}\n     */\n    MatSelect.prototype.optionGroups;\n    /**\n     * Classes to be passed to the select panel. Supports the same syntax as `ngClass`.\n     * @type {?}\n     */\n    MatSelect.prototype.panelClass;\n    /**\n     * User-supplied override of the trigger element.\n     * @type {?}\n     */\n    MatSelect.prototype.customTrigger;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._value;\n    /**\n     * Aria label of the select. If not specified, the placeholder will be used as label.\n     * @type {?}\n     */\n    MatSelect.prototype.ariaLabel;\n    /**\n     * Input that can be used to specify the `aria-labelledby` attribute.\n     * @type {?}\n     */\n    MatSelect.prototype.ariaLabelledby;\n    /**\n     * Object used to control when error messages are shown.\n     * @type {?}\n     */\n    MatSelect.prototype.errorStateMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._typeaheadDebounceInterval;\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     * @type {?}\n     */\n    MatSelect.prototype.sortComparator;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._id;\n    /**\n     * Combined stream of all of the child options' change events.\n     * @type {?}\n     */\n    MatSelect.prototype.optionSelectionChanges;\n    /**\n     * Event emitted when the select panel has been toggled.\n     * @type {?}\n     */\n    MatSelect.prototype.openedChange;\n    /**\n     * Event emitted when the select has been opened.\n     * @type {?}\n     */\n    MatSelect.prototype._openedStream;\n    /**\n     * Event emitted when the select has been closed.\n     * @type {?}\n     */\n    MatSelect.prototype._closedStream;\n    /**\n     * Event emitted when the selected value has been changed by the user.\n     * @type {?}\n     */\n    MatSelect.prototype.selectionChange;\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatSelect.prototype.valueChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._parentFormField;\n    /** @type {?} */\n    MatSelect.prototype.ngControl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._liveAnnouncer;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSelectModule {\n}\nMatSelectModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSelectModule });\nMatSelectModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSelectModule_Factory(t) { return new (t || MatSelectModule)(); }, providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER], imports: [[\n            CommonModule,\n            OverlayModule,\n            MatOptionModule,\n            MatCommonModule,\n        ],\n        CdkScrollableModule,\n        MatFormFieldModule,\n        MatOptionModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSelectModule, { declarations: function () { return [MatSelect,\n        MatSelectTrigger]; }, imports: function () { return [CommonModule,\n        OverlayModule,\n        MatOptionModule,\n        MatCommonModule]; }, exports: function () { return [CdkScrollableModule,\n        MatFormFieldModule,\n        MatSelect,\n        MatSelectTrigger,\n        MatOptionModule,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    OverlayModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    CdkScrollableModule,\n                    MatFormFieldModule,\n                    MatSelect,\n                    MatSelectTrigger,\n                    MatOptionModule,\n                    MatCommonModule\n                ],\n                declarations: [MatSelect, MatSelectTrigger],\n                providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECT_CONFIG, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MatSelect, MatSelectChange, MatSelectModule, MatSelectTrigger, SELECT_ITEM_HEIGHT_EM, SELECT_MULTIPLE_PANEL_PADDING_X, SELECT_PANEL_INDENT_PADDING_X, SELECT_PANEL_MAX_HEIGHT, SELECT_PANEL_PADDING_X, SELECT_PANEL_VIEWPORT_PADDING, matSelectAnimations };\n\n//# sourceMappingURL=select.js.map","import { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { CdkScrollable, ScrollDispatcher, ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, Inject, forwardRef, ElementRef, NgZone, EventEmitter, Optional, Input, HostBinding, Output, HostListener, QueryList, ContentChildren, ContentChild, ViewChild, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { FocusTrapFactory, FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Subject, fromEvent, merge } from 'rxjs';\nimport { filter, takeUntil, distinctUntilChanged, map, take, startWith, debounceTime } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/drawer-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material drawers.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/a11y';\nimport * as ɵngcc3 from '@angular/cdk/platform';\nimport * as ɵngcc4 from '@angular/cdk/bidi';\nimport * as ɵngcc5 from '@angular/common';\n\nconst _c0 = [\"*\"];\nfunction MatDrawerContainer_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatDrawerContainer_div_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2._onBackdropClicked(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r0._isShowingBackdrop());\n} }\nfunction MatDrawerContainer_mat_drawer_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-drawer-content\");\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c1 = [[[\"mat-drawer\"]], [[\"mat-drawer-content\"]], \"*\"];\nconst _c2 = [\"mat-drawer\", \"mat-drawer-content\", \"*\"];\nfunction MatSidenavContainer_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatSidenavContainer_div_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2._onBackdropClicked(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r0._isShowingBackdrop());\n} }\nfunction MatSidenavContainer_mat_sidenav_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-sidenav-content\", 3);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c3 = [[[\"mat-sidenav\"]], [[\"mat-sidenav-content\"]], \"*\"];\nconst _c4 = [\"mat-sidenav\", \"mat-sidenav-content\", \"*\"];\nconst matDrawerAnimations = {\n    /**\n     * Animation that slides a drawer in and out.\n     */\n    transformDrawer: trigger('transform', [\n        // We remove the `transform` here completely, rather than setting it to zero, because:\n        // 1. Having a transform can cause elements with ripples or an animated\n        //    transform to shift around in Chrome with an RTL layout (see #10023).\n        // 2. 3d transforms causes text to appear blurry on IE and Edge.\n        state('open, open-instant', style({\n            'transform': 'none',\n            'visibility': 'visible',\n        })),\n        state('void', style({\n            // Avoids the shadow showing up when closed in SSR.\n            'box-shadow': 'none',\n            'visibility': 'hidden',\n        })),\n        transition('void => open-instant', animate('0ms')),\n        transition('void <=> open, open-instant => void', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/drawer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * \\@docs-private\n * @param {?} position\n * @return {?}\n */\nfunction throwMatDuplicatedDrawerError(position) {\n    throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\n}\n/**\n * Configures whether drawers should use auto sizing by default.\n * @type {?}\n */\nconst MAT_DRAWER_DEFAULT_AUTOSIZE = new InjectionToken('MAT_DRAWER_DEFAULT_AUTOSIZE', {\n    providedIn: 'root',\n    factory: MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY,\n});\n/**\n * Used to provide a drawer container to a drawer while avoiding circular references.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DRAWER_CONTAINER = new InjectionToken('MAT_DRAWER_CONTAINER');\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY() {\n    return false;\n}\nclass MatDrawerContent extends CdkScrollable {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _container\n     * @param {?} elementRef\n     * @param {?} scrollDispatcher\n     * @param {?} ngZone\n     */\n    constructor(_changeDetectorRef, _container, elementRef, scrollDispatcher, ngZone) {\n        super(elementRef, scrollDispatcher, ngZone);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._container = _container;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._container._contentMarginChanges.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.markForCheck();\n        }));\n    }\n}\nMatDrawerContent.ɵfac = function MatDrawerContent_Factory(t) { return new (t || MatDrawerContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatDrawerContainer))), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatDrawerContent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDrawerContent, selectors: [[\"mat-drawer-content\"]], hostAttrs: [1, \"mat-drawer-content\"], hostVars: 4, hostBindings: function MatDrawerContent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatDrawerContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatDrawerContent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: MatDrawerContainer, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatDrawerContainer)),] }] },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDrawerContent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer-content',\n                template: '<ng-content></ng-content>',\n                host: {\n                    'class': 'mat-drawer-content',\n                    '[style.margin-left.px]': '_container._contentMargins.left',\n                    '[style.margin-right.px]': '_container._contentMargins.right'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: MatDrawerContainer, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatDrawerContainer))]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContent.prototype._changeDetectorRef;\n    /** @type {?} */\n    MatDrawerContent.prototype._container;\n}\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\nclass MatDrawer {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusTrapFactory\n     * @param {?} _focusMonitor\n     * @param {?} _platform\n     * @param {?} _ngZone\n     * @param {?} _doc\n     * @param {?=} _container\n     */\n    constructor(_elementRef, _focusTrapFactory, _focusMonitor, _platform, _ngZone, _doc, _container) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._focusMonitor = _focusMonitor;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._doc = _doc;\n        this._container = _container;\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        /**\n         * Whether the drawer is initialized. Used for disabling the initial animation.\n         */\n        this._enableAnimations = false;\n        this._position = 'start';\n        this._mode = 'over';\n        this._disableClose = false;\n        this._opened = false;\n        /**\n         * Emits whenever the drawer has started animating.\n         */\n        this._animationStarted = new Subject();\n        /**\n         * Emits whenever the drawer is done animating.\n         */\n        this._animationEnd = new Subject();\n        /**\n         * Current state of the sidenav animation.\n         */\n        // @HostBinding is used in the class as it is expected to be extended.  Since @Component decorator\n        // metadata is not inherited by child classes, instead the host binding data is defined in a way\n        // that can be inherited.\n        // tslint:disable:no-host-decorator-in-concrete\n        this._animationState = 'void';\n        /**\n         * Event emitted when the drawer open state is changed.\n         */\n        this.openedChange = \n        // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n        new EventEmitter(/* isAsync */ true);\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Event emitted when the drawer's position changes.\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onPositionChanged = new EventEmitter();\n        /**\n         * An observable that emits when the drawer mode changes. This is used by the drawer container to\n         * to know when to when the mode changes so it can adapt the margins on the content.\n         */\n        this._modeChanged = new Subject();\n        this.openedChange.subscribe((/**\n         * @param {?} opened\n         * @return {?}\n         */\n        (opened) => {\n            if (opened) {\n                if (this._doc) {\n                    this._elementFocusedBeforeDrawerWasOpened = (/** @type {?} */ (this._doc.activeElement));\n                }\n                this._takeFocus();\n            }\n            else {\n                this._restoreFocus();\n            }\n        }));\n        /**\n         * Listen to `keydown` events outside the zone so that change detection is not run every\n         * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n         * and we don't have close disabled.\n         */\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            ((/** @type {?} */ (fromEvent(this._elementRef.nativeElement, 'keydown')))).pipe(filter((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n            })), takeUntil(this._destroyed)).subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                this.close();\n                event.stopPropagation();\n                event.preventDefault();\n            }))));\n        }));\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._animationEnd.pipe(distinctUntilChanged((/**\n         * @param {?} x\n         * @param {?} y\n         * @return {?}\n         */\n        (x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            const { fromState, toState } = event;\n            if ((toState.indexOf('open') === 0 && fromState === 'void') ||\n                (toState === 'void' && fromState.indexOf('open') === 0)) {\n                this.openedChange.emit(this._opened);\n            }\n        }));\n    }\n    /**\n     * The side that the drawer is attached to.\n     * @return {?}\n     */\n    get position() { return this._position; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set position(value) {\n        // Make sure we have a valid value.\n        value = value === 'end' ? 'end' : 'start';\n        if (value != this._position) {\n            this._position = value;\n            this.onPositionChanged.emit();\n        }\n    }\n    /**\n     * Mode of the drawer; one of 'over', 'push' or 'side'.\n     * @return {?}\n     */\n    get mode() { return this._mode; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set mode(value) {\n        this._mode = value;\n        this._updateFocusTrapState();\n        this._modeChanged.next();\n    }\n    /**\n     * Whether the drawer can be closed with the escape key or by clicking on the backdrop.\n     * @return {?}\n     */\n    get disableClose() { return this._disableClose; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableClose(value) { this._disableClose = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer should focus the first focusable element automatically when opened.\n     * Defaults to false in when `mode` is set to `side`, otherwise defaults to `true`. If explicitly\n     * enabled, focus will be moved into the sidenav in `side` mode as well.\n     * @return {?}\n     */\n    get autoFocus() {\n        /** @type {?} */\n        const value = this._autoFocus;\n        // Note that usually we disable auto focusing in `side` mode, because we don't know how the\n        // sidenav is being used, but in some cases it still makes sense to do it. If the consumer\n        // explicitly enabled `autoFocus`, we take it as them always wanting to enable it.\n        return value == null ? this.mode !== 'side' : value;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autoFocus(value) { this._autoFocus = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer is opened. We overload this because we trigger an event when it\n     * starts or end.\n     * @return {?}\n     */\n    get opened() { return this._opened; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set opened(value) { this.toggle(coerceBooleanProperty(value)); }\n    /**\n     * Event emitted when the drawer has been opened.\n     * @return {?}\n     */\n    get _openedStream() {\n        return this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Event emitted when the drawer has started opening.\n     * @return {?}\n     */\n    get openedStart() {\n        return this._animationStarted.pipe(filter((/**\n         * @param {?} e\n         * @return {?}\n         */\n        e => e.fromState !== e.toState && e.toState.indexOf('open') === 0)), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Event emitted when the drawer has been closed.\n     * @return {?}\n     */\n    get _closedStream() {\n        return this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => !o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Event emitted when the drawer has started closing.\n     * @return {?}\n     */\n    get closedStart() {\n        return this._animationStarted.pipe(filter((/**\n         * @param {?} e\n         * @return {?}\n         */\n        e => e.fromState !== e.toState && e.toState === 'void')), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Moves focus into the drawer. Note that this works even if\n     * the focus trap is disabled in `side` mode.\n     * @private\n     * @return {?}\n     */\n    _takeFocus() {\n        if (!this.autoFocus || !this._focusTrap) {\n            return;\n        }\n        this._focusTrap.focusInitialElementWhenReady().then((/**\n         * @param {?} hasMovedFocus\n         * @return {?}\n         */\n        hasMovedFocus => {\n            // If there were no focusable elements, focus the sidenav itself so the keyboard navigation\n            // still works. We need to check that `focus` is a function due to Universal.\n            if (!hasMovedFocus && typeof this._elementRef.nativeElement.focus === 'function') {\n                this._elementRef.nativeElement.focus();\n            }\n        }));\n    }\n    /**\n     * If focus is currently inside the drawer, restores it to where it was before the drawer\n     * opened.\n     * @private\n     * @return {?}\n     */\n    _restoreFocus() {\n        if (!this.autoFocus) {\n            return;\n        }\n        /** @type {?} */\n        const activeEl = this._doc && this._doc.activeElement;\n        if (activeEl && this._elementRef.nativeElement.contains(activeEl)) {\n            // Note that we don't check via `instanceof HTMLElement` so that we can cover SVGs as well.\n            if (this._elementFocusedBeforeDrawerWasOpened) {\n                this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, this._openedVia);\n            }\n            else {\n                this._elementRef.nativeElement.blur();\n            }\n        }\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        this._openedVia = null;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        this._updateFocusTrapState();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // Enable the animations after the lifecycle hooks have run, in order to avoid animating\n        // drawers that are open by default. When we're on the server, we shouldn't enable the\n        // animations, because we don't want the drawer to animate the first time the user sees\n        // the page.\n        if (this._platform.isBrowser) {\n            this._enableAnimations = true;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n        this._animationStarted.complete();\n        this._animationEnd.complete();\n        this._modeChanged.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Open the drawer.\n     * @param {?=} openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     * @return {?}\n     */\n    open(openedVia) {\n        return this.toggle(true, openedVia);\n    }\n    /**\n     * Close the drawer.\n     * @return {?}\n     */\n    close() {\n        return this.toggle(false);\n    }\n    /**\n     * Toggle this drawer.\n     * @param {?=} isOpen Whether the drawer should be open.\n     * @param {?=} openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     * @return {?}\n     */\n    toggle(isOpen = !this.opened, openedVia = 'program') {\n        this._opened = isOpen;\n        if (isOpen) {\n            this._animationState = this._enableAnimations ? 'open' : 'open-instant';\n            this._openedVia = openedVia;\n        }\n        else {\n            this._animationState = 'void';\n            this._restoreFocus();\n        }\n        this._updateFocusTrapState();\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        resolve => {\n            this.openedChange.pipe(take(1)).subscribe((/**\n             * @param {?} open\n             * @return {?}\n             */\n            open => resolve(open ? 'open' : 'close')));\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    get _width() {\n        return this._elementRef.nativeElement ? (this._elementRef.nativeElement.offsetWidth || 0) : 0;\n    }\n    /**\n     * Updates the enabled state of the focus trap.\n     * @private\n     * @return {?}\n     */\n    _updateFocusTrapState() {\n        if (this._focusTrap) {\n            // The focus trap is only enabled when the drawer is open in any mode other than side.\n            this._focusTrap.enabled = this.opened && this.mode !== 'side';\n        }\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _animationStartListener(event) {\n        this._animationStarted.next(event);\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _animationDoneListener(event) {\n        this._animationEnd.next(event);\n    }\n}\nMatDrawer.ɵfac = function MatDrawer_Factory(t) { return new (t || MatDrawer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_CONTAINER, 8)); };\nMatDrawer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDrawer, selectors: [[\"mat-drawer\"]], hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\"], hostVars: 12, hostBindings: function MatDrawer_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵcomponentHostSyntheticListener(\"@transform.start\", function MatDrawer_animation_transform_start_HostBindingHandler($event) { return ctx._animationStartListener($event); })(\"@transform.done\", function MatDrawer_animation_transform_done_HostBindingHandler($event) { return ctx._animationDoneListener($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"align\", null);\n        ɵngcc0.ɵɵupdateSyntheticHostBinding(\"@transform\", ctx._animationState);\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened);\n    } }, inputs: { position: \"position\", mode: \"mode\", disableClose: \"disableClose\", autoFocus: \"autoFocus\", opened: \"opened\" }, outputs: { openedChange: \"openedChange\", onPositionChanged: \"positionChanged\", _openedStream: \"opened\", openedStart: \"openedStart\", _closedStream: \"closed\", closedStart: \"closedStart\" }, exportAs: [\"matDrawer\"], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-drawer-inner-container\"]], template: function MatDrawer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2, data: { animation: [matDrawerAnimations.transformDrawer] }, changeDetection: 0 });\n/** @nocollapse */\nMatDrawer.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: FocusMonitor },\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: MatDrawerContainer, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DRAWER_CONTAINER,] }] }\n];\nMatDrawer.propDecorators = {\n    position: [{ type: Input }],\n    mode: [{ type: Input }],\n    disableClose: [{ type: Input }],\n    autoFocus: [{ type: Input }],\n    opened: [{ type: Input }],\n    _animationState: [{ type: HostBinding, args: ['@transform',] }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    openedStart: [{ type: Output }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    closedStart: [{ type: Output }],\n    onPositionChanged: [{ type: Output, args: ['positionChanged',] }],\n    _animationStartListener: [{ type: HostListener, args: ['@transform.start', ['$event'],] }],\n    _animationDoneListener: [{ type: HostListener, args: ['@transform.done', ['$event'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDrawer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer',\n                exportAs: 'matDrawer',\n                template: \"<div class=\\\"mat-drawer-inner-container\\\">\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\",\n                animations: [matDrawerAnimations.transformDrawer],\n                host: {\n                    'class': 'mat-drawer',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-drawer-end]': 'position === \"end\"',\n                    '[class.mat-drawer-over]': 'mode === \"over\"',\n                    '[class.mat-drawer-push]': 'mode === \"push\"',\n                    '[class.mat-drawer-side]': 'mode === \"side\"',\n                    '[class.mat-drawer-opened]': 'opened',\n                    'tabIndex': '-1'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.FocusTrapFactory }, { type: ɵngcc2.FocusMonitor }, { type: ɵngcc3.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: MatDrawerContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DRAWER_CONTAINER]\n            }] }]; }, { _animationState: [{\n            type: HostBinding,\n            args: ['@transform']\n        }], openedChange: [{\n            type: Output\n        }], onPositionChanged: [{\n            type: Output,\n            args: ['positionChanged']\n        }], position: [{\n            type: Input\n        }], mode: [{\n            type: Input\n        }], disableClose: [{\n            type: Input\n        }], autoFocus: [{\n            type: Input\n        }], opened: [{\n            type: Input\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], openedStart: [{\n            type: Output\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], closedStart: [{\n            type: Output\n        }], _animationStartListener: [{\n            type: HostListener,\n            args: ['@transform.start', ['$event']]\n        }], _animationDoneListener: [{\n            type: HostListener,\n            args: ['@transform.done', ['$event']]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDrawer.ngAcceptInputType_disableClose;\n    /** @type {?} */\n    MatDrawer.ngAcceptInputType_autoFocus;\n    /** @type {?} */\n    MatDrawer.ngAcceptInputType_opened;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._focusTrap;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._elementFocusedBeforeDrawerWasOpened;\n    /**\n     * Whether the drawer is initialized. Used for disabling the initial animation.\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._enableAnimations;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._position;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._mode;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._disableClose;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._autoFocus;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._opened;\n    /**\n     * How the sidenav was opened (keypress, mouse click etc.)\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._openedVia;\n    /**\n     * Emits whenever the drawer has started animating.\n     * @type {?}\n     */\n    MatDrawer.prototype._animationStarted;\n    /**\n     * Emits whenever the drawer is done animating.\n     * @type {?}\n     */\n    MatDrawer.prototype._animationEnd;\n    /**\n     * Current state of the sidenav animation.\n     * @type {?}\n     */\n    MatDrawer.prototype._animationState;\n    /**\n     * Event emitted when the drawer open state is changed.\n     * @type {?}\n     */\n    MatDrawer.prototype.openedChange;\n    /**\n     * Emits when the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._destroyed;\n    /**\n     * Event emitted when the drawer's position changes.\n     * @type {?}\n     */\n    MatDrawer.prototype.onPositionChanged;\n    /**\n     * An observable that emits when the drawer mode changes. This is used by the drawer container to\n     * to know when to when the mode changes so it can adapt the margins on the content.\n     * @type {?}\n     */\n    MatDrawer.prototype._modeChanged;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._focusTrapFactory;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._doc;\n    /**\n     * @deprecated `_container` parameter to be made required.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    MatDrawer.prototype._container;\n}\n/**\n * `<mat-drawer-container>` component.\n *\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nclass MatDrawerContainer {\n    /**\n     * @param {?} _dir\n     * @param {?} _element\n     * @param {?} _ngZone\n     * @param {?} _changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?=} defaultAutosize\n     * @param {?=} _animationMode\n     */\n    constructor(_dir, _element, _ngZone, _changeDetectorRef, viewportRuler, defaultAutosize = false, _animationMode) {\n        this._dir = _dir;\n        this._element = _element;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /**\n         * Drawers that belong to this container.\n         */\n        this._drawers = new QueryList();\n        /**\n         * Event emitted when the drawer backdrop is clicked.\n         */\n        this.backdropClick = new EventEmitter();\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Emits on every ngDoCheck. Used for debouncing reflows.\n         */\n        this._doCheckSubject = new Subject();\n        /**\n         * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n         * drawer is open. We use margin rather than transform even for push mode because transform breaks\n         * fixed position elements inside of the transformed element.\n         */\n        this._contentMargins = { left: null, right: null };\n        this._contentMarginChanges = new Subject();\n        // If a `Dir` directive exists up the tree, listen direction changes\n        // and update the left/right properties to point to the proper start/end.\n        if (_dir) {\n            _dir.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._validateDrawers();\n                this.updateContentMargins();\n            }));\n        }\n        // Since the minimum width of the sidenav depends on the viewport width,\n        // we need to recompute the margins if the viewport changes.\n        viewportRuler.change()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this.updateContentMargins()));\n        this._autosize = defaultAutosize;\n    }\n    /**\n     * The drawer child with the `start` position.\n     * @return {?}\n     */\n    get start() { return this._start; }\n    /**\n     * The drawer child with the `end` position.\n     * @return {?}\n     */\n    get end() { return this._end; }\n    /**\n     * Whether to automatically resize the container whenever\n     * the size of any of its drawers changes.\n     *\n     * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n     * the drawers on every change detection cycle. Can be configured globally via the\n     * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n     * @return {?}\n     */\n    get autosize() { return this._autosize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autosize(value) { this._autosize = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n     * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n     * mode as well.\n     * @return {?}\n     */\n    get hasBackdrop() {\n        if (this._backdropOverride == null) {\n            return !this._start || this._start.mode !== 'side' || !this._end || this._end.mode !== 'side';\n        }\n        return this._backdropOverride;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hasBackdrop(value) {\n        this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n    }\n    /**\n     * Reference to the CdkScrollable instance that wraps the scrollable content.\n     * @return {?}\n     */\n    get scrollable() {\n        return this._userContent || this._content;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._allDrawers.changes\n            .pipe(startWith(this._allDrawers), takeUntil(this._destroyed))\n            .subscribe((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        (drawer) => {\n            // @breaking-change 10.0.0 Remove `_container` check once container parameter is required.\n            this._drawers.reset(drawer.filter((/**\n             * @param {?} item\n             * @return {?}\n             */\n            item => !item._container || item._container === this)));\n            this._drawers.notifyOnChanges();\n        }));\n        this._drawers.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._validateDrawers();\n            this._drawers.forEach((/**\n             * @param {?} drawer\n             * @return {?}\n             */\n            (drawer) => {\n                this._watchDrawerToggle(drawer);\n                this._watchDrawerPosition(drawer);\n                this._watchDrawerMode(drawer);\n            }));\n            if (!this._drawers.length ||\n                this._isDrawerOpen(this._start) ||\n                this._isDrawerOpen(this._end)) {\n                this.updateContentMargins();\n            }\n            this._changeDetectorRef.markForCheck();\n        }));\n        this._doCheckSubject.pipe(debounceTime(10), // Arbitrary debounce time, less than a frame at 60fps\n        takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => this.updateContentMargins()));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._contentMarginChanges.complete();\n        this._doCheckSubject.complete();\n        this._drawers.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Calls `open` of both start and end drawers\n     * @return {?}\n     */\n    open() {\n        this._drawers.forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => drawer.open()));\n    }\n    /**\n     * Calls `close` of both start and end drawers\n     * @return {?}\n     */\n    close() {\n        this._drawers.forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => drawer.close()));\n    }\n    /**\n     * Recalculates and updates the inline styles for the content. Note that this should be used\n     * sparingly, because it causes a reflow.\n     * @return {?}\n     */\n    updateContentMargins() {\n        // 1. For drawers in `over` mode, they don't affect the content.\n        // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n        //    left margin (for left drawer) or right margin (for right the drawer).\n        // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n        //    adding to the left or right margin and simultaneously subtracting the same amount of\n        //    margin from the other side.\n        /** @type {?} */\n        let left = 0;\n        /** @type {?} */\n        let right = 0;\n        if (this._left && this._left.opened) {\n            if (this._left.mode == 'side') {\n                left += this._left._width;\n            }\n            else if (this._left.mode == 'push') {\n                /** @type {?} */\n                const width = this._left._width;\n                left += width;\n                right -= width;\n            }\n        }\n        if (this._right && this._right.opened) {\n            if (this._right.mode == 'side') {\n                right += this._right._width;\n            }\n            else if (this._right.mode == 'push') {\n                /** @type {?} */\n                const width = this._right._width;\n                right += width;\n                left -= width;\n            }\n        }\n        // If either `right` or `left` is zero, don't set a style to the element. This\n        // allows users to specify a custom size via CSS class in SSR scenarios where the\n        // measured widths will always be zero. Note that we reset to `null` here, rather\n        // than below, in order to ensure that the types in the `if` below are consistent.\n        left = left || (/** @type {?} */ (null));\n        right = right || (/** @type {?} */ (null));\n        if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n            this._contentMargins = { left, right };\n            // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n            // to do it only when something changed, otherwise we can end up hitting the zone too often.\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => this._contentMarginChanges.next(this._contentMargins)));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        // If users opted into autosizing, do a check every change detection cycle.\n        if (this._autosize && this._isPushed()) {\n            // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => this._doCheckSubject.next()));\n        }\n    }\n    /**\n     * Subscribes to drawer events in order to set a class on the main container element when the\n     * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n     * is properly hidden.\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _watchDrawerToggle(drawer) {\n        drawer._animationStarted.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => event.fromState !== event.toState)), takeUntil(this._drawers.changes))\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // Set the transition class on the container so that the animations occur. This should not\n            // be set initially because animations should only be triggered via a change in state.\n            if (event.toState !== 'open-instant' && this._animationMode !== 'NoopAnimations') {\n                this._element.nativeElement.classList.add('mat-drawer-transition');\n            }\n            this.updateContentMargins();\n            this._changeDetectorRef.markForCheck();\n        }));\n        if (drawer.mode !== 'side') {\n            drawer.openedChange.pipe(takeUntil(this._drawers.changes)).subscribe((/**\n             * @return {?}\n             */\n            () => this._setContainerClass(drawer.opened)));\n        }\n    }\n    /**\n     * Subscribes to drawer onPositionChanged event in order to\n     * re-validate drawers when the position changes.\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _watchDrawerPosition(drawer) {\n        if (!drawer) {\n            return;\n        }\n        // NOTE: We need to wait for the microtask queue to be empty before validating,\n        // since both drawers may be swapping positions at the same time.\n        drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._validateDrawers();\n            }));\n        }));\n    }\n    /**\n     * Subscribes to changes in drawer mode so we can run change detection.\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _watchDrawerMode(drawer) {\n        if (drawer) {\n            drawer._modeChanged.pipe(takeUntil(merge(this._drawers.changes, this._destroyed)))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this.updateContentMargins();\n                this._changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element.\n     * @private\n     * @param {?} isAdd\n     * @return {?}\n     */\n    _setContainerClass(isAdd) {\n        /** @type {?} */\n        const classList = this._element.nativeElement.classList;\n        /** @type {?} */\n        const className = 'mat-drawer-container-has-open';\n        if (isAdd) {\n            classList.add(className);\n        }\n        else {\n            classList.remove(className);\n        }\n    }\n    /**\n     * Validate the state of the drawer children components.\n     * @private\n     * @return {?}\n     */\n    _validateDrawers() {\n        this._start = this._end = null;\n        // Ensure that we have at most one start and one end drawer.\n        this._drawers.forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => {\n            if (drawer.position == 'end') {\n                if (this._end != null) {\n                    throwMatDuplicatedDrawerError('end');\n                }\n                this._end = drawer;\n            }\n            else {\n                if (this._start != null) {\n                    throwMatDuplicatedDrawerError('start');\n                }\n                this._start = drawer;\n            }\n        }));\n        this._right = this._left = null;\n        // Detect if we're LTR or RTL.\n        if (this._dir && this._dir.value === 'rtl') {\n            this._left = this._end;\n            this._right = this._start;\n        }\n        else {\n            this._left = this._start;\n            this._right = this._end;\n        }\n    }\n    /**\n     * Whether the container is being pushed to the side by one of the drawers.\n     * @private\n     * @return {?}\n     */\n    _isPushed() {\n        return (this._isDrawerOpen(this._start) && this._start.mode != 'over') ||\n            (this._isDrawerOpen(this._end) && this._end.mode != 'over');\n    }\n    /**\n     * @return {?}\n     */\n    _onBackdropClicked() {\n        this.backdropClick.emit();\n        this._closeModalDrawer();\n    }\n    /**\n     * @return {?}\n     */\n    _closeModalDrawer() {\n        // Close all open drawers where closing is not disabled and the mode is not `side`.\n        [this._start, this._end]\n            .filter((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => drawer && !drawer.disableClose && this._canHaveBackdrop(drawer)))\n            .forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => (/** @type {?} */ (drawer)).close()));\n    }\n    /**\n     * @return {?}\n     */\n    _isShowingBackdrop() {\n        return (this._isDrawerOpen(this._start) && this._canHaveBackdrop(this._start)) ||\n            (this._isDrawerOpen(this._end) && this._canHaveBackdrop(this._end));\n    }\n    /**\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _canHaveBackdrop(drawer) {\n        return drawer.mode !== 'side' || !!this._backdropOverride;\n    }\n    /**\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _isDrawerOpen(drawer) {\n        return drawer != null && drawer.opened;\n    }\n}\nMatDrawerContainer.ɵfac = function MatDrawerContainer_Factory(t) { return new (t || MatDrawerContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_DEFAULT_AUTOSIZE), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatDrawerContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDrawerContainer, selectors: [[\"mat-drawer-container\"]], contentQueries: function MatDrawerContainer_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawerContent, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawer, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n    } }, viewQuery: function MatDrawerContainer_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatDrawerContent, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._userContent = _t.first);\n    } }, hostAttrs: [1, \"mat-drawer-container\"], hostVars: 2, hostBindings: function MatDrawerContainer_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    } }, inputs: { autosize: \"autosize\", hasBackdrop: \"hasBackdrop\" }, outputs: { backdropClick: \"backdropClick\" }, exportAs: [\"matDrawerContainer\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_DRAWER_CONTAINER,\n                useExisting: MatDrawerContainer\n            }])], ngContentSelectors: _c2, decls: 4, vars: 2, consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"]], template: function MatDrawerContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵtemplate(0, MatDrawerContainer_div_0_Template, 1, 2, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵtemplate(3, MatDrawerContainer_mat_drawer_content_3_Template, 2, 0, \"mat-drawer-content\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    } }, directives: [ɵngcc5.NgIf, MatDrawerContent], styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatDrawerContainer.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DRAWER_DEFAULT_AUTOSIZE,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatDrawerContainer.propDecorators = {\n    _allDrawers: [{ type: ContentChildren, args: [MatDrawer, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }],\n    _content: [{ type: ContentChild, args: [MatDrawerContent,] }],\n    _userContent: [{ type: ViewChild, args: [MatDrawerContent,] }],\n    autosize: [{ type: Input }],\n    hasBackdrop: [{ type: Input }],\n    backdropClick: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDrawerContainer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer-container',\n                exportAs: 'matDrawerContainer',\n                template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n<mat-drawer-content *ngIf=\\\"!_content\\\">\\n  <ng-content></ng-content>\\n</mat-drawer-content>\\n\",\n                host: {\n                    'class': 'mat-drawer-container',\n                    '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [{\n                        provide: MAT_DRAWER_CONTAINER,\n                        useExisting: MatDrawerContainer\n                    }],\n                styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc4.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.ViewportRuler }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DRAWER_DEFAULT_AUTOSIZE]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { backdropClick: [{\n            type: Output\n        }], autosize: [{\n            type: Input\n        }], hasBackdrop: [{\n            type: Input\n        }], _allDrawers: [{\n            type: ContentChildren,\n            args: [MatDrawer, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }], _content: [{\n            type: ContentChild,\n            args: [MatDrawerContent]\n        }], _userContent: [{\n            type: ViewChild,\n            args: [MatDrawerContent]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDrawerContainer.ngAcceptInputType_autosize;\n    /** @type {?} */\n    MatDrawerContainer.ngAcceptInputType_hasBackdrop;\n    /**\n     * All drawers in the container. Includes drawers from inside nested containers.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype._allDrawers;\n    /**\n     * Drawers that belong to this container.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype._drawers;\n    /** @type {?} */\n    MatDrawerContainer.prototype._content;\n    /** @type {?} */\n    MatDrawerContainer.prototype._userContent;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._autosize;\n    /** @type {?} */\n    MatDrawerContainer.prototype._backdropOverride;\n    /**\n     * Event emitted when the drawer backdrop is clicked.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype.backdropClick;\n    /**\n     * The drawer at the start/end position, independent of direction.\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._start;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._end;\n    /**\n     * The drawer at the left/right. When direction changes, these will change as well.\n     * They're used as aliases for the above to set the left/right style properly.\n     * In LTR, _left == _start and _right == _end.\n     * In RTL, _left == _end and _right == _start.\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._left;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._right;\n    /**\n     * Emits when the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._destroyed;\n    /**\n     * Emits on every ngDoCheck. Used for debouncing reflows.\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._doCheckSubject;\n    /**\n     * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n     * drawer is open. We use margin rather than transform even for push mode because transform breaks\n     * fixed position elements inside of the transformed element.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype._contentMargins;\n    /** @type {?} */\n    MatDrawerContainer.prototype._contentMarginChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._animationMode;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/sidenav.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSidenavContent extends MatDrawerContent {\n    /**\n     * @param {?} changeDetectorRef\n     * @param {?} container\n     * @param {?} elementRef\n     * @param {?} scrollDispatcher\n     * @param {?} ngZone\n     */\n    constructor(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone) {\n        super(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone);\n    }\n}\nMatSidenavContent.ɵfac = function MatSidenavContent_Factory(t) { return new (t || MatSidenavContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatSidenavContainer))), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatSidenavContent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSidenavContent, selectors: [[\"mat-sidenav-content\"]], hostAttrs: [1, \"mat-drawer-content\", \"mat-sidenav-content\"], hostVars: 4, hostBindings: function MatSidenavContent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatSidenavContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatSidenavContent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: MatSidenavContainer, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatSidenavContainer)),] }] },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenavContent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav-content',\n                template: '<ng-content></ng-content>',\n                host: {\n                    'class': 'mat-drawer-content mat-sidenav-content',\n                    '[style.margin-left.px]': '_container._contentMargins.left',\n                    '[style.margin-right.px]': '_container._contentMargins.right'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: MatSidenavContainer, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatSidenavContainer))]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\nclass MatSidenav extends MatDrawer {\n    constructor() {\n        super(...arguments);\n        this._fixedInViewport = false;\n        this._fixedTopGap = 0;\n        this._fixedBottomGap = 0;\n    }\n    /**\n     * Whether the sidenav is fixed in the viewport.\n     * @return {?}\n     */\n    get fixedInViewport() { return this._fixedInViewport; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fixedInViewport(value) { this._fixedInViewport = coerceBooleanProperty(value); }\n    /**\n     * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n     * mode.\n     * @return {?}\n     */\n    get fixedTopGap() { return this._fixedTopGap; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fixedTopGap(value) { this._fixedTopGap = coerceNumberProperty(value); }\n    /**\n     * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n     * fixed mode.\n     * @return {?}\n     */\n    get fixedBottomGap() { return this._fixedBottomGap; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fixedBottomGap(value) { this._fixedBottomGap = coerceNumberProperty(value); }\n}\nMatSidenav.ɵfac = function MatSidenav_Factory(t) { return ɵMatSidenav_BaseFactory(t || MatSidenav); };\nMatSidenav.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSidenav, selectors: [[\"mat-sidenav\"]], hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\", \"mat-sidenav\"], hostVars: 17, hostBindings: function MatSidenav_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"align\", null);\n        ɵngcc0.ɵɵstyleProp(\"top\", ctx.fixedInViewport ? ctx.fixedTopGap : null, \"px\")(\"bottom\", ctx.fixedInViewport ? ctx.fixedBottomGap : null, \"px\");\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened)(\"mat-sidenav-fixed\", ctx.fixedInViewport);\n    } }, inputs: { fixedInViewport: \"fixedInViewport\", fixedTopGap: \"fixedTopGap\", fixedBottomGap: \"fixedBottomGap\" }, exportAs: [\"matSidenav\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-drawer-inner-container\"]], template: function MatSidenav_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2, data: { animation: [matDrawerAnimations.transformDrawer] }, changeDetection: 0 });\nMatSidenav.propDecorators = {\n    fixedInViewport: [{ type: Input }],\n    fixedTopGap: [{ type: Input }],\n    fixedBottomGap: [{ type: Input }]\n};\nconst ɵMatSidenav_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSidenav);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenav, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav',\n                exportAs: 'matSidenav',\n                template: \"<div class=\\\"mat-drawer-inner-container\\\">\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\",\n                animations: [matDrawerAnimations.transformDrawer],\n                host: {\n                    'class': 'mat-drawer mat-sidenav',\n                    'tabIndex': '-1',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-drawer-end]': 'position === \"end\"',\n                    '[class.mat-drawer-over]': 'mode === \"over\"',\n                    '[class.mat-drawer-push]': 'mode === \"push\"',\n                    '[class.mat-drawer-side]': 'mode === \"side\"',\n                    '[class.mat-drawer-opened]': 'opened',\n                    '[class.mat-sidenav-fixed]': 'fixedInViewport',\n                    '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\n                    '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, { fixedInViewport: [{\n            type: Input\n        }], fixedTopGap: [{\n            type: Input\n        }], fixedBottomGap: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSidenav.ngAcceptInputType_fixedInViewport;\n    /** @type {?} */\n    MatSidenav.ngAcceptInputType_fixedTopGap;\n    /** @type {?} */\n    MatSidenav.ngAcceptInputType_fixedBottomGap;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSidenav.prototype._fixedInViewport;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSidenav.prototype._fixedTopGap;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSidenav.prototype._fixedBottomGap;\n}\nclass MatSidenavContainer extends MatDrawerContainer {\n}\nMatSidenavContainer.ɵfac = function MatSidenavContainer_Factory(t) { return ɵMatSidenavContainer_BaseFactory(t || MatSidenavContainer); };\nMatSidenavContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSidenavContainer, selectors: [[\"mat-sidenav-container\"]], contentQueries: function MatSidenavContainer_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenavContent, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenav, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n    } }, hostAttrs: [1, \"mat-drawer-container\", \"mat-sidenav-container\"], hostVars: 2, hostBindings: function MatSidenavContainer_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    } }, exportAs: [\"matSidenavContainer\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_DRAWER_CONTAINER,\n                useExisting: MatSidenavContainer\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 4, vars: 2, consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [\"cdkScrollable\", \"\", 4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"], [\"cdkScrollable\", \"\"]], template: function MatSidenavContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵtemplate(0, MatSidenavContainer_div_0_Template, 1, 2, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵtemplate(3, MatSidenavContainer_mat_sidenav_content_3_Template, 2, 0, \"mat-sidenav-content\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    } }, directives: [ɵngcc5.NgIf, MatSidenavContent, ɵngcc1.CdkScrollable], styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatSidenavContainer.propDecorators = {\n    _allDrawers: [{ type: ContentChildren, args: [MatSidenav, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }],\n    _content: [{ type: ContentChild, args: [MatSidenavContent,] }]\n};\nconst ɵMatSidenavContainer_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSidenavContainer);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenavContainer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav-container',\n                exportAs: 'matSidenavContainer',\n                template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n<mat-sidenav-content *ngIf=\\\"!_content\\\" cdkScrollable>\\n  <ng-content></ng-content>\\n</mat-sidenav-content>\\n\",\n                host: {\n                    'class': 'mat-drawer-container mat-sidenav-container',\n                    '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [{\n                        provide: MAT_DRAWER_CONTAINER,\n                        useExisting: MatSidenavContainer\n                    }],\n                styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"]\n            }]\n    }], null, { _allDrawers: [{\n            type: ContentChildren,\n            args: [MatSidenav, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }], _content: [{\n            type: ContentChild,\n            args: [MatSidenavContent]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSidenavContainer.ngAcceptInputType_hasBackdrop;\n    /** @type {?} */\n    MatSidenavContainer.prototype._allDrawers;\n    /** @type {?} */\n    MatSidenavContainer.prototype._content;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/sidenav-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSidenavModule {\n}\nMatSidenavModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSidenavModule });\nMatSidenavModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSidenavModule_Factory(t) { return new (t || MatSidenavModule)(); }, imports: [[\n            CommonModule,\n            MatCommonModule,\n            PlatformModule,\n            CdkScrollableModule,\n        ],\n        CdkScrollableModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSidenavModule, { declarations: function () { return [MatDrawer,\n        MatDrawerContainer,\n        MatDrawerContent,\n        MatSidenav,\n        MatSidenavContainer,\n        MatSidenavContent]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        PlatformModule,\n        CdkScrollableModule]; }, exports: function () { return [CdkScrollableModule,\n        MatCommonModule,\n        MatDrawer,\n        MatDrawerContainer,\n        MatDrawerContent,\n        MatSidenav,\n        MatSidenavContainer,\n        MatSidenavContent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenavModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    PlatformModule,\n                    CdkScrollableModule,\n                ],\n                exports: [\n                    CdkScrollableModule,\n                    MatCommonModule,\n                    MatDrawer,\n                    MatDrawerContainer,\n                    MatDrawerContent,\n                    MatSidenav,\n                    MatSidenavContainer,\n                    MatSidenavContent,\n                ],\n                declarations: [\n                    MatDrawer,\n                    MatDrawerContainer,\n                    MatDrawerContent,\n                    MatSidenav,\n                    MatSidenavContainer,\n                    MatSidenavContent,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DRAWER_DEFAULT_AUTOSIZE, MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent, MatSidenavModule, matDrawerAnimations, throwMatDuplicatedDrawerError, MAT_DRAWER_CONTAINER as ɵangular_material_src_material_sidenav_sidenav_a };\n\n//# sourceMappingURL=sidenav.js.map","import { ObserversModule } from '@angular/cdk/observers';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Attribute, NgZone, Inject, Optional, ViewChild, Input, Output, Directive, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/slide-toggle/slide-toggle-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default `mat-slide-toggle` options that can be overridden.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/observers';\n\nconst _c0 = [\"thumbContainer\"];\nconst _c1 = [\"toggleBar\"];\nconst _c2 = [\"input\"];\nconst _c3 = function () { return { enterDuration: 150 }; };\nconst _c4 = [\"*\"];\nfunction MatSlideToggleDefaultOptions() { }\nif (false) {\n    /**\n     * Whether toggle action triggers value changes in slide toggle.\n     * @type {?|undefined}\n     */\n    MatSlideToggleDefaultOptions.prototype.disableToggleValue;\n    /**\n     * Whether drag action triggers value changes in slide toggle.\n     * @deprecated No longer being used.\n     * \\@breaking-change 10.0.0\n     * @type {?|undefined}\n     */\n    MatSlideToggleDefaultOptions.prototype.disableDragValue;\n}\n/**\n * Injection token to be used to override the default options for `mat-slide-toggle`.\n * @type {?}\n */\nconst MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('mat-slide-toggle-default-options', {\n    providedIn: 'root',\n    factory: (/**\n     * @return {?}\n     */\n    () => ({ disableToggleValue: false }))\n});\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/slide-toggle/slide-toggle.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Increasing integer for generating unique ids for slide-toggle components.\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SLIDE_TOGGLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatSlideToggle)),\n    multi: true\n};\n/**\n * Change event object emitted by a MatSlideToggle.\n */\nclass MatSlideToggleChange {\n    /**\n     * @param {?} source\n     * @param {?} checked\n     */\n    constructor(source, checked) {\n        this.source = source;\n        this.checked = checked;\n    }\n}\nif (false) {\n    /**\n     * The source MatSlideToggle of the event.\n     * @type {?}\n     */\n    MatSlideToggleChange.prototype.source;\n    /**\n     * The new `checked` value of the MatSlideToggle.\n     * @type {?}\n     */\n    MatSlideToggleChange.prototype.checked;\n}\n// Boilerplate for applying mixins to MatSlideToggle.\n/**\n * \\@docs-private\n */\nclass MatSlideToggleBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatSlideToggleBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatSlideToggleMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatSlideToggleBase)), 'accent'));\n/**\n * Represents a slidable \"switch\" toggle that can be moved between on and off.\n */\nclass MatSlideToggle extends _MatSlideToggleMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _focusMonitor\n     * @param {?} _changeDetectorRef\n     * @param {?} tabIndex\n     * @param {?} _ngZone\n     * @param {?} defaults\n     * @param {?=} _animationMode\n     * @param {?=} _dir\n     */\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, tabIndex, \n    /**\n     * @deprecated `_ngZone` and `_dir` parameters to be removed.\n     * @breaking-change 10.0.0\n     */\n    _ngZone, defaults, _animationMode, _dir) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this.defaults = defaults;\n        this._animationMode = _animationMode;\n        this._onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => { });\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this._uniqueId = `mat-slide-toggle-${++nextUniqueId}`;\n        this._required = false;\n        this._checked = false;\n        /**\n         * Name value will be applied to the input element if present.\n         */\n        this.name = null;\n        /**\n         * A unique id for the slide-toggle input. If none is supplied, it will be auto-generated.\n         */\n        this.id = this._uniqueId;\n        /**\n         * Whether the label should appear after or before the slide-toggle. Defaults to 'after'.\n         */\n        this.labelPosition = 'after';\n        /**\n         * Used to set the aria-label attribute on the underlying input element.\n         */\n        this.ariaLabel = null;\n        /**\n         * Used to set the aria-labelledby attribute on the underlying input element.\n         */\n        this.ariaLabelledby = null;\n        /**\n         * An event will be dispatched each time the slide-toggle changes its value.\n         */\n        this.change = new EventEmitter();\n        /**\n         * An event will be dispatched each time the slide-toggle input is toggled.\n         * This event is always emitted when the user toggles the slide toggle, but this does not mean\n         * the slide toggle's value has changed.\n         */\n        this.toggleChange = new EventEmitter();\n        /**\n         * An event will be dispatched each time the slide-toggle is dragged.\n         * This event is always emitted when the user drags the slide toggle to make a change greater\n         * than 50%. It does not mean the slide toggle's value is changed. The event is not emitted when\n         * the user toggles the slide toggle to change its value.\n         * @deprecated No longer being used. To be removed.\n         * \\@breaking-change 10.0.0\n         */\n        this.dragChange = new EventEmitter();\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n    /**\n     * Whether the slide-toggle is required.\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /**\n     * Whether the slide-toggle element is checked or not.\n     * @return {?}\n     */\n    get checked() { return this._checked; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set checked(value) {\n        this._checked = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Returns the unique id for the visual hidden input.\n     * @return {?}\n     */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe((/**\n         * @param {?} focusOrigin\n         * @return {?}\n         */\n        focusOrigin => {\n            // Only forward focus manually when it was received programmatically or through the\n            // keyboard. We should not do this for mouse/touch focus for two reasons:\n            // 1. It can prevent clicks from landing in Chrome (see #18269).\n            // 2. They're already handled by the wrapping `label` element.\n            if (focusOrigin === 'keyboard' || focusOrigin === 'program') {\n                this._inputElement.nativeElement.focus();\n            }\n            else if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state\n                // change (such as a form control's 'ng-touched') will cause a changed-after-checked\n                // error. See https://github.com/angular/angular/issues/17793. To work around this,\n                // we defer telling the form control it has been touched until the next tick.\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => this._onTouched()));\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Method being called whenever the underlying input emits a change event.\n     * @param {?} event\n     * @return {?}\n     */\n    _onChangeEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the component's `change` output.\n        event.stopPropagation();\n        this.toggleChange.emit();\n        // When the slide toggle's config disables toggle change event by setting\n        // `disableToggleValue: true`, the slide toggle's value does not change, and the\n        // checked state of the underlying input needs to be changed back.\n        if (this.defaults.disableToggleValue) {\n            this._inputElement.nativeElement.checked = this.checked;\n            return;\n        }\n        // Sync the value from the underlying input element with the component instance.\n        this.checked = this._inputElement.nativeElement.checked;\n        // Emit our custom change event only if the underlying input emitted one. This ensures that\n        // there is no change event, when the checked state changes programmatically.\n        this._emitChangeEvent();\n    }\n    /**\n     * Method being called whenever the slide-toggle has been clicked.\n     * @param {?} event\n     * @return {?}\n     */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `slide-toggle` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Implemented as a part of ControlValueAccessor.\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Focuses the slide-toggle.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._focusMonitor.focusVia(this._inputElement, 'keyboard', options);\n    }\n    /**\n     * Toggles the checked state of the slide-toggle.\n     * @return {?}\n     */\n    toggle() {\n        this.checked = !this.checked;\n        this._onChange(this.checked);\n    }\n    /**\n     * Emits a change event on the `change` output. Also notifies the FormControl about the change.\n     * @private\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        this._onChange(this.checked);\n        this.change.emit(new MatSlideToggleChange(this, this.checked));\n    }\n    /**\n     * Method being called whenever the label text changes.\n     * @return {?}\n     */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the\n        // slide-toggle component will be only marked for check, but no actual change detection runs\n        // automatically. Instead of going back into the zone in order to trigger a change detection\n        // which causes *all* components to be checked (if explicitly marked or not using OnPush),\n        // we only trigger an explicit change detection for the slide-toggle view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n}\nMatSlideToggle.ɵfac = function MatSlideToggle_Factory(t) { return new (t || MatSlideToggle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8)); };\nMatSlideToggle.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSlideToggle, selectors: [[\"mat-slide-toggle\"]], viewQuery: function MatSlideToggle_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbBarEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n    } }, hostAttrs: [1, \"mat-slide-toggle\"], hostVars: 12, hostBindings: function MatSlideToggle_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : 0 - 1)(\"aria-label\", null)(\"aria-labelledby\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-checked\", ctx.checked)(\"mat-disabled\", ctx.disabled)(\"mat-slide-toggle-label-before\", ctx.labelPosition == \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", name: \"name\", id: \"id\", labelPosition: \"labelPosition\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], required: \"required\", checked: \"checked\" }, outputs: { change: \"change\", toggleChange: \"toggleChange\", dragChange: \"dragChange\" }, exportAs: [\"matSlideToggle\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 16, vars: 18, consts: [[1, \"mat-slide-toggle-label\"], [\"label\", \"\"], [1, \"mat-slide-toggle-bar\"], [\"toggleBar\", \"\"], [\"type\", \"checkbox\", \"role\", \"switch\", 1, \"mat-slide-toggle-input\", \"cdk-visually-hidden\", 3, \"id\", \"required\", \"tabIndex\", \"checked\", \"disabled\", \"change\", \"click\"], [\"input\", \"\"], [1, \"mat-slide-toggle-thumb-container\"], [\"thumbContainer\", \"\"], [1, \"mat-slide-toggle-thumb\"], [\"mat-ripple\", \"\", 1, \"mat-slide-toggle-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-slide-toggle-persistent-ripple\"], [1, \"mat-slide-toggle-content\", 3, \"cdkObserveContent\"], [\"labelContent\", \"\"], [2, \"display\", \"none\"]], template: function MatSlideToggle_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2, 3);\n        ɵngcc0.ɵɵelementStart(4, \"input\", 4, 5);\n        ɵngcc0.ɵɵlistener(\"change\", function MatSlideToggle_Template_input_change_4_listener($event) { return ctx._onChangeEvent($event); })(\"click\", function MatSlideToggle_Template_input_click_4_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 6, 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelementStart(9, \"div\", 9);\n        ɵngcc0.ɵɵelement(10, \"div\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(11, \"span\", 11, 12);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatSlideToggle_Template_span_cdkObserveContent_11_listener() { return ctx._onLabelTextChange(); });\n        ɵngcc0.ɵɵelementStart(13, \"span\", 13);\n        ɵngcc0.ɵɵtext(14, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(15);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        const _r4 = ɵngcc0.ɵɵreference(12);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-slide-toggle-bar-no-side-margin\", !_r4.textContent || !_r4.textContent.trim());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"required\", ctx.required)(\"tabIndex\", ctx.tabIndex)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"name\", ctx.name)(\"aria-checked\", ctx.checked.toString())(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleCentered\", true)(\"matRippleRadius\", 20)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(17, _c3));\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc4.CdkObserveContent], styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatSlideToggle.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatSlideToggle.propDecorators = {\n    _thumbEl: [{ type: ViewChild, args: ['thumbContainer',] }],\n    _thumbBarEl: [{ type: ViewChild, args: ['toggleBar',] }],\n    name: [{ type: Input }],\n    id: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    required: [{ type: Input }],\n    checked: [{ type: Input }],\n    change: [{ type: Output }],\n    toggleChange: [{ type: Output }],\n    dragChange: [{ type: Output }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggle, [{\n        type: Component,\n        args: [{\n                selector: 'mat-slide-toggle',\n                exportAs: 'matSlideToggle',\n                host: {\n                    'class': 'mat-slide-toggle',\n                    '[id]': 'id',\n                    // Needs to be `-1` so it can still receive programmatic focus.\n                    '[attr.tabindex]': 'disabled ? null : -1',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[class.mat-checked]': 'checked',\n                    '[class.mat-disabled]': 'disabled',\n                    '[class.mat-slide-toggle-label-before]': 'labelPosition == \"before\"',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-slide-toggle-label\\\" #label>\\n  <div #toggleBar class=\\\"mat-slide-toggle-bar\\\"\\n       [class.mat-slide-toggle-bar-no-side-margin]=\\\"!labelContent.textContent || !labelContent.textContent.trim()\\\">\\n\\n    <input #input class=\\\"mat-slide-toggle-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           role=\\\"switch\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [checked]=\\\"checked\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.aria-checked]=\\\"checked.toString()\\\"\\n           [attr.aria-label]=\\\"ariaLabel\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           (change)=\\\"_onChangeEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n\\n    <div class=\\\"mat-slide-toggle-thumb-container\\\" #thumbContainer>\\n      <div class=\\\"mat-slide-toggle-thumb\\\"></div>\\n      <div class=\\\"mat-slide-toggle-ripple mat-focus-indicator\\\" mat-ripple\\n           [matRippleTrigger]=\\\"label\\\"\\n           [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n           [matRippleCentered]=\\\"true\\\"\\n           [matRippleRadius]=\\\"20\\\"\\n           [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n\\n        <div class=\\\"mat-ripple-element mat-slide-toggle-persistent-ripple\\\"></div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <span class=\\\"mat-slide-toggle-content\\\" #labelContent (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                providers: [MAT_SLIDE_TOGGLE_VALUE_ACCESSOR],\n                inputs: ['disabled', 'disableRipple', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { name: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], change: [{\n            type: Output\n        }], toggleChange: [{\n            type: Output\n        }], dragChange: [{\n            type: Output\n        }], required: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], _thumbEl: [{\n            type: ViewChild,\n            args: ['thumbContainer']\n        }], _thumbBarEl: [{\n            type: ViewChild,\n            args: ['toggleBar']\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSlideToggle.ngAcceptInputType_required;\n    /** @type {?} */\n    MatSlideToggle.ngAcceptInputType_checked;\n    /** @type {?} */\n    MatSlideToggle.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatSlideToggle.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlideToggle.prototype._onChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlideToggle.prototype._onTouched;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlideToggle.prototype._uniqueId;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlideToggle.prototype._required;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlideToggle.prototype._checked;\n    /**\n     * Reference to the thumb HTMLElement.\n     * @type {?}\n     */\n    MatSlideToggle.prototype._thumbEl;\n    /**\n     * Reference to the thumb bar HTMLElement.\n     * @type {?}\n     */\n    MatSlideToggle.prototype._thumbBarEl;\n    /**\n     * Name value will be applied to the input element if present.\n     * @type {?}\n     */\n    MatSlideToggle.prototype.name;\n    /**\n     * A unique id for the slide-toggle input. If none is supplied, it will be auto-generated.\n     * @type {?}\n     */\n    MatSlideToggle.prototype.id;\n    /**\n     * Whether the label should appear after or before the slide-toggle. Defaults to 'after'.\n     * @type {?}\n     */\n    MatSlideToggle.prototype.labelPosition;\n    /**\n     * Used to set the aria-label attribute on the underlying input element.\n     * @type {?}\n     */\n    MatSlideToggle.prototype.ariaLabel;\n    /**\n     * Used to set the aria-labelledby attribute on the underlying input element.\n     * @type {?}\n     */\n    MatSlideToggle.prototype.ariaLabelledby;\n    /**\n     * An event will be dispatched each time the slide-toggle changes its value.\n     * @type {?}\n     */\n    MatSlideToggle.prototype.change;\n    /**\n     * An event will be dispatched each time the slide-toggle input is toggled.\n     * This event is always emitted when the user toggles the slide toggle, but this does not mean\n     * the slide toggle's value has changed.\n     * @type {?}\n     */\n    MatSlideToggle.prototype.toggleChange;\n    /**\n     * An event will be dispatched each time the slide-toggle is dragged.\n     * This event is always emitted when the user drags the slide toggle to make a change greater\n     * than 50%. It does not mean the slide toggle's value is changed. The event is not emitted when\n     * the user toggles the slide toggle to change its value.\n     * @deprecated No longer being used. To be removed.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    MatSlideToggle.prototype.dragChange;\n    /**\n     * Reference to the underlying input element.\n     * @type {?}\n     */\n    MatSlideToggle.prototype._inputElement;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlideToggle.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlideToggle.prototype._changeDetectorRef;\n    /** @type {?} */\n    MatSlideToggle.prototype.defaults;\n    /** @type {?} */\n    MatSlideToggle.prototype._animationMode;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/slide-toggle/slide-toggle-required-validator.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatSlideToggleRequiredValidator)),\n    multi: true\n};\n/**\n * Validator for Material slide-toggle components with the required attribute in a\n * template-driven form. The default validator for required form controls asserts\n * that the control value is not undefined but that is not appropriate for a slide-toggle\n * where the value is always defined.\n *\n * Required slide-toggle form controls are valid when checked.\n */\nclass MatSlideToggleRequiredValidator extends CheckboxRequiredValidator {\n}\nMatSlideToggleRequiredValidator.ɵfac = function MatSlideToggleRequiredValidator_Factory(t) { return ɵMatSlideToggleRequiredValidator_BaseFactory(t || MatSlideToggleRequiredValidator); };\nMatSlideToggleRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSlideToggleRequiredValidator, selectors: [[\"mat-slide-toggle\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"formControl\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatSlideToggleRequiredValidator_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSlideToggleRequiredValidator);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggleRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: `mat-slide-toggle[required][formControlName],\n             mat-slide-toggle[required][formControl], mat-slide-toggle[required][ngModel]`,\n                providers: [MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/slide-toggle/slide-toggle-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This module is used by both original and MDC-based slide-toggle implementations.\n */\n// tslint:disable-next-line:class-name\nclass _MatSlideToggleRequiredValidatorModule {\n}\n_MatSlideToggleRequiredValidatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: _MatSlideToggleRequiredValidatorModule });\n_MatSlideToggleRequiredValidatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function _MatSlideToggleRequiredValidatorModule_Factory(t) { return new (t || _MatSlideToggleRequiredValidatorModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatSlideToggleRequiredValidatorModule, { declarations: [MatSlideToggleRequiredValidator], exports: [MatSlideToggleRequiredValidator] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatSlideToggleRequiredValidatorModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatSlideToggleRequiredValidator],\n                declarations: [MatSlideToggleRequiredValidator]\n            }]\n    }], null, null); })();\nclass MatSlideToggleModule {\n}\nMatSlideToggleModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSlideToggleModule });\nMatSlideToggleModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSlideToggleModule_Factory(t) { return new (t || MatSlideToggleModule)(); }, imports: [[\n            _MatSlideToggleRequiredValidatorModule,\n            MatRippleModule,\n            MatCommonModule,\n            ObserversModule,\n        ],\n        _MatSlideToggleRequiredValidatorModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSlideToggleModule, { declarations: function () { return [MatSlideToggle]; }, imports: function () { return [_MatSlideToggleRequiredValidatorModule,\n        MatRippleModule,\n        MatCommonModule,\n        ObserversModule]; }, exports: function () { return [_MatSlideToggleRequiredValidatorModule,\n        MatSlideToggle,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatRippleModule,\n                    MatCommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatSlideToggle,\n                    MatCommonModule\n                ],\n                declarations: [MatSlideToggle]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/slide-toggle/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR, MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, MatSlideToggle, MatSlideToggleChange, MatSlideToggleModule, MatSlideToggleRequiredValidator, _MatSlideToggleRequiredValidatorModule };\n\n//# sourceMappingURL=slide-toggle.js.map","import { DOCUMENT, CommonModule } from '@angular/common';\nimport { forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Attribute, Inject, NgZone, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisabled, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, DOWN_ARROW, RIGHT_ARROW, UP_ARROW, LEFT_ARROW, HOME, END, PAGE_DOWN, PAGE_UP } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { Subscription } from 'rxjs';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/slider/slider.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/common';\n\nconst _c0 = [\"sliderWrapper\"];\nconst activeEventOptions = normalizePassiveListenerOptions({ passive: false });\n/**\n * Visually, a 30px separation between tick marks looks best. This is very subjective but it is\n * the default separation we chose.\n * @type {?}\n */\nconst MIN_AUTO_TICK_SEPARATION = 30;\n/**\n * The thumb gap size for a disabled slider.\n * @type {?}\n */\nconst DISABLED_THUMB_GAP = 7;\n/**\n * The thumb gap size for a non-active slider at its minimum value.\n * @type {?}\n */\nconst MIN_VALUE_NONACTIVE_THUMB_GAP = 7;\n/**\n * The thumb gap size for an active slider at its minimum value.\n * @type {?}\n */\nconst MIN_VALUE_ACTIVE_THUMB_GAP = 10;\n/**\n * Provider Expression that allows mat-slider to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)] and [formControl].\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SLIDER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatSlider)),\n    multi: true\n};\n/**\n * A simple change event emitted by the MatSlider component.\n */\nclass MatSliderChange {\n}\nif (false) {\n    /**\n     * The MatSlider that changed.\n     * @type {?}\n     */\n    MatSliderChange.prototype.source;\n    /**\n     * The new value of the source slider.\n     * @type {?}\n     */\n    MatSliderChange.prototype.value;\n}\n// Boilerplate for applying mixins to MatSlider.\n/**\n * \\@docs-private\n */\nclass MatSliderBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatSliderBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatSliderMixinBase = mixinTabIndex(mixinColor(mixinDisabled(MatSliderBase), 'accent'));\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\nclass MatSlider extends _MatSliderMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _focusMonitor\n     * @param {?} _changeDetectorRef\n     * @param {?} _dir\n     * @param {?} tabIndex\n     * @param {?=} _animationMode\n     * @param {?=} _ngZone\n     * @param {?=} document\n     */\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, _dir, tabIndex, _animationMode, _ngZone, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._animationMode = _animationMode;\n        this._ngZone = _ngZone;\n        this._invert = false;\n        this._max = 100;\n        this._min = 0;\n        this._step = 1;\n        this._thumbLabel = false;\n        this._tickInterval = 0;\n        this._value = null;\n        this._vertical = false;\n        /**\n         * Event emitted when the slider value has changed.\n         */\n        this.change = new EventEmitter();\n        /**\n         * Event emitted when the slider thumb moves.\n         */\n        this.input = new EventEmitter();\n        /**\n         * Emits when the raw value of the slider changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * \\@docs-private\n         */\n        this.valueChange = new EventEmitter();\n        /**\n         * onTouch function registered via registerOnTouch (ControlValueAccessor).\n         */\n        this.onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this._percent = 0;\n        /**\n         * Whether or not the thumb is sliding.\n         * Used to determine if there should be a transition for the thumb and fill track.\n         */\n        this._isSliding = false;\n        /**\n         * Whether or not the slider is active (clicked or sliding).\n         * Used to shrink and grow the thumb as according to the Material Design spec.\n         */\n        this._isActive = false;\n        /**\n         * The size of a tick interval as a percentage of the size of the track.\n         */\n        this._tickIntervalPercent = 0;\n        /**\n         * The dimensions of the slider.\n         */\n        this._sliderDimensions = null;\n        this._controlValueAccessorChangeFn = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * Subscription to the Directionality change EventEmitter.\n         */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /**\n         * Called when the user has put their pointer down on the slider.\n         */\n        this._pointerDown = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // Don't do anything if the slider is disabled or the\n            // user is using anything other than the main mouse button.\n            if (this.disabled || this._isSliding || (!isTouchEvent(event) && event.button !== 0)) {\n                return;\n            }\n            this._runInsideZone((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const oldValue = this.value;\n                /** @type {?} */\n                const pointerPosition = getPointerPositionOnPage(event);\n                this._isSliding = true;\n                this._lastPointerEvent = event;\n                event.preventDefault();\n                this._focusHostElement();\n                this._onMouseenter(); // Simulate mouseenter in case this is a mobile device.\n                this._bindGlobalEvents(event);\n                this._focusHostElement();\n                this._updateValueFromPosition(pointerPosition);\n                this._valueOnSlideStart = this.value;\n                this._pointerPositionOnStart = pointerPosition;\n                // Emit a change and input event if the value changed.\n                if (oldValue != this.value) {\n                    this._emitInputEvent();\n                    this._emitChangeEvent();\n                }\n            }));\n        });\n        /**\n         * Called when the user has moved their pointer after\n         * starting to drag. Bound on the document level.\n         */\n        this._pointerMove = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            if (this._isSliding) {\n                // Prevent the slide from selecting anything else.\n                event.preventDefault();\n                /** @type {?} */\n                const oldValue = this.value;\n                this._lastPointerEvent = event;\n                this._updateValueFromPosition(getPointerPositionOnPage(event));\n                // Native range elements always emit `input` events when the value changed while sliding.\n                if (oldValue != this.value) {\n                    this._emitInputEvent();\n                }\n            }\n        });\n        /**\n         * Called when the user has lifted their pointer. Bound on the document level.\n         */\n        this._pointerUp = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            if (this._isSliding) {\n                /** @type {?} */\n                const pointerPositionOnStart = this._pointerPositionOnStart;\n                /** @type {?} */\n                const currentPointerPosition = getPointerPositionOnPage(event);\n                event.preventDefault();\n                this._removeGlobalEvents();\n                this._valueOnSlideStart = this._pointerPositionOnStart = this._lastPointerEvent = null;\n                this._isSliding = false;\n                if (this._valueOnSlideStart != this.value && !this.disabled &&\n                    pointerPositionOnStart && (pointerPositionOnStart.x !== currentPointerPosition.x ||\n                    pointerPositionOnStart.y !== currentPointerPosition.y)) {\n                    this._emitChangeEvent();\n                }\n            }\n        });\n        /**\n         * Called when the window has lost focus.\n         */\n        this._windowBlur = (/**\n         * @return {?}\n         */\n        () => {\n            // If the window is blurred while dragging we need to stop dragging because the\n            // browser won't dispatch the `mouseup` and `touchend` events anymore.\n            if (this._lastPointerEvent) {\n                this._pointerUp(this._lastPointerEvent);\n            }\n        });\n        this._document = document;\n        this.tabIndex = parseInt(tabIndex) || 0;\n        this._runOutsizeZone((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const element = elementRef.nativeElement;\n            element.addEventListener('mousedown', this._pointerDown, activeEventOptions);\n            element.addEventListener('touchstart', this._pointerDown, activeEventOptions);\n        }));\n    }\n    /**\n     * Whether the slider is inverted.\n     * @return {?}\n     */\n    get invert() { return this._invert; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set invert(value) {\n        this._invert = coerceBooleanProperty(value);\n    }\n    /**\n     * The maximum value that the slider can have.\n     * @return {?}\n     */\n    get max() { return this._max; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set max(v) {\n        this._max = coerceNumberProperty(v, this._max);\n        this._percent = this._calculatePercentage(this._value);\n        // Since this also modifies the percentage, we need to let the change detection know.\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * The minimum value that the slider can have.\n     * @return {?}\n     */\n    get min() { return this._min; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set min(v) {\n        this._min = coerceNumberProperty(v, this._min);\n        // If the value wasn't explicitly set by the user, set it to the min.\n        if (this._value === null) {\n            this.value = this._min;\n        }\n        this._percent = this._calculatePercentage(this._value);\n        // Since this also modifies the percentage, we need to let the change detection know.\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * The values at which the thumb will snap.\n     * @return {?}\n     */\n    get step() { return this._step; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set step(v) {\n        this._step = coerceNumberProperty(v, this._step);\n        if (this._step % 1 !== 0) {\n            this._roundToDecimal = (/** @type {?} */ (this._step.toString().split('.').pop())).length;\n        }\n        // Since this could modify the label, we need to notify the change detection.\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Whether or not to show the thumb label.\n     * @return {?}\n     */\n    get thumbLabel() { return this._thumbLabel; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set thumbLabel(value) { this._thumbLabel = coerceBooleanProperty(value); }\n    /**\n     * How often to show ticks. Relative to the step so that a tick always appears on a step.\n     * Ex: Tick interval of 4 with a step of 3 will draw a tick every 4 steps (every 12 values).\n     * @return {?}\n     */\n    get tickInterval() { return this._tickInterval; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set tickInterval(value) {\n        if (value === 'auto') {\n            this._tickInterval = 'auto';\n        }\n        else if (typeof value === 'number' || typeof value === 'string') {\n            this._tickInterval = coerceNumberProperty(value, (/** @type {?} */ (this._tickInterval)));\n        }\n        else {\n            this._tickInterval = 0;\n        }\n    }\n    /**\n     * Value of the slider.\n     * @return {?}\n     */\n    get value() {\n        // If the value needs to be read and it is still uninitialized, initialize it to the min.\n        if (this._value === null) {\n            this.value = this._min;\n        }\n        return this._value;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set value(v) {\n        if (v !== this._value) {\n            /** @type {?} */\n            let value = coerceNumberProperty(v);\n            // While incrementing by a decimal we can end up with values like 33.300000000000004.\n            // Truncate it to ensure that it matches the label and to make it easier to work with.\n            if (this._roundToDecimal) {\n                value = parseFloat(value.toFixed(this._roundToDecimal));\n            }\n            this._value = value;\n            this._percent = this._calculatePercentage(this._value);\n            // Since this also modifies the percentage, we need to let the change detection know.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the slider is vertical.\n     * @return {?}\n     */\n    get vertical() { return this._vertical; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set vertical(value) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n    /**\n     * The value to be used for display purposes.\n     * @return {?}\n     */\n    get displayValue() {\n        if (this.displayWith) {\n            // Value is never null but since setters and getters cannot have\n            // different types, the value getter is also typed to return null.\n            return this.displayWith((/** @type {?} */ (this.value)));\n        }\n        // Note that this could be improved further by rounding something like 0.999 to 1 or\n        // 0.899 to 0.9, however it is very performance sensitive, because it gets called on\n        // every change detection cycle.\n        if (this._roundToDecimal && this.value && this.value % 1 !== 0) {\n            return this.value.toFixed(this._roundToDecimal);\n        }\n        return this.value || 0;\n    }\n    /**\n     * set focus to the host element\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._focusHostElement(options);\n    }\n    /**\n     * blur the host element\n     * @return {?}\n     */\n    blur() {\n        this._blurHostElement();\n    }\n    /**\n     * The percentage of the slider that coincides with the value.\n     * @return {?}\n     */\n    get percent() { return this._clamp(this._percent); }\n    /**\n     * Whether the axis of the slider is inverted.\n     * (i.e. whether moving the thumb in the positive x or y direction decreases the slider's value).\n     * @return {?}\n     */\n    get _invertAxis() {\n        // Standard non-inverted mode for a vertical slider should be dragging the thumb from bottom to\n        // top. However from a y-axis standpoint this is inverted.\n        return this.vertical ? !this.invert : this.invert;\n    }\n    /**\n     * Whether the slider is at its minimum value.\n     * @return {?}\n     */\n    get _isMinValue() {\n        return this.percent === 0;\n    }\n    /**\n     * The amount of space to leave between the slider thumb and the track fill & track background\n     * elements.\n     * @return {?}\n     */\n    get _thumbGap() {\n        if (this.disabled) {\n            return DISABLED_THUMB_GAP;\n        }\n        if (this._isMinValue && !this.thumbLabel) {\n            return this._isActive ? MIN_VALUE_ACTIVE_THUMB_GAP : MIN_VALUE_NONACTIVE_THUMB_GAP;\n        }\n        return 0;\n    }\n    /**\n     * CSS styles for the track background element.\n     * @return {?}\n     */\n    get _trackBackgroundStyles() {\n        /** @type {?} */\n        const axis = this.vertical ? 'Y' : 'X';\n        /** @type {?} */\n        const scale = this.vertical ? `1, ${1 - this.percent}, 1` : `${1 - this.percent}, 1, 1`;\n        /** @type {?} */\n        const sign = this._shouldInvertMouseCoords() ? '-' : '';\n        return {\n            // scale3d avoids some rendering issues in Chrome. See #12071.\n            transform: `translate${axis}(${sign}${this._thumbGap}px) scale3d(${scale})`\n        };\n    }\n    /**\n     * CSS styles for the track fill element.\n     * @return {?}\n     */\n    get _trackFillStyles() {\n        /** @type {?} */\n        const percent = this.percent;\n        /** @type {?} */\n        const axis = this.vertical ? 'Y' : 'X';\n        /** @type {?} */\n        const scale = this.vertical ? `1, ${percent}, 1` : `${percent}, 1, 1`;\n        /** @type {?} */\n        const sign = this._shouldInvertMouseCoords() ? '' : '-';\n        return {\n            // scale3d avoids some rendering issues in Chrome. See #12071.\n            transform: `translate${axis}(${sign}${this._thumbGap}px) scale3d(${scale})`,\n            // iOS Safari has a bug where it won't re-render elements which start of as `scale(0)` until\n            // something forces a style recalculation on it. Since we'll end up with `scale(0)` when\n            // the value of the slider is 0, we can easily get into this situation. We force a\n            // recalculation by changing the element's `display` when it goes from 0 to any other value.\n            display: percent === 0 ? 'none' : ''\n        };\n    }\n    /**\n     * CSS styles for the ticks container element.\n     * @return {?}\n     */\n    get _ticksContainerStyles() {\n        /** @type {?} */\n        let axis = this.vertical ? 'Y' : 'X';\n        // For a horizontal slider in RTL languages we push the ticks container off the left edge\n        // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n        /** @type {?} */\n        let sign = !this.vertical && this._getDirection() == 'rtl' ? '' : '-';\n        /** @type {?} */\n        let offset = this._tickIntervalPercent / 2 * 100;\n        return {\n            'transform': `translate${axis}(${sign}${offset}%)`\n        };\n    }\n    /**\n     * CSS styles for the ticks element.\n     * @return {?}\n     */\n    get _ticksStyles() {\n        /** @type {?} */\n        let tickSize = this._tickIntervalPercent * 100;\n        /** @type {?} */\n        let backgroundSize = this.vertical ? `2px ${tickSize}%` : `${tickSize}% 2px`;\n        /** @type {?} */\n        let axis = this.vertical ? 'Y' : 'X';\n        // Depending on the direction we pushed the ticks container, push the ticks the opposite\n        // direction to re-center them but clip off the end edge. In RTL languages we need to flip the\n        // ticks 180 degrees so we're really cutting off the end edge abd not the start.\n        /** @type {?} */\n        let sign = !this.vertical && this._getDirection() == 'rtl' ? '-' : '';\n        /** @type {?} */\n        let rotate = !this.vertical && this._getDirection() == 'rtl' ? ' rotate(180deg)' : '';\n        /** @type {?} */\n        let styles = {\n            'backgroundSize': backgroundSize,\n            // Without translateZ ticks sometimes jitter as the slider moves on Chrome & Firefox.\n            'transform': `translateZ(0) translate${axis}(${sign}${tickSize / 2}%)${rotate}`\n        };\n        if (this._isMinValue && this._thumbGap) {\n            /** @type {?} */\n            let side;\n            if (this.vertical) {\n                side = this._invertAxis ? 'Bottom' : 'Top';\n            }\n            else {\n                side = this._invertAxis ? 'Right' : 'Left';\n            }\n            styles[`padding${side}`] = `${this._thumbGap}px`;\n        }\n        return styles;\n    }\n    /**\n     * @return {?}\n     */\n    get _thumbContainerStyles() {\n        /** @type {?} */\n        let axis = this.vertical ? 'Y' : 'X';\n        // For a horizontal slider in RTL languages we push the thumb container off the left edge\n        // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n        /** @type {?} */\n        let invertOffset = (this._getDirection() == 'rtl' && !this.vertical) ? !this._invertAxis : this._invertAxis;\n        /** @type {?} */\n        let offset = (invertOffset ? this.percent : 1 - this.percent) * 100;\n        return {\n            'transform': `translate${axis}(-${offset}%)`\n        };\n    }\n    /**\n     * Whether mouse events should be converted to a slider position by calculating their distance\n     * from the right or bottom edge of the slider as opposed to the top or left.\n     * @return {?}\n     */\n    _shouldInvertMouseCoords() {\n        return (this._getDirection() == 'rtl' && !this.vertical) ? !this._invertAxis : this._invertAxis;\n    }\n    /**\n     * The language direction for this slider element.\n     * @private\n     * @return {?}\n     */\n    _getDirection() {\n        return (this._dir && this._dir.value == 'rtl') ? 'rtl' : 'ltr';\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe((/**\n         * @param {?} origin\n         * @return {?}\n         */\n        (origin) => {\n            this._isActive = !!origin && origin !== 'keyboard';\n            this._changeDetectorRef.detectChanges();\n        }));\n        if (this._dir) {\n            this._dirChangeSubscription = this._dir.change.subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        element.removeEventListener('mousedown', this._pointerDown, activeEventOptions);\n        element.removeEventListener('touchstart', this._pointerDown, activeEventOptions);\n        this._lastPointerEvent = null;\n        this._removeGlobalEvents();\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._dirChangeSubscription.unsubscribe();\n    }\n    /**\n     * @return {?}\n     */\n    _onMouseenter() {\n        if (this.disabled) {\n            return;\n        }\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._getSliderDimensions();\n        this._updateTickIntervalPercent();\n    }\n    /**\n     * @return {?}\n     */\n    _onFocus() {\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._getSliderDimensions();\n        this._updateTickIntervalPercent();\n    }\n    /**\n     * @return {?}\n     */\n    _onBlur() {\n        this.onTouched();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onKeydown(event) {\n        if (this.disabled || hasModifierKey(event)) {\n            return;\n        }\n        /** @type {?} */\n        const oldValue = this.value;\n        switch (event.keyCode) {\n            case PAGE_UP:\n                this._increment(10);\n                break;\n            case PAGE_DOWN:\n                this._increment(-10);\n                break;\n            case END:\n                this.value = this.max;\n                break;\n            case HOME:\n                this.value = this.min;\n                break;\n            case LEFT_ARROW:\n                // NOTE: For a sighted user it would make more sense that when they press an arrow key on an\n                // inverted slider the thumb moves in that direction. However for a blind user, nothing\n                // about the slider indicates that it is inverted. They will expect left to be decrement,\n                // regardless of how it appears on the screen. For speakers ofRTL languages, they probably\n                // expect left to mean increment. Therefore we flip the meaning of the side arrow keys for\n                // RTL. For inverted sliders we prefer a good a11y experience to having it \"look right\" for\n                // sighted users, therefore we do not swap the meaning.\n                this._increment(this._getDirection() == 'rtl' ? 1 : -1);\n                break;\n            case UP_ARROW:\n                this._increment(1);\n                break;\n            case RIGHT_ARROW:\n                // See comment on LEFT_ARROW about the conditions under which we flip the meaning.\n                this._increment(this._getDirection() == 'rtl' ? -1 : 1);\n                break;\n            case DOWN_ARROW:\n                this._increment(-1);\n                break;\n            default:\n                // Return if the key is not one that we explicitly handle to avoid calling preventDefault on\n                // it.\n                return;\n        }\n        if (oldValue != this.value) {\n            this._emitInputEvent();\n            this._emitChangeEvent();\n        }\n        this._isSliding = true;\n        event.preventDefault();\n    }\n    /**\n     * @return {?}\n     */\n    _onKeyup() {\n        this._isSliding = false;\n    }\n    /**\n     * Use defaultView of injected document if available or fallback to global window reference\n     * @private\n     * @return {?}\n     */\n    _getWindow() {\n        var _a;\n        return ((_a = this._document) === null || _a === void 0 ? void 0 : _a.defaultView) || window;\n    }\n    /**\n     * Binds our global move and end events. They're bound at the document level and only while\n     * dragging so that the user doesn't have to keep their pointer exactly over the slider\n     * as they're swiping across the screen.\n     * @private\n     * @param {?} triggerEvent\n     * @return {?}\n     */\n    _bindGlobalEvents(triggerEvent) {\n        // Note that we bind the events to the `document`, because it allows us to capture\n        // drag cancel events where the user's pointer is outside the browser window.\n        /** @type {?} */\n        const document = this._document;\n        if (typeof document !== 'undefined' && document) {\n            /** @type {?} */\n            const isTouch = isTouchEvent(triggerEvent);\n            /** @type {?} */\n            const moveEventName = isTouch ? 'touchmove' : 'mousemove';\n            /** @type {?} */\n            const endEventName = isTouch ? 'touchend' : 'mouseup';\n            document.addEventListener(moveEventName, this._pointerMove, activeEventOptions);\n            document.addEventListener(endEventName, this._pointerUp, activeEventOptions);\n            if (isTouch) {\n                document.addEventListener('touchcancel', this._pointerUp, activeEventOptions);\n            }\n        }\n        /** @type {?} */\n        const window = this._getWindow();\n        if (typeof window !== 'undefined' && window) {\n            window.addEventListener('blur', this._windowBlur);\n        }\n    }\n    /**\n     * Removes any global event listeners that we may have added.\n     * @private\n     * @return {?}\n     */\n    _removeGlobalEvents() {\n        /** @type {?} */\n        const document = this._document;\n        if (typeof document !== 'undefined' && document) {\n            document.removeEventListener('mousemove', this._pointerMove, activeEventOptions);\n            document.removeEventListener('mouseup', this._pointerUp, activeEventOptions);\n            document.removeEventListener('touchmove', this._pointerMove, activeEventOptions);\n            document.removeEventListener('touchend', this._pointerUp, activeEventOptions);\n            document.removeEventListener('touchcancel', this._pointerUp, activeEventOptions);\n        }\n        /** @type {?} */\n        const window = this._getWindow();\n        if (typeof window !== 'undefined' && window) {\n            window.removeEventListener('blur', this._windowBlur);\n        }\n    }\n    /**\n     * Increments the slider by the given number of steps (negative number decrements).\n     * @private\n     * @param {?} numSteps\n     * @return {?}\n     */\n    _increment(numSteps) {\n        this.value = this._clamp((this.value || 0) + this.step * numSteps, this.min, this.max);\n    }\n    /**\n     * Calculate the new value from the new physical location. The value will always be snapped.\n     * @private\n     * @param {?} pos\n     * @return {?}\n     */\n    _updateValueFromPosition(pos) {\n        if (!this._sliderDimensions) {\n            return;\n        }\n        /** @type {?} */\n        let offset = this.vertical ? this._sliderDimensions.top : this._sliderDimensions.left;\n        /** @type {?} */\n        let size = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n        /** @type {?} */\n        let posComponent = this.vertical ? pos.y : pos.x;\n        // The exact value is calculated from the event and used to find the closest snap value.\n        /** @type {?} */\n        let percent = this._clamp((posComponent - offset) / size);\n        if (this._shouldInvertMouseCoords()) {\n            percent = 1 - percent;\n        }\n        // Since the steps may not divide cleanly into the max value, if the user\n        // slid to 0 or 100 percent, we jump to the min/max value. This approach\n        // is slightly more intuitive than using `Math.ceil` below, because it\n        // follows the user's pointer closer.\n        if (percent === 0) {\n            this.value = this.min;\n        }\n        else if (percent === 1) {\n            this.value = this.max;\n        }\n        else {\n            /** @type {?} */\n            const exactValue = this._calculateValue(percent);\n            // This calculation finds the closest step by finding the closest\n            // whole number divisible by the step relative to the min.\n            /** @type {?} */\n            const closestValue = Math.round((exactValue - this.min) / this.step) * this.step + this.min;\n            // The value needs to snap to the min and max.\n            this.value = this._clamp(closestValue, this.min, this.max);\n        }\n    }\n    /**\n     * Emits a change event if the current value is different from the last emitted value.\n     * @private\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        this._controlValueAccessorChangeFn(this.value);\n        this.valueChange.emit(this.value);\n        this.change.emit(this._createChangeEvent());\n    }\n    /**\n     * Emits an input event when the current value is different from the last emitted value.\n     * @private\n     * @return {?}\n     */\n    _emitInputEvent() {\n        this.input.emit(this._createChangeEvent());\n    }\n    /**\n     * Updates the amount of space between ticks as a percentage of the width of the slider.\n     * @private\n     * @return {?}\n     */\n    _updateTickIntervalPercent() {\n        if (!this.tickInterval || !this._sliderDimensions) {\n            return;\n        }\n        if (this.tickInterval == 'auto') {\n            /** @type {?} */\n            let trackSize = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n            /** @type {?} */\n            let pixelsPerStep = trackSize * this.step / (this.max - this.min);\n            /** @type {?} */\n            let stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);\n            /** @type {?} */\n            let pixelsPerTick = stepsPerTick * this.step;\n            this._tickIntervalPercent = pixelsPerTick / trackSize;\n        }\n        else {\n            this._tickIntervalPercent = this.tickInterval * this.step / (this.max - this.min);\n        }\n    }\n    /**\n     * Creates a slider change object from the specified value.\n     * @private\n     * @param {?=} value\n     * @return {?}\n     */\n    _createChangeEvent(value = this.value) {\n        /** @type {?} */\n        let event = new MatSliderChange();\n        event.source = this;\n        event.value = value;\n        return event;\n    }\n    /**\n     * Calculates the percentage of the slider that a value is.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _calculatePercentage(value) {\n        return ((value || 0) - this.min) / (this.max - this.min);\n    }\n    /**\n     * Calculates the value a percentage of the slider corresponds to.\n     * @private\n     * @param {?} percentage\n     * @return {?}\n     */\n    _calculateValue(percentage) {\n        return this.min + percentage * (this.max - this.min);\n    }\n    /**\n     * Return a number between two numbers.\n     * @private\n     * @param {?} value\n     * @param {?=} min\n     * @param {?=} max\n     * @return {?}\n     */\n    _clamp(value, min = 0, max = 1) {\n        return Math.max(min, Math.min(value, max));\n    }\n    /**\n     * Get the bounding client rect of the slider track element.\n     * The track is used rather than the native element to ignore the extra space that the thumb can\n     * take up.\n     * @private\n     * @return {?}\n     */\n    _getSliderDimensions() {\n        return this._sliderWrapper ? this._sliderWrapper.nativeElement.getBoundingClientRect() : null;\n    }\n    /**\n     * Focuses the native element.\n     * Currently only used to allow a blur event to fire but will be used with keyboard input later.\n     * @private\n     * @param {?=} options\n     * @return {?}\n     */\n    _focusHostElement(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /**\n     * Blurs the native element.\n     * @private\n     * @return {?}\n     */\n    _blurHostElement() {\n        this._elementRef.nativeElement.blur();\n    }\n    /**\n     * Runs a callback inside of the NgZone, if possible.\n     * @private\n     * @param {?} fn\n     * @return {?}\n     */\n    _runInsideZone(fn) {\n        // @breaking-change 9.0.0 Remove this function once `_ngZone` is a required parameter.\n        this._ngZone ? this._ngZone.run(fn) : fn();\n    }\n    /**\n     * Runs a callback outside of the NgZone, if possible.\n     * @private\n     * @param {?} fn\n     * @return {?}\n     */\n    _runOutsizeZone(fn) {\n        // @breaking-change 9.0.0 Remove this function once `_ngZone` is a required parameter.\n        this._ngZone ? this._ngZone.runOutsideAngular(fn) : fn();\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    /**\n     * Registers a callback to be triggered when the value has changed.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be triggered when the component is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets whether the component should be disabled.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n}\nMatSlider.ɵfac = function MatSlider_Factory(t) { return new (t || MatSlider)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nMatSlider.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSlider, selectors: [[\"mat-slider\"]], viewQuery: function MatSlider_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._sliderWrapper = _t.first);\n    } }, hostAttrs: [\"role\", \"slider\", 1, \"mat-slider\", \"mat-focus-indicator\"], hostVars: 28, hostBindings: function MatSlider_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatSlider_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSlider_blur_HostBindingHandler() { return ctx._onBlur(); })(\"keydown\", function MatSlider_keydown_HostBindingHandler($event) { return ctx._onKeydown($event); })(\"keyup\", function MatSlider_keyup_HostBindingHandler() { return ctx._onKeyup(); })(\"mouseenter\", function MatSlider_mouseenter_HostBindingHandler() { return ctx._onMouseenter(); })(\"selectstart\", function MatSlider_selectstart_HostBindingHandler($event) { return $event.preventDefault(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled)(\"aria-valuemax\", ctx.max)(\"aria-valuemin\", ctx.min)(\"aria-valuenow\", ctx.value)(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n        ɵngcc0.ɵɵclassProp(\"mat-slider-disabled\", ctx.disabled)(\"mat-slider-has-ticks\", ctx.tickInterval)(\"mat-slider-horizontal\", !ctx.vertical)(\"mat-slider-axis-inverted\", ctx._invertAxis)(\"mat-slider-invert-mouse-coords\", ctx._shouldInvertMouseCoords())(\"mat-slider-sliding\", ctx._isSliding)(\"mat-slider-thumb-label-showing\", ctx.thumbLabel)(\"mat-slider-vertical\", ctx.vertical)(\"mat-slider-min-value\", ctx._isMinValue)(\"mat-slider-hide-last-tick\", ctx.disabled || ctx._isMinValue && ctx._thumbGap && ctx._invertAxis)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", color: \"color\", tabIndex: \"tabIndex\", invert: \"invert\", max: \"max\", min: \"min\", value: \"value\", step: \"step\", thumbLabel: \"thumbLabel\", tickInterval: \"tickInterval\", vertical: \"vertical\", displayWith: \"displayWith\" }, outputs: { change: \"change\", input: \"input\", valueChange: \"valueChange\" }, exportAs: [\"matSlider\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDER_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 13, vars: 6, consts: [[1, \"mat-slider-wrapper\"], [\"sliderWrapper\", \"\"], [1, \"mat-slider-track-wrapper\"], [1, \"mat-slider-track-background\", 3, \"ngStyle\"], [1, \"mat-slider-track-fill\", 3, \"ngStyle\"], [1, \"mat-slider-ticks-container\", 3, \"ngStyle\"], [1, \"mat-slider-ticks\", 3, \"ngStyle\"], [1, \"mat-slider-thumb-container\", 3, \"ngStyle\"], [1, \"mat-slider-focus-ring\"], [1, \"mat-slider-thumb\"], [1, \"mat-slider-thumb-label\"], [1, \"mat-slider-thumb-label-text\"]], template: function MatSlider_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelement(3, \"div\", 3);\n        ɵngcc0.ɵɵelement(4, \"div\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5);\n        ɵngcc0.ɵɵelement(6, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelement(9, \"div\", 9);\n        ɵngcc0.ɵɵelementStart(10, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(11, \"span\", 11);\n        ɵngcc0.ɵɵtext(12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._trackBackgroundStyles);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._trackFillStyles);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._ticksContainerStyles);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._ticksStyles);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._thumbContainerStyles);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵtextInterpolate(ctx.displayValue);\n    } }, directives: [ɵngcc3.NgStyle], styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:none;vertical-align:middle}.mat-slider:not(.mat-slider-disabled):active,.mat-slider.mat-slider-sliding:not(.mat-slider-disabled){cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-wrapper{position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{background-repeat:repeat;background-clip:content-box;box-sizing:border-box;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider.cdk-keyboard-focused .mat-slider-focus-ring,.mat-slider.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb{cursor:-webkit-grab;cursor:grab}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(0.7);transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-radius 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.cdk-high-contrast-active .mat-slider-thumb-label{outline:solid 1px}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-sliding .mat-slider-track-fill,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-thumb-container{transition-duration:0ms}.mat-slider-has-ticks .mat-slider-wrapper::after{content:\\\"\\\";position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{display:none}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(0.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}.cdk-high-contrast-active .mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(0.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}.cdk-high-contrast-active .mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(0.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-track-fill,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after{transition:none}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatSlider.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nMatSlider.propDecorators = {\n    invert: [{ type: Input }],\n    max: [{ type: Input }],\n    min: [{ type: Input }],\n    step: [{ type: Input }],\n    thumbLabel: [{ type: Input }],\n    tickInterval: [{ type: Input }],\n    value: [{ type: Input }],\n    displayWith: [{ type: Input }],\n    vertical: [{ type: Input }],\n    change: [{ type: Output }],\n    input: [{ type: Output }],\n    valueChange: [{ type: Output }],\n    _sliderWrapper: [{ type: ViewChild, args: ['sliderWrapper',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlider, [{\n        type: Component,\n        args: [{\n                selector: 'mat-slider',\n                exportAs: 'matSlider',\n                providers: [MAT_SLIDER_VALUE_ACCESSOR],\n                host: {\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()',\n                    '(keydown)': '_onKeydown($event)',\n                    '(keyup)': '_onKeyup()',\n                    '(mouseenter)': '_onMouseenter()',\n                    // On Safari starting to slide temporarily triggers text selection mode which\n                    // show the wrong cursor. We prevent it by stopping the `selectstart` event.\n                    '(selectstart)': '$event.preventDefault()',\n                    'class': 'mat-slider mat-focus-indicator',\n                    'role': 'slider',\n                    '[tabIndex]': 'tabIndex',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.aria-valuemax]': 'max',\n                    '[attr.aria-valuemin]': 'min',\n                    '[attr.aria-valuenow]': 'value',\n                    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                    '[class.mat-slider-disabled]': 'disabled',\n                    '[class.mat-slider-has-ticks]': 'tickInterval',\n                    '[class.mat-slider-horizontal]': '!vertical',\n                    '[class.mat-slider-axis-inverted]': '_invertAxis',\n                    // Class binding which is only used by the test harness as there is no other\n                    // way for the harness to detect if mouse coordinates need to be inverted.\n                    '[class.mat-slider-invert-mouse-coords]': '_shouldInvertMouseCoords()',\n                    '[class.mat-slider-sliding]': '_isSliding',\n                    '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\n                    '[class.mat-slider-vertical]': 'vertical',\n                    '[class.mat-slider-min-value]': '_isMinValue',\n                    '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue && _thumbGap && _invertAxis',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                template: \"<div class=\\\"mat-slider-wrapper\\\" #sliderWrapper>\\n  <div class=\\\"mat-slider-track-wrapper\\\">\\n    <div class=\\\"mat-slider-track-background\\\" [ngStyle]=\\\"_trackBackgroundStyles\\\"></div>\\n    <div class=\\\"mat-slider-track-fill\\\" [ngStyle]=\\\"_trackFillStyles\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-ticks-container\\\" [ngStyle]=\\\"_ticksContainerStyles\\\">\\n    <div class=\\\"mat-slider-ticks\\\" [ngStyle]=\\\"_ticksStyles\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-thumb-container\\\" [ngStyle]=\\\"_thumbContainerStyles\\\">\\n    <div class=\\\"mat-slider-focus-ring\\\"></div>\\n    <div class=\\\"mat-slider-thumb\\\"></div>\\n    <div class=\\\"mat-slider-thumb-label\\\">\\n      <span class=\\\"mat-slider-thumb-label-text\\\">{{displayValue}}</span>\\n    </div>\\n  </div>\\n</div>\\n\",\n                inputs: ['disabled', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:none;vertical-align:middle}.mat-slider:not(.mat-slider-disabled):active,.mat-slider.mat-slider-sliding:not(.mat-slider-disabled){cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-wrapper{position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{background-repeat:repeat;background-clip:content-box;box-sizing:border-box;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider.cdk-keyboard-focused .mat-slider-focus-ring,.mat-slider.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb{cursor:-webkit-grab;cursor:grab}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(0.7);transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-radius 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.cdk-high-contrast-active .mat-slider-thumb-label{outline:solid 1px}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-sliding .mat-slider-track-fill,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-thumb-container{transition-duration:0ms}.mat-slider-has-ticks .mat-slider-wrapper::after{content:\\\"\\\";position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{display:none}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(0.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}.cdk-high-contrast-active .mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(0.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}.cdk-high-contrast-active .mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(0.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-track-fill,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after{transition:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { change: [{\n            type: Output\n        }], input: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], invert: [{\n            type: Input\n        }], max: [{\n            type: Input\n        }], min: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], step: [{\n            type: Input\n        }], thumbLabel: [{\n            type: Input\n        }], tickInterval: [{\n            type: Input\n        }], vertical: [{\n            type: Input\n        }], displayWith: [{\n            type: Input\n        }], _sliderWrapper: [{\n            type: ViewChild,\n            args: ['sliderWrapper']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSlider.ngAcceptInputType_invert;\n    /** @type {?} */\n    MatSlider.ngAcceptInputType_max;\n    /** @type {?} */\n    MatSlider.ngAcceptInputType_min;\n    /** @type {?} */\n    MatSlider.ngAcceptInputType_step;\n    /** @type {?} */\n    MatSlider.ngAcceptInputType_thumbLabel;\n    /** @type {?} */\n    MatSlider.ngAcceptInputType_tickInterval;\n    /** @type {?} */\n    MatSlider.ngAcceptInputType_value;\n    /** @type {?} */\n    MatSlider.ngAcceptInputType_vertical;\n    /** @type {?} */\n    MatSlider.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._invert;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._max;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._min;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._step;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._thumbLabel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._tickInterval;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._value;\n    /**\n     * Function that will be used to format the value before it is displayed\n     * in the thumb label. Can be used to format very large number in order\n     * for them to fit into the slider thumb.\n     * @type {?}\n     */\n    MatSlider.prototype.displayWith;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._vertical;\n    /**\n     * Event emitted when the slider value has changed.\n     * @type {?}\n     */\n    MatSlider.prototype.change;\n    /**\n     * Event emitted when the slider thumb moves.\n     * @type {?}\n     */\n    MatSlider.prototype.input;\n    /**\n     * Emits when the raw value of the slider changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatSlider.prototype.valueChange;\n    /**\n     * onTouch function registered via registerOnTouch (ControlValueAccessor).\n     * @type {?}\n     */\n    MatSlider.prototype.onTouched;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._percent;\n    /**\n     * Whether or not the thumb is sliding.\n     * Used to determine if there should be a transition for the thumb and fill track.\n     * @type {?}\n     */\n    MatSlider.prototype._isSliding;\n    /**\n     * Whether or not the slider is active (clicked or sliding).\n     * Used to shrink and grow the thumb as according to the Material Design spec.\n     * @type {?}\n     */\n    MatSlider.prototype._isActive;\n    /**\n     * The size of a tick interval as a percentage of the size of the track.\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._tickIntervalPercent;\n    /**\n     * The dimensions of the slider.\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._sliderDimensions;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._controlValueAccessorChangeFn;\n    /**\n     * Decimal places to round to, based on the step amount.\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._roundToDecimal;\n    /**\n     * Subscription to the Directionality change EventEmitter.\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._dirChangeSubscription;\n    /**\n     * The value of the slider when the slide start event fires.\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._valueOnSlideStart;\n    /**\n     * Position of the pointer when the dragging started.\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._pointerPositionOnStart;\n    /**\n     * Reference to the inner slider wrapper element.\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._sliderWrapper;\n    /**\n     * Keeps track of the last pointer event that was captured by the slider.\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._lastPointerEvent;\n    /**\n     * Used to subscribe to global move and end events\n     * @type {?}\n     * @protected\n     */\n    MatSlider.prototype._document;\n    /**\n     * Called when the user has put their pointer down on the slider.\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._pointerDown;\n    /**\n     * Called when the user has moved their pointer after\n     * starting to drag. Bound on the document level.\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._pointerMove;\n    /**\n     * Called when the user has lifted their pointer. Bound on the document level.\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._pointerUp;\n    /**\n     * Called when the window has lost focus.\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._windowBlur;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._dir;\n    /** @type {?} */\n    MatSlider.prototype._animationMode;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._ngZone;\n}\n/**\n * Returns whether an event is a touch event.\n * @param {?} event\n * @return {?}\n */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/**\n * Gets the coordinates of a touch or mouse event relative to the viewport.\n * @param {?} event\n * @return {?}\n */\nfunction getPointerPositionOnPage(event) {\n    // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n    /** @type {?} */\n    const point = isTouchEvent(event) ? (event.touches[0] || event.changedTouches[0]) : event;\n    return { x: point.clientX, y: point.clientY };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/slider/slider-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSliderModule {\n}\nMatSliderModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSliderModule });\nMatSliderModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSliderModule_Factory(t) { return new (t || MatSliderModule)(); }, imports: [[CommonModule, MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSliderModule, { declarations: function () { return [MatSlider]; }, imports: function () { return [CommonModule, MatCommonModule]; }, exports: function () { return [MatSlider,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSliderModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, MatCommonModule],\n                exports: [MatSlider, MatCommonModule],\n                declarations: [MatSlider]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/slider/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDER_VALUE_ACCESSOR, MatSlider, MatSliderChange, MatSliderModule };\n\n//# sourceMappingURL=slider.js.map","import { OverlayModule, OverlayConfig, Overlay } from '@angular/cdk/overlay';\nimport { BasePortalOutlet, CdkPortalOutlet, PortalModule, PortalInjector, ComponentPortal, TemplatePortal } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, NgZone, ElementRef, ChangeDetectorRef, ViewChild, NgModule, TemplateRef, Injectable, Injector, Optional, SkipSelf, ɵɵdefineInjectable, ɵɵinject, INJECTOR } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { Subject } from 'rxjs';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/snack-bar/snack-bar-ref.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Event that is emitted when a snack bar is dismissed.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/button';\nimport * as ɵngcc3 from '@angular/cdk/portal';\nimport * as ɵngcc4 from '@angular/cdk/overlay';\nimport * as ɵngcc5 from '@angular/cdk/a11y';\nimport * as ɵngcc6 from '@angular/cdk/layout';\n\nfunction SimpleSnackBar_div_2_Template(rf, ctx) { if (rf & 1) {\n    const _r2 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵelementStart(1, \"button\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function SimpleSnackBar_div_2_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1.action(); });\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.data.action);\n} }\nfunction MatSnackBarContainer_ng_template_0_Template(rf, ctx) { }\nfunction MatSnackBarDismiss() { }\nif (false) {\n    /**\n     * Whether the snack bar was dismissed using the action button.\n     * @type {?}\n     */\n    MatSnackBarDismiss.prototype.dismissedByAction;\n}\n/**\n * Maximum amount of milliseconds that can be passed into setTimeout.\n * @type {?}\n */\nconst MAX_TIMEOUT = Math.pow(2, 31) - 1;\n/**\n * Reference to a snack bar dispatched from the snack bar service.\n * @template T\n */\nclass MatSnackBarRef {\n    /**\n     * @param {?} containerInstance\n     * @param {?} _overlayRef\n     */\n    constructor(containerInstance, _overlayRef) {\n        this._overlayRef = _overlayRef;\n        /**\n         * Subject for notifying the user that the snack bar has been dismissed.\n         */\n        this._afterDismissed = new Subject();\n        /**\n         * Subject for notifying the user that the snack bar has opened and appeared.\n         */\n        this._afterOpened = new Subject();\n        /**\n         * Subject for notifying the user that the snack bar action was called.\n         */\n        this._onAction = new Subject();\n        /**\n         * Whether the snack bar was dismissed using the action button.\n         */\n        this._dismissedByAction = false;\n        this.containerInstance = containerInstance;\n        // Dismiss snackbar on action.\n        this.onAction().subscribe((/**\n         * @return {?}\n         */\n        () => this.dismiss()));\n        containerInstance._onExit.subscribe((/**\n         * @return {?}\n         */\n        () => this._finishDismiss()));\n    }\n    /**\n     * Dismisses the snack bar.\n     * @return {?}\n     */\n    dismiss() {\n        if (!this._afterDismissed.closed) {\n            this.containerInstance.exit();\n        }\n        clearTimeout(this._durationTimeoutId);\n    }\n    /**\n     * Marks the snackbar action clicked.\n     * @return {?}\n     */\n    dismissWithAction() {\n        if (!this._onAction.closed) {\n            this._dismissedByAction = true;\n            this._onAction.next();\n            this._onAction.complete();\n        }\n    }\n    /**\n     * Marks the snackbar action clicked.\n     * @deprecated Use `dismissWithAction` instead.\n     * \\@breaking-change 8.0.0\n     * @return {?}\n     */\n    closeWithAction() {\n        this.dismissWithAction();\n    }\n    /**\n     * Dismisses the snack bar after some duration\n     * @param {?} duration\n     * @return {?}\n     */\n    _dismissAfter(duration) {\n        // Note that we need to cap the duration to the maximum value for setTimeout, because\n        // it'll revert to 1 if somebody passes in something greater (e.g. `Infinity`). See #17234.\n        this._durationTimeoutId = setTimeout((/**\n         * @return {?}\n         */\n        () => this.dismiss()), Math.min(duration, MAX_TIMEOUT));\n    }\n    /**\n     * Marks the snackbar as opened\n     * @return {?}\n     */\n    _open() {\n        if (!this._afterOpened.closed) {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        }\n    }\n    /**\n     * Cleans up the DOM after closing.\n     * @private\n     * @return {?}\n     */\n    _finishDismiss() {\n        this._overlayRef.dispose();\n        if (!this._onAction.closed) {\n            this._onAction.complete();\n        }\n        this._afterDismissed.next({ dismissedByAction: this._dismissedByAction });\n        this._afterDismissed.complete();\n        this._dismissedByAction = false;\n    }\n    /**\n     * Gets an observable that is notified when the snack bar is finished closing.\n     * @return {?}\n     */\n    afterDismissed() {\n        return this._afterDismissed.asObservable();\n    }\n    /**\n     * Gets an observable that is notified when the snack bar has opened and appeared.\n     * @return {?}\n     */\n    afterOpened() {\n        return this.containerInstance._onEnter;\n    }\n    /**\n     * Gets an observable that is notified when the snack bar action is called.\n     * @return {?}\n     */\n    onAction() {\n        return this._onAction.asObservable();\n    }\n}\nif (false) {\n    /**\n     * The instance of the component making up the content of the snack bar.\n     * @type {?}\n     */\n    MatSnackBarRef.prototype.instance;\n    /**\n     * The instance of the component making up the content of the snack bar.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatSnackBarRef.prototype.containerInstance;\n    /**\n     * Subject for notifying the user that the snack bar has been dismissed.\n     * @type {?}\n     * @private\n     */\n    MatSnackBarRef.prototype._afterDismissed;\n    /**\n     * Subject for notifying the user that the snack bar has opened and appeared.\n     * @type {?}\n     * @private\n     */\n    MatSnackBarRef.prototype._afterOpened;\n    /**\n     * Subject for notifying the user that the snack bar action was called.\n     * @type {?}\n     * @private\n     */\n    MatSnackBarRef.prototype._onAction;\n    /**\n     * Timeout ID for the duration setTimeout call. Used to clear the timeout if the snackbar is\n     * dismissed before the duration passes.\n     * @type {?}\n     * @private\n     */\n    MatSnackBarRef.prototype._durationTimeoutId;\n    /**\n     * Whether the snack bar was dismissed using the action button.\n     * @type {?}\n     * @private\n     */\n    MatSnackBarRef.prototype._dismissedByAction;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSnackBarRef.prototype._overlayRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/snack-bar/snack-bar-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to access the data that was passed in to a snack bar.\n * @type {?}\n */\nconst MAT_SNACK_BAR_DATA = new InjectionToken('MatSnackBarData');\n/**\n * Configuration used when opening a snack-bar.\n * @template D\n */\nclass MatSnackBarConfig {\n    constructor() {\n        /**\n         * The politeness level for the MatAriaLiveAnnouncer announcement.\n         */\n        this.politeness = 'assertive';\n        /**\n         * Message to be announced by the LiveAnnouncer. When opening a snackbar without a custom\n         * component or template, the announcement message will default to the specified message.\n         */\n        this.announcementMessage = '';\n        /**\n         * The length of time in milliseconds to wait before automatically dismissing the snack bar.\n         */\n        this.duration = 0;\n        /**\n         * Data being injected into the child component.\n         */\n        this.data = null;\n        /**\n         * The horizontal position to place the snack bar.\n         */\n        this.horizontalPosition = 'center';\n        /**\n         * The vertical position to place the snack bar.\n         */\n        this.verticalPosition = 'bottom';\n    }\n}\nif (false) {\n    /**\n     * The politeness level for the MatAriaLiveAnnouncer announcement.\n     * @type {?}\n     */\n    MatSnackBarConfig.prototype.politeness;\n    /**\n     * Message to be announced by the LiveAnnouncer. When opening a snackbar without a custom\n     * component or template, the announcement message will default to the specified message.\n     * @type {?}\n     */\n    MatSnackBarConfig.prototype.announcementMessage;\n    /**\n     * The view container that serves as the parent for the snackbar for the purposes of dependency\n     * injection. Note: this does not affect where the snackbar is inserted in the DOM.\n     * @type {?}\n     */\n    MatSnackBarConfig.prototype.viewContainerRef;\n    /**\n     * The length of time in milliseconds to wait before automatically dismissing the snack bar.\n     * @type {?}\n     */\n    MatSnackBarConfig.prototype.duration;\n    /**\n     * Extra CSS classes to be added to the snack bar container.\n     * @type {?}\n     */\n    MatSnackBarConfig.prototype.panelClass;\n    /**\n     * Text layout direction for the snack bar.\n     * @type {?}\n     */\n    MatSnackBarConfig.prototype.direction;\n    /**\n     * Data being injected into the child component.\n     * @type {?}\n     */\n    MatSnackBarConfig.prototype.data;\n    /**\n     * The horizontal position to place the snack bar.\n     * @type {?}\n     */\n    MatSnackBarConfig.prototype.horizontalPosition;\n    /**\n     * The vertical position to place the snack bar.\n     * @type {?}\n     */\n    MatSnackBarConfig.prototype.verticalPosition;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/snack-bar/simple-snack-bar.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A component used to open as the default snack bar, matching material spec.\n * This should only be used internally by the snack bar service.\n */\nclass SimpleSnackBar {\n    /**\n     * @param {?} snackBarRef\n     * @param {?} data\n     */\n    constructor(snackBarRef, data) {\n        this.snackBarRef = snackBarRef;\n        this.data = data;\n    }\n    /**\n     * Performs the action on the snack bar.\n     * @return {?}\n     */\n    action() {\n        this.snackBarRef.dismissWithAction();\n    }\n    /**\n     * If the action button should be shown.\n     * @return {?}\n     */\n    get hasAction() {\n        return !!this.data.action;\n    }\n}\nSimpleSnackBar.ɵfac = function SimpleSnackBar_Factory(t) { return new (t || SimpleSnackBar)(ɵngcc0.ɵɵdirectiveInject(MatSnackBarRef), ɵngcc0.ɵɵdirectiveInject(MAT_SNACK_BAR_DATA)); };\nSimpleSnackBar.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SimpleSnackBar, selectors: [[\"simple-snack-bar\"]], hostAttrs: [1, \"mat-simple-snackbar\"], decls: 3, vars: 2, consts: [[\"class\", \"mat-simple-snackbar-action\", 4, \"ngIf\"], [1, \"mat-simple-snackbar-action\"], [\"mat-button\", \"\", 3, \"click\"]], template: function SimpleSnackBar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"span\");\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(2, SimpleSnackBar_div_2_Template, 3, 1, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ctx.data.message);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasAction);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc2.MatButton], styles: [\".mat-simple-snackbar{display:flex;justify-content:space-between;align-items:center;line-height:20px;opacity:1}.mat-simple-snackbar-action{flex-shrink:0;margin:-8px -8px -8px 8px}.mat-simple-snackbar-action button{max-height:36px;min-width:0}[dir=rtl] .mat-simple-snackbar-action{margin-left:-8px;margin-right:8px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nSimpleSnackBar.ctorParameters = () => [\n    { type: MatSnackBarRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SNACK_BAR_DATA,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SimpleSnackBar, [{\n        type: Component,\n        args: [{\n                selector: 'simple-snack-bar',\n                template: \"<span>{{data.message}}</span>\\n<div class=\\\"mat-simple-snackbar-action\\\"  *ngIf=\\\"hasAction\\\">\\n  <button mat-button (click)=\\\"action()\\\">{{data.action}}</button>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'class': 'mat-simple-snackbar'\n                },\n                styles: [\".mat-simple-snackbar{display:flex;justify-content:space-between;align-items:center;line-height:20px;opacity:1}.mat-simple-snackbar-action{flex-shrink:0;margin:-8px -8px -8px 8px}.mat-simple-snackbar-action button{max-height:36px;min-width:0}[dir=rtl] .mat-simple-snackbar-action{margin-left:-8px;margin-right:8px}\\n\"]\n            }]\n    }], function () { return [{ type: MatSnackBarRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SNACK_BAR_DATA]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Data that was injected into the snack bar.\n     * @type {?}\n     */\n    SimpleSnackBar.prototype.data;\n    /** @type {?} */\n    SimpleSnackBar.prototype.snackBarRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/snack-bar/snack-bar-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material snack bar.\n * \\@docs-private\n * @type {?}\n */\nconst matSnackBarAnimations = {\n    /**\n     * Animation that shows and hides a snack bar.\n     */\n    snackBarState: trigger('state', [\n        state('void, hidden', style({\n            transform: 'scale(0.8)',\n            opacity: 0,\n        })),\n        state('visible', style({\n            transform: 'scale(1)',\n            opacity: 1,\n        })),\n        transition('* => visible', animate('150ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void, * => hidden', animate('75ms cubic-bezier(0.4, 0.0, 1, 1)', style({\n            opacity: 0\n        }))),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/snack-bar/snack-bar-container.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Internal component that wraps user-provided snack bar content.\n * \\@docs-private\n */\nclass MatSnackBarContainer extends BasePortalOutlet {\n    /**\n     * @param {?} _ngZone\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} snackBarConfig\n     */\n    constructor(_ngZone, _elementRef, _changeDetectorRef, snackBarConfig) {\n        super();\n        this._ngZone = _ngZone;\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this.snackBarConfig = snackBarConfig;\n        /**\n         * Whether the component has been destroyed.\n         */\n        this._destroyed = false;\n        /**\n         * Subject for notifying that the snack bar has exited from view.\n         */\n        this._onExit = new Subject();\n        /**\n         * Subject for notifying that the snack bar has finished entering the view.\n         */\n        this._onEnter = new Subject();\n        /**\n         * The state of the snack bar animations.\n         */\n        this._animationState = 'void';\n        /**\n         * Attaches a DOM portal to the snack bar container.\n         * @deprecated To be turned into a method.\n         * \\@breaking-change 10.0.0\n         */\n        this.attachDomPortal = (/**\n         * @param {?} portal\n         * @return {?}\n         */\n        (portal) => {\n            this._assertNotAttached();\n            this._applySnackBarClasses();\n            return this._portalOutlet.attachDomPortal(portal);\n        });\n        // Based on the ARIA spec, `alert` and `status` roles have an\n        // implicit `assertive` and `polite` politeness respectively.\n        if (snackBarConfig.politeness === 'assertive' && !snackBarConfig.announcementMessage) {\n            this._role = 'alert';\n        }\n        else if (snackBarConfig.politeness === 'off') {\n            this._role = null;\n        }\n        else {\n            this._role = 'status';\n        }\n    }\n    /**\n     * Attach a component portal as content to this snack bar container.\n     * @template T\n     * @param {?} portal\n     * @return {?}\n     */\n    attachComponentPortal(portal) {\n        this._assertNotAttached();\n        this._applySnackBarClasses();\n        return this._portalOutlet.attachComponentPortal(portal);\n    }\n    /**\n     * Attach a template portal as content to this snack bar container.\n     * @template C\n     * @param {?} portal\n     * @return {?}\n     */\n    attachTemplatePortal(portal) {\n        this._assertNotAttached();\n        this._applySnackBarClasses();\n        return this._portalOutlet.attachTemplatePortal(portal);\n    }\n    /**\n     * Handle end of animations, updating the state of the snackbar.\n     * @param {?} event\n     * @return {?}\n     */\n    onAnimationEnd(event) {\n        const { fromState, toState } = event;\n        if ((toState === 'void' && fromState !== 'void') || toState === 'hidden') {\n            this._completeExit();\n        }\n        if (toState === 'visible') {\n            // Note: we shouldn't use `this` inside the zone callback,\n            // because it can cause a memory leak.\n            /** @type {?} */\n            const onEnter = this._onEnter;\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                onEnter.next();\n                onEnter.complete();\n            }));\n        }\n    }\n    /**\n     * Begin animation of snack bar entrance into view.\n     * @return {?}\n     */\n    enter() {\n        if (!this._destroyed) {\n            this._animationState = 'visible';\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /**\n     * Begin animation of the snack bar exiting from view.\n     * @return {?}\n     */\n    exit() {\n        // Note: this one transitions to `hidden`, rather than `void`, in order to handle the case\n        // where multiple snack bars are opened in quick succession (e.g. two consecutive calls to\n        // `MatSnackBar.open`).\n        this._animationState = 'hidden';\n        // Mark this element with an 'exit' attribute to indicate that the snackbar has\n        // been dismissed and will soon be removed from the DOM. This is used by the snackbar\n        // test harness.\n        this._elementRef.nativeElement.setAttribute('mat-exit', '');\n        return this._onExit;\n    }\n    /**\n     * Makes sure the exit callbacks have been invoked when the element is destroyed.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed = true;\n        this._completeExit();\n    }\n    /**\n     * Waits for the zone to settle before removing the element. Helps prevent\n     * errors where we end up removing an element which is in the middle of an animation.\n     * @private\n     * @return {?}\n     */\n    _completeExit() {\n        this._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._onExit.next();\n            this._onExit.complete();\n        }));\n    }\n    /**\n     * Applies the various positioning and user-configured CSS classes to the snack bar.\n     * @private\n     * @return {?}\n     */\n    _applySnackBarClasses() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        /** @type {?} */\n        const panelClasses = this.snackBarConfig.panelClass;\n        if (panelClasses) {\n            if (Array.isArray(panelClasses)) {\n                // Note that we can't use a spread here, because IE doesn't support multiple arguments.\n                panelClasses.forEach((/**\n                 * @param {?} cssClass\n                 * @return {?}\n                 */\n                cssClass => element.classList.add(cssClass)));\n            }\n            else {\n                element.classList.add(panelClasses);\n            }\n        }\n        if (this.snackBarConfig.horizontalPosition === 'center') {\n            element.classList.add('mat-snack-bar-center');\n        }\n        if (this.snackBarConfig.verticalPosition === 'top') {\n            element.classList.add('mat-snack-bar-top');\n        }\n    }\n    /**\n     * Asserts that no content is already attached to the container.\n     * @private\n     * @return {?}\n     */\n    _assertNotAttached() {\n        if (this._portalOutlet.hasAttached()) {\n            throw Error('Attempting to attach snack bar content after content is already attached');\n        }\n    }\n}\nMatSnackBarContainer.ɵfac = function MatSnackBarContainer_Factory(t) { return new (t || MatSnackBarContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MatSnackBarConfig)); };\nMatSnackBarContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSnackBarContainer, selectors: [[\"snack-bar-container\"]], viewQuery: function MatSnackBarContainer_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(CdkPortalOutlet, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalOutlet = _t.first);\n    } }, hostAttrs: [1, \"mat-snack-bar-container\"], hostVars: 2, hostBindings: function MatSnackBarContainer_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵcomponentHostSyntheticListener(\"@state.done\", function MatSnackBarContainer_animation_state_done_HostBindingHandler($event) { return ctx.onAnimationEnd($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"role\", ctx._role);\n        ɵngcc0.ɵɵupdateSyntheticHostBinding(\"@state\", ctx._animationState);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkPortalOutlet\", \"\"]], template: function MatSnackBarContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatSnackBarContainer_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n    } }, directives: [ɵngcc3.CdkPortalOutlet], styles: [\".mat-snack-bar-container{border-radius:4px;box-sizing:border-box;display:block;margin:24px;max-width:33vw;min-width:344px;padding:14px 16px;min-height:48px;transform-origin:center}.cdk-high-contrast-active .mat-snack-bar-container{border:solid 1px}.mat-snack-bar-handset{width:100%}.mat-snack-bar-handset .mat-snack-bar-container{margin:8px;max-width:100%;min-width:0;width:100%}\\n\"], encapsulation: 2, data: { animation: [matSnackBarAnimations.snackBarState] } });\n/** @nocollapse */\nMatSnackBarContainer.ctorParameters = () => [\n    { type: NgZone },\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatSnackBarConfig }\n];\nMatSnackBarContainer.propDecorators = {\n    _portalOutlet: [{ type: ViewChild, args: [CdkPortalOutlet, { static: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSnackBarContainer, [{\n        type: Component,\n        args: [{\n                selector: 'snack-bar-container',\n                template: \"<ng-template cdkPortalOutlet></ng-template>\\n\",\n                // In Ivy embedded views will be change detected from their declaration place, rather than\n                // where they were stamped out. This means that we can't have the snack bar container be OnPush,\n                // because it might cause snack bars that were opened from a template not to be out of date.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                animations: [matSnackBarAnimations.snackBarState],\n                host: {\n                    '[attr.role]': '_role',\n                    'class': 'mat-snack-bar-container',\n                    '[@state]': '_animationState',\n                    '(@state.done)': 'onAnimationEnd($event)'\n                },\n                styles: [\".mat-snack-bar-container{border-radius:4px;box-sizing:border-box;display:block;margin:24px;max-width:33vw;min-width:344px;padding:14px 16px;min-height:48px;transform-origin:center}.cdk-high-contrast-active .mat-snack-bar-container{border:solid 1px}.mat-snack-bar-handset{width:100%}.mat-snack-bar-handset .mat-snack-bar-container{margin:8px;max-width:100%;min-width:0;width:100%}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatSnackBarConfig }]; }, { _portalOutlet: [{\n            type: ViewChild,\n            args: [CdkPortalOutlet, { static: true }]\n        }] }); })();\nif (false) {\n    /**\n     * Whether the component has been destroyed.\n     * @type {?}\n     * @private\n     */\n    MatSnackBarContainer.prototype._destroyed;\n    /**\n     * The portal outlet inside of this container into which the snack bar content will be loaded.\n     * @type {?}\n     */\n    MatSnackBarContainer.prototype._portalOutlet;\n    /**\n     * Subject for notifying that the snack bar has exited from view.\n     * @type {?}\n     */\n    MatSnackBarContainer.prototype._onExit;\n    /**\n     * Subject for notifying that the snack bar has finished entering the view.\n     * @type {?}\n     */\n    MatSnackBarContainer.prototype._onEnter;\n    /**\n     * The state of the snack bar animations.\n     * @type {?}\n     */\n    MatSnackBarContainer.prototype._animationState;\n    /**\n     * ARIA role for the snack bar container.\n     * @type {?}\n     */\n    MatSnackBarContainer.prototype._role;\n    /**\n     * Attaches a DOM portal to the snack bar container.\n     * @deprecated To be turned into a method.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    MatSnackBarContainer.prototype.attachDomPortal;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSnackBarContainer.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSnackBarContainer.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSnackBarContainer.prototype._changeDetectorRef;\n    /**\n     * The snack bar configuration.\n     * @type {?}\n     */\n    MatSnackBarContainer.prototype.snackBarConfig;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/snack-bar/snack-bar-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSnackBarModule {\n}\nMatSnackBarModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSnackBarModule });\nMatSnackBarModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSnackBarModule_Factory(t) { return new (t || MatSnackBarModule)(); }, imports: [[\n            OverlayModule,\n            PortalModule,\n            CommonModule,\n            MatButtonModule,\n            MatCommonModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSnackBarModule, { declarations: function () { return [MatSnackBarContainer,\n        SimpleSnackBar]; }, imports: function () { return [OverlayModule,\n        PortalModule,\n        CommonModule,\n        MatButtonModule,\n        MatCommonModule]; }, exports: function () { return [MatSnackBarContainer,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSnackBarModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    OverlayModule,\n                    PortalModule,\n                    CommonModule,\n                    MatButtonModule,\n                    MatCommonModule,\n                ],\n                exports: [MatSnackBarContainer, MatCommonModule],\n                declarations: [MatSnackBarContainer, SimpleSnackBar],\n                entryComponents: [MatSnackBarContainer, SimpleSnackBar]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/snack-bar/snack-bar.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to specify default snack bar.\n * @type {?}\n */\nconst MAT_SNACK_BAR_DEFAULT_OPTIONS = new InjectionToken('mat-snack-bar-default-options', {\n    providedIn: 'root',\n    factory: MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY() {\n    return new MatSnackBarConfig();\n}\n/**\n * Service to dispatch Material Design snack bar messages.\n */\nclass MatSnackBar {\n    /**\n     * @param {?} _overlay\n     * @param {?} _live\n     * @param {?} _injector\n     * @param {?} _breakpointObserver\n     * @param {?} _parentSnackBar\n     * @param {?} _defaultConfig\n     */\n    constructor(_overlay, _live, _injector, _breakpointObserver, _parentSnackBar, _defaultConfig) {\n        this._overlay = _overlay;\n        this._live = _live;\n        this._injector = _injector;\n        this._breakpointObserver = _breakpointObserver;\n        this._parentSnackBar = _parentSnackBar;\n        this._defaultConfig = _defaultConfig;\n        /**\n         * Reference to the current snack bar in the view *at this level* (in the Angular injector tree).\n         * If there is a parent snack-bar service, all operations should delegate to that parent\n         * via `_openedSnackBarRef`.\n         */\n        this._snackBarRefAtThisLevel = null;\n    }\n    /**\n     * Reference to the currently opened snackbar at *any* level.\n     * @return {?}\n     */\n    get _openedSnackBarRef() {\n        /** @type {?} */\n        const parent = this._parentSnackBar;\n        return parent ? parent._openedSnackBarRef : this._snackBarRefAtThisLevel;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set _openedSnackBarRef(value) {\n        if (this._parentSnackBar) {\n            this._parentSnackBar._openedSnackBarRef = value;\n        }\n        else {\n            this._snackBarRefAtThisLevel = value;\n        }\n    }\n    /**\n     * Creates and dispatches a snack bar with a custom component for the content, removing any\n     * currently opened snack bars.\n     *\n     * @template T\n     * @param {?} component Component to be instantiated.\n     * @param {?=} config Extra configuration for the snack bar.\n     * @return {?}\n     */\n    openFromComponent(component, config) {\n        return (/** @type {?} */ (this._attach(component, config)));\n    }\n    /**\n     * Creates and dispatches a snack bar with a custom template for the content, removing any\n     * currently opened snack bars.\n     *\n     * @param {?} template Template to be instantiated.\n     * @param {?=} config Extra configuration for the snack bar.\n     * @return {?}\n     */\n    openFromTemplate(template, config) {\n        return this._attach(template, config);\n    }\n    /**\n     * Opens a snackbar with a message and an optional action.\n     * @param {?} message The message to show in the snackbar.\n     * @param {?=} action The label for the snackbar action.\n     * @param {?=} config Additional configuration options for the snackbar.\n     * @return {?}\n     */\n    open(message, action = '', config) {\n        /** @type {?} */\n        const _config = Object.assign(Object.assign({}, this._defaultConfig), config);\n        // Since the user doesn't have access to the component, we can\n        // override the data to pass in our own message and action.\n        _config.data = { message, action };\n        if (!_config.announcementMessage) {\n            _config.announcementMessage = message;\n        }\n        return this.openFromComponent(SimpleSnackBar, _config);\n    }\n    /**\n     * Dismisses the currently-visible snack bar.\n     * @return {?}\n     */\n    dismiss() {\n        if (this._openedSnackBarRef) {\n            this._openedSnackBarRef.dismiss();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // Only dismiss the snack bar at the current level on destroy.\n        if (this._snackBarRefAtThisLevel) {\n            this._snackBarRefAtThisLevel.dismiss();\n        }\n    }\n    /**\n     * Attaches the snack bar container component to the overlay.\n     * @private\n     * @param {?} overlayRef\n     * @param {?} config\n     * @return {?}\n     */\n    _attachSnackBarContainer(overlayRef, config) {\n        /** @type {?} */\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        /** @type {?} */\n        const injector = new PortalInjector(userInjector || this._injector, new WeakMap([\n            [MatSnackBarConfig, config]\n        ]));\n        /** @type {?} */\n        const containerPortal = new ComponentPortal(MatSnackBarContainer, config.viewContainerRef, injector);\n        /** @type {?} */\n        const containerRef = overlayRef.attach(containerPortal);\n        containerRef.instance.snackBarConfig = config;\n        return containerRef.instance;\n    }\n    /**\n     * Places a new component or a template as the content of the snack bar container.\n     * @private\n     * @template T\n     * @param {?} content\n     * @param {?=} userConfig\n     * @return {?}\n     */\n    _attach(content, userConfig) {\n        /** @type {?} */\n        const config = Object.assign(Object.assign(Object.assign({}, new MatSnackBarConfig()), this._defaultConfig), userConfig);\n        /** @type {?} */\n        const overlayRef = this._createOverlay(config);\n        /** @type {?} */\n        const container = this._attachSnackBarContainer(overlayRef, config);\n        /** @type {?} */\n        const snackBarRef = new MatSnackBarRef(container, overlayRef);\n        if (content instanceof TemplateRef) {\n            /** @type {?} */\n            const portal = new TemplatePortal(content, (/** @type {?} */ (null)), (/** @type {?} */ ({\n                $implicit: config.data,\n                snackBarRef\n            })));\n            snackBarRef.instance = container.attachTemplatePortal(portal);\n        }\n        else {\n            /** @type {?} */\n            const injector = this._createInjector(config, snackBarRef);\n            /** @type {?} */\n            const portal = new ComponentPortal(content, undefined, injector);\n            /** @type {?} */\n            const contentRef = container.attachComponentPortal(portal);\n            // We can't pass this via the injector, because the injector is created earlier.\n            snackBarRef.instance = contentRef.instance;\n        }\n        // Subscribe to the breakpoint observer and attach the mat-snack-bar-handset class as\n        // appropriate. This class is applied to the overlay element because the overlay must expand to\n        // fill the width of the screen for full width snackbars.\n        this._breakpointObserver.observe(Breakpoints.HandsetPortrait).pipe(takeUntil(overlayRef.detachments())).subscribe((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => {\n            /** @type {?} */\n            const classList = overlayRef.overlayElement.classList;\n            /** @type {?} */\n            const className = 'mat-snack-bar-handset';\n            state.matches ? classList.add(className) : classList.remove(className);\n        }));\n        this._animateSnackBar(snackBarRef, config);\n        this._openedSnackBarRef = snackBarRef;\n        return this._openedSnackBarRef;\n    }\n    /**\n     * Animates the old snack bar out and the new one in.\n     * @private\n     * @param {?} snackBarRef\n     * @param {?} config\n     * @return {?}\n     */\n    _animateSnackBar(snackBarRef, config) {\n        // When the snackbar is dismissed, clear the reference to it.\n        snackBarRef.afterDismissed().subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // Clear the snackbar ref if it hasn't already been replaced by a newer snackbar.\n            if (this._openedSnackBarRef == snackBarRef) {\n                this._openedSnackBarRef = null;\n            }\n            if (config.announcementMessage) {\n                this._live.clear();\n            }\n        }));\n        if (this._openedSnackBarRef) {\n            // If a snack bar is already in view, dismiss it and enter the\n            // new snack bar after exit animation is complete.\n            this._openedSnackBarRef.afterDismissed().subscribe((/**\n             * @return {?}\n             */\n            () => {\n                snackBarRef.containerInstance.enter();\n            }));\n            this._openedSnackBarRef.dismiss();\n        }\n        else {\n            // If no snack bar is in view, enter the new snack bar.\n            snackBarRef.containerInstance.enter();\n        }\n        // If a dismiss timeout is provided, set up dismiss based on after the snackbar is opened.\n        if (config.duration && config.duration > 0) {\n            snackBarRef.afterOpened().subscribe((/**\n             * @return {?}\n             */\n            () => snackBarRef._dismissAfter((/** @type {?} */ (config.duration)))));\n        }\n        if (config.announcementMessage) {\n            this._live.announce(config.announcementMessage, config.politeness);\n        }\n    }\n    /**\n     * Creates a new overlay and places it in the correct location.\n     * @private\n     * @param {?} config The user-specified snack bar config.\n     * @return {?}\n     */\n    _createOverlay(config) {\n        /** @type {?} */\n        const overlayConfig = new OverlayConfig();\n        overlayConfig.direction = config.direction;\n        /** @type {?} */\n        let positionStrategy = this._overlay.position().global();\n        // Set horizontal position.\n        /** @type {?} */\n        const isRtl = config.direction === 'rtl';\n        /** @type {?} */\n        const isLeft = (config.horizontalPosition === 'left' ||\n            (config.horizontalPosition === 'start' && !isRtl) ||\n            (config.horizontalPosition === 'end' && isRtl));\n        /** @type {?} */\n        const isRight = !isLeft && config.horizontalPosition !== 'center';\n        if (isLeft) {\n            positionStrategy.left('0');\n        }\n        else if (isRight) {\n            positionStrategy.right('0');\n        }\n        else {\n            positionStrategy.centerHorizontally();\n        }\n        // Set horizontal position.\n        if (config.verticalPosition === 'top') {\n            positionStrategy.top('0');\n        }\n        else {\n            positionStrategy.bottom('0');\n        }\n        overlayConfig.positionStrategy = positionStrategy;\n        return this._overlay.create(overlayConfig);\n    }\n    /**\n     * Creates an injector to be used inside of a snack bar component.\n     * @private\n     * @template T\n     * @param {?} config Config that was used to create the snack bar.\n     * @param {?} snackBarRef Reference to the snack bar.\n     * @return {?}\n     */\n    _createInjector(config, snackBarRef) {\n        /** @type {?} */\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        return new PortalInjector(userInjector || this._injector, new WeakMap([\n            [MatSnackBarRef, snackBarRef],\n            [MAT_SNACK_BAR_DATA, config.data]\n        ]));\n    }\n}\nMatSnackBar.ɵfac = function MatSnackBar_Factory(t) { return new (t || MatSnackBar)(ɵngcc0.ɵɵinject(ɵngcc4.Overlay), ɵngcc0.ɵɵinject(ɵngcc5.LiveAnnouncer), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc6.BreakpointObserver), ɵngcc0.ɵɵinject(MatSnackBar, 12), ɵngcc0.ɵɵinject(MAT_SNACK_BAR_DEFAULT_OPTIONS)); };\n/** @nocollapse */\nMatSnackBar.ctorParameters = () => [\n    { type: Overlay },\n    { type: LiveAnnouncer },\n    { type: Injector },\n    { type: BreakpointObserver },\n    { type: MatSnackBar, decorators: [{ type: Optional }, { type: SkipSelf }] },\n    { type: MatSnackBarConfig, decorators: [{ type: Inject, args: [MAT_SNACK_BAR_DEFAULT_OPTIONS,] }] }\n];\n/** @nocollapse */ MatSnackBar.ɵprov = ɵɵdefineInjectable({ factory: function MatSnackBar_Factory() { return new MatSnackBar(ɵɵinject(Overlay), ɵɵinject(LiveAnnouncer), ɵɵinject(INJECTOR), ɵɵinject(BreakpointObserver), ɵɵinject(MatSnackBar, 12), ɵɵinject(MAT_SNACK_BAR_DEFAULT_OPTIONS)); }, token: MatSnackBar, providedIn: MatSnackBarModule });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSnackBar, [{\n        type: Injectable,\n        args: [{ providedIn: MatSnackBarModule }]\n    }], function () { return [{ type: ɵngcc4.Overlay }, { type: ɵngcc5.LiveAnnouncer }, { type: ɵngcc0.Injector }, { type: ɵngcc6.BreakpointObserver }, { type: MatSnackBar, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: MatSnackBarConfig, decorators: [{\n                type: Inject,\n                args: [MAT_SNACK_BAR_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Reference to the current snack bar in the view *at this level* (in the Angular injector tree).\n     * If there is a parent snack-bar service, all operations should delegate to that parent\n     * via `_openedSnackBarRef`.\n     * @type {?}\n     * @private\n     */\n    MatSnackBar.prototype._snackBarRefAtThisLevel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSnackBar.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSnackBar.prototype._live;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSnackBar.prototype._injector;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSnackBar.prototype._breakpointObserver;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSnackBar.prototype._parentSnackBar;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSnackBar.prototype._defaultConfig;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/snack-bar/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SNACK_BAR_DATA, MAT_SNACK_BAR_DEFAULT_OPTIONS, MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY, MatSnackBar, MatSnackBarConfig, MatSnackBarContainer, MatSnackBarModule, MatSnackBarRef, SimpleSnackBar, matSnackBarAnimations };\n\n//# sourceMappingURL=snack-bar.js.map","import { EventEmitter, isDevMode, Directive, Input, Output, Injectable, ɵɵdefineInjectable, Optional, SkipSelf, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, Inject, ElementRef, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { mixinInitialized, mixinDisabled, AnimationDurations, AnimationCurves } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Subject, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate, keyframes, query, animateChild } from '@angular/animations';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @param {?} id\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/common';\n\nconst _c0 = [\"mat-sort-header\", \"\"];\nfunction MatSortHeader_div_3_Template(rf, ctx) { if (rf & 1) {\n    const _r2 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 3);\n    ɵngcc0.ɵɵlistener(\"@arrowPosition.start\", function MatSortHeader_div_3_Template_div_animation_arrowPosition_start_0_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1._disableViewStateAnimation = true; })(\"@arrowPosition.done\", function MatSortHeader_div_3_Template_div_animation_arrowPosition_done_0_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3._disableViewStateAnimation = false; });\n    ɵngcc0.ɵɵelement(1, \"div\", 4);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 5);\n    ɵngcc0.ɵɵelement(3, \"div\", 6);\n    ɵngcc0.ɵɵelement(4, \"div\", 7);\n    ɵngcc0.ɵɵelement(5, \"div\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@arrowOpacity\", ctx_r0._getArrowViewState())(\"@arrowPosition\", ctx_r0._getArrowViewState())(\"@allowChildren\", ctx_r0._getArrowDirectionState());\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"@indicator\", ctx_r0._getArrowDirectionState());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"@leftPointer\", ctx_r0._getArrowDirectionState());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"@rightPointer\", ctx_r0._getArrowDirectionState());\n} }\nconst _c1 = [\"*\"];\nfunction getSortDuplicateSortableIdError(id) {\n    return Error(`Cannot have two MatSortables with the same id (${id}).`);\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getSortHeaderNotContainedWithinSortError() {\n    return Error(`MatSortHeader must be placed within a parent element with the MatSort directive.`);\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getSortHeaderMissingIdError() {\n    return Error(`MatSortHeader must be provided with a unique id.`);\n}\n/**\n * \\@docs-private\n * @param {?} direction\n * @return {?}\n */\nfunction getSortInvalidDirectionError(direction) {\n    return Error(`${direction} is not a valid sort direction ('asc' or 'desc').`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface for a directive that holds sorting state consumed by `MatSortHeader`.\n * @record\n */\nfunction MatSortable() { }\nif (false) {\n    /**\n     * The id of the column being sorted.\n     * @type {?}\n     */\n    MatSortable.prototype.id;\n    /**\n     * Starting sort direction.\n     * @type {?}\n     */\n    MatSortable.prototype.start;\n    /**\n     * Whether to disable clearing the sorting state.\n     * @type {?}\n     */\n    MatSortable.prototype.disableClear;\n}\n/**\n * The current sort state.\n * @record\n */\nfunction Sort() { }\nif (false) {\n    /**\n     * The id of the column being sorted.\n     * @type {?}\n     */\n    Sort.prototype.active;\n    /**\n     * The sort direction.\n     * @type {?}\n     */\n    Sort.prototype.direction;\n}\n// Boilerplate for applying mixins to MatSort.\n/**\n * \\@docs-private\n */\nclass MatSortBase {\n}\n/** @type {?} */\nconst _MatSortMixinBase = mixinInitialized(mixinDisabled(MatSortBase));\n/**\n * Container for MatSortables to manage the sort state and provide default sort parameters.\n */\nclass MatSort extends _MatSortMixinBase {\n    constructor() {\n        super(...arguments);\n        /**\n         * Collection of all registered sortables that this directive manages.\n         */\n        this.sortables = new Map();\n        /**\n         * Used to notify any child components listening to state changes.\n         */\n        this._stateChanges = new Subject();\n        /**\n         * The direction to set when an MatSortable is initially sorted.\n         * May be overriden by the MatSortable's sort start.\n         */\n        this.start = 'asc';\n        this._direction = '';\n        /**\n         * Event emitted when the user changes either the active sort or sort direction.\n         */\n        this.sortChange = new EventEmitter();\n    }\n    /**\n     * The sort direction of the currently active MatSortable.\n     * @return {?}\n     */\n    get direction() { return this._direction; }\n    /**\n     * @param {?} direction\n     * @return {?}\n     */\n    set direction(direction) {\n        if (isDevMode() && direction && direction !== 'asc' && direction !== 'desc') {\n            throw getSortInvalidDirectionError(direction);\n        }\n        this._direction = direction;\n    }\n    /**\n     * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n     * May be overriden by the MatSortable's disable clear input.\n     * @return {?}\n     */\n    get disableClear() { return this._disableClear; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set disableClear(v) { this._disableClear = coerceBooleanProperty(v); }\n    /**\n     * Register function to be used by the contained MatSortables. Adds the MatSortable to the\n     * collection of MatSortables.\n     * @param {?} sortable\n     * @return {?}\n     */\n    register(sortable) {\n        if (!sortable.id) {\n            throw getSortHeaderMissingIdError();\n        }\n        if (this.sortables.has(sortable.id)) {\n            throw getSortDuplicateSortableIdError(sortable.id);\n        }\n        this.sortables.set(sortable.id, sortable);\n    }\n    /**\n     * Unregister function to be used by the contained MatSortables. Removes the MatSortable from the\n     * collection of contained MatSortables.\n     * @param {?} sortable\n     * @return {?}\n     */\n    deregister(sortable) {\n        this.sortables.delete(sortable.id);\n    }\n    /**\n     * Sets the active sort id and determines the new sort direction.\n     * @param {?} sortable\n     * @return {?}\n     */\n    sort(sortable) {\n        if (this.active != sortable.id) {\n            this.active = sortable.id;\n            this.direction = sortable.start ? sortable.start : this.start;\n        }\n        else {\n            this.direction = this.getNextSortDirection(sortable);\n        }\n        this.sortChange.emit({ active: this.active, direction: this.direction });\n    }\n    /**\n     * Returns the next sort direction of the active sortable, checking for potential overrides.\n     * @param {?} sortable\n     * @return {?}\n     */\n    getNextSortDirection(sortable) {\n        if (!sortable) {\n            return '';\n        }\n        // Get the sort direction cycle with the potential sortable overrides.\n        /** @type {?} */\n        const disableClear = sortable.disableClear != null ? sortable.disableClear : this.disableClear;\n        /** @type {?} */\n        let sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n        // Get and return the next direction in the cycle\n        /** @type {?} */\n        let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n        if (nextDirectionIndex >= sortDirectionCycle.length) {\n            nextDirectionIndex = 0;\n        }\n        return sortDirectionCycle[nextDirectionIndex];\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._markInitialized();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatSort.ɵfac = function MatSort_Factory(t) { return ɵMatSort_BaseFactory(t || MatSort); };\nMatSort.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSort, selectors: [[\"\", \"matSort\", \"\"]], hostAttrs: [1, \"mat-sort\"], inputs: { disabled: [\"matSortDisabled\", \"disabled\"], start: [\"matSortStart\", \"start\"], direction: [\"matSortDirection\", \"direction\"], disableClear: [\"matSortDisableClear\", \"disableClear\"], active: [\"matSortActive\", \"active\"] }, outputs: { sortChange: \"matSortChange\" }, exportAs: [\"matSort\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nMatSort.propDecorators = {\n    active: [{ type: Input, args: ['matSortActive',] }],\n    start: [{ type: Input, args: ['matSortStart',] }],\n    direction: [{ type: Input, args: ['matSortDirection',] }],\n    disableClear: [{ type: Input, args: ['matSortDisableClear',] }],\n    sortChange: [{ type: Output, args: ['matSortChange',] }]\n};\nconst ɵMatSort_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSort);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSort, [{\n        type: Directive,\n        args: [{\n                selector: '[matSort]',\n                exportAs: 'matSort',\n                host: { 'class': 'mat-sort' },\n                inputs: ['disabled: matSortDisabled']\n            }]\n    }], null, { start: [{\n            type: Input,\n            args: ['matSortStart']\n        }], sortChange: [{\n            type: Output,\n            args: ['matSortChange']\n        }], direction: [{\n            type: Input,\n            args: ['matSortDirection']\n        }], disableClear: [{\n            type: Input,\n            args: ['matSortDisableClear']\n        }], active: [{\n            type: Input,\n            args: ['matSortActive']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSort.ngAcceptInputType_disableClear;\n    /** @type {?} */\n    MatSort.ngAcceptInputType_disabled;\n    /**\n     * Collection of all registered sortables that this directive manages.\n     * @type {?}\n     */\n    MatSort.prototype.sortables;\n    /**\n     * Used to notify any child components listening to state changes.\n     * @type {?}\n     */\n    MatSort.prototype._stateChanges;\n    /**\n     * The id of the most recently sorted MatSortable.\n     * @type {?}\n     */\n    MatSort.prototype.active;\n    /**\n     * The direction to set when an MatSortable is initially sorted.\n     * May be overriden by the MatSortable's sort start.\n     * @type {?}\n     */\n    MatSort.prototype.start;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSort.prototype._direction;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSort.prototype._disableClear;\n    /**\n     * Event emitted when the user changes either the active sort or sort direction.\n     * @type {?}\n     */\n    MatSort.prototype.sortChange;\n}\n/**\n * Returns the sort direction cycle to use given the provided parameters of order and clear.\n * @param {?} start\n * @param {?} disableClear\n * @return {?}\n */\nfunction getSortDirectionCycle(start, disableClear) {\n    /** @type {?} */\n    let sortOrder = ['asc', 'desc'];\n    if (start == 'desc') {\n        sortOrder.reverse();\n    }\n    if (!disableClear) {\n        sortOrder.push('');\n    }\n    return sortOrder;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst SORT_ANIMATION_TRANSITION = AnimationDurations.ENTERING + ' ' +\n    AnimationCurves.STANDARD_CURVE;\n/**\n * Animations used by MatSort.\n * \\@docs-private\n * @type {?}\n */\nconst matSortAnimations = {\n    /**\n     * Animation that moves the sort indicator.\n     */\n    indicator: trigger('indicator', [\n        state('active-asc, asc', style({ transform: 'translateY(0px)' })),\n        // 10px is the height of the sort indicator, minus the width of the pointers\n        state('active-desc, desc', style({ transform: 'translateY(10px)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /**\n     * Animation that rotates the left pointer of the indicator based on the sorting direction.\n     */\n    leftPointer: trigger('leftPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(-45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /**\n     * Animation that rotates the right pointer of the indicator based on the sorting direction.\n     */\n    rightPointer: trigger('rightPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(-45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /**\n     * Animation that controls the arrow opacity.\n     */\n    arrowOpacity: trigger('arrowOpacity', [\n        state('desc-to-active, asc-to-active, active', style({ opacity: 1 })),\n        state('desc-to-hint, asc-to-hint, hint', style({ opacity: .54 })),\n        state('hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc, void', style({ opacity: 0 })),\n        // Transition between all states except for immediate transitions\n        transition('* => asc, * => desc, * => active, * => hint, * => void', animate('0ms')),\n        transition('* <=> *', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /**\n     * Animation for the translation of the arrow as a whole. States are separated into two\n     * groups: ones with animations and others that are immediate. Immediate states are asc, desc,\n     * peek, and active. The other states define a specific animation (source-to-destination)\n     * and are determined as a function of their prev user-perceived state and what the next state\n     * should be.\n     */\n    arrowPosition: trigger('arrowPosition', [\n        // Hidden Above => Hint Center\n        transition('* => desc-to-hint, * => desc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(-25%)' }),\n            style({ transform: 'translateY(0)' })\n        ]))),\n        // Hint Center => Hidden Below\n        transition('* => hint-to-desc, * => active-to-desc', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(0)' }),\n            style({ transform: 'translateY(25%)' })\n        ]))),\n        // Hidden Below => Hint Center\n        transition('* => asc-to-hint, * => asc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(25%)' }),\n            style({ transform: 'translateY(0)' })\n        ]))),\n        // Hint Center => Hidden Above\n        transition('* => hint-to-asc, * => active-to-asc', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(0)' }),\n            style({ transform: 'translateY(-25%)' })\n        ]))),\n        state('desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active', style({ transform: 'translateY(0)' })),\n        state('hint-to-desc, active-to-desc, desc', style({ transform: 'translateY(-25%)' })),\n        state('hint-to-asc, active-to-asc, asc', style({ transform: 'translateY(25%)' })),\n    ]),\n    /**\n     * Necessary trigger that calls animate on children animations.\n     */\n    allowChildren: trigger('allowChildren', [\n        transition('* <=> *', [\n            query('@*', animateChild(), { optional: true })\n        ])\n    ]),\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-header-intl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatSortHeaderIntl and\n * include it in a custom provider.\n */\nclass MatSortHeaderIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * ARIA label for the sorting button.\n         */\n        this.sortButtonLabel = (/**\n         * @param {?} id\n         * @return {?}\n         */\n        (id) => {\n            return `Change sorting for ${id}`;\n        });\n    }\n}\nMatSortHeaderIntl.ɵfac = function MatSortHeaderIntl_Factory(t) { return new (t || MatSortHeaderIntl)(); };\n/** @nocollapse */ MatSortHeaderIntl.ɵprov = ɵɵdefineInjectable({ factory: function MatSortHeaderIntl_Factory() { return new MatSortHeaderIntl(); }, token: MatSortHeaderIntl, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSortHeaderIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * Stream that emits whenever the labels here are changed. Use this to notify\n     * components if the labels have changed after initialization.\n     * @type {?}\n     */\n    MatSortHeaderIntl.prototype.changes;\n    /**\n     * ARIA label for the sorting button.\n     * @type {?}\n     */\n    MatSortHeaderIntl.prototype.sortButtonLabel;\n}\n/**\n * \\@docs-private\n * @param {?} parentIntl\n * @return {?}\n */\nfunction MAT_SORT_HEADER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatSortHeaderIntl();\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SORT_HEADER_INTL_PROVIDER = {\n    // If there is already an MatSortHeaderIntl available, use that. Otherwise, provide a new one.\n    provide: MatSortHeaderIntl,\n    deps: [[new Optional(), new SkipSelf(), MatSortHeaderIntl]],\n    useFactory: MAT_SORT_HEADER_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to the sort header.\n/**\n * \\@docs-private\n */\nclass MatSortHeaderBase {\n}\n/** @type {?} */\nconst _MatSortHeaderMixinBase = mixinDisabled(MatSortHeaderBase);\n/**\n * States describing the arrow's animated position (animating fromState to toState).\n * If the fromState is not defined, there will be no animated transition to the toState.\n * \\@docs-private\n * @record\n */\nfunction ArrowViewStateTransition() { }\nif (false) {\n    /** @type {?|undefined} */\n    ArrowViewStateTransition.prototype.fromState;\n    /** @type {?} */\n    ArrowViewStateTransition.prototype.toState;\n}\n/**\n * Column definition associated with a `MatSortHeader`.\n * @record\n */\nfunction MatSortHeaderColumnDef() { }\nif (false) {\n    /** @type {?} */\n    MatSortHeaderColumnDef.prototype.name;\n}\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n *\n * Must be provided with an id and contained within a parent MatSort directive.\n *\n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\nclass MatSortHeader extends _MatSortHeaderMixinBase {\n    /**\n     * @param {?} _intl\n     * @param {?} changeDetectorRef\n     * @param {?} _sort\n     * @param {?} _columnDef\n     * @param {?=} _focusMonitor\n     * @param {?=} _elementRef\n     */\n    constructor(_intl, changeDetectorRef, _sort, _columnDef, _focusMonitor, _elementRef) {\n        // Note that we use a string token for the `_columnDef`, because the value is provided both by\n        // `material/table` and `cdk/table` and we can't have the CDK depending on Material,\n        // and we want to avoid having the sort header depending on the CDK table because\n        // of this single reference.\n        super();\n        this._intl = _intl;\n        this._sort = _sort;\n        this._columnDef = _columnDef;\n        this._focusMonitor = _focusMonitor;\n        this._elementRef = _elementRef;\n        /**\n         * Flag set to true when the indicator should be displayed while the sort is not active. Used to\n         * provide an affordance that the header is sortable by showing on focus and hover.\n         */\n        this._showIndicatorHint = false;\n        /**\n         * The direction the arrow should be facing according to the current state.\n         */\n        this._arrowDirection = '';\n        /**\n         * Whether the view state animation should show the transition between the `from` and `to` states.\n         */\n        this._disableViewStateAnimation = false;\n        /**\n         * Sets the position of the arrow that displays when sorted.\n         */\n        this.arrowPosition = 'after';\n        if (!_sort) {\n            throw getSortHeaderNotContainedWithinSortError();\n        }\n        this._rerenderSubscription = merge(_sort.sortChange, _sort._stateChanges, _intl.changes)\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._isSorted()) {\n                this._updateArrowDirection();\n            }\n            // If this header was recently active and now no longer sorted, animate away the arrow.\n            if (!this._isSorted() && this._viewState && this._viewState.toState === 'active') {\n                this._disableViewStateAnimation = false;\n                this._setAnimationTransitionState({ fromState: 'active', toState: this._arrowDirection });\n            }\n            changeDetectorRef.markForCheck();\n        }));\n        if (_focusMonitor && _elementRef) {\n            // We use the focus monitor because we also want to style\n            // things differently based on the focus origin.\n            _focusMonitor.monitor(_elementRef, true)\n                .subscribe((/**\n             * @param {?} origin\n             * @return {?}\n             */\n            origin => this._setIndicatorHintVisible(!!origin)));\n        }\n    }\n    /**\n     * Overrides the disable clear value of the containing MatSort for this MatSortable.\n     * @return {?}\n     */\n    get disableClear() { return this._disableClear; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set disableClear(v) { this._disableClear = coerceBooleanProperty(v); }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (!this.id && this._columnDef) {\n            this.id = this._columnDef.name;\n        }\n        // Initialize the direction of the arrow and set the view state to be immediately that state.\n        this._updateArrowDirection();\n        this._setAnimationTransitionState({ toState: this._isSorted() ? 'active' : this._arrowDirection });\n        this._sort.register(this);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // @breaking-change 10.0.0 Remove null check for _focusMonitor and _elementRef.\n        if (this._focusMonitor && this._elementRef) {\n            this._focusMonitor.stopMonitoring(this._elementRef);\n        }\n        this._sort.deregister(this);\n        this._rerenderSubscription.unsubscribe();\n    }\n    /**\n     * Sets the \"hint\" state such that the arrow will be semi-transparently displayed as a hint to the\n     * user showing what the active sort will become. If set to false, the arrow will fade away.\n     * @param {?} visible\n     * @return {?}\n     */\n    _setIndicatorHintVisible(visible) {\n        // No-op if the sort header is disabled - should not make the hint visible.\n        if (this._isDisabled() && visible) {\n            return;\n        }\n        this._showIndicatorHint = visible;\n        if (!this._isSorted()) {\n            this._updateArrowDirection();\n            if (this._showIndicatorHint) {\n                this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'hint' });\n            }\n            else {\n                this._setAnimationTransitionState({ fromState: 'hint', toState: this._arrowDirection });\n            }\n        }\n    }\n    /**\n     * Sets the animation transition view state for the arrow's position and opacity. If the\n     * `disableViewStateAnimation` flag is set to true, the `fromState` will be ignored so that\n     * no animation appears.\n     * @param {?} viewState\n     * @return {?}\n     */\n    _setAnimationTransitionState(viewState) {\n        this._viewState = viewState;\n        // If the animation for arrow position state (opacity/translation) should be disabled,\n        // remove the fromState so that it jumps right to the toState.\n        if (this._disableViewStateAnimation) {\n            this._viewState = { toState: viewState.toState };\n        }\n    }\n    /**\n     * Triggers the sort on this sort header and removes the indicator hint.\n     * @return {?}\n     */\n    _handleClick() {\n        if (this._isDisabled()) {\n            return;\n        }\n        this._sort.sort(this);\n        // Do not show the animation if the header was already shown in the right position.\n        if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n            this._disableViewStateAnimation = true;\n        }\n        // If the arrow is now sorted, animate the arrow into place. Otherwise, animate it away into\n        // the direction it is facing.\n        /** @type {?} */\n        const viewState = this._isSorted() ?\n            { fromState: this._arrowDirection, toState: 'active' } :\n            { fromState: 'active', toState: this._arrowDirection };\n        this._setAnimationTransitionState(viewState);\n        this._showIndicatorHint = false;\n    }\n    /**\n     * Whether this MatSortHeader is currently sorted in either ascending or descending order.\n     * @return {?}\n     */\n    _isSorted() {\n        return this._sort.active == this.id &&\n            (this._sort.direction === 'asc' || this._sort.direction === 'desc');\n    }\n    /**\n     * Returns the animation state for the arrow direction (indicator and pointers).\n     * @return {?}\n     */\n    _getArrowDirectionState() {\n        return `${this._isSorted() ? 'active-' : ''}${this._arrowDirection}`;\n    }\n    /**\n     * Returns the arrow position state (opacity, translation).\n     * @return {?}\n     */\n    _getArrowViewState() {\n        /** @type {?} */\n        const fromState = this._viewState.fromState;\n        return (fromState ? `${fromState}-to-` : '') + this._viewState.toState;\n    }\n    /**\n     * Updates the direction the arrow should be pointing. If it is not sorted, the arrow should be\n     * facing the start direction. Otherwise if it is sorted, the arrow should point in the currently\n     * active sorted direction. The reason this is updated through a function is because the direction\n     * should only be changed at specific times - when deactivated but the hint is displayed and when\n     * the sort is active and the direction changes. Otherwise the arrow's direction should linger\n     * in cases such as the sort becoming deactivated but we want to animate the arrow away while\n     * preserving its direction, even though the next sort direction is actually different and should\n     * only be changed once the arrow displays again (hint or activation).\n     * @return {?}\n     */\n    _updateArrowDirection() {\n        this._arrowDirection = this._isSorted() ?\n            this._sort.direction :\n            (this.start || this._sort.start);\n    }\n    /**\n     * @return {?}\n     */\n    _isDisabled() {\n        return this._sort.disabled || this.disabled;\n    }\n    /**\n     * Gets the aria-sort attribute that should be applied to this sort header. If this header\n     * is not sorted, returns null so that the attribute is removed from the host element. Aria spec\n     * says that the aria-sort property should only be present on one header at a time, so removing\n     * ensures this is true.\n     * @return {?}\n     */\n    _getAriaSortAttribute() {\n        if (!this._isSorted()) {\n            return null;\n        }\n        return this._sort.direction == 'asc' ? 'ascending' : 'descending';\n    }\n    /**\n     * Whether the arrow inside the sort header should be rendered.\n     * @return {?}\n     */\n    _renderArrow() {\n        return !this._isDisabled() || this._isSorted();\n    }\n}\nMatSortHeader.ɵfac = function MatSortHeader_Factory(t) { return new (t || MatSortHeader)(ɵngcc0.ɵɵdirectiveInject(MatSortHeaderIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MatSort, 8), ɵngcc0.ɵɵdirectiveInject('MAT_SORT_HEADER_COLUMN_DEF', 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatSortHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSortHeader, selectors: [[\"\", \"mat-sort-header\", \"\"]], hostAttrs: [1, \"mat-sort-header\"], hostVars: 3, hostBindings: function MatSortHeader_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatSortHeader_click_HostBindingHandler() { return ctx._handleClick(); })(\"mouseenter\", function MatSortHeader_mouseenter_HostBindingHandler() { return ctx._setIndicatorHintVisible(true); })(\"mouseleave\", function MatSortHeader_mouseleave_HostBindingHandler() { return ctx._setIndicatorHintVisible(false); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-sort\", ctx._getAriaSortAttribute());\n        ɵngcc0.ɵɵclassProp(\"mat-sort-header-disabled\", ctx._isDisabled());\n    } }, inputs: { disabled: \"disabled\", arrowPosition: \"arrowPosition\", disableClear: \"disableClear\", id: [\"mat-sort-header\", \"id\"], start: \"start\" }, exportAs: [\"matSortHeader\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 4, vars: 7, consts: [[1, \"mat-sort-header-container\"], [\"type\", \"button\", 1, \"mat-sort-header-button\", \"mat-focus-indicator\"], [\"class\", \"mat-sort-header-arrow\", 4, \"ngIf\"], [1, \"mat-sort-header-arrow\"], [1, \"mat-sort-header-stem\"], [1, \"mat-sort-header-indicator\"], [1, \"mat-sort-header-pointer-left\"], [1, \"mat-sort-header-pointer-right\"], [1, \"mat-sort-header-pointer-middle\"]], template: function MatSortHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"button\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(3, MatSortHeader_div_3_Template, 6, 6, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-sort-header-sorted\", ctx._isSorted())(\"mat-sort-header-position-before\", ctx.arrowPosition == \"before\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx._isDisabled() || null)(\"aria-label\", ctx._intl.sortButtonLabel(ctx.id));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._renderArrow());\n    } }, directives: [ɵngcc2.NgIf], styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-button{border:none;background:0 0;display:flex;align-items:center;padding:0;cursor:inherit;outline:0;font:inherit;color:currentColor;position:relative}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-button,[mat-sort-header].cdk-program-focused .mat-sort-header-button{border-bottom:solid 1px currentColor}.mat-sort-header-button::-moz-focus-inner{border:0}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\\n\"], encapsulation: 2, data: { animation: [\n            matSortAnimations.indicator,\n            matSortAnimations.leftPointer,\n            matSortAnimations.rightPointer,\n            matSortAnimations.arrowOpacity,\n            matSortAnimations.arrowPosition,\n            matSortAnimations.allowChildren,\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatSortHeader.ctorParameters = () => [\n    { type: MatSortHeaderIntl },\n    { type: ChangeDetectorRef },\n    { type: MatSort, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: ['MAT_SORT_HEADER_COLUMN_DEF',] }, { type: Optional }] },\n    { type: FocusMonitor },\n    { type: ElementRef }\n];\nMatSortHeader.propDecorators = {\n    id: [{ type: Input, args: ['mat-sort-header',] }],\n    arrowPosition: [{ type: Input }],\n    start: [{ type: Input }],\n    disableClear: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSortHeader, [{\n        type: Component,\n        args: [{\n                selector: '[mat-sort-header]',\n                exportAs: 'matSortHeader',\n                template: \"<div class=\\\"mat-sort-header-container\\\"\\n     [class.mat-sort-header-sorted]=\\\"_isSorted()\\\"\\n     [class.mat-sort-header-position-before]=\\\"arrowPosition == 'before'\\\">\\n  <button class=\\\"mat-sort-header-button mat-focus-indicator\\\" type=\\\"button\\\"\\n          [attr.disabled]=\\\"_isDisabled() || null\\\"\\n          [attr.aria-label]=\\\"_intl.sortButtonLabel(id)\\\">\\n    <ng-content></ng-content>\\n  </button>\\n\\n  <!-- Disable animations while a current animation is running -->\\n  <div class=\\\"mat-sort-header-arrow\\\"\\n       *ngIf=\\\"_renderArrow()\\\"\\n       [@arrowOpacity]=\\\"_getArrowViewState()\\\"\\n       [@arrowPosition]=\\\"_getArrowViewState()\\\"\\n       [@allowChildren]=\\\"_getArrowDirectionState()\\\"\\n       (@arrowPosition.start)=\\\"_disableViewStateAnimation = true\\\"\\n       (@arrowPosition.done)=\\\"_disableViewStateAnimation = false\\\">\\n    <div class=\\\"mat-sort-header-stem\\\"></div>\\n    <div class=\\\"mat-sort-header-indicator\\\" [@indicator]=\\\"_getArrowDirectionState()\\\">\\n      <div class=\\\"mat-sort-header-pointer-left\\\" [@leftPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-right\\\" [@rightPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-middle\\\"></div>\\n    </div>\\n  </div>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-sort-header',\n                    '(click)': '_handleClick()',\n                    '(mouseenter)': '_setIndicatorHintVisible(true)',\n                    '(mouseleave)': '_setIndicatorHintVisible(false)',\n                    '[attr.aria-sort]': '_getAriaSortAttribute()',\n                    '[class.mat-sort-header-disabled]': '_isDisabled()'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled'],\n                animations: [\n                    matSortAnimations.indicator,\n                    matSortAnimations.leftPointer,\n                    matSortAnimations.rightPointer,\n                    matSortAnimations.arrowOpacity,\n                    matSortAnimations.arrowPosition,\n                    matSortAnimations.allowChildren,\n                ],\n                styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-button{border:none;background:0 0;display:flex;align-items:center;padding:0;cursor:inherit;outline:0;font:inherit;color:currentColor;position:relative}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-button,[mat-sort-header].cdk-program-focused .mat-sort-header-button{border-bottom:solid 1px currentColor}.mat-sort-header-button::-moz-focus-inner{border:0}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\\n\"]\n            }]\n    }], function () { return [{ type: MatSortHeaderIntl }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatSort, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: ['MAT_SORT_HEADER_COLUMN_DEF']\n            }, {\n                type: Optional\n            }] }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ElementRef }]; }, { arrowPosition: [{\n            type: Input\n        }], disableClear: [{\n            type: Input\n        }], id: [{\n            type: Input,\n            args: ['mat-sort-header']\n        }], start: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSortHeader.ngAcceptInputType_disableClear;\n    /** @type {?} */\n    MatSortHeader.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSortHeader.prototype._rerenderSubscription;\n    /**\n     * Flag set to true when the indicator should be displayed while the sort is not active. Used to\n     * provide an affordance that the header is sortable by showing on focus and hover.\n     * @type {?}\n     */\n    MatSortHeader.prototype._showIndicatorHint;\n    /**\n     * The view transition state of the arrow (translation/ opacity) - indicates its `from` and `to`\n     * position through the animation. If animations are currently disabled, the fromState is removed\n     * so that there is no animation displayed.\n     * @type {?}\n     */\n    MatSortHeader.prototype._viewState;\n    /**\n     * The direction the arrow should be facing according to the current state.\n     * @type {?}\n     */\n    MatSortHeader.prototype._arrowDirection;\n    /**\n     * Whether the view state animation should show the transition between the `from` and `to` states.\n     * @type {?}\n     */\n    MatSortHeader.prototype._disableViewStateAnimation;\n    /**\n     * ID of this sort header. If used within the context of a CdkColumnDef, this will default to\n     * the column's name.\n     * @type {?}\n     */\n    MatSortHeader.prototype.id;\n    /**\n     * Sets the position of the arrow that displays when sorted.\n     * @type {?}\n     */\n    MatSortHeader.prototype.arrowPosition;\n    /**\n     * Overrides the sort start value of the containing MatSort for this MatSortable.\n     * @type {?}\n     */\n    MatSortHeader.prototype.start;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSortHeader.prototype._disableClear;\n    /** @type {?} */\n    MatSortHeader.prototype._intl;\n    /** @type {?} */\n    MatSortHeader.prototype._sort;\n    /** @type {?} */\n    MatSortHeader.prototype._columnDef;\n    /**\n     * @deprecated _focusMonitor and _elementRef to become required parameters.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     * @private\n     */\n    MatSortHeader.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSortHeader.prototype._elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSortModule {\n}\nMatSortModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSortModule });\nMatSortModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSortModule_Factory(t) { return new (t || MatSortModule)(); }, providers: [MAT_SORT_HEADER_INTL_PROVIDER], imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSortModule, { declarations: function () { return [MatSort,\n        MatSortHeader]; }, imports: function () { return [CommonModule]; }, exports: function () { return [MatSort,\n        MatSortHeader]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSortModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                exports: [MatSort, MatSortHeader],\n                declarations: [MatSort, MatSortHeader],\n                providers: [MAT_SORT_HEADER_INTL_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-direction.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SORT_HEADER_INTL_PROVIDER, MAT_SORT_HEADER_INTL_PROVIDER_FACTORY, MatSort, MatSortHeader, MatSortHeaderIntl, MatSortModule, matSortAnimations };\n\n//# sourceMappingURL=sort.js.map","import { PortalModule } from '@angular/cdk/portal';\nimport { CdkStepLabel, CdkStepHeader, CdkStep, STEPPER_GLOBAL_OPTIONS, CdkStepper, CdkStepperNext, CdkStepperPrevious, CdkStepperModule } from '@angular/cdk/stepper';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Directive, Injectable, ɵɵdefineInjectable, Optional, SkipSelf, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Input, TemplateRef, Inject, forwardRef, ContentChild, EventEmitter, ViewChildren, ContentChildren, Output, NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ErrorStateMatcher, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Subject } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { takeUntil, distinctUntilChanged } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/step-label.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/material/icon';\nimport * as ɵngcc5 from '@angular/cdk/bidi';\n\nfunction MatStepHeader_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0, 9);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.iconOverrides[ctx_r0.state])(\"ngTemplateOutletContext\", ctx_r0._getIconContext());\n} }\nfunction MatStepHeader_ng_container_4_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r6._getDefaultTextForState(ctx_r6.state));\n} }\nfunction MatStepHeader_ng_container_4_mat_icon_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-icon\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r7._getDefaultTextForState(ctx_r7.state));\n} }\nfunction MatStepHeader_ng_container_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0, 10);\n    ɵngcc0.ɵɵtemplate(1, MatStepHeader_ng_container_4_span_1_Template, 2, 1, \"span\", 11);\n    ɵngcc0.ɵɵtemplate(2, MatStepHeader_ng_container_4_mat_icon_2_Template, 2, 1, \"mat-icon\", 12);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx_r1.state);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"number\");\n} }\nfunction MatStepHeader_ng_container_6_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0, 13);\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2._templateLabel().template);\n} }\nfunction MatStepHeader_div_7_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 14);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r3.label);\n} }\nfunction MatStepHeader_div_8_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 15);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r4._intl.optionalLabel);\n} }\nfunction MatStepHeader_div_9_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 16);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r5.errorMessage);\n} }\nfunction MatStep_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nconst _c0 = [\"*\"];\nfunction MatHorizontalStepper_ng_container_1_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 6);\n} }\nfunction MatHorizontalStepper_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"mat-step-header\", 4);\n    ɵngcc0.ɵɵlistener(\"click\", function MatHorizontalStepper_ng_container_1_Template_mat_step_header_click_1_listener() { const step_r2 = ctx.$implicit; return step_r2.select(); })(\"keydown\", function MatHorizontalStepper_ng_container_1_Template_mat_step_header_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7._onKeydown($event); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(2, MatHorizontalStepper_ng_container_1_div_2_Template, 1, 0, \"div\", 5);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const step_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const isLast_r4 = ctx.last;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"tabIndex\", ctx_r0._getFocusIndex() === i_r3 ? 0 : 0 - 1)(\"id\", ctx_r0._getStepLabelId(i_r3))(\"index\", i_r3)(\"state\", ctx_r0._getIndicatorType(i_r3, step_r2.state))(\"label\", step_r2.stepLabel || step_r2.label)(\"selected\", ctx_r0.selectedIndex === i_r3)(\"active\", step_r2.completed || ctx_r0.selectedIndex === i_r3 || !ctx_r0.linear)(\"optional\", step_r2.optional)(\"errorMessage\", step_r2.errorMessage)(\"iconOverrides\", ctx_r0._iconOverrides)(\"disableRipple\", ctx_r0.disableRipple);\n    ɵngcc0.ɵɵattribute(\"aria-posinset\", i_r3 + 1)(\"aria-setsize\", ctx_r0.steps.length)(\"aria-controls\", ctx_r0._getStepContentId(i_r3))(\"aria-selected\", ctx_r0.selectedIndex == i_r3)(\"aria-label\", step_r2.ariaLabel || null)(\"aria-labelledby\", !step_r2.ariaLabel && step_r2.ariaLabelledby ? step_r2.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !isLast_r4);\n} }\nfunction MatHorizontalStepper_div_3_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 7);\n    ɵngcc0.ɵɵlistener(\"@stepTransition.done\", function MatHorizontalStepper_div_3_Template_div_animation_stepTransition_done_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11._animationDone.next($event); });\n    ɵngcc0.ɵɵelementContainer(1, 8);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const step_r9 = ctx.$implicit;\n    const i_r10 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@stepTransition\", ctx_r1._getAnimationDirection(i_r10))(\"id\", ctx_r1._getStepContentId(i_r10));\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r1.selectedIndex === i_r10 ? 0 : null)(\"aria-labelledby\", ctx_r1._getStepLabelId(i_r10))(\"aria-expanded\", ctx_r1.selectedIndex === i_r10);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", step_r9.content);\n} }\nfunction MatVerticalStepper_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r6 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵelementStart(1, \"mat-step-header\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatVerticalStepper_div_0_Template_mat_step_header_click_1_listener() { const step_r1 = ctx.$implicit; return step_r1.select(); })(\"keydown\", function MatVerticalStepper_div_0_Template_mat_step_header_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5._onKeydown($event); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(2, \"div\", 3);\n    ɵngcc0.ɵɵelementStart(3, \"div\", 4);\n    ɵngcc0.ɵɵlistener(\"@stepTransition.done\", function MatVerticalStepper_div_0_Template_div_animation_stepTransition_done_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7._animationDone.next($event); });\n    ɵngcc0.ɵɵelementStart(4, \"div\", 5);\n    ɵngcc0.ɵɵelementContainer(5, 6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const step_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const isLast_r3 = ctx.last;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"tabIndex\", ctx_r0._getFocusIndex() == i_r2 ? 0 : 0 - 1)(\"id\", ctx_r0._getStepLabelId(i_r2))(\"index\", i_r2)(\"state\", ctx_r0._getIndicatorType(i_r2, step_r1.state))(\"label\", step_r1.stepLabel || step_r1.label)(\"selected\", ctx_r0.selectedIndex === i_r2)(\"active\", step_r1.completed || ctx_r0.selectedIndex === i_r2 || !ctx_r0.linear)(\"optional\", step_r1.optional)(\"errorMessage\", step_r1.errorMessage)(\"iconOverrides\", ctx_r0._iconOverrides)(\"disableRipple\", ctx_r0.disableRipple);\n    ɵngcc0.ɵɵattribute(\"aria-posinset\", i_r2 + 1)(\"aria-setsize\", ctx_r0.steps.length)(\"aria-controls\", ctx_r0._getStepContentId(i_r2))(\"aria-selected\", ctx_r0.selectedIndex === i_r2)(\"aria-label\", step_r1.ariaLabel || null)(\"aria-labelledby\", !step_r1.ariaLabel && step_r1.ariaLabelledby ? step_r1.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"mat-stepper-vertical-line\", !isLast_r3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"@stepTransition\", ctx_r0._getAnimationDirection(i_r2))(\"id\", ctx_r0._getStepContentId(i_r2));\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r0.selectedIndex === i_r2 ? 0 : null)(\"aria-labelledby\", ctx_r0._getStepLabelId(i_r2))(\"aria-expanded\", ctx_r0.selectedIndex === i_r2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", step_r1.content);\n} }\nclass MatStepLabel extends CdkStepLabel {\n}\nMatStepLabel.ɵfac = function MatStepLabel_Factory(t) { return ɵMatStepLabel_BaseFactory(t || MatStepLabel); };\nMatStepLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatStepLabel, selectors: [[\"\", \"matStepLabel\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatStepLabel_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatStepLabel);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[matStepLabel]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/stepper-intl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Stepper data that is required for internationalization.\n */\nclass MatStepperIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * Label that is rendered below optional steps.\n         */\n        this.optionalLabel = 'Optional';\n    }\n}\nMatStepperIntl.ɵfac = function MatStepperIntl_Factory(t) { return new (t || MatStepperIntl)(); };\n/** @nocollapse */ MatStepperIntl.ɵprov = ɵɵdefineInjectable({ factory: function MatStepperIntl_Factory() { return new MatStepperIntl(); }, token: MatStepperIntl, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepperIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * Stream that emits whenever the labels here are changed. Use this to notify\n     * components if the labels have changed after initialization.\n     * @type {?}\n     */\n    MatStepperIntl.prototype.changes;\n    /**\n     * Label that is rendered below optional steps.\n     * @type {?}\n     */\n    MatStepperIntl.prototype.optionalLabel;\n}\n/**\n * \\@docs-private\n * @param {?} parentIntl\n * @return {?}\n */\nfunction MAT_STEPPER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatStepperIntl();\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_STEPPER_INTL_PROVIDER = {\n    provide: MatStepperIntl,\n    deps: [[new Optional(), new SkipSelf(), MatStepperIntl]],\n    useFactory: MAT_STEPPER_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/step-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatStepHeader extends CdkStepHeader {\n    /**\n     * @param {?} _intl\n     * @param {?} _focusMonitor\n     * @param {?} _elementRef\n     * @param {?} changeDetectorRef\n     */\n    constructor(_intl, _focusMonitor, _elementRef, changeDetectorRef) {\n        super(_elementRef);\n        this._intl = _intl;\n        this._focusMonitor = _focusMonitor;\n        _focusMonitor.monitor(_elementRef, true);\n        this._intlSubscription = _intl.changes.subscribe((/**\n         * @return {?}\n         */\n        () => changeDetectorRef.markForCheck()));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._intlSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Focuses the step header.\n     * @return {?}\n     */\n    focus() {\n        this._focusMonitor.focusVia(this._elementRef, 'program');\n    }\n    /**\n     * Returns string label of given step if it is a text label.\n     * @return {?}\n     */\n    _stringLabel() {\n        return this.label instanceof MatStepLabel ? null : this.label;\n    }\n    /**\n     * Returns MatStepLabel if the label of given step is a template label.\n     * @return {?}\n     */\n    _templateLabel() {\n        return this.label instanceof MatStepLabel ? this.label : null;\n    }\n    /**\n     * Returns the host HTML element.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /**\n     * Template context variables that are exposed to the `matStepperIcon` instances.\n     * @return {?}\n     */\n    _getIconContext() {\n        return {\n            index: this.index,\n            active: this.active,\n            optional: this.optional\n        };\n    }\n    /**\n     * @param {?} state\n     * @return {?}\n     */\n    _getDefaultTextForState(state) {\n        if (state == 'number') {\n            return `${this.index + 1}`;\n        }\n        if (state == 'edit') {\n            return 'create';\n        }\n        if (state == 'error') {\n            return 'warning';\n        }\n        return state;\n    }\n}\nMatStepHeader.ɵfac = function MatStepHeader_Factory(t) { return new (t || MatStepHeader)(ɵngcc0.ɵɵdirectiveInject(MatStepperIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatStepHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatStepHeader, selectors: [[\"mat-step-header\"]], hostAttrs: [\"role\", \"tab\", 1, \"mat-step-header\", \"mat-focus-indicator\"], inputs: { state: \"state\", label: \"label\", errorMessage: \"errorMessage\", iconOverrides: \"iconOverrides\", index: \"index\", selected: \"selected\", active: \"active\", optional: \"optional\", disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 10, vars: 19, consts: [[\"matRipple\", \"\", 1, \"mat-step-header-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-step-icon-content\", 3, \"ngSwitch\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\", 4, \"ngSwitchCase\"], [3, \"ngSwitch\", 4, \"ngSwitchDefault\"], [1, \"mat-step-label\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [\"class\", \"mat-step-text-label\", 4, \"ngIf\"], [\"class\", \"mat-step-optional\", 4, \"ngIf\"], [\"class\", \"mat-step-sub-label-error\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [4, \"ngSwitchDefault\"], [3, \"ngTemplateOutlet\"], [1, \"mat-step-text-label\"], [1, \"mat-step-optional\"], [1, \"mat-step-sub-label-error\"]], template: function MatStepHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\");\n        ɵngcc0.ɵɵelementStart(2, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(3, MatStepHeader_ng_container_3_Template, 1, 2, \"ng-container\", 2);\n        ɵngcc0.ɵɵtemplate(4, MatStepHeader_ng_container_4_Template, 3, 2, \"ng-container\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"div\", 4);\n        ɵngcc0.ɵɵtemplate(6, MatStepHeader_ng_container_6_Template, 1, 1, \"ng-container\", 5);\n        ɵngcc0.ɵɵtemplate(7, MatStepHeader_div_7_Template, 2, 1, \"div\", 6);\n        ɵngcc0.ɵɵtemplate(8, MatStepHeader_div_8_Template, 2, 1, \"div\", 7);\n        ɵngcc0.ɵɵtemplate(9, MatStepHeader_div_9_Template, 2, 1, \"div\", 8);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassMapInterpolate1(\"mat-step-icon-state-\", ctx.state, \" mat-step-icon\");\n        ɵngcc0.ɵɵclassProp(\"mat-step-icon-selected\", ctx.selected);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", !!(ctx.iconOverrides && ctx.iconOverrides[ctx.state]));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-step-label-active\", ctx.active)(\"mat-step-label-selected\", ctx.selected)(\"mat-step-label-error\", ctx.state == \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._templateLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._stringLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.optional && ctx.state != \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.state == \"error\");\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc3.NgSwitchDefault, ɵngcc3.NgIf, ɵngcc3.NgTemplateOutlet, ɵngcc4.MatIcon], styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:transparent}.mat-step-optional,.mat-step-sub-label-error{font-size:12px}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative}.mat-step-icon-content,.mat-step-icon .mat-icon{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatStepHeader.ctorParameters = () => [\n    { type: MatStepperIntl },\n    { type: FocusMonitor },\n    { type: ElementRef },\n    { type: ChangeDetectorRef }\n];\nMatStepHeader.propDecorators = {\n    state: [{ type: Input }],\n    label: [{ type: Input }],\n    errorMessage: [{ type: Input }],\n    iconOverrides: [{ type: Input }],\n    index: [{ type: Input }],\n    selected: [{ type: Input }],\n    active: [{ type: Input }],\n    optional: [{ type: Input }],\n    disableRipple: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-step-header',\n                template: \"<div class=\\\"mat-step-header-ripple\\\" matRipple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disableRipple\\\"></div>\\n\\n<div class=\\\"mat-step-icon-state-{{state}} mat-step-icon\\\" [class.mat-step-icon-selected]=\\\"selected\\\">\\n  <div class=\\\"mat-step-icon-content\\\" [ngSwitch]=\\\"!!(iconOverrides && iconOverrides[state])\\\">\\n    <ng-container\\n      *ngSwitchCase=\\\"true\\\"\\n      [ngTemplateOutlet]=\\\"iconOverrides[state]\\\"\\n      [ngTemplateOutletContext]=\\\"_getIconContext()\\\"></ng-container>\\n    <ng-container *ngSwitchDefault [ngSwitch]=\\\"state\\\">\\n      <span *ngSwitchCase=\\\"'number'\\\">{{_getDefaultTextForState(state)}}</span>\\n      <mat-icon *ngSwitchDefault>{{_getDefaultTextForState(state)}}</mat-icon>\\n    </ng-container>\\n  </div>\\n</div>\\n<div class=\\\"mat-step-label\\\"\\n     [class.mat-step-label-active]=\\\"active\\\"\\n     [class.mat-step-label-selected]=\\\"selected\\\"\\n     [class.mat-step-label-error]=\\\"state == 'error'\\\">\\n  <!-- If there is a label template, use it. -->\\n  <ng-container *ngIf=\\\"_templateLabel()\\\" [ngTemplateOutlet]=\\\"_templateLabel()!.template\\\">\\n  </ng-container>\\n  <!-- If there is no label template, fall back to the text label. -->\\n  <div class=\\\"mat-step-text-label\\\" *ngIf=\\\"_stringLabel()\\\">{{label}}</div>\\n\\n  <div class=\\\"mat-step-optional\\\" *ngIf=\\\"optional && state != 'error'\\\">{{_intl.optionalLabel}}</div>\\n  <div class=\\\"mat-step-sub-label-error\\\" *ngIf=\\\"state == 'error'\\\">{{errorMessage}}</div>\\n</div>\\n\\n\",\n                host: {\n                    'class': 'mat-step-header mat-focus-indicator',\n                    'role': 'tab'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:transparent}.mat-step-optional,.mat-step-sub-label-error{font-size:12px}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative}.mat-step-icon-content,.mat-step-icon .mat-icon{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"]\n            }]\n    }], function () { return [{ type: MatStepperIntl }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }]; }, { state: [{\n            type: Input\n        }], label: [{\n            type: Input\n        }], errorMessage: [{\n            type: Input\n        }], iconOverrides: [{\n            type: Input\n        }], index: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], active: [{\n            type: Input\n        }], optional: [{\n            type: Input\n        }], disableRipple: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatStepHeader.prototype._intlSubscription;\n    /**\n     * State of the given step.\n     * @type {?}\n     */\n    MatStepHeader.prototype.state;\n    /**\n     * Label of the given step.\n     * @type {?}\n     */\n    MatStepHeader.prototype.label;\n    /**\n     * Error message to display when there's an error.\n     * @type {?}\n     */\n    MatStepHeader.prototype.errorMessage;\n    /**\n     * Overrides for the header icons, passed in via the stepper.\n     * @type {?}\n     */\n    MatStepHeader.prototype.iconOverrides;\n    /**\n     * Index of the given step.\n     * @type {?}\n     */\n    MatStepHeader.prototype.index;\n    /**\n     * Whether the given step is selected.\n     * @type {?}\n     */\n    MatStepHeader.prototype.selected;\n    /**\n     * Whether the given step label is active.\n     * @type {?}\n     */\n    MatStepHeader.prototype.active;\n    /**\n     * Whether the given step is optional.\n     * @type {?}\n     */\n    MatStepHeader.prototype.optional;\n    /**\n     * Whether the ripple should be disabled.\n     * @type {?}\n     */\n    MatStepHeader.prototype.disableRipple;\n    /** @type {?} */\n    MatStepHeader.prototype._intl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatStepHeader.prototype._focusMonitor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/stepper-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material steppers.\n * \\@docs-private\n * @type {?}\n */\nconst matStepperAnimations = {\n    /**\n     * Animation that transitions the step along the X axis in a horizontal stepper.\n     */\n    horizontalStepTransition: trigger('stepTransition', [\n        state('previous', style({ transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden' })),\n        state('current', style({ transform: 'none', visibility: 'visible' })),\n        state('next', style({ transform: 'translate3d(100%, 0, 0)', visibility: 'hidden' })),\n        transition('* => *', animate('500ms cubic-bezier(0.35, 0, 0.25, 1)'))\n    ]),\n    /**\n     * Animation that transitions the step along the Y axis in a vertical stepper.\n     */\n    verticalStepTransition: trigger('stepTransition', [\n        state('previous', style({ height: '0px', visibility: 'hidden' })),\n        state('next', style({ height: '0px', visibility: 'hidden' })),\n        state('current', style({ height: '*', visibility: 'visible' })),\n        transition('* <=> current', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/stepper-icon.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Template context available to an attached `matStepperIcon`.\n * @record\n */\nfunction MatStepperIconContext() { }\nif (false) {\n    /**\n     * Index of the step.\n     * @type {?}\n     */\n    MatStepperIconContext.prototype.index;\n    /**\n     * Whether the step is currently active.\n     * @type {?}\n     */\n    MatStepperIconContext.prototype.active;\n    /**\n     * Whether the step is optional.\n     * @type {?}\n     */\n    MatStepperIconContext.prototype.optional;\n}\n/**\n * Template to be used to override the icons inside the step header.\n */\nclass MatStepperIcon {\n    /**\n     * @param {?} templateRef\n     */\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nMatStepperIcon.ɵfac = function MatStepperIcon_Factory(t) { return new (t || MatStepperIcon)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatStepperIcon.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatStepperIcon, selectors: [[\"ng-template\", \"matStepperIcon\", \"\"]], inputs: { name: [\"matStepperIcon\", \"name\"] } });\n/** @nocollapse */\nMatStepperIcon.ctorParameters = () => [\n    { type: TemplateRef }\n];\nMatStepperIcon.propDecorators = {\n    name: [{ type: Input, args: ['matStepperIcon',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepperIcon, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matStepperIcon]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, { name: [{\n            type: Input,\n            args: ['matStepperIcon']\n        }] }); })();\nif (false) {\n    /**\n     * Name of the icon to be overridden.\n     * @type {?}\n     */\n    MatStepperIcon.prototype.name;\n    /** @type {?} */\n    MatStepperIcon.prototype.templateRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/stepper.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatStep extends CdkStep {\n    /**\n     * \\@breaking-change 8.0.0 remove the `?` after `stepperOptions`\n     * @param {?} stepper\n     * @param {?} _errorStateMatcher\n     * @param {?=} stepperOptions\n     */\n    constructor(stepper, _errorStateMatcher, stepperOptions) {\n        super(stepper, stepperOptions);\n        this._errorStateMatcher = _errorStateMatcher;\n    }\n    /**\n     * Custom error state matcher that additionally checks for validity of interacted form.\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    isErrorState(control, form) {\n        /** @type {?} */\n        const originalErrorState = this._errorStateMatcher.isErrorState(control, form);\n        // Custom error state checks for the validity of form that is not submitted or touched\n        // since user can trigger a form change by calling for another step without directly\n        // interacting with the current form.\n        /** @type {?} */\n        const customErrorState = !!(control && control.invalid && this.interacted);\n        return originalErrorState || customErrorState;\n    }\n}\nMatStep.ɵfac = function MatStep_Factory(t) { return new (t || MatStep)(ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatStepper))), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher, 4), ɵngcc0.ɵɵdirectiveInject(STEPPER_GLOBAL_OPTIONS, 8)); };\nMatStep.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatStep, selectors: [[\"mat-step\"]], contentQueries: function MatStep_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatStepLabel, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stepLabel = _t.first);\n    } }, exportAs: [\"matStep\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: ErrorStateMatcher, useExisting: MatStep },\n            { provide: CdkStep, useExisting: MatStep },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatStep_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatStep_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatStep.ctorParameters = () => [\n    { type: MatStepper, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatStepper)),] }] },\n    { type: ErrorStateMatcher, decorators: [{ type: SkipSelf }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [STEPPER_GLOBAL_OPTIONS,] }] }\n];\nMatStep.propDecorators = {\n    stepLabel: [{ type: ContentChild, args: [MatStepLabel,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStep, [{\n        type: Component,\n        args: [{\n                selector: 'mat-step',\n                template: \"<ng-template><ng-content></ng-content></ng-template>\\n\",\n                providers: [\n                    { provide: ErrorStateMatcher, useExisting: MatStep },\n                    { provide: CdkStep, useExisting: MatStep },\n                ],\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matStep',\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: MatStepper, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatStepper))]\n            }] }, { type: ɵngcc2.ErrorStateMatcher, decorators: [{\n                type: SkipSelf\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [STEPPER_GLOBAL_OPTIONS]\n            }] }]; }, { stepLabel: [{\n            type: ContentChild,\n            args: [MatStepLabel]\n        }] }); })();\nif (false) {\n    /**\n     * Content for step label given by `<ng-template matStepLabel>`.\n     * @type {?}\n     */\n    MatStep.prototype.stepLabel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatStep.prototype._errorStateMatcher;\n}\nclass MatStepper extends CdkStepper {\n    constructor() {\n        super(...arguments);\n        /**\n         * Event emitted when the current step is done transitioning in.\n         */\n        this.animationDone = new EventEmitter();\n        /**\n         * Consumer-specified template-refs to be used to override the header icons.\n         */\n        this._iconOverrides = {};\n        /**\n         * Stream of animation `done` events when the body expands/collapses.\n         */\n        this._animationDone = new Subject();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._icons.forEach((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ name, templateRef }) => this._iconOverrides[name] = templateRef));\n        // Mark the component for change detection whenever the content children query changes\n        this._steps.changes.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._stateChanged();\n        }));\n        this._animationDone.pipe(\n        // This needs a `distinctUntilChanged` in order to avoid emitting the same event twice due\n        // to a bug in animations where the `.done` callback gets invoked twice on some browsers.\n        // See https://github.com/angular/angular/issues/24084\n        distinctUntilChanged((/**\n         * @param {?} x\n         * @param {?} y\n         * @return {?}\n         */\n        (x, y) => x.fromState === y.fromState && x.toState === y.toState)), takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (((/** @type {?} */ (event.toState))) === 'current') {\n                this.animationDone.emit();\n            }\n        }));\n    }\n}\nMatStepper.ɵfac = function MatStepper_Factory(t) { return ɵMatStepper_BaseFactory(t || MatStepper); };\nMatStepper.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatStepper, selectors: [[\"\", \"matStepper\", \"\"]], contentQueries: function MatStepper_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatStep, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatStepperIcon, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._steps = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icons = _t);\n    } }, viewQuery: function MatStepper_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatStepHeader, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._stepHeader = _t);\n    } }, inputs: { disableRipple: \"disableRipple\" }, outputs: { animationDone: \"animationDone\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkStepper, useExisting: MatStepper }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatStepper.propDecorators = {\n    _stepHeader: [{ type: ViewChildren, args: [MatStepHeader,] }],\n    _steps: [{ type: ContentChildren, args: [MatStep, { descendants: true },] }],\n    _icons: [{ type: ContentChildren, args: [MatStepperIcon, { descendants: true },] }],\n    animationDone: [{ type: Output }],\n    disableRipple: [{ type: Input }]\n};\nconst ɵMatStepper_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatStepper);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepper, [{\n        type: Directive,\n        args: [{ selector: '[matStepper]', providers: [{ provide: CdkStepper, useExisting: MatStepper }] }]\n    }], null, { animationDone: [{\n            type: Output\n        }], _stepHeader: [{\n            type: ViewChildren,\n            args: [MatStepHeader]\n        }], _steps: [{\n            type: ContentChildren,\n            args: [MatStep, { descendants: true }]\n        }], _icons: [{\n            type: ContentChildren,\n            args: [MatStepperIcon, { descendants: true }]\n        }], disableRipple: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatStepper.ngAcceptInputType_editable;\n    /** @type {?} */\n    MatStepper.ngAcceptInputType_optional;\n    /** @type {?} */\n    MatStepper.ngAcceptInputType_completed;\n    /** @type {?} */\n    MatStepper.ngAcceptInputType_hasError;\n    /**\n     * The list of step headers of the steps in the stepper.\n     * @type {?}\n     */\n    MatStepper.prototype._stepHeader;\n    /**\n     * Steps that the stepper holds.\n     * @type {?}\n     */\n    MatStepper.prototype._steps;\n    /**\n     * Custom icon overrides passed in by the consumer.\n     * @type {?}\n     */\n    MatStepper.prototype._icons;\n    /**\n     * Event emitted when the current step is done transitioning in.\n     * @type {?}\n     */\n    MatStepper.prototype.animationDone;\n    /**\n     * Whether ripples should be disabled for the step headers.\n     * @type {?}\n     */\n    MatStepper.prototype.disableRipple;\n    /**\n     * Consumer-specified template-refs to be used to override the header icons.\n     * @type {?}\n     */\n    MatStepper.prototype._iconOverrides;\n    /**\n     * Stream of animation `done` events when the body expands/collapses.\n     * @type {?}\n     */\n    MatStepper.prototype._animationDone;\n}\nclass MatHorizontalStepper extends MatStepper {\n    constructor() {\n        super(...arguments);\n        /**\n         * Whether the label should display in bottom or end position.\n         */\n        this.labelPosition = 'end';\n    }\n}\nMatHorizontalStepper.ɵfac = function MatHorizontalStepper_Factory(t) { return ɵMatHorizontalStepper_BaseFactory(t || MatHorizontalStepper); };\nMatHorizontalStepper.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatHorizontalStepper, selectors: [[\"mat-horizontal-stepper\"]], hostAttrs: [\"aria-orientation\", \"horizontal\", \"role\", \"tablist\", 1, \"mat-stepper-horizontal\"], hostVars: 4, hostBindings: function MatHorizontalStepper_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-stepper-label-position-end\", ctx.labelPosition == \"end\")(\"mat-stepper-label-position-bottom\", ctx.labelPosition == \"bottom\");\n    } }, inputs: { selectedIndex: \"selectedIndex\", labelPosition: \"labelPosition\" }, exportAs: [\"matHorizontalStepper\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatStepper, useExisting: MatHorizontalStepper },\n            { provide: CdkStepper, useExisting: MatHorizontalStepper }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 4, vars: 2, consts: [[1, \"mat-horizontal-stepper-header-container\"], [4, \"ngFor\", \"ngForOf\"], [1, \"mat-horizontal-content-container\"], [\"class\", \"mat-horizontal-stepper-content\", \"role\", \"tabpanel\", 3, \"id\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-horizontal-stepper-header\", 3, \"tabIndex\", \"id\", \"index\", \"state\", \"label\", \"selected\", \"active\", \"optional\", \"errorMessage\", \"iconOverrides\", \"disableRipple\", \"click\", \"keydown\"], [\"class\", \"mat-stepper-horizontal-line\", 4, \"ngIf\"], [1, \"mat-stepper-horizontal-line\"], [\"role\", \"tabpanel\", 1, \"mat-horizontal-stepper-content\", 3, \"id\"], [3, \"ngTemplateOutlet\"]], template: function MatHorizontalStepper_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatHorizontalStepper_ng_container_1_Template, 3, 18, \"ng-container\", 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(3, MatHorizontalStepper_div_3_Template, 2, 6, \"div\", 3);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.steps);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.steps);\n    } }, directives: [ɵngcc3.NgForOf, MatStepHeader, ɵngcc3.NgIf, ɵngcc3.NgTemplateOutlet], styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative;top:36px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;top:36px;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto;padding:24px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;padding:24px;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;top:-16px;bottom:-16px;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"], encapsulation: 2, data: { animation: [matStepperAnimations.horizontalStepTransition] }, changeDetection: 0 });\nMatHorizontalStepper.propDecorators = {\n    labelPosition: [{ type: Input }]\n};\nconst ɵMatHorizontalStepper_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHorizontalStepper);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHorizontalStepper, [{\n        type: Component,\n        args: [{\n                selector: 'mat-horizontal-stepper',\n                exportAs: 'matHorizontalStepper',\n                template: \"<div class=\\\"mat-horizontal-stepper-header-container\\\">\\n  <ng-container *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n    <mat-step-header class=\\\"mat-horizontal-stepper-header\\\"\\n                     (click)=\\\"step.select()\\\"\\n                     (keydown)=\\\"_onKeydown($event)\\\"\\n                     [tabIndex]=\\\"_getFocusIndex() === i ? 0 : -1\\\"\\n                     [id]=\\\"_getStepLabelId(i)\\\"\\n                     [attr.aria-posinset]=\\\"i + 1\\\"\\n                     [attr.aria-setsize]=\\\"steps.length\\\"\\n                     [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n                     [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n                     [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n                     [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n                     [index]=\\\"i\\\"\\n                     [state]=\\\"_getIndicatorType(i, step.state)\\\"\\n                     [label]=\\\"step.stepLabel || step.label\\\"\\n                     [selected]=\\\"selectedIndex === i\\\"\\n                     [active]=\\\"step.completed || selectedIndex === i || !linear\\\"\\n                     [optional]=\\\"step.optional\\\"\\n                     [errorMessage]=\\\"step.errorMessage\\\"\\n                     [iconOverrides]=\\\"_iconOverrides\\\"\\n                     [disableRipple]=\\\"disableRipple\\\">\\n    </mat-step-header>\\n    <div *ngIf=\\\"!isLast\\\" class=\\\"mat-stepper-horizontal-line\\\"></div>\\n  </ng-container>\\n</div>\\n\\n<div class=\\\"mat-horizontal-content-container\\\">\\n  <div *ngFor=\\\"let step of steps; let i = index\\\"\\n       [attr.tabindex]=\\\"selectedIndex === i ? 0 : null\\\"\\n       class=\\\"mat-horizontal-stepper-content\\\" role=\\\"tabpanel\\\"\\n       [@stepTransition]=\\\"_getAnimationDirection(i)\\\"\\n       (@stepTransition.done)=\\\"_animationDone.next($event)\\\"\\n       [id]=\\\"_getStepContentId(i)\\\"\\n       [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n       [attr.aria-expanded]=\\\"selectedIndex === i\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n  </div>\\n</div>\\n\",\n                inputs: ['selectedIndex'],\n                host: {\n                    'class': 'mat-stepper-horizontal',\n                    '[class.mat-stepper-label-position-end]': 'labelPosition == \"end\"',\n                    '[class.mat-stepper-label-position-bottom]': 'labelPosition == \"bottom\"',\n                    'aria-orientation': 'horizontal',\n                    'role': 'tablist'\n                },\n                animations: [matStepperAnimations.horizontalStepTransition],\n                providers: [\n                    { provide: MatStepper, useExisting: MatHorizontalStepper },\n                    { provide: CdkStepper, useExisting: MatHorizontalStepper }\n                ],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative;top:36px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;top:36px;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto;padding:24px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;padding:24px;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;top:-16px;bottom:-16px;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"]\n            }]\n    }], null, { labelPosition: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatHorizontalStepper.ngAcceptInputType_editable;\n    /** @type {?} */\n    MatHorizontalStepper.ngAcceptInputType_optional;\n    /** @type {?} */\n    MatHorizontalStepper.ngAcceptInputType_completed;\n    /** @type {?} */\n    MatHorizontalStepper.ngAcceptInputType_hasError;\n    /**\n     * Whether the label should display in bottom or end position.\n     * @type {?}\n     */\n    MatHorizontalStepper.prototype.labelPosition;\n}\nclass MatVerticalStepper extends MatStepper {\n    /**\n     * @param {?} dir\n     * @param {?} changeDetectorRef\n     * @param {?=} elementRef\n     * @param {?=} _document\n     */\n    constructor(dir, changeDetectorRef, \n    // @breaking-change 8.0.0 `elementRef` and `_document` parameters to become required.\n    elementRef, _document) {\n        super(dir, changeDetectorRef, elementRef, _document);\n        this._orientation = 'vertical';\n    }\n}\nMatVerticalStepper.ɵfac = function MatVerticalStepper_Factory(t) { return new (t || MatVerticalStepper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatVerticalStepper.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatVerticalStepper, selectors: [[\"mat-vertical-stepper\"]], hostAttrs: [\"aria-orientation\", \"vertical\", \"role\", \"tablist\", 1, \"mat-stepper-vertical\"], inputs: { selectedIndex: \"selectedIndex\" }, exportAs: [\"matVerticalStepper\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatStepper, useExisting: MatVerticalStepper },\n            { provide: CdkStepper, useExisting: MatVerticalStepper }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 1, consts: [[\"class\", \"mat-step\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-step\"], [1, \"mat-vertical-stepper-header\", 3, \"tabIndex\", \"id\", \"index\", \"state\", \"label\", \"selected\", \"active\", \"optional\", \"errorMessage\", \"iconOverrides\", \"disableRipple\", \"click\", \"keydown\"], [1, \"mat-vertical-content-container\"], [\"role\", \"tabpanel\", 1, \"mat-vertical-stepper-content\", 3, \"id\"], [1, \"mat-vertical-content\"], [3, \"ngTemplateOutlet\"]], template: function MatVerticalStepper_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatVerticalStepper_div_0_Template, 6, 25, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.steps);\n    } }, directives: [ɵngcc3.NgForOf, MatStepHeader, ɵngcc3.NgTemplateOutlet], styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative;top:36px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;top:36px;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto;padding:24px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;padding:24px;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;top:-16px;bottom:-16px;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"], encapsulation: 2, data: { animation: [matStepperAnimations.verticalStepTransition] }, changeDetection: 0 });\n/** @nocollapse */\nMatVerticalStepper.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatVerticalStepper, [{\n        type: Component,\n        args: [{\n                selector: 'mat-vertical-stepper',\n                exportAs: 'matVerticalStepper',\n                template: \"<div class=\\\"mat-step\\\" *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n  <mat-step-header class=\\\"mat-vertical-stepper-header\\\"\\n                   (click)=\\\"step.select()\\\"\\n                   (keydown)=\\\"_onKeydown($event)\\\"\\n                   [tabIndex]=\\\"_getFocusIndex() == i ? 0 : -1\\\"\\n                   [id]=\\\"_getStepLabelId(i)\\\"\\n                   [attr.aria-posinset]=\\\"i + 1\\\"\\n                   [attr.aria-setsize]=\\\"steps.length\\\"\\n                   [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n                   [attr.aria-selected]=\\\"selectedIndex === i\\\"\\n                   [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n                   [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n                   [index]=\\\"i\\\"\\n                   [state]=\\\"_getIndicatorType(i, step.state)\\\"\\n                   [label]=\\\"step.stepLabel || step.label\\\"\\n                   [selected]=\\\"selectedIndex === i\\\"\\n                   [active]=\\\"step.completed || selectedIndex === i || !linear\\\"\\n                   [optional]=\\\"step.optional\\\"\\n                   [errorMessage]=\\\"step.errorMessage\\\"\\n                   [iconOverrides]=\\\"_iconOverrides\\\"\\n                   [disableRipple]=\\\"disableRipple\\\">\\n  </mat-step-header>\\n\\n  <div class=\\\"mat-vertical-content-container\\\" [class.mat-stepper-vertical-line]=\\\"!isLast\\\">\\n    <div class=\\\"mat-vertical-stepper-content\\\" role=\\\"tabpanel\\\"\\n         [attr.tabindex]=\\\"selectedIndex === i ? 0 : null\\\"\\n         [@stepTransition]=\\\"_getAnimationDirection(i)\\\"\\n         (@stepTransition.done)=\\\"_animationDone.next($event)\\\"\\n         [id]=\\\"_getStepContentId(i)\\\"\\n         [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n         [attr.aria-expanded]=\\\"selectedIndex === i\\\">\\n      <div class=\\\"mat-vertical-content\\\">\\n        <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\",\n                inputs: ['selectedIndex'],\n                host: {\n                    'class': 'mat-stepper-vertical',\n                    'aria-orientation': 'vertical',\n                    'role': 'tablist'\n                },\n                animations: [matStepperAnimations.verticalStepTransition],\n                providers: [\n                    { provide: MatStepper, useExisting: MatVerticalStepper },\n                    { provide: CdkStepper, useExisting: MatVerticalStepper }\n                ],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative;top:36px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;top:36px;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto;padding:24px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;padding:24px;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;top:-16px;bottom:-16px;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc5.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatVerticalStepper.ngAcceptInputType_editable;\n    /** @type {?} */\n    MatVerticalStepper.ngAcceptInputType_optional;\n    /** @type {?} */\n    MatVerticalStepper.ngAcceptInputType_completed;\n    /** @type {?} */\n    MatVerticalStepper.ngAcceptInputType_hasError;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/stepper-button.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Button that moves to the next step in a stepper workflow.\n */\nclass MatStepperNext extends CdkStepperNext {\n}\nMatStepperNext.ɵfac = function MatStepperNext_Factory(t) { return ɵMatStepperNext_BaseFactory(t || MatStepperNext); };\nMatStepperNext.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatStepperNext, selectors: [[\"button\", \"matStepperNext\", \"\"]], hostVars: 1, hostBindings: function MatStepperNext_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatStepperNext_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatStepperNext);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepperNext, [{\n        type: Directive,\n        args: [{\n                selector: 'button[matStepperNext]',\n                host: {\n                    '[type]': 'type'\n                },\n                inputs: ['type']\n            }]\n    }], null, null); })();\n/**\n * Button that moves to the previous step in a stepper workflow.\n */\nclass MatStepperPrevious extends CdkStepperPrevious {\n}\nMatStepperPrevious.ɵfac = function MatStepperPrevious_Factory(t) { return ɵMatStepperPrevious_BaseFactory(t || MatStepperPrevious); };\nMatStepperPrevious.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatStepperPrevious, selectors: [[\"button\", \"matStepperPrevious\", \"\"]], hostVars: 1, hostBindings: function MatStepperPrevious_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatStepperPrevious_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatStepperPrevious);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepperPrevious, [{\n        type: Directive,\n        args: [{\n                selector: 'button[matStepperPrevious]',\n                host: {\n                    '[type]': 'type'\n                },\n                inputs: ['type']\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/stepper-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatStepperModule {\n}\nMatStepperModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatStepperModule });\nMatStepperModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatStepperModule_Factory(t) { return new (t || MatStepperModule)(); }, providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher], imports: [[\n            MatCommonModule,\n            CommonModule,\n            PortalModule,\n            MatButtonModule,\n            CdkStepperModule,\n            MatIconModule,\n            MatRippleModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatStepperModule, { declarations: function () { return [MatHorizontalStepper,\n        MatVerticalStepper,\n        MatStep,\n        MatStepLabel,\n        MatStepper,\n        MatStepperNext,\n        MatStepperPrevious,\n        MatStepHeader,\n        MatStepperIcon]; }, imports: function () { return [MatCommonModule,\n        CommonModule,\n        PortalModule,\n        MatButtonModule,\n        CdkStepperModule,\n        MatIconModule,\n        MatRippleModule]; }, exports: function () { return [MatCommonModule,\n        MatHorizontalStepper,\n        MatVerticalStepper,\n        MatStep,\n        MatStepLabel,\n        MatStepper,\n        MatStepperNext,\n        MatStepperPrevious,\n        MatStepHeader,\n        MatStepperIcon]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepperModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    MatCommonModule,\n                    CommonModule,\n                    PortalModule,\n                    MatButtonModule,\n                    CdkStepperModule,\n                    MatIconModule,\n                    MatRippleModule,\n                ],\n                exports: [\n                    MatCommonModule,\n                    MatHorizontalStepper,\n                    MatVerticalStepper,\n                    MatStep,\n                    MatStepLabel,\n                    MatStepper,\n                    MatStepperNext,\n                    MatStepperPrevious,\n                    MatStepHeader,\n                    MatStepperIcon,\n                ],\n                declarations: [\n                    MatHorizontalStepper,\n                    MatVerticalStepper,\n                    MatStep,\n                    MatStepLabel,\n                    MatStepper,\n                    MatStepperNext,\n                    MatStepperPrevious,\n                    MatStepHeader,\n                    MatStepperIcon,\n                ],\n                providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_STEPPER_INTL_PROVIDER, MAT_STEPPER_INTL_PROVIDER_FACTORY, MatHorizontalStepper, MatStep, MatStepHeader, MatStepLabel, MatStepper, MatStepperIcon, MatStepperIntl, MatStepperModule, MatStepperNext, MatStepperPrevious, MatVerticalStepper, matStepperAnimations };\n\n//# sourceMappingURL=stepper.js.map","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Directive, Input, ElementRef, NgModule } from '@angular/core';\nimport { CdkTable, CDK_TABLE_TEMPLATE, CDK_TABLE, CdkCellDef, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkHeaderCell, CdkFooterCell, CdkCell, CdkHeaderRowDef, CdkFooterRowDef, CdkRowDef, CdkHeaderRow, CDK_ROW_TEMPLATE, CdkFooterRow, CdkRow, CdkTextColumn, CdkTableModule, DataSource } from '@angular/cdk/table';\nimport { MatCommonModule } from '@angular/material/core';\nimport { _isNumberValue } from '@angular/cdk/coercion';\nimport { BehaviorSubject, Subject, Subscription, merge, of, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/table.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Wrapper for the CdkTable with Material design styles.\n * @template T\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/table';\n\nconst _c0 = [[[\"caption\"]]];\nconst _c1 = [\"caption\"];\nfunction MatTextColumn_th_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.headerText, \" \");\n} }\nfunction MatTextColumn_td_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const data_r2 = ctx.$implicit;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r1.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.dataAccessor(data_r2, ctx_r1.name), \" \");\n} }\nclass MatTable extends CdkTable {\n    constructor() {\n        super(...arguments);\n        /**\n         * Overrides the sticky CSS class set by the `CdkTable`.\n         */\n        this.stickyCssClass = 'mat-table-sticky';\n    }\n}\nMatTable.ɵfac = function MatTable_Factory(t) { return ɵMatTable_BaseFactory(t || MatTable); };\nMatTable.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTable, selectors: [[\"mat-table\"], [\"table\", \"mat-table\", \"\"]], hostAttrs: [1, \"mat-table\"], exportAs: [\"matTable\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CdkTable, useExisting: MatTable },\n            { provide: CDK_TABLE, useExisting: MatTable }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 4, vars: 0, consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]], template: function MatTable_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementContainer(1, 0);\n        ɵngcc0.ɵɵelementContainer(2, 1);\n        ɵngcc0.ɵɵelementContainer(3, 2);\n    } }, directives: [ɵngcc1.HeaderRowOutlet, ɵngcc1.DataRowOutlet, ɵngcc1.FooterRowOutlet], styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-row::after,mat-header-row::after,mat-footer-row::after{display:inline-block;min-height:inherit;content:\\\"\\\"}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type,[dir=rtl] mat-header-cell:first-of-type,[dir=rtl] mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type,[dir=rtl] mat-header-cell:last-of-type,[dir=rtl] mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type,[dir=rtl] td.mat-cell:first-of-type,[dir=rtl] td.mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type,[dir=rtl] td.mat-cell:last-of-type,[dir=rtl] td.mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}\\n\"], encapsulation: 2 });\nconst ɵMatTable_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTable);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTable, [{\n        type: Component,\n        args: [{\n                selector: 'mat-table, table[mat-table]',\n                exportAs: 'matTable',\n                template: CDK_TABLE_TEMPLATE,\n                host: {\n                    'class': 'mat-table'\n                },\n                providers: [\n                    { provide: CdkTable, useExisting: MatTable },\n                    { provide: CDK_TABLE, useExisting: MatTable }\n                ],\n                encapsulation: ViewEncapsulation.None,\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-row::after,mat-header-row::after,mat-footer-row::after{display:inline-block;min-height:inherit;content:\\\"\\\"}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type,[dir=rtl] mat-header-cell:first-of-type,[dir=rtl] mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type,[dir=rtl] mat-header-cell:last-of-type,[dir=rtl] mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type,[dir=rtl] td.mat-cell:first-of-type,[dir=rtl] td.mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type,[dir=rtl] td.mat-cell:last-of-type,[dir=rtl] td.mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}\\n\"]\n            }]\n    }], null, null); })();\nif (false) {\n    /**\n     * Overrides the sticky CSS class set by the `CdkTable`.\n     * @type {?}\n     * @protected\n     */\n    MatTable.prototype.stickyCssClass;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/cell.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass MatCellDef extends CdkCellDef {\n}\nMatCellDef.ɵfac = function MatCellDef_Factory(t) { return ɵMatCellDef_BaseFactory(t || MatCellDef); };\nMatCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCellDef, selectors: [[\"\", \"matCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkCellDef, useExisting: MatCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatCellDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matCellDef]',\n                providers: [{ provide: CdkCellDef, useExisting: MatCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass MatHeaderCellDef extends CdkHeaderCellDef {\n}\nMatHeaderCellDef.ɵfac = function MatHeaderCellDef_Factory(t) { return ɵMatHeaderCellDef_BaseFactory(t || MatHeaderCellDef); };\nMatHeaderCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHeaderCellDef, selectors: [[\"\", \"matHeaderCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatHeaderCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderCellDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matHeaderCellDef]',\n                providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Footer cell definition for the mat-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass MatFooterCellDef extends CdkFooterCellDef {\n}\nMatFooterCellDef.ɵfac = function MatFooterCellDef_Factory(t) { return ɵMatFooterCellDef_BaseFactory(t || MatFooterCellDef); };\nMatFooterCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFooterCellDef, selectors: [[\"\", \"matFooterCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatFooterCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterCellDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matFooterCellDef]',\n                providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n */\nclass MatColumnDef extends CdkColumnDef {\n}\nMatColumnDef.ɵfac = function MatColumnDef_Factory(t) { return ɵMatColumnDef_BaseFactory(t || MatColumnDef); };\nMatColumnDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatColumnDef, selectors: [[\"\", \"matColumnDef\", \"\"]], inputs: { sticky: \"sticky\", name: [\"matColumnDef\", \"name\"] }, features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CdkColumnDef, useExisting: MatColumnDef },\n            { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatColumnDef.propDecorators = {\n    name: [{ type: Input, args: ['matColumnDef',] }]\n};\nconst ɵMatColumnDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatColumnDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatColumnDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matColumnDef]',\n                inputs: ['sticky'],\n                providers: [\n                    { provide: CdkColumnDef, useExisting: MatColumnDef },\n                    { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef }\n                ]\n            }]\n    }], null, { name: [{\n            type: Input,\n            args: ['matColumnDef']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatColumnDef.ngAcceptInputType_sticky;\n    /**\n     * Unique name for this column.\n     * @type {?}\n     */\n    MatColumnDef.prototype.name;\n}\n/**\n * Header cell template container that adds the right classes and role.\n */\nclass MatHeaderCell extends CdkHeaderCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatHeaderCell.ɵfac = function MatHeaderCell_Factory(t) { return new (t || MatHeaderCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatHeaderCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHeaderCell, selectors: [[\"mat-header-cell\"], [\"th\", \"mat-header-cell\", \"\"]], hostAttrs: [\"role\", \"columnheader\", 1, \"mat-header-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatHeaderCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-header-cell, th[mat-header-cell]',\n                host: {\n                    'class': 'mat-header-cell',\n                    'role': 'columnheader'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Footer cell template container that adds the right classes and role.\n */\nclass MatFooterCell extends CdkFooterCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatFooterCell.ɵfac = function MatFooterCell_Factory(t) { return new (t || MatFooterCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatFooterCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFooterCell, selectors: [[\"mat-footer-cell\"], [\"td\", \"mat-footer-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"mat-footer-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatFooterCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-footer-cell, td[mat-footer-cell]',\n                host: {\n                    'class': 'mat-footer-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Cell template container that adds the right classes and role.\n */\nclass MatCell extends CdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatCell.ɵfac = function MatCell_Factory(t) { return new (t || MatCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCell, selectors: [[\"mat-cell\"], [\"td\", \"mat-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"mat-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-cell, td[mat-cell]',\n                host: {\n                    'class': 'mat-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/row.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Header row definition for the mat-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass MatHeaderRowDef extends CdkHeaderRowDef {\n}\nMatHeaderRowDef.ɵfac = function MatHeaderRowDef_Factory(t) { return ɵMatHeaderRowDef_BaseFactory(t || MatHeaderRowDef); };\nMatHeaderRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHeaderRowDef, selectors: [[\"\", \"matHeaderRowDef\", \"\"]], inputs: { columns: [\"matHeaderRowDef\", \"columns\"], sticky: [\"matHeaderRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatHeaderRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderRowDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matHeaderRowDef]',\n                providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }],\n                inputs: ['columns: matHeaderRowDef', 'sticky: matHeaderRowDefSticky']\n            }]\n    }], null, null); })();\nif (false) {\n    /** @type {?} */\n    MatHeaderRowDef.ngAcceptInputType_sticky;\n}\n/**\n * Footer row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass MatFooterRowDef extends CdkFooterRowDef {\n}\nMatFooterRowDef.ɵfac = function MatFooterRowDef_Factory(t) { return ɵMatFooterRowDef_BaseFactory(t || MatFooterRowDef); };\nMatFooterRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFooterRowDef, selectors: [[\"\", \"matFooterRowDef\", \"\"]], inputs: { columns: [\"matFooterRowDef\", \"columns\"], sticky: [\"matFooterRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatFooterRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterRowDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matFooterRowDef]',\n                providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }],\n                inputs: ['columns: matFooterRowDef', 'sticky: matFooterRowDefSticky']\n            }]\n    }], null, null); })();\nif (false) {\n    /** @type {?} */\n    MatFooterRowDef.ngAcceptInputType_sticky;\n}\n/**\n * Data row definition for the mat-table.\n * Captures the data row's template and other properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n * @template T\n */\nclass MatRowDef extends CdkRowDef {\n}\nMatRowDef.ɵfac = function MatRowDef_Factory(t) { return ɵMatRowDef_BaseFactory(t || MatRowDef); };\nMatRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatRowDef, selectors: [[\"\", \"matRowDef\", \"\"]], inputs: { columns: [\"matRowDefColumns\", \"columns\"], when: [\"matRowDefWhen\", \"when\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkRowDef, useExisting: MatRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRowDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matRowDef]',\n                providers: [{ provide: CdkRowDef, useExisting: MatRowDef }],\n                inputs: ['columns: matRowDefColumns', 'when: matRowDefWhen']\n            }]\n    }], null, null); })();\n/**\n * Header template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatHeaderRow extends CdkHeaderRow {\n}\nMatHeaderRow.ɵfac = function MatHeaderRow_Factory(t) { return ɵMatHeaderRow_BaseFactory(t || MatHeaderRow); };\nMatHeaderRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatHeaderRow, selectors: [[\"mat-header-row\"], [\"tr\", \"mat-header-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-header-row\"], exportAs: [\"matHeaderRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderRow, useExisting: MatHeaderRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatHeaderRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\nconst ɵMatHeaderRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderRow);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-header-row, tr[mat-header-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-header-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matHeaderRow',\n                providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }]\n            }]\n    }], null, null); })();\n/**\n * Footer template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatFooterRow extends CdkFooterRow {\n}\nMatFooterRow.ɵfac = function MatFooterRow_Factory(t) { return ɵMatFooterRow_BaseFactory(t || MatFooterRow); };\nMatFooterRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatFooterRow, selectors: [[\"mat-footer-row\"], [\"tr\", \"mat-footer-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-footer-row\"], exportAs: [\"matFooterRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterRow, useExisting: MatFooterRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatFooterRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\nconst ɵMatFooterRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterRow);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-footer-row, tr[mat-footer-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-footer-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matFooterRow',\n                providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }]\n            }]\n    }], null, null); })();\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatRow extends CdkRow {\n}\nMatRow.ɵfac = function MatRow_Factory(t) { return ɵMatRow_BaseFactory(t || MatRow); };\nMatRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatRow, selectors: [[\"mat-row\"], [\"tr\", \"mat-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-row\"], exportAs: [\"matRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkRow, useExisting: MatRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\nconst ɵMatRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRow);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-row, tr[mat-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matRow',\n                providers: [{ provide: CdkRow, useExisting: MatRow }]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/text-column.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n * @template T\n */\nclass MatTextColumn extends CdkTextColumn {\n}\nMatTextColumn.ɵfac = function MatTextColumn_Factory(t) { return ɵMatTextColumn_BaseFactory(t || MatTextColumn); };\nMatTextColumn.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTextColumn, selectors: [[\"mat-text-column\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 0, consts: [[\"matColumnDef\", \"\"], [\"mat-header-cell\", \"\", 3, \"text-align\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 3, \"text-align\", 4, \"matCellDef\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"]], template: function MatTextColumn_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0, 0);\n        ɵngcc0.ɵɵtemplate(1, MatTextColumn_th_1_Template, 2, 3, \"th\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatTextColumn_td_2_Template, 2, 3, \"td\", 2);\n        ɵngcc0.ɵɵelementContainerEnd();\n    } }, directives: [MatColumnDef,\n        MatHeaderCellDef,\n        MatCellDef,\n        MatHeaderCell,\n        MatCell], encapsulation: 2 });\nconst ɵMatTextColumn_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTextColumn);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTextColumn, [{\n        type: Component,\n        args: [{\n                selector: 'mat-text-column',\n                template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                encapsulation: ViewEncapsulation.None,\n                // Change detection is intentionally not set to OnPush. This component's template will be provided\n                // to the table to be inserted into its view. This is problematic when change detection runs since\n                // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                // mean's the template in the table's view will not have the updated value (and in fact will cause\n                // an ExpressionChangedAfterItHasBeenCheckedError).\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/table-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst EXPORTED_DECLARATIONS = [\n    // Table\n    MatTable,\n    // Template defs\n    MatHeaderCellDef,\n    MatHeaderRowDef,\n    MatColumnDef,\n    MatCellDef,\n    MatRowDef,\n    MatFooterCellDef,\n    MatFooterRowDef,\n    // Cell directives\n    MatHeaderCell,\n    MatCell,\n    MatFooterCell,\n    // Row directives\n    MatHeaderRow,\n    MatRow,\n    MatFooterRow,\n    MatTextColumn,\n];\nclass MatTableModule {\n}\nMatTableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTableModule });\nMatTableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTableModule_Factory(t) { return new (t || MatTableModule)(); }, imports: [[\n            CdkTableModule,\n            MatCommonModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTableModule, { declarations: function () { return [MatTable,\n        MatHeaderCellDef,\n        MatHeaderRowDef,\n        MatColumnDef,\n        MatCellDef,\n        MatRowDef,\n        MatFooterCellDef,\n        MatFooterRowDef,\n        MatHeaderCell,\n        MatCell,\n        MatFooterCell,\n        MatHeaderRow,\n        MatRow,\n        MatFooterRow,\n        MatTextColumn]; }, imports: function () { return [CdkTableModule,\n        MatCommonModule]; }, exports: function () { return [MatCommonModule,\n        MatTable,\n        MatHeaderCellDef,\n        MatHeaderRowDef,\n        MatColumnDef,\n        MatCellDef,\n        MatRowDef,\n        MatFooterCellDef,\n        MatFooterRowDef,\n        MatHeaderCell,\n        MatCell,\n        MatFooterCell,\n        MatHeaderRow,\n        MatRow,\n        MatFooterRow,\n        MatTextColumn]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTableModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CdkTableModule,\n                    MatCommonModule,\n                ],\n                exports: [MatCommonModule, EXPORTED_DECLARATIONS],\n                declarations: EXPORTED_DECLARATIONS\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/table-data-source.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n * @type {?}\n */\nconst MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterTermAccessor,\n * which defines how row data is converted to a string for filter matching.\n *\n * **Note:** This class is meant to be a simple data source to help you get started. As such\n * it isn't equipped to handle some more advanced cases like robust i18n support or server-side\n * interactions. If your app needs to support more advanced use cases, consider implementing your\n * own `DataSource`.\n * @template T\n */\nclass MatTableDataSource extends DataSource {\n    /**\n     * @param {?=} initialData\n     */\n    constructor(initialData = []) {\n        super();\n        /**\n         * Stream emitting render data to the table (depends on ordered data changes).\n         */\n        this._renderData = new BehaviorSubject([]);\n        /**\n         * Stream that emits when a new filter string is set on the data source.\n         */\n        this._filter = new BehaviorSubject('');\n        /**\n         * Used to react to internal changes of the paginator that are made by the data source itself.\n         */\n        this._internalPageChanges = new Subject();\n        /**\n         * Subscription to the changes that should trigger an update to the table's rendered rows, such\n         * as filtering, sorting, pagination, or base data changes.\n         */\n        this._renderChangesSubscription = Subscription.EMPTY;\n        /**\n         * Data accessor function that is used for accessing data properties for sorting through\n         * the default sortData function.\n         * This default function assumes that the sort header IDs (which defaults to the column name)\n         * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n         * May be set to a custom function for different behavior.\n         * @param data Data object that is being accessed.\n         * @param sortHeaderId The name of the column that represents the data.\n         */\n        this.sortingDataAccessor = (/**\n         * @param {?} data\n         * @param {?} sortHeaderId\n         * @return {?}\n         */\n        (data, sortHeaderId) => {\n            /** @type {?} */\n            const value = ((/** @type {?} */ (data)))[sortHeaderId];\n            if (_isNumberValue(value)) {\n                /** @type {?} */\n                const numberValue = Number(value);\n                // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\n                // leave them as strings. For more info: https://goo.gl/y5vbSg\n                return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n            }\n            return value;\n        });\n        /**\n         * Gets a sorted copy of the data array based on the state of the MatSort. Called\n         * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n         * By default, the function retrieves the active sort and its direction and compares data\n         * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n         * of data ordering.\n         * @param data The array of data that should be sorted.\n         * @param sort The connected MatSort that holds the current sort state.\n         */\n        this.sortData = (/**\n         * @param {?} data\n         * @param {?} sort\n         * @return {?}\n         */\n        (data, sort) => {\n            /** @type {?} */\n            const active = sort.active;\n            /** @type {?} */\n            const direction = sort.direction;\n            if (!active || direction == '') {\n                return data;\n            }\n            return data.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            (a, b) => {\n                /** @type {?} */\n                let valueA = this.sortingDataAccessor(a, active);\n                /** @type {?} */\n                let valueB = this.sortingDataAccessor(b, active);\n                // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if\n                // one value exists while the other doesn't. In this case, existing value should come last.\n                // This avoids inconsistent results when comparing values to undefined/null.\n                // If neither value exists, return 0 (equal).\n                /** @type {?} */\n                let comparatorResult = 0;\n                if (valueA != null && valueB != null) {\n                    // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n                    if (valueA > valueB) {\n                        comparatorResult = 1;\n                    }\n                    else if (valueA < valueB) {\n                        comparatorResult = -1;\n                    }\n                }\n                else if (valueA != null) {\n                    comparatorResult = 1;\n                }\n                else if (valueB != null) {\n                    comparatorResult = -1;\n                }\n                return comparatorResult * (direction == 'asc' ? 1 : -1);\n            }));\n        });\n        /**\n         * Checks if a data object matches the data source's filter string. By default, each data object\n         * is converted to a string of its properties and returns true if the filter has\n         * at least one occurrence in that string. By default, the filter string has its whitespace\n         * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n         * filter matching.\n         * @param data Data object used to check against the filter.\n         * @param filter Filter string that has been set on the data source.\n         * @return Whether the filter matches against the data\n         */\n        this.filterPredicate = (/**\n         * @param {?} data\n         * @param {?} filter\n         * @return {?}\n         */\n        (data, filter) => {\n            // Transform the data into a lowercase string of all property values.\n            /** @type {?} */\n            const dataStr = Object.keys(data).reduce((/**\n             * @param {?} currentTerm\n             * @param {?} key\n             * @return {?}\n             */\n            (currentTerm, key) => {\n                // Use an obscure Unicode character to delimit the words in the concatenated string.\n                // This avoids matches where the values of two columns combined will match the user's query\n                // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something\n                // that has a very low chance of being typed in by somebody in a text field. This one in\n                // particular is \"White up-pointing triangle with dot\" from\n                // https://en.wikipedia.org/wiki/List_of_Unicode_characters\n                return currentTerm + ((/** @type {?} */ (data)))[key] + '◬';\n            }), '').toLowerCase();\n            // Transform the filter by converting it to lowercase and removing whitespace.\n            /** @type {?} */\n            const transformedFilter = filter.trim().toLowerCase();\n            return dataStr.indexOf(transformedFilter) != -1;\n        });\n        this._data = new BehaviorSubject(initialData);\n        this._updateChangeSubscription();\n    }\n    /**\n     * Array of data that should be rendered by the table, where each object represents one row.\n     * @return {?}\n     */\n    get data() { return this._data.value; }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    set data(data) { this._data.next(data); }\n    /**\n     * Filter term that should be used to filter out objects from the data array. To override how\n     * data objects match to this filter string, provide a custom function for filterPredicate.\n     * @return {?}\n     */\n    get filter() { return this._filter.value; }\n    /**\n     * @param {?} filter\n     * @return {?}\n     */\n    set filter(filter) { this._filter.next(filter); }\n    /**\n     * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n     * emitted by the MatSort will trigger an update to the table's rendered data.\n     * @return {?}\n     */\n    get sort() { return this._sort; }\n    /**\n     * @param {?} sort\n     * @return {?}\n     */\n    set sort(sort) {\n        this._sort = sort;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Instance of the MatPaginator component used by the table to control what page of the data is\n     * displayed. Page changes emitted by the MatPaginator will trigger an update to the\n     * table's rendered data.\n     *\n     * Note that the data source uses the paginator's properties to calculate which page of data\n     * should be displayed. If the paginator receives its properties as template inputs,\n     * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n     * initialized before assigning it to this data source.\n     * @return {?}\n     */\n    get paginator() { return this._paginator; }\n    /**\n     * @param {?} paginator\n     * @return {?}\n     */\n    set paginator(paginator) {\n        this._paginator = paginator;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n     * changes occur, process the current state of the filter, sort, and pagination along with\n     * the provided base data and send it to the table for rendering.\n     * @return {?}\n     */\n    _updateChangeSubscription() {\n        // Sorting and/or pagination should be watched if MatSort and/or MatPaginator are provided.\n        // The events should emit whenever the component emits a change or initializes, or if no\n        // component is provided, a stream with just a null event should be provided.\n        // The `sortChange` and `pageChange` acts as a signal to the combineLatests below so that the\n        // pipeline can progress to the next step. Note that the value from these streams are not used,\n        // they purely act as a signal to progress in the pipeline.\n        /** @type {?} */\n        const sortChange = this._sort ?\n            (/** @type {?} */ (merge(this._sort.sortChange, this._sort.initialized))) :\n            of(null);\n        /** @type {?} */\n        const pageChange = this._paginator ?\n            (/** @type {?} */ (merge(this._paginator.page, this._internalPageChanges, this._paginator.initialized))) :\n            of(null);\n        /** @type {?} */\n        const dataStream = this._data;\n        // Watch for base data or filter changes to provide a filtered set of data.\n        /** @type {?} */\n        const filteredData = combineLatest([dataStream, this._filter])\n            .pipe(map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([data]) => this._filterData(data))));\n        // Watch for filtered data or sort changes to provide an ordered set of data.\n        /** @type {?} */\n        const orderedData = combineLatest([filteredData, sortChange])\n            .pipe(map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([data]) => this._orderData(data))));\n        // Watch for ordered data or page changes to provide a paged set of data.\n        /** @type {?} */\n        const paginatedData = combineLatest([orderedData, pageChange])\n            .pipe(map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([data]) => this._pageData(data))));\n        // Watched for paged data changes and send the result to the table to render.\n        this._renderChangesSubscription.unsubscribe();\n        this._renderChangesSubscription = paginatedData.subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => this._renderData.next(data)));\n    }\n    /**\n     * Returns a filtered data array where each filter object contains the filter string within\n     * the result of the filterTermAccessor function. If no filter is set, returns the data array\n     * as provided.\n     * @param {?} data\n     * @return {?}\n     */\n    _filterData(data) {\n        // If there is a filter string, filter out data that does not contain it.\n        // Each data object is converted to a string using the function defined by filterTermAccessor.\n        // May be overridden for customization.\n        this.filteredData =\n            !this.filter ? data : data.filter((/**\n             * @param {?} obj\n             * @return {?}\n             */\n            obj => this.filterPredicate(obj, this.filter)));\n        if (this.paginator) {\n            this._updatePaginator(this.filteredData.length);\n        }\n        return this.filteredData;\n    }\n    /**\n     * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n     * data array as provided. Uses the default data accessor for data lookup, unless a\n     * sortDataAccessor function is defined.\n     * @param {?} data\n     * @return {?}\n     */\n    _orderData(data) {\n        // If there is no active sort or direction, return the data without trying to sort.\n        if (!this.sort) {\n            return data;\n        }\n        return this.sortData(data.slice(), this.sort);\n    }\n    /**\n     * Returns a paged slice of the provided data array according to the provided MatPaginator's page\n     * index and length. If there is no paginator provided, returns the data array as provided.\n     * @param {?} data\n     * @return {?}\n     */\n    _pageData(data) {\n        if (!this.paginator) {\n            return data;\n        }\n        /** @type {?} */\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        return data.slice(startIndex, startIndex + this.paginator.pageSize);\n    }\n    /**\n     * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n     * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n     * guard against making property changes within a round of change detection.\n     * @param {?} filteredDataLength\n     * @return {?}\n     */\n    _updatePaginator(filteredDataLength) {\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const paginator = this.paginator;\n            if (!paginator) {\n                return;\n            }\n            paginator.length = filteredDataLength;\n            // If the page index is set beyond the page, reduce it to the last page.\n            if (paginator.pageIndex > 0) {\n                /** @type {?} */\n                const lastPageIndex = Math.ceil(paginator.length / paginator.pageSize) - 1 || 0;\n                /** @type {?} */\n                const newPageIndex = Math.min(paginator.pageIndex, lastPageIndex);\n                if (newPageIndex !== paginator.pageIndex) {\n                    paginator.pageIndex = newPageIndex;\n                    // Since the paginator only emits after user-generated changes,\n                    // we need our own stream so we know to should re-render the data.\n                    this._internalPageChanges.next();\n                }\n            }\n        }));\n    }\n    /**\n     * Used by the MatTable. Called when it connects to the data source.\n     * \\@docs-private\n     * @return {?}\n     */\n    connect() { return this._renderData; }\n    /**\n     * Used by the MatTable. Called when it is destroyed. No-op.\n     * \\@docs-private\n     * @return {?}\n     */\n    disconnect() { }\n}\nif (false) {\n    /**\n     * Stream that emits when a new data array is set on the data source.\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._data;\n    /**\n     * Stream emitting render data to the table (depends on ordered data changes).\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._renderData;\n    /**\n     * Stream that emits when a new filter string is set on the data source.\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._filter;\n    /**\n     * Used to react to internal changes of the paginator that are made by the data source itself.\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._internalPageChanges;\n    /**\n     * Subscription to the changes that should trigger an update to the table's rendered rows, such\n     * as filtering, sorting, pagination, or base data changes.\n     * @type {?}\n     */\n    MatTableDataSource.prototype._renderChangesSubscription;\n    /**\n     * The filtered set of data that has been matched by the filter string, or all the data if there\n     * is no filter. Useful for knowing the set of data the table represents.\n     * For example, a 'selectAll()' function would likely want to select the set of filtered data\n     * shown to the user rather than all the data.\n     * @type {?}\n     */\n    MatTableDataSource.prototype.filteredData;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._sort;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._paginator;\n    /**\n     * Data accessor function that is used for accessing data properties for sorting through\n     * the default sortData function.\n     * This default function assumes that the sort header IDs (which defaults to the column name)\n     * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n     * May be set to a custom function for different behavior.\n     * \\@param data Data object that is being accessed.\n     * \\@param sortHeaderId The name of the column that represents the data.\n     * @type {?}\n     */\n    MatTableDataSource.prototype.sortingDataAccessor;\n    /**\n     * Gets a sorted copy of the data array based on the state of the MatSort. Called\n     * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n     * By default, the function retrieves the active sort and its direction and compares data\n     * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n     * of data ordering.\n     * \\@param data The array of data that should be sorted.\n     * \\@param sort The connected MatSort that holds the current sort state.\n     * @type {?}\n     */\n    MatTableDataSource.prototype.sortData;\n    /**\n     * Checks if a data object matches the data source's filter string. By default, each data object\n     * is converted to a string of its properties and returns true if the filter has\n     * at least one occurrence in that string. By default, the filter string has its whitespace\n     * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n     * filter matching.\n     * \\@param data Data object used to check against the filter.\n     * \\@param filter Filter string that has been set on the data source.\n     * \\@return Whether the filter matches against the data\n     * @type {?}\n     */\n    MatTableDataSource.prototype.filterPredicate;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCell, MatCellDef, MatColumnDef, MatFooterCell, MatFooterCellDef, MatFooterRow, MatFooterRowDef, MatHeaderCell, MatHeaderCellDef, MatHeaderRow, MatHeaderRowDef, MatRow, MatRowDef, MatTable, MatTableDataSource, MatTableModule, MatTextColumn };\n\n//# sourceMappingURL=table.js.map","import { FocusKeyManager, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalHostDirective, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, ElementRef, NgZone, Inject, Optional, TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ViewContainerRef, ContentChild, ViewChild, Input, ComponentFactoryResolver, forwardRef, EventEmitter, ChangeDetectorRef, Output, QueryList, ContentChildren, Attribute, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, Subscription, merge, fromEvent, of, timer } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport { hasModifierKey, SPACE, ENTER, END, HOME } from '@angular/cdk/keycodes';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/ink-bar.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface for a a MatInkBar positioner method, defining the positioning and width of the ink\n * bar in a set of tabs.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/a11y';\nimport * as ɵngcc5 from '@angular/cdk/portal';\nimport * as ɵngcc6 from '@angular/cdk/scrolling';\nimport * as ɵngcc7 from '@angular/cdk/platform';\nimport * as ɵngcc8 from '@angular/cdk/observers';\n\nfunction MatTab_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nconst _c0 = [\"*\"];\nfunction MatTabBody_ng_template_2_Template(rf, ctx) { }\nconst _c1 = function (a0) { return { animationDuration: a0 }; };\nconst _c2 = function (a0, a1) { return { value: a0, params: a1 }; };\nconst _c3 = [\"tabBodyWrapper\"];\nconst _c4 = [\"tabHeader\"];\nfunction MatTabGroup_div_2_ng_template_2_ng_template_0_Template(rf, ctx) { }\nfunction MatTabGroup_div_2_ng_template_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, MatTabGroup_div_2_ng_template_2_ng_template_0_Template, 0, 0, \"ng-template\", 9);\n} if (rf & 2) {\n    const tab_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", tab_r4.templateLabel);\n} }\nfunction MatTabGroup_div_2_ng_template_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n} if (rf & 2) {\n    const tab_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵtextInterpolate(tab_r4.textLabel);\n} }\nfunction MatTabGroup_div_2_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function MatTabGroup_div_2_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r12); const tab_r4 = ctx.$implicit; const i_r5 = ctx.index; const ctx_r11 = ɵngcc0.ɵɵnextContext(); const _r0 = ɵngcc0.ɵɵreference(1); return ctx_r11._handleClick(tab_r4, _r0, i_r5); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_ng_template_2_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵtemplate(3, MatTabGroup_div_2_ng_template_3_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-label-active\", ctx_r1.selectedIndex == i_r5);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r1._getTabLabelId(i_r5))(\"disabled\", tab_r4.disabled)(\"matRippleDisabled\", tab_r4.disabled || ctx_r1.disableRipple);\n    ɵngcc0.ɵɵattribute(\"tabIndex\", ctx_r1._getTabIndex(tab_r4, i_r5))(\"aria-posinset\", i_r5 + 1)(\"aria-setsize\", ctx_r1._tabs.length)(\"aria-controls\", ctx_r1._getTabContentId(i_r5))(\"aria-selected\", ctx_r1.selectedIndex == i_r5)(\"aria-label\", tab_r4.ariaLabel || null)(\"aria-labelledby\", !tab_r4.ariaLabel && tab_r4.ariaLabelledby ? tab_r4.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", tab_r4.templateLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !tab_r4.templateLabel);\n} }\nfunction MatTabGroup_mat_tab_body_5_Template(rf, ctx) { if (rf & 1) {\n    const _r16 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-tab-body\", 10);\n    ɵngcc0.ɵɵlistener(\"_onCentered\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentered_0_listener() { ɵngcc0.ɵɵrestoreView(_r16); const ctx_r15 = ɵngcc0.ɵɵnextContext(); return ctx_r15._removeTabBodyWrapperHeight(); })(\"_onCentering\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentering_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r16); const ctx_r17 = ɵngcc0.ɵɵnextContext(); return ctx_r17._setTabBodyWrapperHeight($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r13 = ctx.$implicit;\n    const i_r14 = ctx.index;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-body-active\", ctx_r3.selectedIndex == i_r14);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r3._getTabContentId(i_r14))(\"content\", tab_r13.content)(\"position\", tab_r13.position)(\"origin\", tab_r13.origin)(\"animationDuration\", ctx_r3.animationDuration);\n    ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx_r3._getTabLabelId(i_r14));\n} }\nconst _c5 = [\"tabListContainer\"];\nconst _c6 = [\"tabList\"];\nconst _c7 = [\"nextPaginator\"];\nconst _c8 = [\"previousPaginator\"];\nconst _c9 = [\"mat-tab-nav-bar\", \"\"];\nfunction _MatInkBarPositioner() { }\n/**\n * Injection token for the MatInkBar's Positioner.\n * @type {?}\n */\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n/**\n * The default positioner function for the MatInkBar.\n * \\@docs-private\n * @return {?}\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n    /** @type {?} */\n    const method = (/**\n     * @param {?} element\n     * @return {?}\n     */\n    (element) => ({\n        left: element ? (element.offsetLeft || 0) + 'px' : '0',\n        width: element ? (element.offsetWidth || 0) + 'px' : '0',\n    }));\n    return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * \\@docs-private\n */\nclass MatInkBar {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?} _inkBarPositioner\n     * @param {?=} _animationMode\n     */\n    constructor(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._inkBarPositioner = _inkBarPositioner;\n        this._animationMode = _animationMode;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param {?} element\n     * @return {?}\n     */\n    alignToElement(element) {\n        this.show();\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                requestAnimationFrame((/**\n                 * @return {?}\n                 */\n                () => this._setStyles(element)));\n            }));\n        }\n        else {\n            this._setStyles(element);\n        }\n    }\n    /**\n     * Shows the ink bar.\n     * @return {?}\n     */\n    show() {\n        this._elementRef.nativeElement.style.visibility = 'visible';\n    }\n    /**\n     * Hides the ink bar.\n     * @return {?}\n     */\n    hide() {\n        this._elementRef.nativeElement.style.visibility = 'hidden';\n    }\n    /**\n     * Sets the proper styles to the ink bar element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _setStyles(element) {\n        /** @type {?} */\n        const positions = this._inkBarPositioner(element);\n        /** @type {?} */\n        const inkBar = this._elementRef.nativeElement;\n        inkBar.style.left = positions.left;\n        inkBar.style.width = positions.width;\n    }\n}\nMatInkBar.ɵfac = function MatInkBar_Factory(t) { return new (t || MatInkBar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(_MAT_INK_BAR_POSITIONER), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatInkBar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatInkBar, selectors: [[\"mat-ink-bar\"]], hostAttrs: [1, \"mat-ink-bar\"], hostVars: 2, hostBindings: function MatInkBar_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } } });\n/** @nocollapse */\nMatInkBar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [_MAT_INK_BAR_POSITIONER,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInkBar, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-ink-bar',\n                host: {\n                    'class': 'mat-ink-bar',\n                    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [_MAT_INK_BAR_POSITIONER]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInkBar.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInkBar.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInkBar.prototype._inkBarPositioner;\n    /** @type {?} */\n    MatInkBar.prototype._animationMode;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-content.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Decorates the `ng-template` tags and reads out the template from it.\n */\nclass MatTabContent {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n        this.template = template;\n    }\n}\nMatTabContent.ɵfac = function MatTabContent_Factory(t) { return new (t || MatTabContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatTabContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabContent, selectors: [[\"\", \"matTabContent\", \"\"]] });\n/** @nocollapse */\nMatTabContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabContent, [{\n        type: Directive,\n        args: [{ selector: '[matTabContent]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatTabContent.prototype.template;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-label.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to flag tab labels for use with the portal directive\n */\nclass MatTabLabel extends CdkPortal {\n}\nMatTabLabel.ɵfac = function MatTabLabel_Factory(t) { return ɵMatTabLabel_BaseFactory(t || MatTabLabel); };\nMatTabLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLabel, selectors: [[\"\", \"mat-tab-label\", \"\"], [\"\", \"matTabLabel\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatTabLabel_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTabLabel);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-label], [matTabLabel]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatTab.\n/**\n * \\@docs-private\n */\nclass MatTabBase {\n}\n/** @type {?} */\nconst _MatTabMixinBase = mixinDisabled(MatTabBase);\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_TAB_GROUP = new InjectionToken('MAT_TAB_GROUP');\nclass MatTab extends _MatTabMixinBase {\n    /**\n     * @param {?} _viewContainerRef\n     * @param {?=} _closestTabGroup\n     */\n    constructor(_viewContainerRef, _closestTabGroup) {\n        super();\n        this._viewContainerRef = _viewContainerRef;\n        this._closestTabGroup = _closestTabGroup;\n        /**\n         * Plain text label for the tab, used when there is no template label.\n         */\n        this.textLabel = '';\n        /**\n         * Portal that will be the hosted content of the tab\n         */\n        this._contentPortal = null;\n        /**\n         * Emits whenever the internal state of the tab changes.\n         */\n        this._stateChanges = new Subject();\n        /**\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\n         * represents the right.\n         */\n        this.position = null;\n        /**\n         * The initial relatively index origin of the tab if it was created and selected after there\n         * was already a selected tab. Provides context of what position the tab should originate from.\n         */\n        this.origin = null;\n        /**\n         * Whether the tab is currently active.\n         */\n        this.isActive = false;\n    }\n    /**\n     * Content for the tab label given by `<ng-template mat-tab-label>`.\n     * @return {?}\n     */\n    get templateLabel() { return this._templateLabel; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set templateLabel(value) {\n        // Only update the templateLabel via query if there is actually\n        // a MatTabLabel found. This works around an issue where a user may have\n        // manually set `templateLabel` during creation mode, which would then get clobbered\n        // by `undefined` when this query resolves.\n        if (value) {\n            this._templateLabel = value;\n        }\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get content() {\n        return this._contentPortal;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n            this._stateChanges.next();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    }\n}\nMatTab.ɵfac = function MatTab_Factory(t) { return new (t || MatTab)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_TAB_GROUP, 8)); };\nMatTab.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTab, selectors: [[\"mat-tab\"]], contentQueries: function MatTab_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLabel, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatTabContent, true, TemplateRef);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateLabel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._explicitContent = _t.first);\n    } }, viewQuery: function MatTab_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._implicitContent = _t.first);\n    } }, inputs: { disabled: \"disabled\", textLabel: [\"label\", \"textLabel\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"] }, exportAs: [\"matTab\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatTab_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatTab_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2 });\n/** @nocollapse */\nMatTab.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_TAB_GROUP,] }] }\n];\nMatTab.propDecorators = {\n    templateLabel: [{ type: ContentChild, args: [MatTabLabel,] }],\n    _explicitContent: [{ type: ContentChild, args: [MatTabContent, { read: TemplateRef, static: true },] }],\n    _implicitContent: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    textLabel: [{ type: Input, args: ['label',] }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTab, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab',\n                template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\",\n                inputs: ['disabled'],\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matTab'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_TAB_GROUP]\n            }] }]; }, { textLabel: [{\n            type: Input,\n            args: ['label']\n        }], templateLabel: [{\n            type: ContentChild,\n            args: [MatTabLabel]\n        }], _explicitContent: [{\n            type: ContentChild,\n            args: [MatTabContent, { read: TemplateRef, static: true }]\n        }], _implicitContent: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTab.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTab.prototype._templateLabel;\n    /**\n     * Template provided in the tab content that will be used if present, used to enable lazy-loading\n     * @type {?}\n     */\n    MatTab.prototype._explicitContent;\n    /**\n     * Template inside the MatTab view that contains an `<ng-content>`.\n     * @type {?}\n     */\n    MatTab.prototype._implicitContent;\n    /**\n     * Plain text label for the tab, used when there is no template label.\n     * @type {?}\n     */\n    MatTab.prototype.textLabel;\n    /**\n     * Aria label for the tab.\n     * @type {?}\n     */\n    MatTab.prototype.ariaLabel;\n    /**\n     * Reference to the element that the tab is labelled by.\n     * Will be cleared if `aria-label` is set at the same time.\n     * @type {?}\n     */\n    MatTab.prototype.ariaLabelledby;\n    /**\n     * Portal that will be the hosted content of the tab\n     * @type {?}\n     * @private\n     */\n    MatTab.prototype._contentPortal;\n    /**\n     * Emits whenever the internal state of the tab changes.\n     * @type {?}\n     */\n    MatTab.prototype._stateChanges;\n    /**\n     * The relatively indexed position where 0 represents the center, negative is left, and positive\n     * represents the right.\n     * @type {?}\n     */\n    MatTab.prototype.position;\n    /**\n     * The initial relatively index origin of the tab if it was created and selected after there\n     * was already a selected tab. Provides context of what position the tab should originate from.\n     * @type {?}\n     */\n    MatTab.prototype.origin;\n    /**\n     * Whether the tab is currently active.\n     * @type {?}\n     */\n    MatTab.prototype.isActive;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTab.prototype._viewContainerRef;\n    /**\n     * @deprecated `_closestTabGroup` parameter to become required.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    MatTab.prototype._closestTabGroup;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tabs-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material tabs.\n * \\@docs-private\n * @type {?}\n */\nconst matTabsAnimations = {\n    /**\n     * Animation translates a tab along the X axis.\n     */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state('center, void, left-origin-center, right-origin-center', style({ transform: 'none' })),\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state('left', style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })),\n        state('right', style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })),\n        transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-body.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The portal host directive for the contents of the tab.\n * \\@docs-private\n */\nclass MatTabBodyPortal extends CdkPortalOutlet {\n    /**\n     * @param {?} componentFactoryResolver\n     * @param {?} viewContainerRef\n     * @param {?} _host\n     * @param {?=} _document\n     */\n    constructor(componentFactoryResolver, viewContainerRef, _host, \n    /**\n     * @deprecated `_document` parameter to be made required.\n     * @breaking-change 9.0.0\n     */\n    _document) {\n        super(componentFactoryResolver, viewContainerRef, _document);\n        this._host = _host;\n        /**\n         * Subscription to events for when the tab body begins centering.\n         */\n        this._centeringSub = Subscription.EMPTY;\n        /**\n         * Subscription to events for when the tab body finishes leaving from center position.\n         */\n        this._leavingSub = Subscription.EMPTY;\n    }\n    /**\n     * Set initial visibility or set up subscription for changing visibility.\n     * @return {?}\n     */\n    ngOnInit() {\n        super.ngOnInit();\n        this._centeringSub = this._host._beforeCentering\n            .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n            .subscribe((/**\n         * @param {?} isCentering\n         * @return {?}\n         */\n        (isCentering) => {\n            if (isCentering && !this.hasAttached()) {\n                this.attach(this._host._content);\n            }\n        }));\n        this._leavingSub = this._host._afterLeavingCenter.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.detach();\n        }));\n    }\n    /**\n     * Clean up centering subscription.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._centeringSub.unsubscribe();\n        this._leavingSub.unsubscribe();\n    }\n}\nMatTabBodyPortal.ɵfac = function MatTabBodyPortal_Factory(t) { return new (t || MatTabBodyPortal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatTabBody))), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatTabBodyPortal.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabBodyPortal, selectors: [[\"\", \"matTabBodyHost\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatTabBodyPortal.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef },\n    { type: MatTabBody, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatTabBody)),] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabBodyPortal, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabBodyHost]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ViewContainerRef }, { type: MatTabBody, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatTabBody))]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Subscription to events for when the tab body begins centering.\n     * @type {?}\n     * @private\n     */\n    MatTabBodyPortal.prototype._centeringSub;\n    /**\n     * Subscription to events for when the tab body finishes leaving from center position.\n     * @type {?}\n     * @private\n     */\n    MatTabBodyPortal.prototype._leavingSub;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTabBodyPortal.prototype._host;\n}\n/**\n * Base class with all of the `MatTabBody` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabBodyBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _dir\n     * @param {?} changeDetectorRef\n     */\n    constructor(_elementRef, _dir, changeDetectorRef) {\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        /**\n         * Subscription to the directionality change observable.\n         */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /**\n         * Emits when an animation on the tab is complete.\n         */\n        this._translateTabComplete = new Subject();\n        /**\n         * Event emitted when the tab begins to animate towards the center as the active tab.\n         */\n        this._onCentering = new EventEmitter();\n        /**\n         * Event emitted before the centering of the tab begins.\n         */\n        this._beforeCentering = new EventEmitter();\n        /**\n         * Event emitted before the centering of the tab begins.\n         */\n        this._afterLeavingCenter = new EventEmitter();\n        /**\n         * Event emitted when the tab completes its animation towards the center.\n         */\n        this._onCentered = new EventEmitter(true);\n        // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n        // anyway to prevent the animations module from throwing an error if the body is used on its own.\n        /**\n         * Duration for the tab's animation.\n         */\n        this.animationDuration = '500ms';\n        if (_dir) {\n            this._dirChangeSubscription = _dir.change.subscribe((/**\n             * @param {?} dir\n             * @return {?}\n             */\n            (dir) => {\n                this._computePositionAnimationState(dir);\n                changeDetectorRef.markForCheck();\n            }));\n        }\n        // Ensure that we get unique animation events, because the `.done` callback can get\n        // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n        this._translateTabComplete.pipe(distinctUntilChanged((/**\n         * @param {?} x\n         * @param {?} y\n         * @return {?}\n         */\n        (x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            // If the transition to the center is complete, emit an event.\n            if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n                this._onCentered.emit();\n            }\n            if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n                this._afterLeavingCenter.emit();\n            }\n        }));\n    }\n    /**\n     * The shifted index position of the tab body, where zero represents the active center tab.\n     * @param {?} position\n     * @return {?}\n     */\n    set position(position) {\n        this._positionIndex = position;\n        this._computePositionAnimationState();\n    }\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this._position == 'center' && this.origin != null) {\n            this._position = this._computePositionFromOrigin(this.origin);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._dirChangeSubscription.unsubscribe();\n        this._translateTabComplete.complete();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onTranslateTabStarted(event) {\n        /** @type {?} */\n        const isCentering = this._isCenterPosition(event.toState);\n        this._beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    }\n    /**\n     * The text direction of the containing app.\n     * @return {?}\n     */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Whether the provided position state is considered center, regardless of origin.\n     * @param {?} position\n     * @return {?}\n     */\n    _isCenterPosition(position) {\n        return position == 'center' ||\n            position == 'left-origin-center' ||\n            position == 'right-origin-center';\n    }\n    /**\n     * Computes the position state that will be used for the tab-body animation trigger.\n     * @private\n     * @param {?=} dir\n     * @return {?}\n     */\n    _computePositionAnimationState(dir = this._getLayoutDirection()) {\n        if (this._positionIndex < 0) {\n            this._position = dir == 'ltr' ? 'left' : 'right';\n        }\n        else if (this._positionIndex > 0) {\n            this._position = dir == 'ltr' ? 'right' : 'left';\n        }\n        else {\n            this._position = 'center';\n        }\n    }\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     * @private\n     * @param {?} origin\n     * @return {?}\n     */\n    _computePositionFromOrigin(origin) {\n        /** @type {?} */\n        const dir = this._getLayoutDirection();\n        if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n            return 'left-origin-center';\n        }\n        return 'right-origin-center';\n    }\n}\n_MatTabBodyBase.ɵfac = function _MatTabBodyBase_Factory(t) { return new (t || _MatTabBodyBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\n_MatTabBodyBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabBodyBase, inputs: { animationDuration: \"animationDuration\", position: \"position\", _content: [\"content\", \"_content\"], origin: \"origin\" }, outputs: { _onCentering: \"_onCentering\", _beforeCentering: \"_beforeCentering\", _afterLeavingCenter: \"_afterLeavingCenter\", _onCentered: \"_onCentered\" } });\n/** @nocollapse */\n_MatTabBodyBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\n_MatTabBodyBase.propDecorators = {\n    _onCentering: [{ type: Output }],\n    _beforeCentering: [{ type: Output }],\n    _afterLeavingCenter: [{ type: Output }],\n    _onCentered: [{ type: Output }],\n    _content: [{ type: Input, args: ['content',] }],\n    origin: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    position: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabBodyBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _onCentering: [{\n            type: Output\n        }], _beforeCentering: [{\n            type: Output\n        }], _afterLeavingCenter: [{\n            type: Output\n        }], _onCentered: [{\n            type: Output\n        }], animationDuration: [{\n            type: Input\n        }], position: [{\n            type: Input\n        }], _content: [{\n            type: Input,\n            args: ['content']\n        }], origin: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Current position of the tab-body in the tab-group. Zero means that the tab is visible.\n     * @type {?}\n     * @private\n     */\n    _MatTabBodyBase.prototype._positionIndex;\n    /**\n     * Subscription to the directionality change observable.\n     * @type {?}\n     * @private\n     */\n    _MatTabBodyBase.prototype._dirChangeSubscription;\n    /**\n     * Tab body position state. Used by the animation trigger for the current state.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._position;\n    /**\n     * Emits when an animation on the tab is complete.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._translateTabComplete;\n    /**\n     * Event emitted when the tab begins to animate towards the center as the active tab.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._onCentering;\n    /**\n     * Event emitted before the centering of the tab begins.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._beforeCentering;\n    /**\n     * Event emitted before the centering of the tab begins.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._afterLeavingCenter;\n    /**\n     * Event emitted when the tab completes its animation towards the center.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._onCentered;\n    /**\n     * The portal host inside of this container into which the tab body content will be loaded.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._portalHost;\n    /**\n     * The tab body content to display.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._content;\n    /**\n     * Position that will be used when the tab is immediately becoming visible after creation.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype.origin;\n    /**\n     * Duration for the tab's animation.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype.animationDuration;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabBodyBase.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabBodyBase.prototype._dir;\n}\n/**\n * Wrapper for the contents of a tab.\n * \\@docs-private\n */\nclass MatTabBody extends _MatTabBodyBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} dir\n     * @param {?} changeDetectorRef\n     */\n    constructor(elementRef, dir, changeDetectorRef) {\n        super(elementRef, dir, changeDetectorRef);\n    }\n}\nMatTabBody.ɵfac = function MatTabBody_Factory(t) { return new (t || MatTabBody)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatTabBody.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabBody, selectors: [[\"mat-tab-body\"]], viewQuery: function MatTabBody_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(PortalHostDirective, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalHost = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-body\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 6, consts: [[1, \"mat-tab-body-content\"], [\"content\", \"\"], [\"matTabBodyHost\", \"\"]], template: function MatTabBody_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@translateTab.start\", function MatTabBody_Template_div_animation_translateTab_start_0_listener($event) { return ctx._onTranslateTabStarted($event); })(\"@translateTab.done\", function MatTabBody_Template_div_animation_translateTab_done_0_listener($event) { return ctx._translateTabComplete.next($event); });\n        ɵngcc0.ɵɵtemplate(2, MatTabBody_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"@translateTab\", ɵngcc0.ɵɵpureFunction2(3, _c2, ctx._position, ɵngcc0.ɵɵpureFunction1(1, _c1, ctx.animationDuration)));\n    } }, directives: [MatTabBodyPortal], styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"], encapsulation: 2, data: { animation: [matTabsAnimations.translateTab] } });\n/** @nocollapse */\nMatTabBody.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\nMatTabBody.propDecorators = {\n    _portalHost: [{ type: ViewChild, args: [PortalHostDirective,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabBody, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-body',\n                template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\">\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                animations: [matTabsAnimations.translateTab],\n                host: {\n                    'class': 'mat-tab-body'\n                },\n                styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _portalHost: [{\n            type: ViewChild,\n            args: [PortalHostDirective]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTabBody.prototype._portalHost;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Object that can be used to configure the default options for the tabs module.\n * @record\n */\nfunction MatTabsConfig() { }\nif (false) {\n    /**\n     * Duration for the tab animation. Must be a valid CSS value (e.g. 600ms).\n     * @type {?|undefined}\n     */\n    MatTabsConfig.prototype.animationDuration;\n    /**\n     * Whether pagination should be disabled. This can be used to avoid unnecessary\n     * layout recalculations if it's known that pagination won't be required.\n     * @type {?|undefined}\n     */\n    MatTabsConfig.prototype.disablePagination;\n    /**\n     * Whether the ink bar should fit its width to the size of the tab label content.\n     * This only applies to the MDC-based tabs.\n     * @type {?|undefined}\n     */\n    MatTabsConfig.prototype.fitInkBarToContent;\n}\n/**\n * Injection token that can be used to provide the default options the tabs module.\n * @type {?}\n */\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-group.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate unique ID's for each tab component\n * @type {?}\n */\nlet nextId = 0;\n/**\n * A simple change event emitted on focus or selection changes.\n */\nclass MatTabChangeEvent {\n}\nif (false) {\n    /**\n     * Index of the currently-selected tab.\n     * @type {?}\n     */\n    MatTabChangeEvent.prototype.index;\n    /**\n     * Reference to the currently-selected tab.\n     * @type {?}\n     */\n    MatTabChangeEvent.prototype.tab;\n}\n// Boilerplate for applying mixins to MatTabGroup.\n/**\n * \\@docs-private\n */\nclass MatTabGroupMixinBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatTabGroupMixinBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(MatTabGroupMixinBase), 'primary');\n/**\n * @record\n */\nfunction MatTabGroupBaseHeader() { }\nif (false) {\n    /** @type {?} */\n    MatTabGroupBaseHeader.prototype._alignInkBarToSelectedTab;\n    /** @type {?} */\n    MatTabGroupBaseHeader.prototype.focusIndex;\n}\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabGroupBase extends _MatTabGroupMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?=} defaultConfig\n     * @param {?=} _animationMode\n     */\n    constructor(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /**\n         * All of the tabs that belong to the group.\n         */\n        this._tabs = new QueryList();\n        /**\n         * The tab index that should be selected after the content has been checked.\n         */\n        this._indexToSelect = 0;\n        /**\n         * Snapshot of the height of the tab body wrapper before another tab is activated.\n         */\n        this._tabBodyWrapperHeight = 0;\n        /**\n         * Subscription to tabs being added/removed.\n         */\n        this._tabsSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to changes in the tab labels.\n         */\n        this._tabLabelSubscription = Subscription.EMPTY;\n        this._dynamicHeight = false;\n        this._selectedIndex = null;\n        /**\n         * Position of the tab header.\n         */\n        this.headerPosition = 'above';\n        /**\n         * Output to enable support for two-way binding on `[(selectedIndex)]`\n         */\n        this.selectedIndexChange = new EventEmitter();\n        /**\n         * Event emitted when focus has changed within a tab group.\n         */\n        this.focusChange = new EventEmitter();\n        /**\n         * Event emitted when the body animation has completed\n         */\n        this.animationDone = new EventEmitter();\n        /**\n         * Event emitted when the tab selection has changed.\n         */\n        this.selectedTabChange = new EventEmitter(true);\n        this._groupId = nextId++;\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '500ms';\n        this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ?\n            defaultConfig.disablePagination : false;\n    }\n    /**\n     * Whether the tab group should grow to the size of the active tab.\n     * @return {?}\n     */\n    get dynamicHeight() { return this._dynamicHeight; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set dynamicHeight(value) { this._dynamicHeight = coerceBooleanProperty(value); }\n    /**\n     * The index of the active tab.\n     * @return {?}\n     */\n    get selectedIndex() { return this._selectedIndex; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectedIndex(value) {\n        this._indexToSelect = coerceNumberProperty(value, null);\n    }\n    /**\n     * Duration for the tab animation. Will be normalized to milliseconds if no units are set.\n     * @return {?}\n     */\n    get animationDuration() { return this._animationDuration; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set animationDuration(value) {\n        this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n    }\n    /**\n     * Background color of the tab group.\n     * @return {?}\n     */\n    get backgroundColor() { return this._backgroundColor; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set backgroundColor(value) {\n        /** @type {?} */\n        const nativeElement = this._elementRef.nativeElement;\n        nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            nativeElement.classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        /** @type {?} */\n        const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != indexToSelect) {\n            /** @type {?} */\n            const isFirstRun = this._selectedIndex == null;\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n            }\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                this._tabs.forEach((/**\n                 * @param {?} tab\n                 * @param {?} index\n                 * @return {?}\n                 */\n                (tab, index) => tab.isActive = index === indexToSelect));\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                }\n            }));\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach((/**\n         * @param {?} tab\n         * @param {?} index\n         * @return {?}\n         */\n        (tab, index) => {\n            tab.position = index - indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        }));\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._subscribeToAllTabChanges();\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this._tabs.changes.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const indexToSelect = this._clampTabIndex(this._indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                /** @type {?} */\n                const tabs = this._tabs.toArray();\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this._indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n            this._changeDetectorRef.markForCheck();\n        }));\n    }\n    /**\n     * Listens to changes in all of the tabs.\n     * @private\n     * @return {?}\n     */\n    _subscribeToAllTabChanges() {\n        // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n        // some that are inside of nested tab groups. We filter them out manually by checking that\n        // the closest group to the tab is the current one.\n        this._allTabs.changes\n            .pipe(startWith(this._allTabs))\n            .subscribe((/**\n         * @param {?} tabs\n         * @return {?}\n         */\n        (tabs) => {\n            this._tabs.reset(tabs.filter((/**\n             * @param {?} tab\n             * @return {?}\n             */\n            tab => {\n                // @breaking-change 10.0.0 Remove null check for `_closestTabGroup`\n                // once it becomes a required parameter in MatTab.\n                return !tab._closestTabGroup || tab._closestTabGroup === this;\n            })));\n            this._tabs.notifyOnChanges();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._tabs.destroy();\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    }\n    /**\n     * Re-aligns the ink bar to the selected tab element.\n     * @return {?}\n     */\n    realignInkBar() {\n        if (this._tabHeader) {\n            this._tabHeader._alignInkBarToSelectedTab();\n        }\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    _focusChanged(index) {\n        this.focusChange.emit(this._createChangeEvent(index));\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _createChangeEvent(index) {\n        /** @type {?} */\n        const event = new MatTabChangeEvent;\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    }\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the \\@Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     * @private\n     * @return {?}\n     */\n    _subscribeToTabLabels() {\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = merge(...this._tabs.map((/**\n         * @param {?} tab\n         * @return {?}\n         */\n        tab => tab._stateChanges)))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n    }\n    /**\n     * Clamps the given index to the bounds of 0 and the tabs length.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _clampTabIndex(index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    }\n    /**\n     * Returns a unique id for each tab label element\n     * @param {?} i\n     * @return {?}\n     */\n    _getTabLabelId(i) {\n        return `mat-tab-label-${this._groupId}-${i}`;\n    }\n    /**\n     * Returns a unique id for each tab content element\n     * @param {?} i\n     * @return {?}\n     */\n    _getTabContentId(i) {\n        return `mat-tab-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     * @param {?} tabHeight\n     * @return {?}\n     */\n    _setTabBodyWrapperHeight(tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        /** @type {?} */\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = tabHeight + 'px';\n        }\n    }\n    /**\n     * Removes the height of the tab body wrapper.\n     * @return {?}\n     */\n    _removeTabBodyWrapperHeight() {\n        /** @type {?} */\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        this._tabBodyWrapperHeight = wrapper.clientHeight;\n        wrapper.style.height = '';\n        this.animationDone.emit();\n    }\n    /**\n     * Handle click events, setting new selected index if appropriate.\n     * @param {?} tab\n     * @param {?} tabHeader\n     * @param {?} index\n     * @return {?}\n     */\n    _handleClick(tab, tabHeader, index) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n    /**\n     * Retrieves the tabindex for the tab.\n     * @param {?} tab\n     * @param {?} idx\n     * @return {?}\n     */\n    _getTabIndex(tab, idx) {\n        if (tab.disabled) {\n            return null;\n        }\n        return this.selectedIndex === idx ? 0 : -1;\n    }\n}\n_MatTabGroupBase.ɵfac = function _MatTabGroupBase_Factory(t) { return new (t || _MatTabGroupBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabGroupBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabGroupBase, inputs: { headerPosition: \"headerPosition\", animationDuration: \"animationDuration\", disablePagination: \"disablePagination\", dynamicHeight: \"dynamicHeight\", selectedIndex: \"selectedIndex\", backgroundColor: \"backgroundColor\" }, outputs: { selectedIndexChange: \"selectedIndexChange\", focusChange: \"focusChange\", animationDone: \"animationDone\", selectedTabChange: \"selectedTabChange\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\n_MatTabGroupBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabGroupBase.propDecorators = {\n    dynamicHeight: [{ type: Input }],\n    selectedIndex: [{ type: Input }],\n    headerPosition: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    disablePagination: [{ type: Input }],\n    backgroundColor: [{ type: Input }],\n    selectedIndexChange: [{ type: Output }],\n    focusChange: [{ type: Output }],\n    animationDone: [{ type: Output }],\n    selectedTabChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabGroupBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { headerPosition: [{\n            type: Input\n        }], selectedIndexChange: [{\n            type: Output\n        }], focusChange: [{\n            type: Output\n        }], animationDone: [{\n            type: Output\n        }], selectedTabChange: [{\n            type: Output\n        }], animationDuration: [{\n            type: Input\n        }], disablePagination: [{\n            type: Input\n        }], dynamicHeight: [{\n            type: Input\n        }], selectedIndex: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    _MatTabGroupBase.ngAcceptInputType_dynamicHeight;\n    /** @type {?} */\n    _MatTabGroupBase.ngAcceptInputType_animationDuration;\n    /** @type {?} */\n    _MatTabGroupBase.ngAcceptInputType_selectedIndex;\n    /** @type {?} */\n    _MatTabGroupBase.ngAcceptInputType_disableRipple;\n    /**\n     * All tabs inside the tab group. This includes tabs that belong to groups that are nested\n     * inside the current one. We filter out only the tabs that belong to this group in `_tabs`.\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype._allTabs;\n    /** @type {?} */\n    _MatTabGroupBase.prototype._tabBodyWrapper;\n    /** @type {?} */\n    _MatTabGroupBase.prototype._tabHeader;\n    /**\n     * All of the tabs that belong to the group.\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype._tabs;\n    /**\n     * The tab index that should be selected after the content has been checked.\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._indexToSelect;\n    /**\n     * Snapshot of the height of the tab body wrapper before another tab is activated.\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._tabBodyWrapperHeight;\n    /**\n     * Subscription to tabs being added/removed.\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._tabsSubscription;\n    /**\n     * Subscription to changes in the tab labels.\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._tabLabelSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._dynamicHeight;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._selectedIndex;\n    /**\n     * Position of the tab header.\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype.headerPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._animationDuration;\n    /**\n     * Whether pagination should be disabled. This can be used to avoid unnecessary\n     * layout recalculations if it's known that pagination won't be required.\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype.disablePagination;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._backgroundColor;\n    /**\n     * Output to enable support for two-way binding on `[(selectedIndex)]`\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype.selectedIndexChange;\n    /**\n     * Event emitted when focus has changed within a tab group.\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype.focusChange;\n    /**\n     * Event emitted when the body animation has completed\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype.animationDone;\n    /**\n     * Event emitted when the tab selection has changed.\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype.selectedTabChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._groupId;\n    /**\n     * @type {?}\n     * @protected\n     */\n    _MatTabGroupBase.prototype._changeDetectorRef;\n    /** @type {?} */\n    _MatTabGroupBase.prototype._animationMode;\n}\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nclass MatTabGroup extends _MatTabGroupBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} changeDetectorRef\n     * @param {?=} defaultConfig\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n        super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n    }\n}\nMatTabGroup.ɵfac = function MatTabGroup_Factory(t) { return new (t || MatTabGroup)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabGroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabGroup, selectors: [[\"mat-tab-group\"]], contentQueries: function MatTabGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTab, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allTabs = _t);\n    } }, viewQuery: function MatTabGroup_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n        ɵngcc0.ɵɵviewQuery(_c4, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabBodyWrapper = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabHeader = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-group\"], hostVars: 4, hostBindings: function MatTabGroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-group-dynamic-height\", ctx.dynamicHeight)(\"mat-tab-group-inverted-header\", ctx.headerPosition === \"below\");\n    } }, inputs: { color: \"color\", disableRipple: \"disableRipple\" }, exportAs: [\"matTabGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_TAB_GROUP,\n                useExisting: MatTabGroup\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 6, vars: 7, consts: [[3, \"selectedIndex\", \"disableRipple\", \"disablePagination\", \"indexFocused\", \"selectFocusedIndex\"], [\"tabHeader\", \"\"], [\"class\", \"mat-tab-label mat-focus-indicator\", \"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 3, \"id\", \"mat-tab-label-active\", \"disabled\", \"matRippleDisabled\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-tab-body-wrapper\"], [\"tabBodyWrapper\", \"\"], [\"role\", \"tabpanel\", 3, \"id\", \"mat-tab-body-active\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"mat-tab-label\", \"mat-focus-indicator\", 3, \"id\", \"disabled\", \"matRippleDisabled\", \"click\"], [1, \"mat-tab-label-content\"], [3, \"ngIf\"], [3, \"cdkPortalOutlet\"], [\"role\", \"tabpanel\", 3, \"id\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\"]], template: function MatTabGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"mat-tab-header\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"indexFocused\", function MatTabGroup_Template_mat_tab_header_indexFocused_0_listener($event) { return ctx._focusChanged($event); })(\"selectFocusedIndex\", function MatTabGroup_Template_mat_tab_header_selectFocusedIndex_0_listener($event) { return ctx.selectedIndex = $event; });\n        ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_Template, 4, 14, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵtemplate(5, MatTabGroup_mat_tab_body_5_Template, 1, 8, \"mat-tab-body\", 5);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"selectedIndex\", ctx.selectedIndex || 0)(\"disableRipple\", ctx.disableRipple)(\"disablePagination\", ctx.disablePagination);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n    } }, directives: function () { return [MatTabHeader, ɵngcc2.NgForOf, MatTabLabelWrapper, ɵngcc3.MatRipple, ɵngcc4.CdkMonitorFocus, ɵngcc2.NgIf, ɵngcc5.CdkPortalOutlet, MatTabBody]; }, styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"], encapsulation: 2 });\n/** @nocollapse */\nMatTabGroup.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabGroup.propDecorators = {\n    _allTabs: [{ type: ContentChildren, args: [MatTab, { descendants: true },] }],\n    _tabBodyWrapper: [{ type: ViewChild, args: ['tabBodyWrapper',] }],\n    _tabHeader: [{ type: ViewChild, args: ['tabHeader',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabGroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-group',\n                exportAs: 'matTabGroup',\n                template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex == i\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex == i\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                inputs: ['color', 'disableRipple'],\n                providers: [{\n                        provide: MAT_TAB_GROUP,\n                        useExisting: MatTabGroup\n                    }],\n                host: {\n                    'class': 'mat-tab-group',\n                    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"'\n                },\n                styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _allTabs: [{\n            type: ContentChildren,\n            args: [MatTab, { descendants: true }]\n        }], _tabBodyWrapper: [{\n            type: ViewChild,\n            args: ['tabBodyWrapper']\n        }], _tabHeader: [{\n            type: ViewChild,\n            args: ['tabHeader']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTabGroup.prototype._allTabs;\n    /** @type {?} */\n    MatTabGroup.prototype._tabBodyWrapper;\n    /** @type {?} */\n    MatTabGroup.prototype._tabHeader;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-label-wrapper.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/**\n * \\@docs-private\n */\nclass MatTabLabelWrapperBase {\n}\n/** @type {?} */\nconst _MatTabLabelWrapperMixinBase = mixinDisabled(MatTabLabelWrapperBase);\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * \\@docs-private\n */\nclass MatTabLabelWrapper extends _MatTabLabelWrapperMixinBase {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        super();\n        this.elementRef = elementRef;\n    }\n    /**\n     * Sets focus on the wrapper element\n     * @return {?}\n     */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    /**\n     * @return {?}\n     */\n    getOffsetLeft() {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n    /**\n     * @return {?}\n     */\n    getOffsetWidth() {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\nMatTabLabelWrapper.ɵfac = function MatTabLabelWrapper_Factory(t) { return new (t || MatTabLabelWrapper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatTabLabelWrapper.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLabelWrapper, selectors: [[\"\", \"matTabLabelWrapper\", \"\"]], hostVars: 3, hostBindings: function MatTabLabelWrapper_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", !!ctx.disabled);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatTabLabelWrapper.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabLabelWrapper, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabLabelWrapper]',\n                inputs: ['disabled'],\n                host: {\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[attr.aria-disabled]': '!!disabled'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatTabLabelWrapper.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatTabLabelWrapper.prototype.elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/paginated-tab-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Config used to bind passive event listeners\n * @type {?}\n */\nconst passiveEventListenerOptions = (/** @type {?} */ (normalizePassiveListenerOptions({ passive: true })));\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n * @type {?}\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n * @type {?}\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n * @type {?}\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * \\@docs-private\n * @abstract\n */\nclass MatPaginatedTabHeader {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} _viewportRuler\n     * @param {?} _dir\n     * @param {?} _ngZone\n     * @param {?=} _platform\n     * @param {?=} _animationMode\n     */\n    constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform, _animationMode) {\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._viewportRuler = _viewportRuler;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._animationMode = _animationMode;\n        /**\n         * The distance in pixels that the tab labels should be translated to the left.\n         */\n        this._scrollDistance = 0;\n        /**\n         * Whether the header should scroll to the selected index after the view has been checked.\n         */\n        this._selectedIndexChanged = false;\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Whether the controls for pagination should be displayed\n         */\n        this._showPaginationControls = false;\n        /**\n         * Whether the tab list can be scrolled more towards the end of the tab label list.\n         */\n        this._disableScrollAfter = true;\n        /**\n         * Whether the tab list can be scrolled more towards the beginning of the tab label list.\n         */\n        this._disableScrollBefore = true;\n        /**\n         * Stream that will stop the automated scrolling.\n         */\n        this._stopScrolling = new Subject();\n        /**\n         * Whether pagination should be disabled. This can be used to avoid unnecessary\n         * layout recalculations if it's known that pagination won't be required.\n         */\n        this.disablePagination = false;\n        this._selectedIndex = 0;\n        /**\n         * Event emitted when the option is selected.\n         */\n        this.selectFocusedIndex = new EventEmitter();\n        /**\n         * Event emitted when a label is focused.\n         */\n        this.indexFocused = new EventEmitter();\n        // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n        _ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            fromEvent(_elementRef.nativeElement, 'mouseleave')\n                .pipe(takeUntil(this._destroyed))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._stopInterval();\n            }));\n        }));\n    }\n    /**\n     * The index of the active tab.\n     * @return {?}\n     */\n    get selectedIndex() { return this._selectedIndex; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectedIndex(value) {\n        value = coerceNumberProperty(value);\n        if (this._selectedIndex != value) {\n            this._selectedIndexChanged = true;\n            this._selectedIndex = value;\n            if (this._keyManager) {\n                this._keyManager.updateActiveItem(value);\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // We need to handle these events manually, because we want to bind passive event listeners.\n        fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._handlePaginatorPress('before');\n        }));\n        fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._handlePaginatorPress('after');\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        /** @type {?} */\n        const dirChange = this._dir ? this._dir.change : of(null);\n        /** @type {?} */\n        const resize = this._viewportRuler.change(150);\n        /** @type {?} */\n        const realign = (/**\n         * @return {?}\n         */\n        () => {\n            this.updatePagination();\n            this._alignInkBarToSelectedTab();\n        });\n        this._keyManager = new FocusKeyManager(this._items)\n            .withHorizontalOrientation(this._getLayoutDirection())\n            .withWrap();\n        this._keyManager.updateActiveItem(0);\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n        // On dir change or window resize, realign the ink bar and update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize, this._items.changes).pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // We need to defer this to give the browser some time to recalculate the element dimensions.\n            Promise.resolve().then(realign);\n            this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n        }));\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} newFocusIndex\n         * @return {?}\n         */\n        newFocusIndex => {\n            this.indexFocused.emit(newFocusIndex);\n            this._setTabFocus(newFocusIndex);\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._items.length) {\n            this.updatePagination();\n            this._tabLabelCount = this._items.length;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._stopScrolling.complete();\n    }\n    /**\n     * Handles keyboard events on the header.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        // We don't handle any key bindings with a modifier key.\n        if (hasModifierKey(event)) {\n            return;\n        }\n        switch (event.keyCode) {\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n                break;\n            case ENTER:\n            case SPACE:\n                if (this.focusIndex !== this.selectedIndex) {\n                    this.selectFocusedIndex.emit(this.focusIndex);\n                    this._itemSelected(event);\n                }\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     * @return {?}\n     */\n    _onContentChanges() {\n        /** @type {?} */\n        const textContent = this._elementRef.nativeElement.textContent;\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in (see #14249).\n        if (textContent !== this._currentTextContent) {\n            this._currentTextContent = textContent || '';\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                this.updatePagination();\n                this._alignInkBarToSelectedTab();\n                this._changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     * @return {?}\n     */\n    updatePagination() {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    }\n    /**\n     * Tracks which element has focus; used for keyboard navigation\n     * @return {?}\n     */\n    get focusIndex() {\n        return this._keyManager ? (/** @type {?} */ (this._keyManager.activeItemIndex)) : 0;\n    }\n    /**\n     * When the focus index is set, we must manually send focus to the correct label\n     * @param {?} value\n     * @return {?}\n     */\n    set focusIndex(value) {\n        if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n            return;\n        }\n        this._keyManager.setActiveItem(value);\n    }\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     * @param {?} index\n     * @return {?}\n     */\n    _isValidIndex(index) {\n        if (!this._items) {\n            return true;\n        }\n        /** @type {?} */\n        const tab = this._items ? this._items.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n    }\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     * @param {?} tabIndex\n     * @return {?}\n     */\n    _setTabFocus(tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._items && this._items.length) {\n            this._items.toArray()[tabIndex].focus();\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            /** @type {?} */\n            const containerEl = this._tabListContainer.nativeElement;\n            /** @type {?} */\n            const dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n    /**\n     * The layout direction of the containing app.\n     * @return {?}\n     */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Performs the CSS transformation on the tab list that will cause the list to scroll.\n     * @return {?}\n     */\n    _updateTabScrollPosition() {\n        if (this.disablePagination) {\n            return;\n        }\n        /** @type {?} */\n        const scrollDistance = this.scrollDistance;\n        /** @type {?} */\n        const platform = this._platform;\n        /** @type {?} */\n        const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n        // and ripples will exceed the boundaries of the visible tab bar.\n        // See: https://github.com/angular/components/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n        // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n        // @breaking-change 9.0.0 Remove null check for `platform` after it can no longer be undefined.\n        if (platform && (platform.TRIDENT || platform.EDGE)) {\n            this._tabListContainer.nativeElement.scrollLeft = 0;\n        }\n    }\n    /**\n     * Sets the distance in pixels that the tab header should be transformed in the X-axis.\n     * @return {?}\n     */\n    get scrollDistance() { return this._scrollDistance; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set scrollDistance(value) {\n        this._scrollTo(value);\n    }\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} direction\n     * @return {?}\n     */\n    _scrollHeader(direction) {\n        /** @type {?} */\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        /** @type {?} */\n        const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n        return this._scrollTo(this._scrollDistance + scrollAmount);\n    }\n    /**\n     * Handles click events on the pagination arrows.\n     * @param {?} direction\n     * @return {?}\n     */\n    _handlePaginatorClick(direction) {\n        this._stopInterval();\n        this._scrollHeader(direction);\n    }\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} labelIndex\n     * @return {?}\n     */\n    _scrollToLabel(labelIndex) {\n        if (this.disablePagination) {\n            return;\n        }\n        /** @type {?} */\n        const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n        if (!selectedLabel) {\n            return;\n        }\n        // The view length is the visible width of the tab labels.\n        /** @type {?} */\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        const { offsetLeft, offsetWidth } = selectedLabel.elementRef.nativeElement;\n        /** @type {?} */\n        let labelBeforePos;\n        /** @type {?} */\n        let labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = offsetLeft;\n            labelAfterPos = labelBeforePos + offsetWidth;\n        }\n        else {\n            labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;\n            labelBeforePos = labelAfterPos - offsetWidth;\n        }\n        /** @type {?} */\n        const beforeVisiblePos = this.scrollDistance;\n        /** @type {?} */\n        const afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    _checkPaginationEnabled() {\n        if (this.disablePagination) {\n            this._showPaginationControls = false;\n        }\n        else {\n            /** @type {?} */\n            const isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n            if (!isEnabled) {\n                this.scrollDistance = 0;\n            }\n            if (isEnabled !== this._showPaginationControls) {\n                this._changeDetectorRef.markForCheck();\n            }\n            this._showPaginationControls = isEnabled;\n        }\n    }\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    _checkScrollingControls() {\n        if (this.disablePagination) {\n            this._disableScrollAfter = this._disableScrollBefore = true;\n        }\n        else {\n            // Check if the pagination arrows should be activated.\n            this._disableScrollBefore = this.scrollDistance == 0;\n            this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    _getMaxScrollDistance() {\n        /** @type {?} */\n        const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n        /** @type {?} */\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return (lengthOfTabList - viewLength) || 0;\n    }\n    /**\n     * Tells the ink-bar to align itself to the current label wrapper\n     * @return {?}\n     */\n    _alignInkBarToSelectedTab() {\n        /** @type {?} */\n        const selectedItem = this._items && this._items.length ?\n            this._items.toArray()[this.selectedIndex] : null;\n        /** @type {?} */\n        const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n        if (selectedLabelWrapper) {\n            this._inkBar.alignToElement(selectedLabelWrapper);\n        }\n        else {\n            this._inkBar.hide();\n        }\n    }\n    /**\n     * Stops the currently-running paginator interval.\n     * @return {?}\n     */\n    _stopInterval() {\n        this._stopScrolling.next();\n    }\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param {?} direction In which direction the paginator should be scrolled.\n     * @param {?=} mouseEvent\n     * @return {?}\n     */\n    _handlePaginatorPress(direction, mouseEvent) {\n        // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n        // null check the `button`, but we do it so we don't break tests that use fake events.\n        if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n            return;\n        }\n        // Avoid overlapping timers.\n        this._stopInterval();\n        // Start a timer after the delay and keep firing based on the interval.\n        timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n            // Keep the timer going until something tells it to stop or the component is destroyed.\n            .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            const { maxScrollDistance, distance } = this._scrollHeader(direction);\n            // Stop the timer if we've reached the start or the end.\n            if (distance === 0 || distance >= maxScrollDistance) {\n                this._stopInterval();\n            }\n        }));\n    }\n    /**\n     * Scrolls the header to a given position.\n     * @private\n     * @param {?} position Position to which to scroll.\n     * @return {?} Information on the current scroll distance and the maximum.\n     */\n    _scrollTo(position) {\n        if (this.disablePagination) {\n            return { maxScrollDistance: 0, distance: 0 };\n        }\n        /** @type {?} */\n        const maxScrollDistance = this._getMaxScrollDistance();\n        this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this._scrollDistanceChanged = true;\n        this._checkScrollingControls();\n        return { maxScrollDistance, distance: this._scrollDistance };\n    }\n}\nMatPaginatedTabHeader.ɵfac = function MatPaginatedTabHeader_Factory(t) { return new (t || MatPaginatedTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatPaginatedTabHeader.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPaginatedTabHeader, inputs: { disablePagination: \"disablePagination\" } });\n/** @nocollapse */\nMatPaginatedTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatPaginatedTabHeader.propDecorators = {\n    disablePagination: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPaginatedTabHeader, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { disablePagination: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatPaginatedTabHeader.ngAcceptInputType_selectedIndex;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._items;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._inkBar;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._tabListContainer;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._tabList;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._nextPaginator;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._previousPaginator;\n    /**\n     * The distance in pixels that the tab labels should be translated to the left.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._scrollDistance;\n    /**\n     * Whether the header should scroll to the selected index after the view has been checked.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._selectedIndexChanged;\n    /**\n     * Emits when the component is destroyed.\n     * @type {?}\n     * @protected\n     */\n    MatPaginatedTabHeader.prototype._destroyed;\n    /**\n     * Whether the controls for pagination should be displayed\n     * @type {?}\n     */\n    MatPaginatedTabHeader.prototype._showPaginationControls;\n    /**\n     * Whether the tab list can be scrolled more towards the end of the tab label list.\n     * @type {?}\n     */\n    MatPaginatedTabHeader.prototype._disableScrollAfter;\n    /**\n     * Whether the tab list can be scrolled more towards the beginning of the tab label list.\n     * @type {?}\n     */\n    MatPaginatedTabHeader.prototype._disableScrollBefore;\n    /**\n     * The number of tab labels that are displayed on the header. When this changes, the header\n     * should re-evaluate the scroll position.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._tabLabelCount;\n    /**\n     * Whether the scroll distance has changed and should be applied after the view is checked.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._scrollDistanceChanged;\n    /**\n     * Used to manage focus between the tabs.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._keyManager;\n    /**\n     * Cached text content of the header.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._currentTextContent;\n    /**\n     * Stream that will stop the automated scrolling.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._stopScrolling;\n    /**\n     * Whether pagination should be disabled. This can be used to avoid unnecessary\n     * layout recalculations if it's known that pagination won't be required.\n     * @type {?}\n     */\n    MatPaginatedTabHeader.prototype.disablePagination;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._selectedIndex;\n    /**\n     * Event emitted when the option is selected.\n     * @type {?}\n     */\n    MatPaginatedTabHeader.prototype.selectFocusedIndex;\n    /**\n     * Event emitted when a label is focused.\n     * @type {?}\n     */\n    MatPaginatedTabHeader.prototype.indexFocused;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatPaginatedTabHeader.prototype._elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatPaginatedTabHeader.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._ngZone;\n    /**\n     * @deprecated \\@breaking-change 9.0.0 `_platform` and `_animationMode`\n     * parameters to become required.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._platform;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._animationMode;\n    /**\n     * Called when the user has selected an item via the keyboard.\n     * @abstract\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n    MatPaginatedTabHeader.prototype._itemSelected = function (event) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabHeaderBase extends MatPaginatedTabHeader {\n    /**\n     * @param {?} elementRef\n     * @param {?} changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?} dir\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, \n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n    }\n    /**\n     * Whether the ripple effect is disabled or not.\n     * @return {?}\n     */\n    get disableRipple() { return this._disableRipple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    /**\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n    _itemSelected(event) {\n        event.preventDefault();\n    }\n}\n_MatTabHeaderBase.ɵfac = function _MatTabHeaderBase_Factory(t) { return new (t || _MatTabHeaderBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabHeaderBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabHeaderBase, inputs: { disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\n_MatTabHeaderBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabHeaderBase.propDecorators = {\n    disableRipple: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabHeaderBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { disableRipple: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabHeaderBase.prototype._disableRipple;\n}\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * \\@docs-private\n */\nclass MatTabHeader extends _MatTabHeaderBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?} dir\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, \n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    }\n}\nMatTabHeader.ɵfac = function MatTabHeader_Factory(t) { return new (t || MatTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabHeader, selectors: [[\"mat-tab-header\"]], contentQueries: function MatTabHeader_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLabelWrapper, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabHeader_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(MatInkBar, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c5, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c6, true);\n        ɵngcc0.ɵɵviewQuery(_c7, true);\n        ɵngcc0.ɵɵviewQuery(_c8, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-header\"], hostVars: 4, hostBindings: function MatTabHeader_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\");\n    } }, inputs: { selectedIndex: \"selectedIndex\" }, outputs: { selectFocusedIndex: \"selectFocusedIndex\", indexFocused: \"indexFocused\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 13, vars: 8, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-label-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [\"role\", \"tablist\", 1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-labels\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabHeader_Template_div_click_0_listener() { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabHeader_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabHeader_Template_div_touchend_0_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabHeader_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabHeader_Template_div_cdkObserveContent_5_listener() { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabHeader_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabHeader_Template_div_click_10_listener() { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabHeader_Template_div_touchend_10_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"], encapsulation: 2 });\n/** @nocollapse */\nMatTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabHeader.propDecorators = {\n    _items: [{ type: ContentChildren, args: [MatTabLabelWrapper, { descendants: false },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-header',\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                inputs: ['selectedIndex'],\n                outputs: ['selectFocusedIndex', 'indexFocused'],\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                host: {\n                    'class': 'mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\"\n                },\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _items: [{\n            type: ContentChildren,\n            args: [MatTabLabelWrapper, { descendants: false }]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator']\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTabHeader.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatTabHeader.prototype._items;\n    /** @type {?} */\n    MatTabHeader.prototype._inkBar;\n    /** @type {?} */\n    MatTabHeader.prototype._tabListContainer;\n    /** @type {?} */\n    MatTabHeader.prototype._tabList;\n    /** @type {?} */\n    MatTabHeader.prototype._nextPaginator;\n    /** @type {?} */\n    MatTabHeader.prototype._previousPaginator;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-nav-bar/tab-nav-bar.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base class with all of the `MatTabNav` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabNavBase extends MatPaginatedTabHeader {\n    /**\n     * @param {?} elementRef\n     * @param {?} dir\n     * @param {?} ngZone\n     * @param {?} changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?=} platform\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, \n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n        /**\n         * Theme color of the nav bar.\n         */\n        this.color = 'primary';\n    }\n    /**\n     * Background color of the tab nav.\n     * @return {?}\n     */\n    get backgroundColor() { return this._backgroundColor; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set backgroundColor(value) {\n        /** @type {?} */\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * Whether the ripple effect is disabled or not.\n     * @return {?}\n     */\n    get disableRipple() { return this._disableRipple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _itemSelected() {\n        // noop\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        // We need this to run before the `changes` subscription in parent to ensure that the\n        // selectedIndex is up-to-date by the time the super class starts looking for it.\n        this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.updateActiveLink();\n        }));\n        super.ngAfterContentInit();\n    }\n    /**\n     * Notifies the component that the active link has been changed.\n     * \\@breaking-change 8.0.0 `element` parameter to be removed.\n     * @param {?=} _element\n     * @return {?}\n     */\n    updateActiveLink(_element) {\n        if (!this._items) {\n            return;\n        }\n        /** @type {?} */\n        const items = this._items.toArray();\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].active) {\n                this.selectedIndex = i;\n                this._changeDetectorRef.markForCheck();\n                return;\n            }\n        }\n        // The ink bar should hide itself if no items are active.\n        this.selectedIndex = -1;\n        this._inkBar.hide();\n    }\n}\n_MatTabNavBase.ɵfac = function _MatTabNavBase_Factory(t) { return new (t || _MatTabNavBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabNavBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabNavBase, inputs: { color: \"color\", backgroundColor: \"backgroundColor\", disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\n_MatTabNavBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform, decorators: [{ type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabNavBase.propDecorators = {\n    backgroundColor: [{ type: Input }],\n    disableRipple: [{ type: Input }],\n    color: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabNavBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform, decorators: [{\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { color: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }], disableRipple: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Query list of all tab links of the tab navigation.\n     * @type {?}\n     */\n    _MatTabNavBase.prototype._items;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabNavBase.prototype._backgroundColor;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabNavBase.prototype._disableRipple;\n    /**\n     * Theme color of the nav bar.\n     * @type {?}\n     */\n    _MatTabNavBase.prototype.color;\n}\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nclass MatTabNav extends _MatTabNavBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} dir\n     * @param {?} ngZone\n     * @param {?} changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?=} platform\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, \n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    platform, animationMode) {\n        super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n    }\n}\nMatTabNav.ɵfac = function MatTabNav_Factory(t) { return new (t || MatTabNav)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabNav.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabNav, selectors: [[\"\", \"mat-tab-nav-bar\", \"\"]], contentQueries: function MatTabNav_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLink, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabNav_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(MatInkBar, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c5, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c6, true);\n        ɵngcc0.ɵɵviewQuery(_c7, true);\n        ɵngcc0.ɵɵviewQuery(_c8, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-nav-bar\", \"mat-tab-header\"], hostVars: 10, hostBindings: function MatTabNav_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\")(\"mat-primary\", ctx.color !== \"warn\" && ctx.color !== \"accent\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\n    } }, inputs: { color: \"color\" }, exportAs: [\"matTabNavBar\", \"matTabNav\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c9, ngContentSelectors: _c0, decls: 13, vars: 8, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-link-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-links\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabNav_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabNav_Template_div_click_0_listener() { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabNav_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabNav_Template_div_touchend_0_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabNav_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabNav_Template_div_cdkObserveContent_5_listener() { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabNav_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabNav_Template_div_click_10_listener() { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabNav_Template_div_touchend_10_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"], encapsulation: 2 });\n/** @nocollapse */\nMatTabNav.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform, decorators: [{ type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabNav.propDecorators = {\n    _items: [{ type: ContentChildren, args: [forwardRef((/**\n                 * @return {?}\n                 */\n                () => MatTabLink)), { descendants: true },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabNav, [{\n        type: Component,\n        args: [{\n                selector: '[mat-tab-nav-bar]',\n                exportAs: 'matTabNavBar, matTabNav',\n                inputs: ['color'],\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    #tabList\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-tab-nav-bar mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                    '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n                    '[class.mat-accent]': 'color === \"accent\"',\n                    '[class.mat-warn]': 'color === \"warn\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform, decorators: [{\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _items: [{\n            type: ContentChildren,\n            args: [forwardRef(( /**\n                             * @return {?}\n                             */() => MatTabLink)), { descendants: true }]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator']\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTabNav.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatTabNav.prototype._items;\n    /** @type {?} */\n    MatTabNav.prototype._inkBar;\n    /** @type {?} */\n    MatTabNav.prototype._tabListContainer;\n    /** @type {?} */\n    MatTabNav.prototype._tabList;\n    /** @type {?} */\n    MatTabNav.prototype._nextPaginator;\n    /** @type {?} */\n    MatTabNav.prototype._previousPaginator;\n}\n// Boilerplate for applying mixins to MatTabLink.\nclass MatTabLinkMixinBase {\n}\n/** @type {?} */\nconst _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkMixinBase)));\n/**\n * Base class with all of the `MatTabLink` functionality.\n */\n// tslint:disable-next-line:class-name\nclass _MatTabLinkBase extends _MatTabLinkMixinBase {\n    /**\n     * @param {?} _tabNavBar\n     * @param {?} elementRef\n     * @param {?} globalRippleOptions\n     * @param {?} tabIndex\n     * @param {?} _focusMonitor\n     * @param {?=} animationMode\n     */\n    constructor(_tabNavBar, elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n        super();\n        this._tabNavBar = _tabNavBar;\n        this.elementRef = elementRef;\n        this._focusMonitor = _focusMonitor;\n        /**\n         * Whether the tab link is active or not.\n         */\n        this._isActive = false;\n        this.rippleConfig = globalRippleOptions || {};\n        this.tabIndex = parseInt(tabIndex) || 0;\n        if (animationMode === 'NoopAnimations') {\n            this.rippleConfig.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n        _focusMonitor.monitor(elementRef);\n    }\n    /**\n     * Whether the link is active.\n     * @return {?}\n     */\n    get active() { return this._isActive; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set active(value) {\n        if (value !== this._isActive) {\n            this._isActive = value;\n            this._tabNavBar.updateActiveLink(this.elementRef);\n        }\n    }\n    /**\n     * Whether ripples are disabled on interaction.\n     * \\@docs-private\n     * @return {?}\n     */\n    get rippleDisabled() {\n        return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n            !!this.rippleConfig.disabled;\n    }\n    /**\n     * @return {?}\n     */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef);\n    }\n}\n_MatTabLinkBase.ɵfac = function _MatTabLinkBase_Factory(t) { return new (t || _MatTabLinkBase)(ɵngcc0.ɵɵdirectiveInject(_MatTabNavBase), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabLinkBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabLinkBase, inputs: { active: \"active\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\n_MatTabLinkBase.ctorParameters = () => [\n    { type: _MatTabNavBase },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabLinkBase.propDecorators = {\n    active: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabLinkBase, [{\n        type: Directive\n    }], function () { return [{ type: _MatTabNavBase }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { active: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    _MatTabLinkBase.ngAcceptInputType_disabled;\n    /** @type {?} */\n    _MatTabLinkBase.ngAcceptInputType_disableRipple;\n    /**\n     * Whether the tab link is active or not.\n     * @type {?}\n     * @protected\n     */\n    _MatTabLinkBase.prototype._isActive;\n    /**\n     * Ripple configuration for ripples that are launched on pointer down. The ripple config\n     * is set to the global ripple options since we don't have any configurable options for\n     * the tab link ripples.\n     * \\@docs-private\n     * @type {?}\n     */\n    _MatTabLinkBase.prototype.rippleConfig;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabLinkBase.prototype._tabNavBar;\n    /** @type {?} */\n    _MatTabLinkBase.prototype.elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabLinkBase.prototype._focusMonitor;\n}\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nclass MatTabLink extends _MatTabLinkBase {\n    /**\n     * @param {?} tabNavBar\n     * @param {?} elementRef\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?} globalRippleOptions\n     * @param {?} tabIndex\n     * @param {?} focusMonitor\n     * @param {?=} animationMode\n     */\n    constructor(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n        super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n        this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n        this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._tabLinkRipple._removeTriggerEvents();\n    }\n}\nMatTabLink.ɵfac = function MatTabLink_Factory(t) { return new (t || MatTabLink)(ɵngcc0.ɵɵdirectiveInject(MatTabNav), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabLink.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLink, selectors: [[\"\", \"mat-tab-link\", \"\"], [\"\", \"matTabLink\", \"\"]], hostAttrs: [1, \"mat-tab-link\", \"mat-focus-indicator\"], hostVars: 7, hostBindings: function MatTabLink_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-current\", ctx.active ? \"page\" : null)(\"aria-disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled)(\"mat-tab-label-active\", ctx.active);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, exportAs: [\"matTabLink\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatTabLink.ctorParameters = () => [\n    { type: MatTabNav },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabLink, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-link], [matTabLink]',\n                exportAs: 'matTabLink',\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                host: {\n                    'class': 'mat-tab-link mat-focus-indicator',\n                    '[attr.aria-current]': 'active ? \"page\" : null',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.tabIndex]': 'tabIndex',\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[class.mat-tab-label-active]': 'active'\n                }\n            }]\n    }], function () { return [{ type: MatTabNav }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Reference to the RippleRenderer for the tab-link.\n     * @type {?}\n     * @private\n     */\n    MatTabLink.prototype._tabLinkRipple;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tabs-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatTabsModule {\n}\nMatTabsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTabsModule });\nMatTabsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTabsModule_Factory(t) { return new (t || MatTabsModule)(); }, imports: [[\n            CommonModule,\n            MatCommonModule,\n            PortalModule,\n            MatRippleModule,\n            ObserversModule,\n            A11yModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTabsModule, { declarations: function () { return [MatTabGroup,\n        MatTabLabel,\n        MatTab,\n        MatInkBar,\n        MatTabLabelWrapper,\n        MatTabNav,\n        MatTabLink,\n        MatTabBody,\n        MatTabBodyPortal,\n        MatTabHeader,\n        MatTabContent]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        PortalModule,\n        MatRippleModule,\n        ObserversModule,\n        A11yModule]; }, exports: function () { return [MatCommonModule,\n        MatTabGroup,\n        MatTabLabel,\n        MatTab,\n        MatTabNav,\n        MatTabLink,\n        MatTabContent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabsModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    PortalModule,\n                    MatRippleModule,\n                    ObserversModule,\n                    A11yModule,\n                ],\n                // Don't export all components because some are only to be used internally.\n                exports: [\n                    MatCommonModule,\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabContent,\n                ],\n                declarations: [\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatInkBar,\n                    MatTabLabelWrapper,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabBody,\n                    MatTabBodyPortal,\n                    MatTabHeader,\n                    MatTabContent,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-nav-bar/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TABS_CONFIG, MAT_TAB_GROUP, MatInkBar, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MatTabBodyBase, _MatTabGroupBase, _MatTabHeaderBase, _MatTabLinkBase, _MatTabNavBase, matTabsAnimations, _MAT_INK_BAR_POSITIONER_FACTORY as ɵangular_material_src_material_tabs_tabs_a, MatPaginatedTabHeader as ɵangular_material_src_material_tabs_tabs_b };\n\n//# sourceMappingURL=tabs.js.map","import { Directive, isDevMode, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Inject, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/toolbar/toolbar.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatToolbar.\n/**\n * \\@docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\n\nconst _c0 = [\"*\", [[\"mat-toolbar-row\"]]];\nconst _c1 = [\"*\", \"mat-toolbar-row\"];\nclass MatToolbarBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatToolbarBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatToolbarMixinBase = mixinColor(MatToolbarBase);\nclass MatToolbarRow {\n}\nMatToolbarRow.ɵfac = function MatToolbarRow_Factory(t) { return new (t || MatToolbarRow)(); };\nMatToolbarRow.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatToolbarRow, selectors: [[\"mat-toolbar-row\"]], hostAttrs: [1, \"mat-toolbar-row\"], exportAs: [\"matToolbarRow\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatToolbarRow, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-toolbar-row',\n                exportAs: 'matToolbarRow',\n                host: { 'class': 'mat-toolbar-row' }\n            }]\n    }], null, null); })();\nclass MatToolbar extends _MatToolbarMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _platform\n     * @param {?=} document\n     */\n    constructor(elementRef, _platform, document) {\n        super(elementRef);\n        this._platform = _platform;\n        // TODO: make the document a required param when doing breaking changes.\n        this._document = document;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (!isDevMode() || !this._platform.isBrowser) {\n            return;\n        }\n        this._checkToolbarMixedModes();\n        this._toolbarRows.changes.subscribe((/**\n         * @return {?}\n         */\n        () => this._checkToolbarMixedModes()));\n    }\n    /**\n     * Throws an exception when developers are attempting to combine the different toolbar row modes.\n     * @private\n     * @return {?}\n     */\n    _checkToolbarMixedModes() {\n        if (!this._toolbarRows.length) {\n            return;\n        }\n        // Check if there are any other DOM nodes that can display content but aren't inside of\n        // a <mat-toolbar-row> element.\n        /** @type {?} */\n        const isCombinedUsage = Array.from(this._elementRef.nativeElement.childNodes)\n            .filter((/**\n         * @param {?} node\n         * @return {?}\n         */\n        node => !(node.classList && node.classList.contains('mat-toolbar-row'))))\n            .filter((/**\n         * @param {?} node\n         * @return {?}\n         */\n        node => node.nodeType !== (this._document ? this._document.COMMENT_NODE : 8)))\n            .some((/**\n         * @param {?} node\n         * @return {?}\n         */\n        node => !!(node.textContent && node.textContent.trim())));\n        if (isCombinedUsage) {\n            throwToolbarMixedModesError();\n        }\n    }\n}\nMatToolbar.ɵfac = function MatToolbar_Factory(t) { return new (t || MatToolbar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatToolbar.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatToolbar, selectors: [[\"mat-toolbar\"]], contentQueries: function MatToolbar_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatToolbarRow, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._toolbarRows = _t);\n    } }, hostAttrs: [1, \"mat-toolbar\"], hostVars: 4, hostBindings: function MatToolbar_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-toolbar-multiple-rows\", ctx._toolbarRows.length > 0)(\"mat-toolbar-single-row\", ctx._toolbarRows.length === 0);\n    } }, inputs: { color: \"color\" }, exportAs: [\"matToolbar\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 2, vars: 0, template: function MatToolbar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n    } }, styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}.mat-toolbar-multiple-rows{min-height:64px}.mat-toolbar-row,.mat-toolbar-single-row{height:64px}@media(max-width: 599px){.mat-toolbar-multiple-rows{min-height:56px}.mat-toolbar-row,.mat-toolbar-single-row{height:56px}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatToolbar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nMatToolbar.propDecorators = {\n    _toolbarRows: [{ type: ContentChildren, args: [MatToolbarRow, { descendants: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatToolbar, [{\n        type: Component,\n        args: [{\n                selector: 'mat-toolbar',\n                exportAs: 'matToolbar',\n                template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\",\n                inputs: ['color'],\n                host: {\n                    'class': 'mat-toolbar',\n                    '[class.mat-toolbar-multiple-rows]': '_toolbarRows.length > 0',\n                    '[class.mat-toolbar-single-row]': '_toolbarRows.length === 0'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}.mat-toolbar-multiple-rows{min-height:64px}.mat-toolbar-row,.mat-toolbar-single-row{height:64px}@media(max-width: 599px){.mat-toolbar-multiple-rows{min-height:56px}.mat-toolbar-row,.mat-toolbar-single-row{height:56px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { _toolbarRows: [{\n            type: ContentChildren,\n            args: [MatToolbarRow, { descendants: true }]\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatToolbar.prototype._document;\n    /**\n     * Reference to all toolbar row elements that have been projected.\n     * @type {?}\n     */\n    MatToolbar.prototype._toolbarRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatToolbar.prototype._platform;\n}\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * \\@docs-private\n * @return {?}\n */\nfunction throwToolbarMixedModesError() {\n    throw Error('MatToolbar: Attempting to combine different toolbar modes. ' +\n        'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' +\n        'inside of a `<mat-toolbar>` for a single row.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/toolbar/toolbar-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatToolbarModule {\n}\nMatToolbarModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatToolbarModule });\nMatToolbarModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatToolbarModule_Factory(t) { return new (t || MatToolbarModule)(); }, imports: [[MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatToolbarModule, { declarations: function () { return [MatToolbar,\n        MatToolbarRow]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatToolbar,\n        MatToolbarRow,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatToolbarModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatToolbar, MatToolbarRow, MatCommonModule],\n                declarations: [MatToolbar, MatToolbarRow]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/toolbar/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatToolbar, MatToolbarModule, MatToolbarRow, throwToolbarMixedModesError };\n\n//# sourceMappingURL=toolbar.js.map","import { Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport { AriaDescriber, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, ElementRef, ViewContainerRef, NgZone, Inject, Optional, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { ScrollDispatcher, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { Subject } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate, keyframes } from '@angular/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tooltip/tooltip-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by MatTooltip.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/overlay';\nimport * as ɵngcc2 from '@angular/cdk/scrolling';\nimport * as ɵngcc3 from '@angular/cdk/platform';\nimport * as ɵngcc4 from '@angular/cdk/a11y';\nimport * as ɵngcc5 from '@angular/cdk/bidi';\nimport * as ɵngcc6 from '@angular/cdk/layout';\nimport * as ɵngcc7 from '@angular/common';\nconst matTooltipAnimations = {\n    /**\n     * Animation that transitions a tooltip in and out.\n     */\n    tooltipState: trigger('state', [\n        state('initial, void, hidden', style({ opacity: 0, transform: 'scale(0)' })),\n        state('visible', style({ transform: 'scale(1)' })),\n        transition('* => visible', animate('200ms cubic-bezier(0, 0, 0.2, 1)', keyframes([\n            style({ opacity: 0, transform: 'scale(0)', offset: 0 }),\n            style({ opacity: 0.5, transform: 'scale(0.99)', offset: 0.5 }),\n            style({ opacity: 1, transform: 'scale(1)', offset: 1 })\n        ]))),\n        transition('* => hidden', animate('100ms cubic-bezier(0, 0, 0.2, 1)', style({ opacity: 0 }))),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tooltip/tooltip.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time in ms to throttle repositioning after scroll events.\n * @type {?}\n */\nconst SCROLL_THROTTLE_MS = 20;\n/**\n * CSS class that will be attached to the overlay panel.\n * @type {?}\n */\nconst TOOLTIP_PANEL_CLASS = 'mat-tooltip-panel';\n/**\n * Options used to bind passive event listeners.\n * @type {?}\n */\nconst passiveListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * Time between the user putting the pointer on a tooltip\n * trigger and the long press event being fired.\n * @type {?}\n */\nconst LONGPRESS_DELAY = 500;\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * \\@docs-private\n * @param {?} position\n * @return {?}\n */\nfunction getMatTooltipInvalidPositionError(position) {\n    return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n/**\n * Injection token that determines the scroll handling while a tooltip is visible.\n * @type {?}\n */\nconst MAT_TOOLTIP_SCROLL_STRATEGY = new InjectionToken('mat-tooltip-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition({ scrollThrottle: SCROLL_THROTTLE_MS }));\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * Default `matTooltip` options that can be overridden.\n * @record\n */\nfunction MatTooltipDefaultOptions() { }\nif (false) {\n    /** @type {?} */\n    MatTooltipDefaultOptions.prototype.showDelay;\n    /** @type {?} */\n    MatTooltipDefaultOptions.prototype.hideDelay;\n    /** @type {?} */\n    MatTooltipDefaultOptions.prototype.touchendHideDelay;\n    /** @type {?|undefined} */\n    MatTooltipDefaultOptions.prototype.touchGestures;\n    /** @type {?|undefined} */\n    MatTooltipDefaultOptions.prototype.position;\n}\n/**\n * Injection token to be used to override the default options for `matTooltip`.\n * @type {?}\n */\nconst MAT_TOOLTIP_DEFAULT_OPTIONS = new InjectionToken('mat-tooltip-default-options', {\n    providedIn: 'root',\n    factory: MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        showDelay: 0,\n        hideDelay: 0,\n        touchendHideDelay: 1500,\n    };\n}\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.io/design/components/tooltips.html\n */\nclass MatTooltip {\n    /**\n     * @param {?} _overlay\n     * @param {?} _elementRef\n     * @param {?} _scrollDispatcher\n     * @param {?} _viewContainerRef\n     * @param {?} _ngZone\n     * @param {?} _platform\n     * @param {?} _ariaDescriber\n     * @param {?} _focusMonitor\n     * @param {?} scrollStrategy\n     * @param {?} _dir\n     * @param {?} _defaultOptions\n     * @param {?=} _hammerLoader\n     */\n    constructor(_overlay, _elementRef, _scrollDispatcher, _viewContainerRef, _ngZone, _platform, _ariaDescriber, _focusMonitor, scrollStrategy, _dir, _defaultOptions, \n    /**\n     * @deprecated _hammerLoader parameter to be removed.\n     * @breaking-change 9.0.0\n     */\n    // Note that we need to give Angular something to inject here so it doesn't throw.\n    _hammerLoader) {\n        this._overlay = _overlay;\n        this._elementRef = _elementRef;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewContainerRef = _viewContainerRef;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._ariaDescriber = _ariaDescriber;\n        this._focusMonitor = _focusMonitor;\n        this._dir = _dir;\n        this._defaultOptions = _defaultOptions;\n        this._position = 'below';\n        this._disabled = false;\n        /**\n         * The default delay in ms before showing the tooltip after show is called\n         */\n        this.showDelay = this._defaultOptions.showDelay;\n        /**\n         * The default delay in ms before hiding the tooltip after hide is called\n         */\n        this.hideDelay = this._defaultOptions.hideDelay;\n        /**\n         * How touch gestures should be handled by the tooltip. On touch devices the tooltip directive\n         * uses a long press gesture to show and hide, however it can conflict with the native browser\n         * gestures. To work around the conflict, Angular Material disables native gestures on the\n         * trigger, but that might not be desirable on particular elements (e.g. inputs and draggable\n         * elements). The different values for this option configure the touch event handling as follows:\n         * - `auto` - Enables touch gestures for all elements, but tries to avoid conflicts with native\n         *   browser gestures on particular elements. In particular, it allows text selection on inputs\n         *   and textareas, and preserves the native browser dragging on elements marked as `draggable`.\n         * - `on` - Enables touch gestures for all elements and disables native\n         *   browser gestures with no exceptions.\n         * - `off` - Disables touch gestures. Note that this will prevent the tooltip from\n         *   showing on touch devices.\n         */\n        this.touchGestures = 'auto';\n        this._message = '';\n        /**\n         * Manually-bound passive event listeners.\n         */\n        this._passiveListeners = new Map();\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Handles the keydown events on the host element.\n         * Needs to be an arrow function so that we can use it in addEventListener.\n         */\n        this._handleKeydown = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            if (this._isTooltipVisible() && event.keyCode === ESCAPE && !hasModifierKey(event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => this.hide(0)));\n            }\n        });\n        this._scrollStrategy = scrollStrategy;\n        if (_defaultOptions) {\n            if (_defaultOptions.position) {\n                this.position = _defaultOptions.position;\n            }\n            if (_defaultOptions.touchGestures) {\n                this.touchGestures = _defaultOptions.touchGestures;\n            }\n        }\n        _focusMonitor.monitor(_elementRef)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @param {?} origin\n         * @return {?}\n         */\n        origin => {\n            // Note that the focus monitor runs outside the Angular zone.\n            if (!origin) {\n                _ngZone.run((/**\n                 * @return {?}\n                 */\n                () => this.hide(0)));\n            }\n            else if (origin === 'keyboard') {\n                _ngZone.run((/**\n                 * @return {?}\n                 */\n                () => this.show()));\n            }\n        }));\n        _ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            _elementRef.nativeElement.addEventListener('keydown', this._handleKeydown);\n        }));\n    }\n    /**\n     * Allows the user to define the position of the tooltip relative to the parent element\n     * @return {?}\n     */\n    get position() { return this._position; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set position(value) {\n        if (value !== this._position) {\n            this._position = value;\n            if (this._overlayRef) {\n                this._updatePosition();\n                if (this._tooltipInstance) {\n                    (/** @type {?} */ (this._tooltipInstance)).show(0);\n                }\n                this._overlayRef.updatePosition();\n            }\n        }\n    }\n    /**\n     * Disables the display of the tooltip.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // If tooltip is disabled, hide immediately.\n        if (this._disabled) {\n            this.hide(0);\n        }\n    }\n    /**\n     * The message to be displayed in the tooltip\n     * @return {?}\n     */\n    get message() { return this._message; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set message(value) {\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message);\n        // If the message is not a string (e.g. number), convert it to a string and trim it.\n        this._message = value != null ? `${value}`.trim() : '';\n        if (!this._message && this._isTooltipVisible()) {\n            this.hide(0);\n        }\n        else {\n            this._updateTooltipMessage();\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                // The `AriaDescriber` has some functionality that avoids adding a description if it's the\n                // same as the `aria-label` of an element, however we can't know whether the tooltip trigger\n                // has a data-bound `aria-label` or when it'll be set for the first time. We can avoid the\n                // issue by deferring the description by a tick so Angular has time to set the `aria-label`.\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._ariaDescriber.describe(this._elementRef.nativeElement, this.message);\n                }));\n            }));\n        }\n    }\n    /**\n     * Classes to be passed to the tooltip. Supports the same syntax as `ngClass`.\n     * @return {?}\n     */\n    get tooltipClass() { return this._tooltipClass; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set tooltipClass(value) {\n        this._tooltipClass = value;\n        if (this._tooltipInstance) {\n            this._setTooltipClass(this._tooltipClass);\n        }\n    }\n    /**\n     * Setup styling-specific things\n     * @return {?}\n     */\n    ngOnInit() {\n        // This needs to happen in `ngOnInit` so the initial values for all inputs have been set.\n        this._setupPointerEvents();\n    }\n    /**\n     * Dispose the tooltip when destroyed.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const nativeElement = this._elementRef.nativeElement;\n        clearTimeout(this._touchstartTimeout);\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._tooltipInstance = null;\n        }\n        // Clean up the event listeners set in the constructor\n        nativeElement.removeEventListener('keydown', this._handleKeydown);\n        this._passiveListeners.forEach((/**\n         * @param {?} listener\n         * @param {?} event\n         * @return {?}\n         */\n        (listener, event) => {\n            nativeElement.removeEventListener(event, listener, passiveListenerOptions);\n        }));\n        this._passiveListeners.clear();\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._ariaDescriber.removeDescription(nativeElement, this.message);\n        this._focusMonitor.stopMonitoring(nativeElement);\n    }\n    /**\n     * Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input\n     * @param {?=} delay\n     * @return {?}\n     */\n    show(delay = this.showDelay) {\n        if (this.disabled || !this.message || (this._isTooltipVisible() &&\n            !(/** @type {?} */ (this._tooltipInstance))._showTimeoutId && !(/** @type {?} */ (this._tooltipInstance))._hideTimeoutId)) {\n            return;\n        }\n        /** @type {?} */\n        const overlayRef = this._createOverlay();\n        this._detach();\n        this._portal = this._portal || new ComponentPortal(TooltipComponent, this._viewContainerRef);\n        this._tooltipInstance = overlayRef.attach(this._portal).instance;\n        this._tooltipInstance.afterHidden()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._detach()));\n        this._setTooltipClass(this._tooltipClass);\n        this._updateTooltipMessage();\n        (/** @type {?} */ (this._tooltipInstance)).show(delay);\n    }\n    /**\n     * Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input\n     * @param {?=} delay\n     * @return {?}\n     */\n    hide(delay = this.hideDelay) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.hide(delay);\n        }\n    }\n    /**\n     * Shows/hides the tooltip\n     * @return {?}\n     */\n    toggle() {\n        this._isTooltipVisible() ? this.hide() : this.show();\n    }\n    /**\n     * Returns true if the tooltip is currently visible to the user\n     * @return {?}\n     */\n    _isTooltipVisible() {\n        return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n    }\n    /**\n     * Create the overlay config and position strategy\n     * @private\n     * @return {?}\n     */\n    _createOverlay() {\n        if (this._overlayRef) {\n            return this._overlayRef;\n        }\n        /** @type {?} */\n        const scrollableAncestors = this._scrollDispatcher.getAncestorScrollContainers(this._elementRef);\n        // Create connected position strategy that listens for scroll events to reposition.\n        /** @type {?} */\n        const strategy = this._overlay.position()\n            .flexibleConnectedTo(this._elementRef)\n            .withTransformOriginOn('.mat-tooltip')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8)\n            .withScrollableContainers(scrollableAncestors);\n        strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} change\n         * @return {?}\n         */\n        change => {\n            if (this._tooltipInstance) {\n                if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this._ngZone.run((/**\n                     * @return {?}\n                     */\n                    () => this.hide(0)));\n                }\n            }\n        }));\n        this._overlayRef = this._overlay.create({\n            direction: this._dir,\n            positionStrategy: strategy,\n            panelClass: TOOLTIP_PANEL_CLASS,\n            scrollStrategy: this._scrollStrategy()\n        });\n        this._updatePosition();\n        this._overlayRef.detachments()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._detach()));\n        return this._overlayRef;\n    }\n    /**\n     * Detaches the currently-attached tooltip.\n     * @private\n     * @return {?}\n     */\n    _detach() {\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n        this._tooltipInstance = null;\n    }\n    /**\n     * Updates the position of the current tooltip.\n     * @private\n     * @return {?}\n     */\n    _updatePosition() {\n        /** @type {?} */\n        const position = (/** @type {?} */ ((/** @type {?} */ (this._overlayRef)).getConfig().positionStrategy));\n        /** @type {?} */\n        const origin = this._getOrigin();\n        /** @type {?} */\n        const overlay = this._getOverlayPosition();\n        position.withPositions([\n            Object.assign(Object.assign({}, origin.main), overlay.main),\n            Object.assign(Object.assign({}, origin.fallback), overlay.fallback)\n        ]);\n    }\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     * @return {?}\n     */\n    _getOrigin() {\n        /** @type {?} */\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        /** @type {?} */\n        const position = this.position;\n        /** @type {?} */\n        let originPosition;\n        if (position == 'above' || position == 'below') {\n            originPosition = { originX: 'center', originY: position == 'above' ? 'top' : 'bottom' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            originPosition = { originX: 'start', originY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            originPosition = { originX: 'end', originY: 'center' };\n        }\n        else {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(originPosition.originX, originPosition.originY);\n        return {\n            main: originPosition,\n            fallback: { originX: x, originY: y }\n        };\n    }\n    /**\n     * Returns the overlay position and a fallback position based on the user's preference\n     * @return {?}\n     */\n    _getOverlayPosition() {\n        /** @type {?} */\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        /** @type {?} */\n        const position = this.position;\n        /** @type {?} */\n        let overlayPosition;\n        if (position == 'above') {\n            overlayPosition = { overlayX: 'center', overlayY: 'bottom' };\n        }\n        else if (position == 'below') {\n            overlayPosition = { overlayX: 'center', overlayY: 'top' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            overlayPosition = { overlayX: 'end', overlayY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            overlayPosition = { overlayX: 'start', overlayY: 'center' };\n        }\n        else {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n        return {\n            main: overlayPosition,\n            fallback: { overlayX: x, overlayY: y }\n        };\n    }\n    /**\n     * Updates the tooltip message and repositions the overlay according to the new message length\n     * @private\n     * @return {?}\n     */\n    _updateTooltipMessage() {\n        // Must wait for the message to be painted to the tooltip so that the overlay can properly\n        // calculate the correct positioning based on the size of the text.\n        if (this._tooltipInstance) {\n            this._tooltipInstance.message = this.message;\n            this._tooltipInstance._markForCheck();\n            this._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1), takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                if (this._tooltipInstance) {\n                    (/** @type {?} */ (this._overlayRef)).updatePosition();\n                }\n            }));\n        }\n    }\n    /**\n     * Updates the tooltip class\n     * @private\n     * @param {?} tooltipClass\n     * @return {?}\n     */\n    _setTooltipClass(tooltipClass) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.tooltipClass = tooltipClass;\n            this._tooltipInstance._markForCheck();\n        }\n    }\n    /**\n     * Inverts an overlay position.\n     * @private\n     * @param {?} x\n     * @param {?} y\n     * @return {?}\n     */\n    _invertPosition(x, y) {\n        if (this.position === 'above' || this.position === 'below') {\n            if (y === 'top') {\n                y = 'bottom';\n            }\n            else if (y === 'bottom') {\n                y = 'top';\n            }\n        }\n        else {\n            if (x === 'end') {\n                x = 'start';\n            }\n            else if (x === 'start') {\n                x = 'end';\n            }\n        }\n        return { x, y };\n    }\n    /**\n     * Binds the pointer events to the tooltip trigger.\n     * @private\n     * @return {?}\n     */\n    _setupPointerEvents() {\n        // The mouse events shouldn't be bound on mobile devices, because they can prevent the\n        // first tap from firing its click event or can cause the tooltip to open for clicks.\n        if (!this._platform.IOS && !this._platform.ANDROID) {\n            this._passiveListeners\n                .set('mouseenter', (/**\n             * @return {?}\n             */\n            () => this.show()))\n                .set('mouseleave', (/**\n             * @return {?}\n             */\n            () => this.hide()));\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            /** @type {?} */\n            const touchendListener = (/**\n             * @return {?}\n             */\n            () => {\n                clearTimeout(this._touchstartTimeout);\n                this.hide(this._defaultOptions.touchendHideDelay);\n            });\n            this._passiveListeners\n                .set('touchend', touchendListener)\n                .set('touchcancel', touchendListener)\n                .set('touchstart', (/**\n             * @return {?}\n             */\n            () => {\n                // Note that it's important that we don't `preventDefault` here,\n                // because it can prevent click events from firing on the element.\n                clearTimeout(this._touchstartTimeout);\n                this._touchstartTimeout = setTimeout((/**\n                 * @return {?}\n                 */\n                () => this.show()), LONGPRESS_DELAY);\n            }));\n        }\n        this._passiveListeners.forEach((/**\n         * @param {?} listener\n         * @param {?} event\n         * @return {?}\n         */\n        (listener, event) => {\n            this._elementRef.nativeElement.addEventListener(event, listener, passiveListenerOptions);\n        }));\n    }\n    /**\n     * Disables the native browser gestures, based on how the tooltip has been configured.\n     * @private\n     * @return {?}\n     */\n    _disableNativeGesturesIfNecessary() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        /** @type {?} */\n        const style = element.style;\n        /** @type {?} */\n        const gestures = this.touchGestures;\n        if (gestures !== 'off') {\n            // If gestures are set to `auto`, we don't disable text selection on inputs and\n            // textareas, because it prevents the user from typing into them on iOS Safari.\n            if (gestures === 'on' || (element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA')) {\n                style.userSelect = style.msUserSelect = style.webkitUserSelect =\n                    ((/** @type {?} */ (style))).MozUserSelect = 'none';\n            }\n            // If we have `auto` gestures and the element uses native HTML dragging,\n            // we don't set `-webkit-user-drag` because it prevents the native behavior.\n            if (gestures === 'on' || !element.draggable) {\n                ((/** @type {?} */ (style))).webkitUserDrag = 'none';\n            }\n            style.touchAction = 'none';\n            style.webkitTapHighlightColor = 'transparent';\n        }\n    }\n}\nMatTooltip.ɵfac = function MatTooltip_Factory(t) { return new (t || MatTooltip)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AriaDescriber), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(MAT_TOOLTIP_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_TOOLTIP_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ElementRef)); };\nMatTooltip.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTooltip, selectors: [[\"\", \"matTooltip\", \"\"]], inputs: { showDelay: [\"matTooltipShowDelay\", \"showDelay\"], hideDelay: [\"matTooltipHideDelay\", \"hideDelay\"], touchGestures: [\"matTooltipTouchGestures\", \"touchGestures\"], position: [\"matTooltipPosition\", \"position\"], disabled: [\"matTooltipDisabled\", \"disabled\"], message: [\"matTooltip\", \"message\"], tooltipClass: [\"matTooltipClass\", \"tooltipClass\"] }, exportAs: [\"matTooltip\"] });\n/** @nocollapse */\nMatTooltip.ctorParameters = () => [\n    { type: Overlay },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: ViewContainerRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: AriaDescriber },\n    { type: FocusMonitor },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TOOLTIP_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_TOOLTIP_DEFAULT_OPTIONS,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [ElementRef,] }] }\n];\nMatTooltip.propDecorators = {\n    position: [{ type: Input, args: ['matTooltipPosition',] }],\n    disabled: [{ type: Input, args: ['matTooltipDisabled',] }],\n    showDelay: [{ type: Input, args: ['matTooltipShowDelay',] }],\n    hideDelay: [{ type: Input, args: ['matTooltipHideDelay',] }],\n    touchGestures: [{ type: Input, args: ['matTooltipTouchGestures',] }],\n    message: [{ type: Input, args: ['matTooltip',] }],\n    tooltipClass: [{ type: Input, args: ['matTooltipClass',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTooltip, [{\n        type: Directive,\n        args: [{\n                selector: '[matTooltip]',\n                exportAs: 'matTooltip'\n            }]\n    }], function () { return [{ type: ɵngcc1.Overlay }, { type: ɵngcc0.ElementRef }, { type: ɵngcc2.ScrollDispatcher }, { type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc3.Platform }, { type: ɵngcc4.AriaDescriber }, { type: ɵngcc4.FocusMonitor }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TOOLTIP_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc5.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_TOOLTIP_DEFAULT_OPTIONS]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [ElementRef]\n            }] }]; }, { showDelay: [{\n            type: Input,\n            args: ['matTooltipShowDelay']\n        }], hideDelay: [{\n            type: Input,\n            args: ['matTooltipHideDelay']\n        }], touchGestures: [{\n            type: Input,\n            args: ['matTooltipTouchGestures']\n        }], position: [{\n            type: Input,\n            args: ['matTooltipPosition']\n        }], disabled: [{\n            type: Input,\n            args: ['matTooltipDisabled']\n        }], message: [{\n            type: Input,\n            args: ['matTooltip']\n        }], tooltipClass: [{\n            type: Input,\n            args: ['matTooltipClass']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTooltip.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatTooltip.ngAcceptInputType_hideDelay;\n    /** @type {?} */\n    MatTooltip.ngAcceptInputType_showDelay;\n    /** @type {?} */\n    MatTooltip.prototype._overlayRef;\n    /** @type {?} */\n    MatTooltip.prototype._tooltipInstance;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._portal;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._position;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._tooltipClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._scrollStrategy;\n    /**\n     * The default delay in ms before showing the tooltip after show is called\n     * @type {?}\n     */\n    MatTooltip.prototype.showDelay;\n    /**\n     * The default delay in ms before hiding the tooltip after hide is called\n     * @type {?}\n     */\n    MatTooltip.prototype.hideDelay;\n    /**\n     * How touch gestures should be handled by the tooltip. On touch devices the tooltip directive\n     * uses a long press gesture to show and hide, however it can conflict with the native browser\n     * gestures. To work around the conflict, Angular Material disables native gestures on the\n     * trigger, but that might not be desirable on particular elements (e.g. inputs and draggable\n     * elements). The different values for this option configure the touch event handling as follows:\n     * - `auto` - Enables touch gestures for all elements, but tries to avoid conflicts with native\n     *   browser gestures on particular elements. In particular, it allows text selection on inputs\n     *   and textareas, and preserves the native browser dragging on elements marked as `draggable`.\n     * - `on` - Enables touch gestures for all elements and disables native\n     *   browser gestures with no exceptions.\n     * - `off` - Disables touch gestures. Note that this will prevent the tooltip from\n     *   showing on touch devices.\n     * @type {?}\n     */\n    MatTooltip.prototype.touchGestures;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._message;\n    /**\n     * Manually-bound passive event listeners.\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._passiveListeners;\n    /**\n     * Timer started at the last `touchstart` event.\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._touchstartTimeout;\n    /**\n     * Emits when the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._destroyed;\n    /**\n     * Handles the keydown events on the host element.\n     * Needs to be an arrow function so that we can use it in addEventListener.\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._handleKeydown;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._scrollDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._viewContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._ariaDescriber;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._defaultOptions;\n}\n/**\n * Internal component that wraps the tooltip's content.\n * \\@docs-private\n */\nclass TooltipComponent {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _breakpointObserver\n     */\n    constructor(_changeDetectorRef, _breakpointObserver) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._breakpointObserver = _breakpointObserver;\n        /**\n         * Property watched by the animation framework to show or hide the tooltip\n         */\n        this._visibility = 'initial';\n        /**\n         * Whether interactions on the page should close the tooltip\n         */\n        this._closeOnInteraction = false;\n        /**\n         * Subject for notifying that the tooltip has been hidden from the view\n         */\n        this._onHide = new Subject();\n        /**\n         * Stream that emits whether the user has a handset-sized display.\n         */\n        this._isHandset = this._breakpointObserver.observe(Breakpoints.Handset);\n    }\n    /**\n     * Shows the tooltip with an animation originating from the provided origin\n     * @param {?} delay Amount of milliseconds to the delay showing the tooltip.\n     * @return {?}\n     */\n    show(delay) {\n        // Cancel the delayed hide if it is scheduled\n        if (this._hideTimeoutId) {\n            clearTimeout(this._hideTimeoutId);\n            this._hideTimeoutId = null;\n        }\n        // Body interactions should cancel the tooltip if there is a delay in showing.\n        this._closeOnInteraction = true;\n        this._showTimeoutId = setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this._visibility = 'visible';\n            this._showTimeoutId = null;\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this._markForCheck();\n        }), delay);\n    }\n    /**\n     * Begins the animation to hide the tooltip after the provided delay in ms.\n     * @param {?} delay Amount of milliseconds to delay showing the tooltip.\n     * @return {?}\n     */\n    hide(delay) {\n        // Cancel the delayed show if it is scheduled\n        if (this._showTimeoutId) {\n            clearTimeout(this._showTimeoutId);\n            this._showTimeoutId = null;\n        }\n        this._hideTimeoutId = setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this._visibility = 'hidden';\n            this._hideTimeoutId = null;\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this._markForCheck();\n        }), delay);\n    }\n    /**\n     * Returns an observable that notifies when the tooltip has been hidden from view.\n     * @return {?}\n     */\n    afterHidden() {\n        return this._onHide.asObservable();\n    }\n    /**\n     * Whether the tooltip is being displayed.\n     * @return {?}\n     */\n    isVisible() {\n        return this._visibility === 'visible';\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._onHide.complete();\n    }\n    /**\n     * @return {?}\n     */\n    _animationStart() {\n        this._closeOnInteraction = false;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _animationDone(event) {\n        /** @type {?} */\n        const toState = (/** @type {?} */ (event.toState));\n        if (toState === 'hidden' && !this.isVisible()) {\n            this._onHide.next();\n        }\n        if (toState === 'visible' || toState === 'hidden') {\n            this._closeOnInteraction = true;\n        }\n    }\n    /**\n     * Interactions on the HTML body should close the tooltip immediately as defined in the\n     * material design spec.\n     * https://material.io/design/components/tooltips.html#behavior\n     * @return {?}\n     */\n    _handleBodyInteraction() {\n        if (this._closeOnInteraction) {\n            this.hide(0);\n        }\n    }\n    /**\n     * Marks that the tooltip needs to be checked in the next change detection run.\n     * Mainly used for rendering the initial text before positioning a tooltip, which\n     * can be problematic in components with OnPush change detection.\n     * @return {?}\n     */\n    _markForCheck() {\n        this._changeDetectorRef.markForCheck();\n    }\n}\nTooltipComponent.ɵfac = function TooltipComponent_Factory(t) { return new (t || TooltipComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.BreakpointObserver)); };\nTooltipComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TooltipComponent, selectors: [[\"mat-tooltip-component\"]], hostAttrs: [\"aria-hidden\", \"true\"], hostVars: 2, hostBindings: function TooltipComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function TooltipComponent_click_HostBindingHandler() { return ctx._handleBodyInteraction(); }, false, ɵngcc0.ɵɵresolveBody);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"zoom\", ctx._visibility === \"visible\" ? 1 : null);\n    } }, decls: 3, vars: 7, consts: [[1, \"mat-tooltip\", 3, \"ngClass\"]], template: function TooltipComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"@state.start\", function TooltipComponent_Template_div_animation_state_start_0_listener() { return ctx._animationStart(); })(\"@state.done\", function TooltipComponent_Template_div_animation_state_done_0_listener($event) { return ctx._animationDone($event); });\n        ɵngcc0.ɵɵpipe(1, \"async\");\n        ɵngcc0.ɵɵtext(2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        var tmp_0_0 = null;\n        const currVal_0 = (tmp_0_0 = ɵngcc0.ɵɵpipeBind1(1, 5, ctx._isHandset)) == null ? null : tmp_0_0.matches;\n        ɵngcc0.ɵɵclassProp(\"mat-tooltip-handset\", currVal_0);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.tooltipClass)(\"@state\", ctx._visibility);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵtextInterpolate(ctx.message);\n    } }, directives: [ɵngcc7.NgClass], pipes: [ɵngcc7.AsyncPipe], styles: [\".mat-tooltip-panel{pointer-events:none !important}.mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis}.cdk-high-contrast-active .mat-tooltip{outline:solid 1px}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}\\n\"], encapsulation: 2, data: { animation: [matTooltipAnimations.tooltipState] }, changeDetection: 0 });\n/** @nocollapse */\nTooltipComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: BreakpointObserver }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TooltipComponent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tooltip-component',\n                template: \"<div class=\\\"mat-tooltip\\\"\\n     [ngClass]=\\\"tooltipClass\\\"\\n     [class.mat-tooltip-handset]=\\\"(_isHandset | async)?.matches\\\"\\n     [@state]=\\\"_visibility\\\"\\n     (@state.start)=\\\"_animationStart()\\\"\\n     (@state.done)=\\\"_animationDone($event)\\\">{{message}}</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                animations: [matTooltipAnimations.tooltipState],\n                host: {\n                    // Forces the element to have a layout in IE and Edge. This fixes issues where the element\n                    // won't be rendered if the animations are disabled or there is no web animations polyfill.\n                    '[style.zoom]': '_visibility === \"visible\" ? 1 : null',\n                    '(body:click)': 'this._handleBodyInteraction()',\n                    'aria-hidden': 'true'\n                },\n                styles: [\".mat-tooltip-panel{pointer-events:none !important}.mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis}.cdk-high-contrast-active .mat-tooltip{outline:solid 1px}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.BreakpointObserver }]; }, null); })();\nif (false) {\n    /**\n     * Message to display in the tooltip\n     * @type {?}\n     */\n    TooltipComponent.prototype.message;\n    /**\n     * Classes to be added to the tooltip. Supports the same syntax as `ngClass`.\n     * @type {?}\n     */\n    TooltipComponent.prototype.tooltipClass;\n    /**\n     * The timeout ID of any current timer set to show the tooltip\n     * @type {?}\n     */\n    TooltipComponent.prototype._showTimeoutId;\n    /**\n     * The timeout ID of any current timer set to hide the tooltip\n     * @type {?}\n     */\n    TooltipComponent.prototype._hideTimeoutId;\n    /**\n     * Property watched by the animation framework to show or hide the tooltip\n     * @type {?}\n     */\n    TooltipComponent.prototype._visibility;\n    /**\n     * Whether interactions on the page should close the tooltip\n     * @type {?}\n     * @private\n     */\n    TooltipComponent.prototype._closeOnInteraction;\n    /**\n     * Subject for notifying that the tooltip has been hidden from the view\n     * @type {?}\n     * @private\n     */\n    TooltipComponent.prototype._onHide;\n    /**\n     * Stream that emits whether the user has a handset-sized display.\n     * @type {?}\n     */\n    TooltipComponent.prototype._isHandset;\n    /**\n     * @type {?}\n     * @private\n     */\n    TooltipComponent.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    TooltipComponent.prototype._breakpointObserver;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tooltip/tooltip-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatTooltipModule {\n}\nMatTooltipModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTooltipModule });\nMatTooltipModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTooltipModule_Factory(t) { return new (t || MatTooltipModule)(); }, providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[\n            A11yModule,\n            CommonModule,\n            OverlayModule,\n            MatCommonModule,\n        ],\n        MatCommonModule, CdkScrollableModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTooltipModule, { declarations: function () { return [MatTooltip,\n        TooltipComponent]; }, imports: function () { return [A11yModule,\n        CommonModule,\n        OverlayModule,\n        MatCommonModule]; }, exports: function () { return [MatTooltip,\n        TooltipComponent,\n        MatCommonModule, CdkScrollableModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTooltipModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    A11yModule,\n                    CommonModule,\n                    OverlayModule,\n                    MatCommonModule,\n                ],\n                exports: [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule],\n                declarations: [MatTooltip, TooltipComponent],\n                entryComponents: [TooltipComponent],\n                providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tooltip/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TOOLTIP_DEFAULT_OPTIONS, MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER, MatTooltip, MatTooltipModule, SCROLL_THROTTLE_MS, TOOLTIP_PANEL_CLASS, TooltipComponent, getMatTooltipInvalidPositionError, matTooltipAnimations };\n\n//# sourceMappingURL=tooltip.js.map","import { CdkTreeNode, CdkTree, CdkTreeNodeDef, CdkNestedTreeNode, CDK_TREE_NODE_OUTLET_NODE, CdkTreeNodePadding, CdkTreeNodeOutlet, CdkTreeNodeToggle, CdkTreeModule } from '@angular/cdk/tree';\nimport { Directive, ElementRef, Attribute, Input, IterableDiffers, ViewContainerRef, Inject, Optional, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinDisabled, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { DataSource } from '@angular/cdk/collections';\nimport { BehaviorSubject, merge } from 'rxjs';\nimport { take, map } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tree/node.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/tree';\nconst _MatTreeNodeMixinBase = mixinTabIndex(mixinDisabled(CdkTreeNode));\n/**\n * Wrapper for the CdkTree node with Material design styles.\n * @template T\n */\nclass MatTreeNode extends _MatTreeNodeMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _tree\n     * @param {?} tabIndex\n     */\n    constructor(_elementRef, _tree, tabIndex) {\n        super(_elementRef, _tree);\n        this._elementRef = _elementRef;\n        this._tree = _tree;\n        this.role = 'treeitem';\n        this.tabIndex = Number(tabIndex) || 0;\n    }\n}\nMatTreeNode.ɵfac = function MatTreeNode_Factory(t) { return new (t || MatTreeNode)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkTree), ɵngcc0.ɵɵinjectAttribute('tabindex')); };\nMatTreeNode.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTreeNode, selectors: [[\"mat-tree-node\"]], hostAttrs: [1, \"mat-tree-node\"], hostVars: 3, hostBindings: function MatTreeNode_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.isExpanded)(\"aria-level\", ctx.role === \"treeitem\" ? ctx.level : null)(\"role\", ctx.role);\n    } }, inputs: { disabled: \"disabled\", tabIndex: \"tabIndex\", role: \"role\" }, exportAs: [\"matTreeNode\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkTreeNode, useExisting: MatTreeNode }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatTreeNode.ctorParameters = () => [\n    { type: ElementRef },\n    { type: CdkTree },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\n];\nMatTreeNode.propDecorators = {\n    role: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTreeNode, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-tree-node',\n                exportAs: 'matTreeNode',\n                inputs: ['disabled', 'tabIndex'],\n                host: {\n                    '[attr.aria-expanded]': 'isExpanded',\n                    '[attr.aria-level]': 'role === \"treeitem\" ? level : null',\n                    '[attr.role]': 'role',\n                    'class': 'mat-tree-node'\n                },\n                providers: [{ provide: CdkTreeNode, useExisting: MatTreeNode }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.CdkTree }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }]; }, { role: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTreeNode.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatTreeNode.prototype.role;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatTreeNode.prototype._elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatTreeNode.prototype._tree;\n}\n/**\n * Wrapper for the CdkTree node definition with Material design styles.\n * @template T\n */\nclass MatTreeNodeDef extends CdkTreeNodeDef {\n}\nMatTreeNodeDef.ɵfac = function MatTreeNodeDef_Factory(t) { return ɵMatTreeNodeDef_BaseFactory(t || MatTreeNodeDef); };\nMatTreeNodeDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTreeNodeDef, selectors: [[\"\", \"matTreeNodeDef\", \"\"]], inputs: { when: [\"matTreeNodeDefWhen\", \"when\"], data: [\"matTreeNode\", \"data\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkTreeNodeDef, useExisting: MatTreeNodeDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTreeNodeDef.propDecorators = {\n    data: [{ type: Input, args: ['matTreeNode',] }]\n};\nconst ɵMatTreeNodeDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTreeNodeDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTreeNodeDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matTreeNodeDef]',\n                inputs: [\n                    'when: matTreeNodeDefWhen'\n                ],\n                providers: [{ provide: CdkTreeNodeDef, useExisting: MatTreeNodeDef }]\n            }]\n    }], null, { data: [{\n            type: Input,\n            args: ['matTreeNode']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTreeNodeDef.prototype.data;\n}\n/**\n * Wrapper for the CdkTree nested node with Material design styles.\n * @template T\n */\nclass MatNestedTreeNode extends CdkNestedTreeNode {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _tree\n     * @param {?} _differs\n     * @param {?} tabIndex\n     */\n    constructor(_elementRef, _tree, _differs, tabIndex) {\n        super(_elementRef, _tree, _differs);\n        this._elementRef = _elementRef;\n        this._tree = _tree;\n        this._differs = _differs;\n        this._disabled = false;\n        this.tabIndex = Number(tabIndex) || 0;\n    }\n    /**\n     * Whether the node is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    /**\n     * Tabindex for the node.\n     * @return {?}\n     */\n    get tabIndex() { return this.disabled ? -1 : this._tabIndex; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set tabIndex(value) {\n        // If the specified tabIndex value is null or undefined, fall back to the default value.\n        this._tabIndex = value != null ? value : 0;\n    }\n    // This is a workaround for https://github.com/angular/angular/issues/23091\n    // In aot mode, the lifecycle hooks from parent class are not called.\n    // TODO(tinayuangao): Remove when the angular issue #23091 is fixed\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        super.ngAfterContentInit();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n    }\n}\nMatNestedTreeNode.ɵfac = function MatNestedTreeNode_Factory(t) { return new (t || MatNestedTreeNode)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkTree), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵinjectAttribute('tabindex')); };\nMatNestedTreeNode.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatNestedTreeNode, selectors: [[\"mat-nested-tree-node\"]], hostAttrs: [1, \"mat-nested-tree-node\"], hostVars: 2, hostBindings: function MatNestedTreeNode_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.isExpanded)(\"role\", ctx.role);\n    } }, inputs: { tabIndex: \"tabIndex\", disabled: \"disabled\", node: [\"matNestedTreeNode\", \"node\"] }, exportAs: [\"matNestedTreeNode\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CdkNestedTreeNode, useExisting: MatNestedTreeNode },\n            { provide: CdkTreeNode, useExisting: MatNestedTreeNode },\n            { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: MatNestedTreeNode }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatNestedTreeNode.ctorParameters = () => [\n    { type: ElementRef },\n    { type: CdkTree },\n    { type: IterableDiffers },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\n];\nMatNestedTreeNode.propDecorators = {\n    node: [{ type: Input, args: ['matNestedTreeNode',] }],\n    disabled: [{ type: Input }],\n    tabIndex: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatNestedTreeNode, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-nested-tree-node',\n                exportAs: 'matNestedTreeNode',\n                host: {\n                    '[attr.aria-expanded]': 'isExpanded',\n                    '[attr.role]': 'role',\n                    'class': 'mat-nested-tree-node'\n                },\n                providers: [\n                    { provide: CdkNestedTreeNode, useExisting: MatNestedTreeNode },\n                    { provide: CdkTreeNode, useExisting: MatNestedTreeNode },\n                    { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: MatNestedTreeNode }\n                ]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.CdkTree }, { type: ɵngcc0.IterableDiffers }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }]; }, { tabIndex: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], node: [{\n            type: Input,\n            args: ['matNestedTreeNode']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatNestedTreeNode.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatNestedTreeNode.prototype.node;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatNestedTreeNode.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatNestedTreeNode.prototype._tabIndex;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatNestedTreeNode.prototype._elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatNestedTreeNode.prototype._tree;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatNestedTreeNode.prototype._differs;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tree/padding.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Wrapper for the CdkTree padding with Material design styles.\n * @template T\n */\nclass MatTreeNodePadding extends CdkTreeNodePadding {\n}\nMatTreeNodePadding.ɵfac = function MatTreeNodePadding_Factory(t) { return ɵMatTreeNodePadding_BaseFactory(t || MatTreeNodePadding); };\nMatTreeNodePadding.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTreeNodePadding, selectors: [[\"\", \"matTreeNodePadding\", \"\"]], inputs: { level: [\"matTreeNodePadding\", \"level\"], indent: [\"matTreeNodePaddingIndent\", \"indent\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkTreeNodePadding, useExisting: MatTreeNodePadding }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTreeNodePadding.propDecorators = {\n    level: [{ type: Input, args: ['matTreeNodePadding',] }],\n    indent: [{ type: Input, args: ['matTreeNodePaddingIndent',] }]\n};\nconst ɵMatTreeNodePadding_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTreeNodePadding);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTreeNodePadding, [{\n        type: Directive,\n        args: [{\n                selector: '[matTreeNodePadding]',\n                providers: [{ provide: CdkTreeNodePadding, useExisting: MatTreeNodePadding }]\n            }]\n    }], null, { level: [{\n            type: Input,\n            args: ['matTreeNodePadding']\n        }], indent: [{\n            type: Input,\n            args: ['matTreeNodePaddingIndent']\n        }] }); })();\nif (false) {\n    /**\n     * The level of depth of the tree node. The padding will be `level * indent` pixels.\n     * @type {?}\n     */\n    MatTreeNodePadding.prototype.level;\n    /**\n     * The indent for each level. Default number 40px from material design menu sub-menu spec.\n     * @type {?}\n     */\n    MatTreeNodePadding.prototype.indent;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tree/outlet.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Outlet for nested CdkNode. Put `[matTreeNodeOutlet]` on a tag to place children dataNodes\n * inside the outlet.\n */\nclass MatTreeNodeOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?=} _node\n     */\n    constructor(viewContainer, _node) {\n        this.viewContainer = viewContainer;\n        this._node = _node;\n    }\n}\nMatTreeNodeOutlet.ɵfac = function MatTreeNodeOutlet_Factory(t) { return new (t || MatTreeNodeOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(CDK_TREE_NODE_OUTLET_NODE, 8)); };\nMatTreeNodeOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTreeNodeOutlet, selectors: [[\"\", \"matTreeNodeOutlet\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkTreeNodeOutlet,\n                useExisting: MatTreeNodeOutlet\n            }])] });\n/** @nocollapse */\nMatTreeNodeOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TREE_NODE_OUTLET_NODE,] }, { type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTreeNodeOutlet, [{\n        type: Directive,\n        args: [{\n                selector: '[matTreeNodeOutlet]',\n                providers: [{\n                        provide: CdkTreeNodeOutlet,\n                        useExisting: MatTreeNodeOutlet\n                    }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TREE_NODE_OUTLET_NODE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatTreeNodeOutlet.prototype.viewContainer;\n    /** @type {?} */\n    MatTreeNodeOutlet.prototype._node;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tree/tree.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Wrapper for the CdkTable with Material design styles.\n * @template T\n */\nclass MatTree extends CdkTree {\n}\nMatTree.ɵfac = function MatTree_Factory(t) { return ɵMatTree_BaseFactory(t || MatTree); };\nMatTree.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTree, selectors: [[\"mat-tree\"]], viewQuery: function MatTree_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(MatTreeNodeOutlet, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nodeOutlet = _t.first);\n    } }, hostAttrs: [\"role\", \"tree\", 1, \"mat-tree\"], exportAs: [\"matTree\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkTree, useExisting: MatTree }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"matTreeNodeOutlet\", \"\"]], template: function MatTree_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [MatTreeNodeOutlet], styles: [\".mat-tree{display:block}.mat-tree-node{display:flex;align-items:center;min-height:48px;flex:1;word-wrap:break-word}.mat-nested-tree-node{border-bottom-width:0}\\n\"], encapsulation: 2 });\nMatTree.propDecorators = {\n    _nodeOutlet: [{ type: ViewChild, args: [MatTreeNodeOutlet, { static: true },] }]\n};\nconst ɵMatTree_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTree);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTree, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tree',\n                exportAs: 'matTree',\n                template: `<ng-container matTreeNodeOutlet></ng-container>`,\n                host: {\n                    'class': 'mat-tree',\n                    'role': 'tree'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // See note on CdkTree for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                providers: [{ provide: CdkTree, useExisting: MatTree }],\n                styles: [\".mat-tree{display:block}.mat-tree-node{display:flex;align-items:center;min-height:48px;flex:1;word-wrap:break-word}.mat-nested-tree-node{border-bottom-width:0}\\n\"]\n            }]\n    }], null, { _nodeOutlet: [{\n            type: ViewChild,\n            args: [MatTreeNodeOutlet, { static: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTree.prototype._nodeOutlet;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tree/toggle.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Wrapper for the CdkTree's toggle with Material design styles.\n * @template T\n */\nclass MatTreeNodeToggle extends CdkTreeNodeToggle {\n    constructor() {\n        super(...arguments);\n        this.recursive = false;\n    }\n}\nMatTreeNodeToggle.ɵfac = function MatTreeNodeToggle_Factory(t) { return ɵMatTreeNodeToggle_BaseFactory(t || MatTreeNodeToggle); };\nMatTreeNodeToggle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTreeNodeToggle, selectors: [[\"\", \"matTreeNodeToggle\", \"\"]], inputs: { recursive: [\"matTreeNodeToggleRecursive\", \"recursive\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkTreeNodeToggle, useExisting: MatTreeNodeToggle }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTreeNodeToggle.propDecorators = {\n    recursive: [{ type: Input, args: ['matTreeNodeToggleRecursive',] }]\n};\nconst ɵMatTreeNodeToggle_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTreeNodeToggle);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTreeNodeToggle, [{\n        type: Directive,\n        args: [{\n                selector: '[matTreeNodeToggle]',\n                providers: [{ provide: CdkTreeNodeToggle, useExisting: MatTreeNodeToggle }]\n            }]\n    }], null, { recursive: [{\n            type: Input,\n            args: ['matTreeNodeToggleRecursive']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTreeNodeToggle.prototype.recursive;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tree/tree-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAT_TREE_DIRECTIVES = [\n    MatNestedTreeNode,\n    MatTreeNodeDef,\n    MatTreeNodePadding,\n    MatTreeNodeToggle,\n    MatTree,\n    MatTreeNode,\n    MatTreeNodeOutlet\n];\nclass MatTreeModule {\n}\nMatTreeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTreeModule });\nMatTreeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTreeModule_Factory(t) { return new (t || MatTreeModule)(); }, imports: [[CdkTreeModule, MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTreeModule, { declarations: function () { return [MatNestedTreeNode,\n        MatTreeNodeDef,\n        MatTreeNodePadding,\n        MatTreeNodeToggle,\n        MatTree,\n        MatTreeNode,\n        MatTreeNodeOutlet]; }, imports: function () { return [CdkTreeModule, MatCommonModule]; }, exports: function () { return [MatCommonModule,\n        MatNestedTreeNode,\n        MatTreeNodeDef,\n        MatTreeNodePadding,\n        MatTreeNodeToggle,\n        MatTree,\n        MatTreeNode,\n        MatTreeNodeOutlet]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTreeModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CdkTreeModule, MatCommonModule],\n                exports: [MatCommonModule, MAT_TREE_DIRECTIVES],\n                declarations: MAT_TREE_DIRECTIVES\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tree/data-source/flat-data-source.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n * @template T, F\n */\nclass MatTreeFlattener {\n    /**\n     * @param {?} transformFunction\n     * @param {?} getLevel\n     * @param {?} isExpandable\n     * @param {?} getChildren\n     */\n    constructor(transformFunction, getLevel, isExpandable, getChildren) {\n        this.transformFunction = transformFunction;\n        this.getLevel = getLevel;\n        this.isExpandable = isExpandable;\n        this.getChildren = getChildren;\n    }\n    /**\n     * @param {?} node\n     * @param {?} level\n     * @param {?} resultNodes\n     * @param {?} parentMap\n     * @return {?}\n     */\n    _flattenNode(node, level, resultNodes, parentMap) {\n        /** @type {?} */\n        const flatNode = this.transformFunction(node, level);\n        resultNodes.push(flatNode);\n        if (this.isExpandable(flatNode)) {\n            /** @type {?} */\n            const childrenNodes = this.getChildren(node);\n            if (childrenNodes) {\n                if (Array.isArray(childrenNodes)) {\n                    this._flattenChildren(childrenNodes, level, resultNodes, parentMap);\n                }\n                else {\n                    childrenNodes.pipe(take(1)).subscribe((/**\n                     * @param {?} children\n                     * @return {?}\n                     */\n                    children => {\n                        this._flattenChildren(children, level, resultNodes, parentMap);\n                    }));\n                }\n            }\n        }\n        return resultNodes;\n    }\n    /**\n     * @param {?} children\n     * @param {?} level\n     * @param {?} resultNodes\n     * @param {?} parentMap\n     * @return {?}\n     */\n    _flattenChildren(children, level, resultNodes, parentMap) {\n        children.forEach((/**\n         * @param {?} child\n         * @param {?} index\n         * @return {?}\n         */\n        (child, index) => {\n            /** @type {?} */\n            let childParentMap = parentMap.slice();\n            childParentMap.push(index != children.length - 1);\n            this._flattenNode(child, level + 1, resultNodes, childParentMap);\n        }));\n    }\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     * @param {?} structuredData\n     * @return {?}\n     */\n    flattenNodes(structuredData) {\n        /** @type {?} */\n        let resultNodes = [];\n        structuredData.forEach((/**\n         * @param {?} node\n         * @return {?}\n         */\n        node => this._flattenNode(node, 0, resultNodes, [])));\n        return resultNodes;\n    }\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     * @param {?} nodes\n     * @param {?} treeControl\n     * @return {?}\n     */\n    expandFlattenedNodes(nodes, treeControl) {\n        /** @type {?} */\n        let results = [];\n        /** @type {?} */\n        let currentExpand = [];\n        currentExpand[0] = true;\n        nodes.forEach((/**\n         * @param {?} node\n         * @return {?}\n         */\n        node => {\n            /** @type {?} */\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n            if (expand) {\n                results.push(node);\n            }\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        }));\n        return results;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatTreeFlattener.prototype.transformFunction;\n    /** @type {?} */\n    MatTreeFlattener.prototype.getLevel;\n    /** @type {?} */\n    MatTreeFlattener.prototype.isExpandable;\n    /** @type {?} */\n    MatTreeFlattener.prototype.getChildren;\n}\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `MatTree`.\n * The nested tree nodes of type `T` are flattened through `MatTreeFlattener`, and converted\n * to type `F` for `MatTree` to consume.\n * @template T, F\n */\nclass MatTreeFlatDataSource extends DataSource {\n    /**\n     * @param {?} _treeControl\n     * @param {?} _treeFlattener\n     * @param {?=} initialData\n     */\n    constructor(_treeControl, _treeFlattener, initialData = []) {\n        super();\n        this._treeControl = _treeControl;\n        this._treeFlattener = _treeFlattener;\n        this._flattenedData = new BehaviorSubject([]);\n        this._expandedData = new BehaviorSubject([]);\n        this._data = new BehaviorSubject(initialData);\n    }\n    /**\n     * @return {?}\n     */\n    get data() { return this._data.value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set data(value) {\n        this._data.next(value);\n        this._flattenedData.next(this._treeFlattener.flattenNodes(this.data));\n        this._treeControl.dataNodes = this._flattenedData.value;\n    }\n    /**\n     * @param {?} collectionViewer\n     * @return {?}\n     */\n    connect(collectionViewer) {\n        /** @type {?} */\n        const changes = [\n            collectionViewer.viewChange,\n            this._treeControl.expansionModel.changed,\n            this._flattenedData\n        ];\n        return merge(...changes).pipe(map((/**\n         * @return {?}\n         */\n        () => {\n            this._expandedData.next(this._treeFlattener.expandFlattenedNodes(this._flattenedData.value, this._treeControl));\n            return this._expandedData.value;\n        })));\n    }\n    /**\n     * @return {?}\n     */\n    disconnect() {\n        // no op\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatTreeFlatDataSource.prototype._flattenedData;\n    /** @type {?} */\n    MatTreeFlatDataSource.prototype._expandedData;\n    /** @type {?} */\n    MatTreeFlatDataSource.prototype._data;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTreeFlatDataSource.prototype._treeControl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTreeFlatDataSource.prototype._treeFlattener;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tree/data-source/nested-data-source.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by TreeControl and each non-leaf node.\n * @template T\n */\nclass MatTreeNestedDataSource extends DataSource {\n    constructor() {\n        super(...arguments);\n        this._data = new BehaviorSubject([]);\n    }\n    /**\n     * Data for the nested tree\n     * @return {?}\n     */\n    get data() { return this._data.value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set data(value) { this._data.next(value); }\n    /**\n     * @param {?} collectionViewer\n     * @return {?}\n     */\n    connect(collectionViewer) {\n        return merge(...[collectionViewer.viewChange, this._data])\n            .pipe(map((/**\n         * @return {?}\n         */\n        () => {\n            return this.data;\n        })));\n    }\n    /**\n     * @return {?}\n     */\n    disconnect() {\n        // no op\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatTreeNestedDataSource.prototype._data;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tree/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatNestedTreeNode, MatTree, MatTreeFlatDataSource, MatTreeFlattener, MatTreeModule, MatTreeNestedDataSource, MatTreeNode, MatTreeNodeDef, MatTreeNodeOutlet, MatTreeNodePadding, MatTreeNodeToggle };\n\n//# sourceMappingURL=tree.js.map","\nimport { CommonModule } from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\n\n@NgModule({\n  imports:[\n    CommonModule,\n    A11yModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule\n  ],\n  exports: [\n    CommonModule,\n    A11yModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n  ]\n})\n\nexport class AngmaterialModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-aboutus',\n  templateUrl: './aboutus.component.html',\n  styleUrls: ['./aboutus.component.css']\n})\nexport class AboutusComponent implements OnInit {\n images:string[] = [\"organic1.jpg\",\"organic2.jpg\",\"organic3.jpg\",\"organic4.jpg\",\"organic5.jpg\"];\n current:string =\"https://storageblobcommerce.blob.core.windows.net/imagesecommerceclient/organic1.jpg\";\n  constructor() { }\n\n  ngOnInit(): void {\n    setInterval(()=> this.current =\"https://storageblobcommerce.blob.core.windows.net/imagesecommerceclient/\" +this.images[Math.round(Math.random()*4)]\n    ,2000)\n  }\n\n}\n","<h1> About us </h1>\n<p>\n    At Well.ca, we deliver wellness on your terms because we believe that you should never have to compromise on the health, wellness, baby and beauty products you choose for yourself and your loved ones. That’s why we offer a broad selection of carefully curated, peer-reviewed products, all available online and delivered right to your door. It’s because we know that choice matters.\n</p>\n<div id=\"slide-show\">\n     <img src= {{current}} >\n</div>\n<p>\nWith over 40,000 products and Canada’s largest assortment of green & natural brands (plus all of your familiar favourites), we make it easy to make choices you can trust. We deliver a quick, convenient, and hassle-free shopping experience, because we listen and we know what matters to you.\n</p>\n<p>\nWe’re a fast-growing, proudly Canadian company that’s passionate about our customers, our business, and the products we sell. There’s a real person behind every item we offer, every package we ship, and every interaction we have with you, because we love sharing our passion for health and wellness with you.\n</p>\n<p>\nWhether you’re looking for a familiar brand, or want to try something new or more green and natural, you can be confident that you’ll have a great experience with Well.ca making choices that you can trust for yourself and your family.\n</p>\n<p>\n    <br>\n    <br>\n    <br>\n</p>","import { Component, OnInit, Inject } from '@angular/core';\nimport { ContactService } from 'src/app/services/contact.service';\nimport {MatDialog, MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-complaints',\n  templateUrl: './complaints.component.html',\n  styleUrls: ['./complaints.component.css']\n})\nexport class ComplaintsComponent implements OnInit {\n  messages:any[];\n  constructor(private cs:ContactService,private dialog:MatDialog) { }\n\n  ngOnInit(): void {\n      this.cs.getMessages().subscribe\n      (\n        (data:any[])=>this.messages=data,\n        ()=>this.messages=[]\n      )\n  }\n\n  openDialog(to) {\n  \n    const dialogRef = this.dialog.open(DialogComponent,{\n      data: {\n        to:to,\n        username:sessionStorage.getItem('username'),\n        email: sessionStorage.getItem(\"email\")\n      }\n    });\n    \n    dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n    });\n  }\n\n\n}\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: []\n})\nexport class DialogComponent implements OnInit {\n  subject:string;\n  message:string;\n  constructor(private cs:ContactService,@Inject(MAT_DIALOG_DATA) public data) { \n    console.log(data)\n  }\n\n  ngOnInit(): void {\n    \n  \n  }\n\n  send(){\n    let obj ={username:this.data.username,email:this.data.email,subject:this.subject,message:this.message,\n      to:this.data.to};\n      this.cs.sendMessage(obj).subscribe(\n        ()=>  {alert (\"Message Sent\"); this.subject=\"\",this.message=\"\"},\n        ()=>  {alert(\"Not able to send your message\")}\n      )\n  }\n\n}\n\n","<div class=\"alert alert-info\">\n    <h1>Complaints</h1>\n</div>\n<table class=\"table table-hover\">\n     <thead>\n          <tr>\n              <th>User</th>\n              <th>Subject</th>\n              <th>Message</th>\n              <th>Reply</th>\n          </tr>\n\n     </thead>\n     <tbody>\n          <tr *ngFor=\"let x of messages\">\n              <td>{{x.username}}</td>\n              <td>{{x.subject}}</td>\n              <td>{{x.message}}</td>\n              <td><button class=\"btn btn-success\" (click)=\"openDialog(x.username)\">Reply</button></td>\n          </tr>\n     </tbody>\n</table>","<h1>Write Us </h1>\r\n<div class=\"field\">\r\n   <mat-form-field appearance=\"fill\" [style.width]=\"'700px'\">\r\n      <mat-label>Subject</mat-label>\r\n      <input matInput [(ngModel)]=\"subject\">\r\n    </mat-form-field>\r\n    <br>\r\n    <mat-form-field appearance=\"fill\" [style.width]=\"'700px'\">\r\n      <mat-label>Your Message to us</mat-label>\r\n      <textarea matInput\r\n      rows=\"10\" [(ngModel)]=\"message\"\r\n     ></textarea>\r\n    </mat-form-field>\r\n    <br>\r\n    <button (click)=\"send()\" class=\"btn btn-success\" [style.margin-left]=\"'500px'\">Send Message</button>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ContactService } from 'src/app/services/contact.service';\n\n@Component({\n  selector: 'app-contactus',\n  templateUrl: './contactus.component.html',\n  styleUrls: ['./contactus.component.css']\n})\nexport class ContactusComponent implements OnInit {\nsubject:string;\nmessage:string;\n  constructor(private cs:ContactService) { }\n\n  ngOnInit(): void {\n  }\n  send(){\n      if(this.subject == undefined || this.subject.length <5 )\n        alert (\" Subject should be atleast 5 char long\")\n\n      else  if(this.message == undefined || this.message.length <5 )\n        alert (\" Message should be atleast 20 char long\")\n      else {\n           let username=sessionStorage.getItem(\"username\")\n           let email=sessionStorage.getItem(\"email\")\n           let obj ={username:username,email:email,subject:this.subject,message:this.message};\n           this.cs.sendMessage(obj).subscribe(\n             ()=>  {alert (\"Message Sent\"); this.subject=\"\",this.message=\"\"},\n             ()=>  {alert(\"Not able to send your message\")}\n           )\n\n      }\n  }\n}\n","\n<div id=\"contact\">\n   <h1>Write Us </h1>\n   <div class=\"field\">\n      <mat-form-field appearance=\"fill\" [style.width]=\"'700px'\">\n         <mat-label>Subject</mat-label>\n         <input matInput [(ngModel)]=\"subject\">\n       </mat-form-field>\n       <br>\n       <mat-form-field appearance=\"fill\" [style.width]=\"'700px'\">\n         <mat-label>Your Message to us</mat-label>\n         <textarea matInput\n         rows=\"10\" [(ngModel)]=\"message\"\n        ></textarea>\n       </mat-form-field>\n       <br>\n       <button (click)=\"send()\" class=\"btn btn-success\" [style.margin-left]=\"'500px'\">Send Message</button>\n   </div>\n<h1>Contact  US</h1>\n\n<h3>Fresho Organics </h3>\n<pre>\nWhether you need help with your order, \nor you have a general question or comment about Fresho Organics, \nour Customer Care team is always here to help!*\n</pre>\n\n<p>\nPhone Hours:\nMonday-Friday from 9am-8pm EST<br>\nSaturday from 9am-4pm EST <br>\nSunday from 10am-5pm EST<br>\nPhone: 1-866-640-3800 <br><br>\nEmail: info@freshoorganics.ca \n</p>\n\n<div>\n   <h3>Our Address</h3>\n   <pre>\n    365 Bloor Street East Suite 1001,\n     Toronto, ON, \n     M4W 3L4\n   </pre>\n  \n</div>\n\n<div id=\"contact\">\n   <h1>Contact Us </h1>\n   <div class=\"field\">\n      <mat-form-field appearance=\"fill\" [style.width]=\"'700px'\">\n         <mat-label>Subject</mat-label>\n         <input matInput>\n       </mat-form-field>\n       <br>\n       <mat-form-field appearance=\"fill\" [style.width]=\"'700px'\" [style.height]=\"'400px'\">\n         <mat-label>Your Message to us</mat-label>\n         <textarea matInput\n         rows=\"10\"\n        ></textarea>\n       </mat-form-field>\n   </div>\n\n   <br><br><br><br><br>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ContactService } from 'src/app/services/contact.service';\n\n@Component({\n  selector: 'app-inbox',\n  templateUrl: './inbox.component.html',\n  styleUrls: ['./inbox.component.css']\n})\nexport class InboxComponent implements OnInit {\nsent:any;\nreceived:any;\n  constructor(private cs:ContactService) { }\n\n  ngOnInit(): void {\n      this.cs.getMessagesByUsername().subscribe(\n        (data)=>this.sent=data,\n        ()=>this.sent=[])\n\n      this.cs.getMessagesByReciever().subscribe(\n        (data)=>this.received=data,\n        ()=>this.received=[])\n      \n  }\n\n}\n","<div class=\"jumbotron\">\n    <h1>Responses </h1>\n\n<table class=\"table table-hover\">\n     <thead>\n          <tr>\n\n              <th>Subject</th>\n              <th>Message</th>\n          </tr>\n\n     </thead>\n     <tbody>\n          <tr *ngFor=\"let x of received\">\n\n              <td>{{x.subject}}</td>\n              <td>{{x.message}}</td>\n             \n          </tr>\n     </tbody>\n</table>\n</div>\n<div class=\"jumbotron\">\n    <h1>Sent Complaints</h1>\n<table class=\"table table-hover\">\n     <thead>\n          <tr>\n              <th>Subject</th>\n              <th>Message</th>\n              \n          </tr>\n\n     </thead>\n     <tbody>\n          <tr *ngFor=\"let x of sent\">\n              \n              <td>{{x.subject}}</td>\n              <td>{{x.message}}</td>\n              \n          </tr>\n     </tbody>\n</table>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { LogService } from 'src/app/services/login.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport PubSub from \"pubsub-js\";\n\n@Component({\n  selector: 'app-menu-outline',\n  templateUrl: './menu-outline.component.html',\n  styleUrls: ['./menu-outline.component.css']\n})\nexport class MenuOutlineComponent implements OnInit {\n@Input() pictures:string[];\n@Input() strings:string[];\n@Input() urls:string[];\ncartshow:boolean=true;\ncartCount:number=1;\nusername:string;\n  constructor(private log:LogService,private router:Router,private route:ActivatedRoute) { }\n\n  ngOnInit(): void {\n     let usertype=sessionStorage.getItem(\"usertype\");\n     this.username=sessionStorage.getItem(\"username\");\n     if(usertype==\"admin\")\n      this.cartshow=false;\n     let cart=localStorage.getItem(\"cart\");\n     if(cart)\n        this.cartCount=JSON.parse(cart).length;\n     else\n        this.cartCount=0;\n        PubSub.subscribe(\"cart-event\",(event,data)=>{\n          this.cartCount=data;\n      });\n  }\n\n  \n  navigate(url:string){\n    \n    if(url==\"\")\n    window.location.reload()\n    else\n    this.router.navigate([url], {relativeTo:this.route});\n  }\n  logout(){\n    this.log.logout();\n    window.location.reload();\n}\n}\n","<nav class=\"navbar navbar-expand-sm bg-green navbar-dark\">\n\n \n  \n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" (click)=\"navigate('')\">Home</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\"   *ngIf=\"cartshow\"(click)=\"navigate('contactus')\">Contact Us</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\"   *ngIf=\"!cartshow\" (click)=\"navigate('contactus')\">Complaints</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" (click)=\"navigate('aboutus')\">About us</a>\n      </li>\n    </ul>\n\n    <ul class=\"navbar-nav ml-auto borderlogo\" >\n        <li class=\"nav-item\">\n            \n          \n            <a class=\"nav-link\" href=\"/login\">\n            <img src=\"https://storageblobcommerce.blob.core.windows.net/imagesecommerceclient/freshologo.png\" \n            class=\"title-img\"\n          />\n           </a>\n          \n          </li>\n    </ul>\n          \n    \n                  <ul class=\"navbar-nav ml-auto\">\n                    \n                  </ul>\n                  <ul class=\"navbar-nav ml-auto\">\n\n                    <li class=\"nav-item\" *ngIf=\"cartshow\" (click)=\"navigate('inbox')\">\n                      <a to=\"/cart\"> \n                         <img src=\"https://storageblobcommerce.blob.core.windows.net/imagesecommerceclient/inbox.png\" \n                           class=\"icon-img\"\n                         />\n                         <span class=\"badge badge-info\">Inbox</span>\n                             </a>\n                         </li>\n\n                    <li class=\"nav-item\">\n                          \n                        \n                        <a class=\"nav-link\" href=\"/login\" (click)=\"logout()\">\n                        <img src=\"https://storageblobcommerce.blob.core.windows.net/imagesecommerceclient/user.png\" \n                        class=\"icon-img\"\n                      />\n                            Hi , {{username}} </a>\n                      \n                      </li>\n                        \n                          <li class=\"nav-item\" *ngIf=\"cartshow\" (click)=\"navigate('cart')\">\n                       <a to=\"/cart\"> \n                          <img src=\"https://storageblobcommerce.blob.core.windows.net/imagesecommerceclient/cart.png\" \n                            class=\"icon-img\"\n                          />\n                          <span class=\"badge badge-warning\">{{cartCount}}</span>\n                              </a>\n                          </li>\n  \n                          \n                  </ul>\n  </nav>\n\n  <div class=\"user-menu\">\n      <ul>\n          <li (click)=\"navigate(urls[0])\">\n              <img src=\"https://storageblobcommerce.blob.core.windows.net/imagesecommerceclient/{{pictures[0]}}\">\n              {{strings[0]}}\n          </li>\n         <li  (click)=\"navigate(urls[1])\">\n            <img src=\"https://storageblobcommerce.blob.core.windows.net/imagesecommerceclient/{{pictures[1]}}\">\n            {{strings[1]}}\n        </li>\n        <li  (click)=\"navigate(urls[2])\">\n            <img src=\"https://storageblobcommerce.blob.core.windows.net/imagesecommerceclient/{{pictures[2]}}\">\n            {{strings[2]}}\n        </li>\n      </ul>\n  </div>","import { Directive ,Input, HostListener,ElementRef} from '@angular/core';\n\n@Directive({\n  selector: '[appScrollback]'\n})\nexport class ScrollBackDirective {\n\n  @Input('appScrollback') appScroll:number;\n  constructor(private el:ElementRef) {\n      console.log(\"Working\")\n   }\n\n  @HostListener(\"click\") \n  onClick():void{\n      console.log(\"working\");\n      let temp=this.el.nativeElement.parentNode;\n      console.log(temp);\n       temp=temp.children[3];\n      temp.scrollTo({ left: (temp.scrollLeft - this.appScroll), behavior: 'smooth' });\n      console.log(\"RAW\")\n      console.log(temp);\n      console.log();\n  }\n\n}\n","import { Directive, ElementRef, HostListener,Input } from '@angular/core';\n\n@Directive({\n  selector: '[appScroll]'\n})\nexport class ScrollDirective {\n@Input('appScroll') appScroll:number;\n  constructor(private el:ElementRef) {\n      console.log(\"Working\")  //<h1 [appScroll]=\"30\"></h1>\n   }\n\n  @HostListener(\"click\") \n  onClick():void{\n      \n      let temp=this.el.nativeElement.parentNode;\n      console.log(temp);\n       temp=temp.children[3];\n      temp.scrollTo({ left: (temp.scrollLeft + this.appScroll), behavior: 'smooth' });\n      \n      console.log(temp);\n      console.log();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactService {\nhttpOptions;\n  constructor(private http:HttpClient) { }\n\n  sendMessage(obj):Observable<object>{\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Ocp-Apim-Subscription-Key':'ae666daa93ba4f13b0aafcdda20a8c3d'\n        })\n      }\n     return this.http.post(\"https://ecommercenodeapi.azure-api.net/messages/all\",obj,this.httpOptions)\n  } \n  \n  getMessagesByUsername():Observable<object>{\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Ocp-Apim-Subscription-Key':'ae666daa93ba4f13b0aafcdda20a8c3d'\n        })\n      }\n    let user=sessionStorage.getItem(\"username\");\n    return this.http.get(\"https://ecommercenodeapi.azure-api.net/messages/all/\"+user,this.httpOptions);\n  }\n\n  getMessagesByReciever():Observable<object>{\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Ocp-Apim-Subscription-Key':'ae666daa93ba4f13b0aafcdda20a8c3d'\n        })\n      }\n    let user=sessionStorage.getItem(\"username\");\n    return this.http.get(\"https://ecommercenodeapi.azure-api.net/messages/received/\"+user,this.httpOptions);\n  }\n  \n  getMessages():Observable<object>{\n  \n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Ocp-Apim-Subscription-Key':'ae666daa93ba4f13b0aafcdda20a8c3d'\n        })\n      }\n    return this.http.get(\"https://ecommercenodeapi.azure-api.net/messages/all/\",this.httpOptions );\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport PubSub from 'pubsub-js';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\nhttpOptions;\n  constructor(private http:HttpClient) { }\n\n  cartchecker(id){\n    let cart:any=localStorage.getItem(\"cart\");\n    if(cart){\n        cart=JSON.parse(cart);\n        for(let x in cart){\n            console.log(id,cart[x].id);\n            if(Number(cart[x].id)===Number(id)){\n             return true;\n        }\n    }\n    }\n    return false;\n}\n\naddToCart(obj){\n   let cart:any=localStorage.getItem(\"cart\");\n   console.log(cart)\n   if(cart==null){\n        console.log(\"inside\")\n        cart=[]\n        \n   }\n   else\n       cart=JSON.parse(cart);\n       cart.push(obj);\n       localStorage.setItem(\"cart\",JSON.stringify(cart));\n       PubSub.publish(\"cart-event\",cart.length);\n   \n}\n\nmakeOrder(){\n let user=sessionStorage.getItem(\"username\");\n\n\n let orderId=new Date().getTime()+user.substr(user.length-4,user.length-1);\n \n let obj ={username:user,orderid:orderId,date:new Date(),cart:  JSON.parse(localStorage.getItem(\"cart\"))}\n this.makeOrderRest(obj).subscribe(\n   ()=>{\n    localStorage.removeItem(\"cart\");\n    PubSub.publish(\"cart-event\",0);\n    alert(\"Order submitted\");\n    window.location.reload();\n   },\n   ()=>{\n      alert(\"Currently you cannot make an order due to server issues\")\n   }\n )\n\n \n \n}\n\nmakeOrderRest(obj):Observable<object>{\n  this.httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type':  'application/json',\n      'Ocp-Apim-Subscription-Key':'ae666daa93ba4f13b0aafcdda20a8c3d'\n      })\n    }\n   return this.http.post(\"https://ecommercenodeapi.azure-api.net/orders/all\",obj,this.httpOptions)\n} \n\ngetOrdersByUsername():Observable<object>{\n  let user=sessionStorage.getItem(\"username\");\n  this.httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type':  'application/json',\n      'Ocp-Apim-Subscription-Key':'ae666daa93ba4f13b0aafcdda20a8c3d'\n      })\n    }\n  return this.http.get(\"https://ecommercenodeapi.azure-api.net/orders/all/\"+user,this.httpOptions);\n}\n\ngetOrders():Observable<object>{\n  this.httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type':  'application/json',\n      'Ocp-Apim-Subscription-Key':'ae666daa93ba4f13b0aafcdda20a8c3d'\n      })\n    }\n  return this.http.get(\"https://ecommercenodeapi.azure-api.net/orders/all/\",this.httpOptions);\n}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MenuOutlineComponent } from '../common/menu-outline/menu-outline.component';\nimport { AboutusComponent } from '../common/aboutus/aboutus.component';\nimport { ContactusComponent } from '../common/contactus/contactus.component';\nimport { ProductComponent } from '../user/product/product.component';\nimport { PlistComponent } from '../user/plist/plist.component';\nimport { ScrollDirective } from '../directives/scroll.directive';\nimport { ScrollBackDirective } from '../directives/scroll-back.directive';\nimport { AngmaterialModule } from '../angmaterial/angmaterial.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComplaintsComponent, DialogComponent } from '../common/complaints/complaints.component';\nimport { InboxComponent } from '../common/inbox/inbox.component';\n\n\n\n@NgModule({\n  declarations: [MenuOutlineComponent,AboutusComponent,ContactusComponent,\n    ProductComponent,PlistComponent, ScrollDirective,ScrollBackDirective,ComplaintsComponent,DialogComponent,InboxComponent],\n  imports: [\n    CommonModule,  AngmaterialModule ,FormsModule,ReactiveFormsModule\n  ],\n  exports: [\n    MenuOutlineComponent,AboutusComponent,ContactusComponent,ProductComponent,PlistComponent,ComplaintsComponent,DialogComponent,InboxComponent]\n})\nexport class SharedModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-plist',\n  templateUrl: './plist.component.html',\n  styleUrls: ['./plist.component.css']\n})\nexport class PlistComponent implements OnInit {\n \n  @Input() products:any[]=[];\n  @Input() producttitle:string;\n \n  constructor(public router:Router,public route:ActivatedRoute) { }\n\n  ngOnInit(): void {\n  }\n  \n  changeroute(current){\n    this.router.navigate(['details'],{relativeTo:this.route,state:current});;\n  }\n\n}\n","<div class=\"product-container\">\n    <h1>{{producttitle}}</h1>\n    <div id=\"corner-arrow-left\"  [appScrollback]=\"100\" >\n         <img src=\"https://storageblobcommerce.blob.core.windows.net/imagesecommerceclient/left-arrow.png\"/>\n    </div>\n    <div id=\"corner-arrow-right\" [appScroll]=\"100\" >\n         <img src=\"https://storageblobcommerce.blob.core.windows.net/imagesecommerceclient/right-arrow.png\"/>\n    </div>\n<div class=\"product-scroll\">\n    <app-product *ngFor=\"let x of products\" [product]=\"x\"  (click)=\"changeroute(x)\"></app-product>\n   \n</div>\n</div>","import { Component, OnInit,Input, enableProdMode } from '@angular/core';\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.css']\n})\nexport class ProductComponent implements OnInit {\n@Input() product:any;\n  constructor() {\n     \n   }\n\n  ngOnInit(): void {\n    console.log(this.product);\n  }\n\n}\n","<div class=\"product\">\n    <div class=\"product-image\">\n           <img src=\"https://storageblobcommerce.blob.core.windows.net/imagesecommerceclient/{{product.image}}\"/>\n    </div>\n    <div class=\"h3\">{{product.name}}</div>\n    <div class=\"h6\"> Price {{product.price | currency :\"USD\"}}</div>\n</div>"]}